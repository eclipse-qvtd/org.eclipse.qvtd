import ecore : 'http://www.eclipse.org/emf/2002/Ecore';

transformation Expressions {
	source imports ecore;
	target imports ecore;
	middle imports ecore;
}

map expressionsLM in Expressions {
	check source(in dummy:EPackage;) {}
	enforce middle() {}
    where () {}
    call expressionsMR {
    	binaryPrecedence := (1 + 2) * (3*5 + 4);
    	unaryPrecedence := -1 * - -1;
    	notPrecedence := not not (4 = 5);
    }
}

map expressionsMR in Expressions {
	check middle(in binaryPrecedence:OclAny; in unaryPrecedence:OclAny; in notPrecedence:OclAny;) { }
    enforce target() {}
    where () {}
}

map expressionsDomains in Expressions {
	check middle() {
		var s : Integer := 0;
		var s_1 : Integer := m;
		var s_2 : Integer := t;
	}
    enforce target() {
		var t : Integer := 0;
		var t_1 : Integer := s;
		var t_2 : Integer := m;
    }
    where () {
		var m : Integer := 0;
		var m_1 : Integer := s;
		var m_2 : Integer := t;
    }
}
