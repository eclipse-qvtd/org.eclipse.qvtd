---- Transformation UpperToLower ----
Mapping __root__
  Visiting Mapping GuardPattern
    GuardPattern has no predicates.
  Visiting Mapping BottomPattern
==============================
Output Model
==============================
  Visiting MappingSequence
Visiting MappingLoop, calling: g1
  Visiting MappingSequence
Visiting MappingCall, calling: graph2graph_LM
  Mapping graph2graph_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      GuardPattern has no predicates.
    Visiting Mapping BottomPattern
    VisitPropertyAssignment g2g.name = graphone
    VisitPropertyAssignment g2g.graph1 = Graph [4d548160] {
      element = [Node] x 11
      name = GraphOne
      }
    RealizedVariables for CoreDomain upperGraph
    RealizedVariables for CoreDomain middle
    RealizedVariable g2g: Graph2Graph [6993baa9] {
      graph1 = Graph [4d548160]
      graph2 = [ null ]
      element2Element = [ ]
      name = graphone
      }
==============================
Output Model
==============================
Visiting MappingLoop, calling: g2g
  Visiting MappingSequence
Visiting MappingCall, calling: graph2graph_MR
  Mapping graph2graph_MR
    CoreDomain lowerGraph
      Visiting CoreDomain GuardPattern
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      GuardPattern has no predicates.
    Visiting Mapping BottomPattern
    VisitPropertyAssignment g2g.graph2 = Graph [32e5d13d] {
      element = [ ]
      name = [ null ]
      }
    VisitPropertyAssignment g2.name = graphone
    RealizedVariables for CoreDomain lowerGraph
    RealizedVariable g2: Graph [32e5d13d] {
      element = [ ]
      name = graphone
      }
    RealizedVariables for CoreDomain middle
==============================
Output Model
Graph [32e5d13d] {
  element = [ ]
  name = graphone
  }
==============================
Visiting MappingLoop, calling: n1
  Visiting MappingSequence
Visiting MappingLoop, calling: g2g
  Visiting MappingSequence
Visiting MappingCall, calling: node2node_LM
  Mapping node2node_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [ ]
          name = graphone
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate g2g.graph1 = g1->true
      Predicate n1.graph = g1->true
      GuardPattern result: true
    Visiting Mapping BottomPattern
    VisitPropertyAssignment n2n.label = munich
    VisitPropertyAssignment n2n.node1 = Node [164c6932] {
      graph = Graph [4d548160]
      incoming = [Edge] x 1
      outgoing = [Edge] x 1
      label = Munich
      }
    VisitPropertyAssignment n2n.owner = Graph2Graph [6993baa9] {
      graph1 = Graph [4d548160]
      graph2 = Graph [32e5d13d]
      element2Element = [ ]
      name = graphone
      }
    RealizedVariables for CoreDomain upperGraph
    RealizedVariables for CoreDomain middle
    RealizedVariable n2n: Node2Node [1652f498] {
      owner = Graph2Graph [6993baa9]
      node1 = Node [164c6932]
      node2 = [ null ]
      label = munich
      }
==============================
Output Model
==============================
  Visiting MappingSequence
Visiting MappingLoop, calling: g2g
  Visiting MappingSequence
Visiting MappingCall, calling: node2node_LM
  Mapping node2node_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 1
          name = graphone
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate g2g.graph1 = g1->true
      Predicate n1.graph = g1->true
      GuardPattern result: true
    Visiting Mapping BottomPattern
    VisitPropertyAssignment n2n.label = stuttgart
    VisitPropertyAssignment n2n.node1 = Node [607f3b3c] {
      graph = Graph [4d548160]
      incoming = [Edge] x 1
      outgoing = [Edge] x 1
      label = Stuttgart
      }
    VisitPropertyAssignment n2n.owner = Graph2Graph [6993baa9] {
      graph1 = Graph [4d548160]
      graph2 = Graph [32e5d13d]
      element2Element = [Node2Node] x 1
      name = graphone
      }
    RealizedVariables for CoreDomain upperGraph
    RealizedVariables for CoreDomain middle
    RealizedVariable n2n: Node2Node [2038329b] {
      owner = Graph2Graph [6993baa9]
      node1 = Node [607f3b3c]
      node2 = [ null ]
      label = stuttgart
      }
==============================
Output Model
==============================
  Visiting MappingSequence
Visiting MappingLoop, calling: g2g
  Visiting MappingSequence
Visiting MappingCall, calling: node2node_LM
  Mapping node2node_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 2
          name = graphone
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate g2g.graph1 = g1->true
      Predicate n1.graph = g1->true
      GuardPattern result: true
    Visiting Mapping BottomPattern
    VisitPropertyAssignment n2n.label = york
    VisitPropertyAssignment n2n.node1 = Node [78fc50a1] {
      graph = Graph [4d548160]
      incoming = [Edge] x 1
      outgoing = [Edge] x 1
      label = York
      }
    VisitPropertyAssignment n2n.owner = Graph2Graph [6993baa9] {
      graph1 = Graph [4d548160]
      graph2 = Graph [32e5d13d]
      element2Element = [Node2Node] x 2
      name = graphone
      }
    RealizedVariables for CoreDomain upperGraph
    RealizedVariables for CoreDomain middle
    RealizedVariable n2n: Node2Node [49826ea3] {
      owner = Graph2Graph [6993baa9]
      node1 = Node [78fc50a1]
      node2 = [ null ]
      label = york
      }
==============================
Output Model
==============================
  Visiting MappingSequence
Visiting MappingLoop, calling: g2g
  Visiting MappingSequence
Visiting MappingCall, calling: node2node_LM
  Mapping node2node_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 3
          name = graphone
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate g2g.graph1 = g1->true
      Predicate n1.graph = g1->true
      GuardPattern result: true
    Visiting Mapping BottomPattern
    VisitPropertyAssignment n2n.label = innsbruck
    VisitPropertyAssignment n2n.node1 = Node [728e5d0d] {
      graph = Graph [4d548160]
      incoming = [Edge] x 1
      outgoing = [Edge] x 1
      label = Innsbruck
      }
    VisitPropertyAssignment n2n.owner = Graph2Graph [6993baa9] {
      graph1 = Graph [4d548160]
      graph2 = Graph [32e5d13d]
      element2Element = [Node2Node] x 3
      name = graphone
      }
    RealizedVariables for CoreDomain upperGraph
    RealizedVariables for CoreDomain middle
    RealizedVariable n2n: Node2Node [122db509] {
      owner = Graph2Graph [6993baa9]
      node1 = Node [728e5d0d]
      node2 = [ null ]
      label = innsbruck
      }
==============================
Output Model
==============================
  Visiting MappingSequence
Visiting MappingLoop, calling: g2g
  Visiting MappingSequence
Visiting MappingCall, calling: node2node_LM
  Mapping node2node_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 4
          name = graphone
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate g2g.graph1 = g1->true
      Predicate n1.graph = g1->true
      GuardPattern result: true
    Visiting Mapping BottomPattern
    VisitPropertyAssignment n2n.label = stansted
    VisitPropertyAssignment n2n.node1 = Node [7d11b814] {
      graph = Graph [4d548160]
      incoming = [Edge] x 2
      outgoing = [Edge] x 2
      label = Stansted
      }
    VisitPropertyAssignment n2n.owner = Graph2Graph [6993baa9] {
      graph1 = Graph [4d548160]
      graph2 = Graph [32e5d13d]
      element2Element = [Node2Node] x 4
      name = graphone
      }
    RealizedVariables for CoreDomain upperGraph
    RealizedVariables for CoreDomain middle
    RealizedVariable n2n: Node2Node [76c86b31] {
      owner = Graph2Graph [6993baa9]
      node1 = Node [7d11b814]
      node2 = [ null ]
      label = stansted
      }
==============================
Output Model
==============================
Visiting MappingLoop, calling: n2n
  Visiting MappingSequence
Visiting MappingCall, calling: node2node_MR
  Mapping node2node_MR
    CoreDomain lowerGraph
      Visiting CoreDomain GuardPattern
        Variable g2: Graph [32e5d13d] {
          element = [ ]
          name = graphone
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate g2g.graph2 = g2->true
      Predicate n2n.owner = g2g->true
      GuardPattern result: true
    Visiting Mapping BottomPattern
    VisitPropertyAssignment n2n.node2 = Node [7c07b54d] {
      graph = [ null ]
      incoming = [ ]
      outgoing = [ ]
      label = [ null ]
      }
    VisitPropertyAssignment n2.label = innsbruck
    VisitPropertyAssignment n2.graph = Graph [32e5d13d] {
      element = [ ]
      name = graphone
      }
    RealizedVariables for CoreDomain lowerGraph
    RealizedVariable n2: Node [7c07b54d] {
      graph = Graph [32e5d13d]
      incoming = [ ]
      outgoing = [ ]
      label = innsbruck
      }
    RealizedVariables for CoreDomain middle
==============================
Output Model
Graph [32e5d13d] {
  element = [Node] x 1
  name = graphone
  }
Node [7c07b54d] {
  graph = Graph [32e5d13d]
  incoming = [ ]
  outgoing = [ ]
  label = innsbruck
  }
==============================
  Visiting MappingSequence
Visiting MappingCall, calling: node2node_MR
  Mapping node2node_MR
    CoreDomain lowerGraph
      Visiting CoreDomain GuardPattern
        Variable g2: Graph [32e5d13d] {
          element = [Node] x 1
          name = graphone
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate g2g.graph2 = g2->true
      Predicate n2n.owner = g2g->true
      GuardPattern result: true
    Visiting Mapping BottomPattern
    VisitPropertyAssignment n2n.node2 = Node [5e1011d8] {
      graph = [ null ]
      incoming = [ ]
      outgoing = [ ]
      label = [ null ]
      }
    VisitPropertyAssignment n2.label = stansted
    VisitPropertyAssignment n2.graph = Graph [32e5d13d] {
      element = [Node] x 1
      name = graphone
      }
    RealizedVariables for CoreDomain lowerGraph
    RealizedVariable n2: Node [5e1011d8] {
      graph = Graph [32e5d13d]
      incoming = [ ]
      outgoing = [ ]
      label = stansted
      }
    RealizedVariables for CoreDomain middle
==============================
Output Model
Graph [32e5d13d] {
  element = [Node] x 2
  name = graphone
  }
Node [7c07b54d] {
  graph = Graph [32e5d13d]
  incoming = [ ]
  outgoing = [ ]
  label = innsbruck
  }
Node [5e1011d8] {
  graph = Graph [32e5d13d]
  incoming = [ ]
  outgoing = [ ]
  label = stansted
  }
==============================
  Visiting MappingSequence
Visiting MappingCall, calling: node2node_MR
  Mapping node2node_MR
    CoreDomain lowerGraph
      Visiting CoreDomain GuardPattern
        Variable g2: Graph [32e5d13d] {
          element = [Node] x 2
          name = graphone
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate g2g.graph2 = g2->true
      Predicate n2n.owner = g2g->true
      GuardPattern result: true
    Visiting Mapping BottomPattern
    VisitPropertyAssignment n2n.node2 = Node [7103ac26] {
      graph = [ null ]
      incoming = [ ]
      outgoing = [ ]
      label = [ null ]
      }
    VisitPropertyAssignment n2.label = york
    VisitPropertyAssignment n2.graph = Graph [32e5d13d] {
      element = [Node] x 2
      name = graphone
      }
    RealizedVariables for CoreDomain lowerGraph
    RealizedVariable n2: Node [7103ac26] {
      graph = Graph [32e5d13d]
      incoming = [ ]
      outgoing = [ ]
      label = york
      }
    RealizedVariables for CoreDomain middle
==============================
Output Model
Graph [32e5d13d] {
  element = [Node] x 3
  name = graphone
  }
Node [7c07b54d] {
  graph = Graph [32e5d13d]
  incoming = [ ]
  outgoing = [ ]
  label = innsbruck
  }
Node [5e1011d8] {
  graph = Graph [32e5d13d]
  incoming = [ ]
  outgoing = [ ]
  label = stansted
  }
Node [7103ac26] {
  graph = Graph [32e5d13d]
  incoming = [ ]
  outgoing = [ ]
  label = york
  }
==============================
  Visiting MappingSequence
Visiting MappingCall, calling: node2node_MR
  Mapping node2node_MR
    CoreDomain lowerGraph
      Visiting CoreDomain GuardPattern
        Variable g2: Graph [32e5d13d] {
          element = [Node] x 3
          name = graphone
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate g2g.graph2 = g2->true
      Predicate n2n.owner = g2g->true
      GuardPattern result: true
    Visiting Mapping BottomPattern
    VisitPropertyAssignment n2n.node2 = Node [281b2cc1] {
      graph = [ null ]
      incoming = [ ]
      outgoing = [ ]
      label = [ null ]
      }
    VisitPropertyAssignment n2.label = stuttgart
    VisitPropertyAssignment n2.graph = Graph [32e5d13d] {
      element = [Node] x 3
      name = graphone
      }
    RealizedVariables for CoreDomain lowerGraph
    RealizedVariable n2: Node [281b2cc1] {
      graph = Graph [32e5d13d]
      incoming = [ ]
      outgoing = [ ]
      label = stuttgart
      }
    RealizedVariables for CoreDomain middle
==============================
Output Model
Graph [32e5d13d] {
  element = [Node] x 4
  name = graphone
  }
Node [7c07b54d] {
  graph = Graph [32e5d13d]
  incoming = [ ]
  outgoing = [ ]
  label = innsbruck
  }
Node [5e1011d8] {
  graph = Graph [32e5d13d]
  incoming = [ ]
  outgoing = [ ]
  label = stansted
  }
Node [7103ac26] {
  graph = Graph [32e5d13d]
  incoming = [ ]
  outgoing = [ ]
  label = york
  }
Node [281b2cc1] {
  graph = Graph [32e5d13d]
  incoming = [ ]
  outgoing = [ ]
  label = stuttgart
  }
==============================
  Visiting MappingSequence
Visiting MappingCall, calling: node2node_MR
  Mapping node2node_MR
    CoreDomain lowerGraph
      Visiting CoreDomain GuardPattern
        Variable g2: Graph [32e5d13d] {
          element = [Node] x 4
          name = graphone
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate g2g.graph2 = g2->true
      Predicate n2n.owner = g2g->true
      GuardPattern result: true
    Visiting Mapping BottomPattern
    VisitPropertyAssignment n2n.node2 = Node [10174779] {
      graph = [ null ]
      incoming = [ ]
      outgoing = [ ]
      label = [ null ]
      }
    VisitPropertyAssignment n2.label = munich
    VisitPropertyAssignment n2.graph = Graph [32e5d13d] {
      element = [Node] x 4
      name = graphone
      }
    RealizedVariables for CoreDomain lowerGraph
    RealizedVariable n2: Node [10174779] {
      graph = Graph [32e5d13d]
      incoming = [ ]
      outgoing = [ ]
      label = munich
      }
    RealizedVariables for CoreDomain middle
==============================
Output Model
Graph [32e5d13d] {
  element = [Node] x 5
  name = graphone
  }
Node [7c07b54d] {
  graph = Graph [32e5d13d]
  incoming = [ ]
  outgoing = [ ]
  label = innsbruck
  }
Node [5e1011d8] {
  graph = Graph [32e5d13d]
  incoming = [ ]
  outgoing = [ ]
  label = stansted
  }
Node [7103ac26] {
  graph = Graph [32e5d13d]
  incoming = [ ]
  outgoing = [ ]
  label = york
  }
Node [281b2cc1] {
  graph = Graph [32e5d13d]
  incoming = [ ]
  outgoing = [ ]
  label = stuttgart
  }
Node [10174779] {
  graph = Graph [32e5d13d]
  incoming = [ ]
  outgoing = [ ]
  label = munich
  }
==============================
Visiting MappingLoop, calling: e1
  Visiting MappingSequence
Visiting MappingLoop, calling: sn2n
  Visiting MappingSequence
Visiting MappingLoop, calling: tn2n
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 5
          name = graphone
          }
        Variable sn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        Variable tn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 5
          name = graphone
          }
        Variable sn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        Variable tn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 5
          name = graphone
          }
        Variable sn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        Variable tn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->true
      Predicate g2g.graph1 = g1->true
      Predicate sn2n.node1 = sn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 5
          name = graphone
          }
        Variable sn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        Variable tn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 5
          name = graphone
          }
        Variable sn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        Variable tn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingLoop, calling: tn2n
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 5
          name = graphone
          }
        Variable sn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        Variable tn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 5
          name = graphone
          }
        Variable sn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        Variable tn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 5
          name = graphone
          }
        Variable sn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        Variable tn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->true
      Predicate g2g.graph1 = g1->true
      Predicate sn2n.node1 = sn1->true
      Predicate e1.target = tn1->true
      Predicate e1.graph = g1->true
      Predicate e1.source = sn1->true
      GuardPattern result: true
    Visiting Mapping BottomPattern
    VisitPropertyAssignment e2e.source = Node2Node [76c86b31] {
      owner = Graph2Graph [6993baa9]
      node1 = Node [7d11b814]
      node2 = Node [5e1011d8]
      label = stansted
      }
    VisitPropertyAssignment e2e.edge1 = Edge [2aa56865] {
      graph = Graph [4d548160]
      target = Node [78fc50a1]
      source = Node [7d11b814]
      }
    VisitPropertyAssignment e2e.owner = Graph2Graph [6993baa9] {
      graph1 = Graph [4d548160]
      graph2 = Graph [32e5d13d]
      element2Element = [Node2Node] x 5
      name = graphone
      }
    VisitPropertyAssignment e2e.target = Node2Node [49826ea3] {
      owner = Graph2Graph [6993baa9]
      node1 = Node [78fc50a1]
      node2 = Node [7103ac26]
      label = york
      }
    RealizedVariables for CoreDomain upperGraph
    RealizedVariables for CoreDomain middle
    RealizedVariable e2e: Edge2Edge [4baca635] {
      owner = Graph2Graph [6993baa9]
      edge1 = Edge [2aa56865]
      edge2 = [ null ]
      target = Node2Node [49826ea3]
      source = Node2Node [76c86b31]
      }
==============================
Output Model
==============================
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 6
          name = graphone
          }
        Variable sn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        Variable tn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 6
          name = graphone
          }
        Variable sn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        Variable tn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingLoop, calling: tn2n
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 6
          name = graphone
          }
        Variable sn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        Variable tn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 6
          name = graphone
          }
        Variable sn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        Variable tn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 6
          name = graphone
          }
        Variable sn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        Variable tn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->true
      Predicate g2g.graph1 = g1->true
      Predicate sn2n.node1 = sn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 6
          name = graphone
          }
        Variable sn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        Variable tn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 6
          name = graphone
          }
        Variable sn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        Variable tn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingLoop, calling: tn2n
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 6
          name = graphone
          }
        Variable sn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        Variable tn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 6
          name = graphone
          }
        Variable sn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        Variable tn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 6
          name = graphone
          }
        Variable sn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        Variable tn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->true
      Predicate g2g.graph1 = g1->true
      Predicate sn2n.node1 = sn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 6
          name = graphone
          }
        Variable sn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        Variable tn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 6
          name = graphone
          }
        Variable sn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        Variable tn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingLoop, calling: tn2n
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 6
          name = graphone
          }
        Variable sn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        Variable tn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 6
          name = graphone
          }
        Variable sn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        Variable tn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 6
          name = graphone
          }
        Variable sn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        Variable tn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->true
      Predicate g2g.graph1 = g1->true
      Predicate sn2n.node1 = sn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 6
          name = graphone
          }
        Variable sn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        Variable tn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 6
          name = graphone
          }
        Variable sn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        Variable tn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingLoop, calling: sn2n
  Visiting MappingSequence
Visiting MappingLoop, calling: tn2n
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 6
          name = graphone
          }
        Variable sn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        Variable tn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 6
          name = graphone
          }
        Variable sn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        Variable tn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 6
          name = graphone
          }
        Variable sn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        Variable tn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 6
          name = graphone
          }
        Variable sn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        Variable tn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 6
          name = graphone
          }
        Variable sn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        Variable tn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->true
      Predicate g2g.graph1 = g1->true
      Predicate sn2n.node1 = sn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingLoop, calling: tn2n
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 6
          name = graphone
          }
        Variable sn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        Variable tn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 6
          name = graphone
          }
        Variable sn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        Variable tn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 6
          name = graphone
          }
        Variable sn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        Variable tn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 6
          name = graphone
          }
        Variable sn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        Variable tn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 6
          name = graphone
          }
        Variable sn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        Variable tn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->true
      Predicate g2g.graph1 = g1->true
      Predicate sn2n.node1 = sn1->true
      Predicate e1.target = tn1->true
      Predicate e1.graph = g1->true
      Predicate e1.source = sn1->true
      GuardPattern result: true
    Visiting Mapping BottomPattern
    VisitPropertyAssignment e2e.source = Node2Node [76c86b31] {
      owner = Graph2Graph [6993baa9]
      node1 = Node [7d11b814]
      node2 = Node [5e1011d8]
      label = stansted
      }
    VisitPropertyAssignment e2e.edge1 = Edge [5168d4c2] {
      graph = Graph [4d548160]
      target = Node [164c6932]
      source = Node [7d11b814]
      }
    VisitPropertyAssignment e2e.owner = Graph2Graph [6993baa9] {
      graph1 = Graph [4d548160]
      graph2 = Graph [32e5d13d]
      element2Element = [Node2Node] x 6
      name = graphone
      }
    VisitPropertyAssignment e2e.target = Node2Node [1652f498] {
      owner = Graph2Graph [6993baa9]
      node1 = Node [164c6932]
      node2 = Node [10174779]
      label = munich
      }
    RealizedVariables for CoreDomain upperGraph
    RealizedVariables for CoreDomain middle
    RealizedVariable e2e: Edge2Edge [33d40863] {
      owner = Graph2Graph [6993baa9]
      edge1 = Edge [5168d4c2]
      edge2 = [ null ]
      target = Node2Node [1652f498]
      source = Node2Node [76c86b31]
      }
==============================
Output Model
==============================
  Visiting MappingSequence
Visiting MappingLoop, calling: tn2n
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        Variable tn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        Variable tn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        Variable tn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        Variable tn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        Variable tn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->true
      Predicate g2g.graph1 = g1->true
      Predicate sn2n.node1 = sn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingLoop, calling: tn2n
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        Variable tn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        Variable tn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        Variable tn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        Variable tn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        Variable tn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->true
      Predicate g2g.graph1 = g1->true
      Predicate sn2n.node1 = sn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingLoop, calling: tn2n
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        Variable tn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        Variable tn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        Variable tn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        Variable tn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        Variable tn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->true
      Predicate g2g.graph1 = g1->true
      Predicate sn2n.node1 = sn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingLoop, calling: sn2n
  Visiting MappingSequence
Visiting MappingLoop, calling: tn2n
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        Variable tn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->true
      Predicate g2g.graph1 = g1->true
      Predicate sn2n.node1 = sn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        Variable tn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        Variable tn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        Variable tn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        Variable tn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingLoop, calling: tn2n
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        Variable tn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->true
      Predicate g2g.graph1 = g1->true
      Predicate sn2n.node1 = sn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        Variable tn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        Variable tn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        Variable tn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        Variable tn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingLoop, calling: tn2n
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        Variable tn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->true
      Predicate g2g.graph1 = g1->true
      Predicate sn2n.node1 = sn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        Variable tn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        Variable tn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        Variable tn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        Variable tn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingLoop, calling: tn2n
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        Variable tn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->true
      Predicate g2g.graph1 = g1->true
      Predicate sn2n.node1 = sn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        Variable tn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        Variable tn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        Variable tn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        Variable tn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingLoop, calling: tn2n
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 7
          name = graphone
          }
        Variable sn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        Variable tn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->true
      Predicate g2g.graph1 = g1->true
      Predicate sn2n.node1 = sn1->true
      Predicate e1.target = tn1->true
      Predicate e1.graph = g1->true
      Predicate e1.source = sn1->true
      GuardPattern result: true
    Visiting Mapping BottomPattern
    VisitPropertyAssignment e2e.source = Node2Node [1652f498] {
      owner = Graph2Graph [6993baa9]
      node1 = Node [164c6932]
      node2 = Node [10174779]
      label = munich
      }
    VisitPropertyAssignment e2e.edge1 = Edge [3968364f] {
      graph = Graph [4d548160]
      target = Node [728e5d0d]
      source = Node [164c6932]
      }
    VisitPropertyAssignment e2e.owner = Graph2Graph [6993baa9] {
      graph1 = Graph [4d548160]
      graph2 = Graph [32e5d13d]
      element2Element = [Node2Node] x 7
      name = graphone
      }
    VisitPropertyAssignment e2e.target = Node2Node [122db509] {
      owner = Graph2Graph [6993baa9]
      node1 = Node [728e5d0d]
      node2 = Node [7c07b54d]
      label = innsbruck
      }
    RealizedVariables for CoreDomain upperGraph
    RealizedVariables for CoreDomain middle
    RealizedVariable e2e: Edge2Edge [2572b62a] {
      owner = Graph2Graph [6993baa9]
      edge1 = Edge [3968364f]
      edge2 = [ null ]
      target = Node2Node [122db509]
      source = Node2Node [1652f498]
      }
==============================
Output Model
==============================
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 8
          name = graphone
          }
        Variable sn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        Variable tn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 8
          name = graphone
          }
        Variable sn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        Variable tn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 8
          name = graphone
          }
        Variable sn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        Variable tn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 8
          name = graphone
          }
        Variable sn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        Variable tn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingLoop, calling: sn2n
  Visiting MappingSequence
Visiting MappingLoop, calling: tn2n
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 8
          name = graphone
          }
        Variable sn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        Variable tn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 8
          name = graphone
          }
        Variable sn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        Variable tn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->true
      Predicate g2g.graph1 = g1->true
      Predicate sn2n.node1 = sn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 8
          name = graphone
          }
        Variable sn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        Variable tn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 8
          name = graphone
          }
        Variable sn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        Variable tn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 8
          name = graphone
          }
        Variable sn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        Variable tn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingLoop, calling: tn2n
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 8
          name = graphone
          }
        Variable sn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        Variable tn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 8
          name = graphone
          }
        Variable sn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        Variable tn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->true
      Predicate g2g.graph1 = g1->true
      Predicate sn2n.node1 = sn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 8
          name = graphone
          }
        Variable sn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        Variable tn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 8
          name = graphone
          }
        Variable sn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        Variable tn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 8
          name = graphone
          }
        Variable sn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        Variable tn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingLoop, calling: tn2n
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 8
          name = graphone
          }
        Variable sn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        Variable tn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 8
          name = graphone
          }
        Variable sn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        Variable tn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->true
      Predicate g2g.graph1 = g1->true
      Predicate sn2n.node1 = sn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 8
          name = graphone
          }
        Variable sn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        Variable tn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 8
          name = graphone
          }
        Variable sn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        Variable tn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 8
          name = graphone
          }
        Variable sn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        Variable tn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingLoop, calling: tn2n
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 8
          name = graphone
          }
        Variable sn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        Variable tn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 8
          name = graphone
          }
        Variable sn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        Variable tn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->true
      Predicate g2g.graph1 = g1->true
      Predicate sn2n.node1 = sn1->true
      Predicate e1.target = tn1->true
      Predicate e1.graph = g1->true
      Predicate e1.source = sn1->true
      GuardPattern result: true
    Visiting Mapping BottomPattern
    VisitPropertyAssignment e2e.source = Node2Node [2038329b] {
      owner = Graph2Graph [6993baa9]
      node1 = Node [607f3b3c]
      node2 = Node [281b2cc1]
      label = stuttgart
      }
    VisitPropertyAssignment e2e.edge1 = Edge [50021d3] {
      graph = Graph [4d548160]
      target = Node [7d11b814]
      source = Node [607f3b3c]
      }
    VisitPropertyAssignment e2e.owner = Graph2Graph [6993baa9] {
      graph1 = Graph [4d548160]
      graph2 = Graph [32e5d13d]
      element2Element = [Node2Node] x 8
      name = graphone
      }
    VisitPropertyAssignment e2e.target = Node2Node [76c86b31] {
      owner = Graph2Graph [6993baa9]
      node1 = Node [7d11b814]
      node2 = Node [5e1011d8]
      label = stansted
      }
    RealizedVariables for CoreDomain upperGraph
    RealizedVariables for CoreDomain middle
    RealizedVariable e2e: Edge2Edge [e15929b] {
      owner = Graph2Graph [6993baa9]
      edge1 = Edge [50021d3]
      edge2 = [ null ]
      target = Node2Node [76c86b31]
      source = Node2Node [2038329b]
      }
==============================
Output Model
==============================
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 9
          name = graphone
          }
        Variable sn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        Variable tn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 9
          name = graphone
          }
        Variable sn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        Variable tn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 9
          name = graphone
          }
        Variable sn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        Variable tn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingLoop, calling: tn2n
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 9
          name = graphone
          }
        Variable sn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        Variable tn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 9
          name = graphone
          }
        Variable sn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        Variable tn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->true
      Predicate g2g.graph1 = g1->true
      Predicate sn2n.node1 = sn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 9
          name = graphone
          }
        Variable sn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        Variable tn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 9
          name = graphone
          }
        Variable sn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        Variable tn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 9
          name = graphone
          }
        Variable sn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        Variable tn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingLoop, calling: sn2n
  Visiting MappingSequence
Visiting MappingLoop, calling: tn2n
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 9
          name = graphone
          }
        Variable sn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        Variable tn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 9
          name = graphone
          }
        Variable sn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        Variable tn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 9
          name = graphone
          }
        Variable sn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        Variable tn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 9
          name = graphone
          }
        Variable sn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        Variable tn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->true
      Predicate g2g.graph1 = g1->true
      Predicate sn2n.node1 = sn1->true
      Predicate e1.target = tn1->true
      Predicate e1.graph = g1->true
      Predicate e1.source = sn1->true
      GuardPattern result: true
    Visiting Mapping BottomPattern
    VisitPropertyAssignment e2e.source = Node2Node [122db509] {
      owner = Graph2Graph [6993baa9]
      node1 = Node [728e5d0d]
      node2 = Node [7c07b54d]
      label = innsbruck
      }
    VisitPropertyAssignment e2e.edge1 = Edge [68c599fa] {
      graph = Graph [4d548160]
      target = Node [607f3b3c]
      source = Node [728e5d0d]
      }
    VisitPropertyAssignment e2e.owner = Graph2Graph [6993baa9] {
      graph1 = Graph [4d548160]
      graph2 = Graph [32e5d13d]
      element2Element = [Node2Node] x 9
      name = graphone
      }
    VisitPropertyAssignment e2e.target = Node2Node [2038329b] {
      owner = Graph2Graph [6993baa9]
      node1 = Node [607f3b3c]
      node2 = Node [281b2cc1]
      label = stuttgart
      }
    RealizedVariables for CoreDomain upperGraph
    RealizedVariables for CoreDomain middle
    RealizedVariable e2e: Edge2Edge [2a4c0556] {
      owner = Graph2Graph [6993baa9]
      edge1 = Edge [68c599fa]
      edge2 = [ null ]
      target = Node2Node [2038329b]
      source = Node2Node [122db509]
      }
==============================
Output Model
==============================
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 10
          name = graphone
          }
        Variable sn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        Variable tn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingLoop, calling: tn2n
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 10
          name = graphone
          }
        Variable sn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        Variable tn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 10
          name = graphone
          }
        Variable sn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        Variable tn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 10
          name = graphone
          }
        Variable sn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        Variable tn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 10
          name = graphone
          }
        Variable sn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        Variable tn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->true
      Predicate g2g.graph1 = g1->true
      Predicate sn2n.node1 = sn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 10
          name = graphone
          }
        Variable sn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        Variable tn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingLoop, calling: tn2n
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 10
          name = graphone
          }
        Variable sn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        Variable tn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 10
          name = graphone
          }
        Variable sn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        Variable tn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 10
          name = graphone
          }
        Variable sn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        Variable tn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 10
          name = graphone
          }
        Variable sn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        Variable tn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->true
      Predicate g2g.graph1 = g1->true
      Predicate sn2n.node1 = sn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 10
          name = graphone
          }
        Variable sn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        Variable tn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingLoop, calling: tn2n
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 10
          name = graphone
          }
        Variable sn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        Variable tn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 10
          name = graphone
          }
        Variable sn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        Variable tn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 10
          name = graphone
          }
        Variable sn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        Variable tn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 10
          name = graphone
          }
        Variable sn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        Variable tn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->true
      Predicate g2g.graph1 = g1->true
      Predicate sn2n.node1 = sn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 10
          name = graphone
          }
        Variable sn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        Variable tn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingLoop, calling: tn2n
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 10
          name = graphone
          }
        Variable sn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        Variable tn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 10
          name = graphone
          }
        Variable sn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        Variable tn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 10
          name = graphone
          }
        Variable sn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        Variable tn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 10
          name = graphone
          }
        Variable sn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        Variable tn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->true
      Predicate g2g.graph1 = g1->true
      Predicate sn2n.node1 = sn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 10
          name = graphone
          }
        Variable sn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        Variable tn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingLoop, calling: sn2n
  Visiting MappingSequence
Visiting MappingLoop, calling: tn2n
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 10
          name = graphone
          }
        Variable sn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        Variable tn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 10
          name = graphone
          }
        Variable sn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        Variable tn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->true
      Predicate g2g.graph1 = g1->true
      Predicate sn2n.node1 = sn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 10
          name = graphone
          }
        Variable sn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        Variable tn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 10
          name = graphone
          }
        Variable sn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        Variable tn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 10
          name = graphone
          }
        Variable sn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        Variable tn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingLoop, calling: tn2n
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 10
          name = graphone
          }
        Variable sn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        Variable tn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 10
          name = graphone
          }
        Variable sn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        Variable tn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->true
      Predicate g2g.graph1 = g1->true
      Predicate sn2n.node1 = sn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 10
          name = graphone
          }
        Variable sn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        Variable tn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 10
          name = graphone
          }
        Variable sn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        Variable tn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 10
          name = graphone
          }
        Variable sn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        Variable tn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingLoop, calling: tn2n
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 10
          name = graphone
          }
        Variable sn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        Variable tn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 10
          name = graphone
          }
        Variable sn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        Variable tn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->true
      Predicate g2g.graph1 = g1->true
      Predicate sn2n.node1 = sn1->true
      Predicate e1.target = tn1->true
      Predicate e1.graph = g1->true
      Predicate e1.source = sn1->true
      GuardPattern result: true
    Visiting Mapping BottomPattern
    VisitPropertyAssignment e2e.source = Node2Node [49826ea3] {
      owner = Graph2Graph [6993baa9]
      node1 = Node [78fc50a1]
      node2 = Node [7103ac26]
      label = york
      }
    VisitPropertyAssignment e2e.edge1 = Edge [3519b4af] {
      graph = Graph [4d548160]
      target = Node [7d11b814]
      source = Node [78fc50a1]
      }
    VisitPropertyAssignment e2e.owner = Graph2Graph [6993baa9] {
      graph1 = Graph [4d548160]
      graph2 = Graph [32e5d13d]
      element2Element = [Node2Node] x 10
      name = graphone
      }
    VisitPropertyAssignment e2e.target = Node2Node [76c86b31] {
      owner = Graph2Graph [6993baa9]
      node1 = Node [7d11b814]
      node2 = Node [5e1011d8]
      label = stansted
      }
    RealizedVariables for CoreDomain upperGraph
    RealizedVariables for CoreDomain middle
    RealizedVariable e2e: Edge2Edge [64f266cb] {
      owner = Graph2Graph [6993baa9]
      edge1 = Edge [3519b4af]
      edge2 = [ null ]
      target = Node2Node [76c86b31]
      source = Node2Node [49826ea3]
      }
==============================
Output Model
==============================
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 11
          name = graphone
          }
        Variable sn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        Variable tn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 11
          name = graphone
          }
        Variable sn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        Variable tn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 11
          name = graphone
          }
        Variable sn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        Variable tn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingLoop, calling: tn2n
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 11
          name = graphone
          }
        Variable sn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        Variable tn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 11
          name = graphone
          }
        Variable sn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        Variable tn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->true
      Predicate g2g.graph1 = g1->true
      Predicate sn2n.node1 = sn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 11
          name = graphone
          }
        Variable sn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        Variable tn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 11
          name = graphone
          }
        Variable sn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        Variable tn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 11
          name = graphone
          }
        Variable sn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        Variable tn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingLoop, calling: tn2n
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 11
          name = graphone
          }
        Variable sn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        Variable tn2n: Node2Node [122db509] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [728e5d0d]
          node2 = Node [7c07b54d]
          label = innsbruck
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 11
          name = graphone
          }
        Variable sn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        Variable tn2n: Node2Node [76c86b31] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [7d11b814]
          node2 = Node [5e1011d8]
          label = stansted
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->true
      Predicate g2g.graph1 = g1->true
      Predicate sn2n.node1 = sn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 11
          name = graphone
          }
        Variable sn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        Variable tn2n: Node2Node [49826ea3] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [78fc50a1]
          node2 = Node [7103ac26]
          label = york
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 11
          name = graphone
          }
        Variable sn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        Variable tn2n: Node2Node [2038329b] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [607f3b3c]
          node2 = Node [281b2cc1]
          label = stuttgart
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_LM
  Mapping edge2edge_LM
    CoreDomain middle
      Visiting CoreDomain GuardPattern
        Variable g2g: Graph2Graph [6993baa9] {
          graph1 = Graph [4d548160]
          graph2 = Graph [32e5d13d]
          element2Element = [Node2Node] x 11
          name = graphone
          }
        Variable sn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        Variable tn2n: Node2Node [1652f498] {
          owner = Graph2Graph [6993baa9]
          node1 = Node [164c6932]
          node2 = Node [10174779]
          label = munich
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate tn2n.node1 = tn1->false
      GuardPattern result: false
Visiting MappingLoop, calling: e2e
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Mapping edge2edge_MR
    CoreDomain lowerGraph
      Visiting CoreDomain GuardPattern
        Variable g2: Graph [32e5d13d] {
          element = [Node] x 5
          name = graphone
          }
        Variable sn2: Node [7103ac26] {
          graph = Graph [32e5d13d]
          incoming = [ ]
          outgoing = [ ]
          label = york
          }
        Variable tn2: Node [5e1011d8] {
          graph = Graph [32e5d13d]
          incoming = [ ]
          outgoing = [ ]
          label = stansted
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate g2g.graph2 = g2->true
      Predicate sn2n.node2 = sn2->true
      Predicate tn2n.node2 = tn2->true
      Predicate e2e.source = sn2n->true
      Predicate e2e.owner = g2g->true
      Predicate e2e.target = tn2n->true
      GuardPattern result: true
    Visiting Mapping BottomPattern
    VisitPropertyAssignment e2e.edge2 = Edge [6a6f05dc] {
      graph = [ null ]
      target = [ null ]
      source = [ null ]
      }
    VisitPropertyAssignment e2.graph = Graph [32e5d13d] {
      element = [Node] x 5
      name = graphone
      }
    VisitPropertyAssignment e2.source = Node [7103ac26] {
      graph = Graph [32e5d13d]
      incoming = [ ]
      outgoing = [ ]
      label = york
      }
    VisitPropertyAssignment e2.target = Node [5e1011d8] {
      graph = Graph [32e5d13d]
      incoming = [ ]
      outgoing = [ ]
      label = stansted
      }
    RealizedVariables for CoreDomain lowerGraph
    RealizedVariable e2: Edge [6a6f05dc] {
      graph = Graph [32e5d13d]
      target = Node [5e1011d8]
      source = Node [7103ac26]
      }
    RealizedVariables for CoreDomain middle
==============================
Output Model
Graph [32e5d13d] {
  element = [Node] x 6
  name = graphone
  }
Node [7c07b54d] {
  graph = Graph [32e5d13d]
  incoming = [ ]
  outgoing = [ ]
  label = innsbruck
  }
Node [5e1011d8] {
  graph = Graph [32e5d13d]
  incoming = [Edge] x 1
  outgoing = [ ]
  label = stansted
  }
Node [7103ac26] {
  graph = Graph [32e5d13d]
  incoming = [ ]
  outgoing = [Edge] x 1
  label = york
  }
Node [281b2cc1] {
  graph = Graph [32e5d13d]
  incoming = [ ]
  outgoing = [ ]
  label = stuttgart
  }
Node [10174779] {
  graph = Graph [32e5d13d]
  incoming = [ ]
  outgoing = [ ]
  label = munich
  }
Edge [6a6f05dc] {
  graph = Graph [32e5d13d]
  target = Node [5e1011d8]
  source = Node [7103ac26]
  }
==============================
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Mapping edge2edge_MR
    CoreDomain lowerGraph
      Visiting CoreDomain GuardPattern
        Variable g2: Graph [32e5d13d] {
          element = [Node] x 6
          name = graphone
          }
        Variable sn2: Node [5e1011d8] {
          graph = Graph [32e5d13d]
          incoming = [Edge] x 1
          outgoing = [ ]
          label = stansted
          }
        Variable tn2: Node [10174779] {
          graph = Graph [32e5d13d]
          incoming = [ ]
          outgoing = [ ]
          label = munich
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate g2g.graph2 = g2->true
      Predicate sn2n.node2 = sn2->true
      Predicate tn2n.node2 = tn2->true
      Predicate e2e.source = sn2n->true
      Predicate e2e.owner = g2g->true
      Predicate e2e.target = tn2n->true
      GuardPattern result: true
    Visiting Mapping BottomPattern
    VisitPropertyAssignment e2e.edge2 = Edge [1ee9e51b] {
      graph = [ null ]
      target = [ null ]
      source = [ null ]
      }
    VisitPropertyAssignment e2.graph = Graph [32e5d13d] {
      element = [Node] x 6
      name = graphone
      }
    VisitPropertyAssignment e2.source = Node [5e1011d8] {
      graph = Graph [32e5d13d]
      incoming = [Edge] x 1
      outgoing = [ ]
      label = stansted
      }
    VisitPropertyAssignment e2.target = Node [10174779] {
      graph = Graph [32e5d13d]
      incoming = [ ]
      outgoing = [ ]
      label = munich
      }
    RealizedVariables for CoreDomain lowerGraph
    RealizedVariable e2: Edge [1ee9e51b] {
      graph = Graph [32e5d13d]
      target = Node [10174779]
      source = Node [5e1011d8]
      }
    RealizedVariables for CoreDomain middle
==============================
Output Model
Graph [32e5d13d] {
  element = [Node] x 7
  name = graphone
  }
Node [7c07b54d] {
  graph = Graph [32e5d13d]
  incoming = [ ]
  outgoing = [ ]
  label = innsbruck
  }
Node [5e1011d8] {
  graph = Graph [32e5d13d]
  incoming = [Edge] x 1
  outgoing = [Edge] x 1
  label = stansted
  }
Node [7103ac26] {
  graph = Graph [32e5d13d]
  incoming = [ ]
  outgoing = [Edge] x 1
  label = york
  }
Node [281b2cc1] {
  graph = Graph [32e5d13d]
  incoming = [ ]
  outgoing = [ ]
  label = stuttgart
  }
Node [10174779] {
  graph = Graph [32e5d13d]
  incoming = [Edge] x 1
  outgoing = [ ]
  label = munich
  }
Edge [6a6f05dc] {
  graph = Graph [32e5d13d]
  target = Node [5e1011d8]
  source = Node [7103ac26]
  }
Edge [1ee9e51b] {
  graph = Graph [32e5d13d]
  target = Node [10174779]
  source = Node [5e1011d8]
  }
==============================
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Mapping edge2edge_MR
    CoreDomain lowerGraph
      Visiting CoreDomain GuardPattern
        Variable g2: Graph [32e5d13d] {
          element = [Node] x 7
          name = graphone
          }
        Variable sn2: Node [7c07b54d] {
          graph = Graph [32e5d13d]
          incoming = [ ]
          outgoing = [ ]
          label = innsbruck
          }
        Variable tn2: Node [281b2cc1] {
          graph = Graph [32e5d13d]
          incoming = [ ]
          outgoing = [ ]
          label = stuttgart
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate g2g.graph2 = g2->true
      Predicate sn2n.node2 = sn2->true
      Predicate tn2n.node2 = tn2->true
      Predicate e2e.source = sn2n->true
      Predicate e2e.owner = g2g->true
      Predicate e2e.target = tn2n->true
      GuardPattern result: true
    Visiting Mapping BottomPattern
    VisitPropertyAssignment e2e.edge2 = Edge [dc05f78] {
      graph = [ null ]
      target = [ null ]
      source = [ null ]
      }
    VisitPropertyAssignment e2.graph = Graph [32e5d13d] {
      element = [Node] x 7
      name = graphone
      }
    VisitPropertyAssignment e2.source = Node [7c07b54d] {
      graph = Graph [32e5d13d]
      incoming = [ ]
      outgoing = [ ]
      label = innsbruck
      }
    VisitPropertyAssignment e2.target = Node [281b2cc1] {
      graph = Graph [32e5d13d]
      incoming = [ ]
      outgoing = [ ]
      label = stuttgart
      }
    RealizedVariables for CoreDomain lowerGraph
    RealizedVariable e2: Edge [dc05f78] {
      graph = Graph [32e5d13d]
      target = Node [281b2cc1]
      source = Node [7c07b54d]
      }
    RealizedVariables for CoreDomain middle
==============================
Output Model
Graph [32e5d13d] {
  element = [Node] x 8
  name = graphone
  }
Node [7c07b54d] {
  graph = Graph [32e5d13d]
  incoming = [ ]
  outgoing = [Edge] x 1
  label = innsbruck
  }
Node [5e1011d8] {
  graph = Graph [32e5d13d]
  incoming = [Edge] x 1
  outgoing = [Edge] x 1
  label = stansted
  }
Node [7103ac26] {
  graph = Graph [32e5d13d]
  incoming = [ ]
  outgoing = [Edge] x 1
  label = york
  }
Node [281b2cc1] {
  graph = Graph [32e5d13d]
  incoming = [Edge] x 1
  outgoing = [ ]
  label = stuttgart
  }
Node [10174779] {
  graph = Graph [32e5d13d]
  incoming = [Edge] x 1
  outgoing = [ ]
  label = munich
  }
Edge [6a6f05dc] {
  graph = Graph [32e5d13d]
  target = Node [5e1011d8]
  source = Node [7103ac26]
  }
Edge [1ee9e51b] {
  graph = Graph [32e5d13d]
  target = Node [10174779]
  source = Node [5e1011d8]
  }
Edge [dc05f78] {
  graph = Graph [32e5d13d]
  target = Node [281b2cc1]
  source = Node [7c07b54d]
  }
==============================
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Mapping edge2edge_MR
    CoreDomain lowerGraph
      Visiting CoreDomain GuardPattern
        Variable g2: Graph [32e5d13d] {
          element = [Node] x 8
          name = graphone
          }
        Variable sn2: Node [10174779] {
          graph = Graph [32e5d13d]
          incoming = [Edge] x 1
          outgoing = [ ]
          label = munich
          }
        Variable tn2: Node [7c07b54d] {
          graph = Graph [32e5d13d]
          incoming = [ ]
          outgoing = [Edge] x 1
          label = innsbruck
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate g2g.graph2 = g2->true
      Predicate sn2n.node2 = sn2->true
      Predicate tn2n.node2 = tn2->true
      Predicate e2e.source = sn2n->true
      Predicate e2e.owner = g2g->true
      Predicate e2e.target = tn2n->true
      GuardPattern result: true
    Visiting Mapping BottomPattern
    VisitPropertyAssignment e2e.edge2 = Edge [50bbc655] {
      graph = [ null ]
      target = [ null ]
      source = [ null ]
      }
    VisitPropertyAssignment e2.graph = Graph [32e5d13d] {
      element = [Node] x 8
      name = graphone
      }
    VisitPropertyAssignment e2.source = Node [10174779] {
      graph = Graph [32e5d13d]
      incoming = [Edge] x 1
      outgoing = [ ]
      label = munich
      }
    VisitPropertyAssignment e2.target = Node [7c07b54d] {
      graph = Graph [32e5d13d]
      incoming = [ ]
      outgoing = [Edge] x 1
      label = innsbruck
      }
    RealizedVariables for CoreDomain lowerGraph
    RealizedVariable e2: Edge [50bbc655] {
      graph = Graph [32e5d13d]
      target = Node [7c07b54d]
      source = Node [10174779]
      }
    RealizedVariables for CoreDomain middle
==============================
Output Model
Graph [32e5d13d] {
  element = [Node] x 9
  name = graphone
  }
Node [7c07b54d] {
  graph = Graph [32e5d13d]
  incoming = [Edge] x 1
  outgoing = [Edge] x 1
  label = innsbruck
  }
Node [5e1011d8] {
  graph = Graph [32e5d13d]
  incoming = [Edge] x 1
  outgoing = [Edge] x 1
  label = stansted
  }
Node [7103ac26] {
  graph = Graph [32e5d13d]
  incoming = [ ]
  outgoing = [Edge] x 1
  label = york
  }
Node [281b2cc1] {
  graph = Graph [32e5d13d]
  incoming = [Edge] x 1
  outgoing = [ ]
  label = stuttgart
  }
Node [10174779] {
  graph = Graph [32e5d13d]
  incoming = [Edge] x 1
  outgoing = [Edge] x 1
  label = munich
  }
Edge [6a6f05dc] {
  graph = Graph [32e5d13d]
  target = Node [5e1011d8]
  source = Node [7103ac26]
  }
Edge [1ee9e51b] {
  graph = Graph [32e5d13d]
  target = Node [10174779]
  source = Node [5e1011d8]
  }
Edge [dc05f78] {
  graph = Graph [32e5d13d]
  target = Node [281b2cc1]
  source = Node [7c07b54d]
  }
Edge [50bbc655] {
  graph = Graph [32e5d13d]
  target = Node [7c07b54d]
  source = Node [10174779]
  }
==============================
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Mapping edge2edge_MR
    CoreDomain lowerGraph
      Visiting CoreDomain GuardPattern
        Variable g2: Graph [32e5d13d] {
          element = [Node] x 9
          name = graphone
          }
        Variable sn2: Node [5e1011d8] {
          graph = Graph [32e5d13d]
          incoming = [Edge] x 1
          outgoing = [Edge] x 1
          label = stansted
          }
        Variable tn2: Node [7103ac26] {
          graph = Graph [32e5d13d]
          incoming = [ ]
          outgoing = [Edge] x 1
          label = york
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate g2g.graph2 = g2->true
      Predicate sn2n.node2 = sn2->true
      Predicate tn2n.node2 = tn2->true
      Predicate e2e.source = sn2n->true
      Predicate e2e.owner = g2g->true
      Predicate e2e.target = tn2n->true
      GuardPattern result: true
    Visiting Mapping BottomPattern
    VisitPropertyAssignment e2e.edge2 = Edge [57da1fdb] {
      graph = [ null ]
      target = [ null ]
      source = [ null ]
      }
    VisitPropertyAssignment e2.graph = Graph [32e5d13d] {
      element = [Node] x 9
      name = graphone
      }
    VisitPropertyAssignment e2.source = Node [5e1011d8] {
      graph = Graph [32e5d13d]
      incoming = [Edge] x 1
      outgoing = [Edge] x 1
      label = stansted
      }
    VisitPropertyAssignment e2.target = Node [7103ac26] {
      graph = Graph [32e5d13d]
      incoming = [ ]
      outgoing = [Edge] x 1
      label = york
      }
    RealizedVariables for CoreDomain lowerGraph
    RealizedVariable e2: Edge [57da1fdb] {
      graph = Graph [32e5d13d]
      target = Node [7103ac26]
      source = Node [5e1011d8]
      }
    RealizedVariables for CoreDomain middle
==============================
Output Model
Graph [32e5d13d] {
  element = [Node] x 10
  name = graphone
  }
Node [7c07b54d] {
  graph = Graph [32e5d13d]
  incoming = [Edge] x 1
  outgoing = [Edge] x 1
  label = innsbruck
  }
Node [5e1011d8] {
  graph = Graph [32e5d13d]
  incoming = [Edge] x 1
  outgoing = [Edge] x 2
  label = stansted
  }
Node [7103ac26] {
  graph = Graph [32e5d13d]
  incoming = [Edge] x 1
  outgoing = [Edge] x 1
  label = york
  }
Node [281b2cc1] {
  graph = Graph [32e5d13d]
  incoming = [Edge] x 1
  outgoing = [ ]
  label = stuttgart
  }
Node [10174779] {
  graph = Graph [32e5d13d]
  incoming = [Edge] x 1
  outgoing = [Edge] x 1
  label = munich
  }
Edge [6a6f05dc] {
  graph = Graph [32e5d13d]
  target = Node [5e1011d8]
  source = Node [7103ac26]
  }
Edge [1ee9e51b] {
  graph = Graph [32e5d13d]
  target = Node [10174779]
  source = Node [5e1011d8]
  }
Edge [dc05f78] {
  graph = Graph [32e5d13d]
  target = Node [281b2cc1]
  source = Node [7c07b54d]
  }
Edge [50bbc655] {
  graph = Graph [32e5d13d]
  target = Node [7c07b54d]
  source = Node [10174779]
  }
Edge [57da1fdb] {
  graph = Graph [32e5d13d]
  target = Node [7103ac26]
  source = Node [5e1011d8]
  }
==============================
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Mapping edge2edge_MR
    CoreDomain lowerGraph
      Visiting CoreDomain GuardPattern
        Variable g2: Graph [32e5d13d] {
          element = [Node] x 10
          name = graphone
          }
        Variable sn2: Node [281b2cc1] {
          graph = Graph [32e5d13d]
          incoming = [Edge] x 1
          outgoing = [ ]
          label = stuttgart
          }
        Variable tn2: Node [5e1011d8] {
          graph = Graph [32e5d13d]
          incoming = [Edge] x 1
          outgoing = [Edge] x 2
          label = stansted
          }
        GuardPattern has no predicates.
      Visiting CoreDomain BottomPattern
    Visiting Mapping GuardPattern
      Predicate sn2n.owner = g2g->true
      Predicate g2g.graph2 = g2->true
      Predicate sn2n.node2 = sn2->true
      Predicate tn2n.node2 = tn2->true
      Predicate e2e.source = sn2n->true
      Predicate e2e.owner = g2g->true
      Predicate e2e.target = tn2n->true
      GuardPattern result: true
    Visiting Mapping BottomPattern
    VisitPropertyAssignment e2e.edge2 = Edge [31618fec] {
      graph = [ null ]
      target = [ null ]
      source = [ null ]
      }
    VisitPropertyAssignment e2.graph = Graph [32e5d13d] {
      element = [Node] x 10
      name = graphone
      }
    VisitPropertyAssignment e2.source = Node [281b2cc1] {
      graph = Graph [32e5d13d]
      incoming = [Edge] x 1
      outgoing = [ ]
      label = stuttgart
      }
    VisitPropertyAssignment e2.target = Node [5e1011d8] {
      graph = Graph [32e5d13d]
      incoming = [Edge] x 1
      outgoing = [Edge] x 2
      label = stansted
      }
    RealizedVariables for CoreDomain lowerGraph
    RealizedVariable e2: Edge [31618fec] {
      graph = Graph [32e5d13d]
      target = Node [5e1011d8]
      source = Node [281b2cc1]
      }
    RealizedVariables for CoreDomain middle
==============================
Output Model
Graph [32e5d13d] {
  element = [Node] x 11
  name = graphone
  }
Node [7c07b54d] {
  graph = Graph [32e5d13d]
  incoming = [Edge] x 1
  outgoing = [Edge] x 1
  label = innsbruck
  }
Node [5e1011d8] {
  graph = Graph [32e5d13d]
  incoming = [Edge] x 2
  outgoing = [Edge] x 2
  label = stansted
  }
Node [7103ac26] {
  graph = Graph [32e5d13d]
  incoming = [Edge] x 1
  outgoing = [Edge] x 1
  label = york
  }
Node [281b2cc1] {
  graph = Graph [32e5d13d]
  incoming = [Edge] x 1
  outgoing = [Edge] x 1
  label = stuttgart
  }
Node [10174779] {
  graph = Graph [32e5d13d]
  incoming = [Edge] x 1
  outgoing = [Edge] x 1
  label = munich
  }
Edge [6a6f05dc] {
  graph = Graph [32e5d13d]
  target = Node [5e1011d8]
  source = Node [7103ac26]
  }
Edge [1ee9e51b] {
  graph = Graph [32e5d13d]
  target = Node [10174779]
  source = Node [5e1011d8]
  }
Edge [dc05f78] {
  graph = Graph [32e5d13d]
  target = Node [281b2cc1]
  source = Node [7c07b54d]
  }
Edge [50bbc655] {
  graph = Graph [32e5d13d]
  target = Node [7c07b54d]
  source = Node [10174779]
  }
Edge [57da1fdb] {
  graph = Graph [32e5d13d]
  target = Node [7103ac26]
  source = Node [5e1011d8]
  }
Edge [31618fec] {
  graph = Graph [32e5d13d]
  target = Node [5e1011d8]
  source = Node [281b2cc1]
  }
==============================
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
  Visiting MappingSequence
Visiting MappingCall, calling: edge2edge_MR
---- Transformation End ----
