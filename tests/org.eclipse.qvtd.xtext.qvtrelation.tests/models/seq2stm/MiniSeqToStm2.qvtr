/*******************************************************************************
 * Copyright (c) 2007,2008 Tata Consultancy Services and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v2.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v20.html
 *
 * Contributors:
 *     TCS - initial implementation for ModelMorf
 *     E.D.Willink - alignment with evolved specification
 *******************************************************************************/
import SeqMM : 'SeqMM.ecore'::SeqMM; 
import StmcMM : 'StmcMM.ecore'::StmcMM; 

transformation SeqToStm(seqDgm: SeqMM, stm: StmcMM)
{
     key StmcMM::StateMachine{name};
     key StmcMM::State{name,owner};
     key StmcMM::Transition{name,owner,fromState,toState};
     key StmcMM::SendMsg{message};
     key StmcMM::Message{messageId};

     top relation InteractionToStateMachine
     {
          sn: String[1];

          domain seqDgm i:Interaction{name = sn};
          enforce domain stm s:StateMachine{name = sn};
     }
     
     top relation StateToState
     {
          sn: String[1];

          domain seqDgm 
          st1:State 
          {
               name = sn,
               lifeline = set:Set(LifeLine){l:LifeLine{interaction = i:Interaction{}} ++ _}
--               lifeline = l:LifeLine{interaction = i:Interaction{}}
          };

          enforce domain stm 
          st2:State 
          {
               name = sn,
               owner = s:StateMachine{}
          };

          when
          {
               InteractionToStateMachine(i, s);
          }
     }
}
