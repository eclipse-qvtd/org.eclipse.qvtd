/**
 * generated by Xtext 2.10.0-SNAPSHOT
 */
package org.eclipse.qvtd.doc.minioclcs.xtext.tests;

import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.ecore.resource.impl.ResourceSetImpl;
import org.eclipse.qvtd.doc.MiniOCLCSStandaloneSetup;
import org.eclipse.qvtd.doc.minioclcs.RootCS;
import org.eclipse.qvtd.xtext.qvtbase.tests.LoadTestCase;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

@SuppressWarnings("all")
public class MiniOCLCSParsingTest extends LoadTestCase {
  @Before
  @Override
  protected void setUp() throws Exception {
    super.setUp();
    MiniOCLCSStandaloneSetup.doSetup();
  }
  
  protected RootCS parse(final String fileName) {
    final URI fileURI = this.getProjectFileURI(fileName);
    final ResourceSetImpl rSet = new ResourceSetImpl();
    final Resource resoure = rSet.getResource(fileURI, true);
    EList<EObject> _contents = resoure.getContents();
    EObject _get = _contents.get(0);
    return ((RootCS) _get);
  }
  
  @Test
  public void testSimpleMiniOCL_PackagesDef() {
    final RootCS result = this.parse("models/simple_packages.mocl");
    Assert.assertNotNull(result);
  }
  
  @Test
  public void testSimpleMiniOCL_Invariant() {
    final RootCS result = this.parse("models/simple_invariants.mocl");
    Assert.assertNotNull(result);
  }
}
