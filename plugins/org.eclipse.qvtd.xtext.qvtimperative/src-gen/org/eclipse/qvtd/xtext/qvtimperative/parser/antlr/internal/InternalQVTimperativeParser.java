package org.eclipse.qvtd.xtext.qvtimperative.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.qvtd.xtext.qvtimperative.services.QVTimperativeGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
/*******************************************************************************
 * Copyright (c) 2011, 2023 Willink Transformations and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v2.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v20.html
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *     E.D.Willink - initial API and implementation
 *******************************************************************************/
@SuppressWarnings("all")
public class InternalQVTimperativeParser extends org.eclipse.ocl.xtext.base.utilities.CompatibilityAbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_SINGLE_QUOTED_STRING", "RULE_UNQUOTED_STRING", "RULE_INT", "RULE_SIMPLE_ID", "RULE_ESCAPED_ID", "RULE_ESCAPED_CHARACTER", "RULE_LETTER_CHARACTER", "RULE_DOUBLE_QUOTED_STRING", "RULE_ML_SINGLE_QUOTED_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'observe'", "','", "'add'", "'+='", "';'", "'appendsTo'", "'append'", "':'", "'strict'", "'buffer'", "'..'", "':='", "'check'", "'var'", "'imports'", "'entry'", "'input'", "'output'", "'{'", "'}'", "'consumes'", "'guard'", "'success'", "'import'", "'::'", "'*'", "'iterates'", "'map'", "'call'", "'install'", "'invoke'", "'for'", "'in'", "'contained'", "'new'", "'package'", "'='", "'transient'", "'query'", "'('", "')'", "'implementedby'", "'notify'", "'set'", "'.'", "'uses'", "'speculate'", "'transformation'", "'target'", "'via'", "'static'", "'definition'", "'attribute'", "'derived'", "'!derived'", "'id'", "'!id'", "'ordered'", "'!ordered'", "'readonly'", "'!readonly'", "'!transient'", "'unique'", "'!unique'", "'unsettable'", "'!unsettable'", "'volatile'", "'!volatile'", "'initial'", "'derivation'", "'primitive'", "'datatype'", "'serializable'", "'!serializable'", "'enum'", "'literal'", "'operation'", "'throws'", "'body'", "'property'", "'#'", "'composes'", "'!composes'", "'resolve'", "'!resolve'", "'abstract'", "'class'", "'extends'", "'interface'", "'-'", "'not'", "'not2'", "'/'", "'+'", "'>'", "'<'", "'>='", "'<='", "'<>'", "'and'", "'and2'", "'implies'", "'implies2'", "'or'", "'or2'", "'xor'", "'xor2'", "'->'", "'?.'", "'?->'", "'Map'", "'Tuple'", "'Boolean'", "'Integer'", "'Real'", "'String'", "'UnlimitedNatural'", "'OclAny'", "'OclInvalid'", "'OclVoid'", "'Set'", "'Bag'", "'Sequence'", "'Collection'", "'OrderedSet'", "'++'", "'Lambda'", "'with'", "'<-'", "'true'", "'false'", "'invalid'", "'null'", "'@'", "'pre'", "'['", "']'", "'|'", "'if'", "'then'", "'else'", "'endif'", "'elseif'", "'let'", "'self'", "'|?'", "'|1'", "'?'", "'&&'"
    };
    public static final int T__144=144;
    public static final int T__143=143;
    public static final int T__146=146;
    public static final int T__50=50;
    public static final int T__145=145;
    public static final int T__140=140;
    public static final int T__142=142;
    public static final int T__141=141;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__53=53;
    public static final int T__139=139;
    public static final int T__54=54;
    public static final int T__138=138;
    public static final int T__133=133;
    public static final int T__132=132;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int T__131=131;
    public static final int T__130=130;
    public static final int RULE_INT=6;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=13;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int T__165=165;
    public static final int T__162=162;
    public static final int T__161=161;
    public static final int T__164=164;
    public static final int T__163=163;
    public static final int T__160=160;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__159=159;
    public static final int T__30=30;
    public static final int T__158=158;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__155=155;
    public static final int T__154=154;
    public static final int T__157=157;
    public static final int T__156=156;
    public static final int T__151=151;
    public static final int T__150=150;
    public static final int T__153=153;
    public static final int T__152=152;
    public static final int RULE_SINGLE_QUOTED_STRING=4;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int RULE_DOUBLE_QUOTED_STRING=11;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int RULE_ESCAPED_ID=8;
    public static final int T__40=40;
    public static final int T__148=148;
    public static final int T__41=41;
    public static final int T__147=147;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__149=149;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int RULE_LETTER_CHARACTER=10;
    public static final int T__19=19;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__99=99;
    public static final int RULE_ESCAPED_CHARACTER=9;
    public static final int T__95=95;
    public static final int RULE_ML_SINGLE_QUOTED_STRING=12;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__122=122;
    public static final int T__70=70;
    public static final int T__121=121;
    public static final int T__71=71;
    public static final int T__124=124;
    public static final int T__72=72;
    public static final int T__123=123;
    public static final int T__120=120;
    public static final int RULE_UNQUOTED_STRING=5;
    public static final int RULE_SL_COMMENT=14;
    public static final int T__77=77;
    public static final int T__119=119;
    public static final int T__78=78;
    public static final int T__118=118;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__114=114;
    public static final int T__75=75;
    public static final int T__117=117;
    public static final int T__76=76;
    public static final int T__116=116;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__113=113;
    public static final int RULE_SIMPLE_ID=7;
    public static final int T__83=83;
    public static final int T__112=112;
    public static final int RULE_WS=15;
    public static final int RULE_ANY_OTHER=16;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalQVTimperativeParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalQVTimperativeParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);

        }


    public String[] getTokenNames() { return InternalQVTimperativeParser.tokenNames; }
    public String getGrammarFileName() { return "InternalQVTimperative.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private QVTimperativeGrammarAccess grammarAccess;

        public InternalQVTimperativeParser(TokenStream input, QVTimperativeGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "TopLevelCS";
       	}

       	@Override
       	protected QVTimperativeGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleTopLevelCS"
    // InternalQVTimperative.g:79:1: entryRuleTopLevelCS returns [EObject current=null] : iv_ruleTopLevelCS= ruleTopLevelCS EOF ;
    public final EObject entryRuleTopLevelCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTopLevelCS = null;


        try {
            // InternalQVTimperative.g:79:51: (iv_ruleTopLevelCS= ruleTopLevelCS EOF )
            // InternalQVTimperative.g:80:2: iv_ruleTopLevelCS= ruleTopLevelCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTopLevelCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTopLevelCS=ruleTopLevelCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTopLevelCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTopLevelCS"


    // $ANTLR start "ruleTopLevelCS"
    // InternalQVTimperative.g:86:1: ruleTopLevelCS returns [EObject current=null] : ( ( (lv_ownedImports_0_0= ruleImportCS ) )* ( ( (lv_ownedPackages_1_0= ruleQualifiedPackageCS ) ) | ( (lv_ownedTransformations_2_0= ruleTransformationCS ) ) )* ) ;
    public final EObject ruleTopLevelCS() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedImports_0_0 = null;

        EObject lv_ownedPackages_1_0 = null;

        EObject lv_ownedTransformations_2_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:92:2: ( ( ( (lv_ownedImports_0_0= ruleImportCS ) )* ( ( (lv_ownedPackages_1_0= ruleQualifiedPackageCS ) ) | ( (lv_ownedTransformations_2_0= ruleTransformationCS ) ) )* ) )
            // InternalQVTimperative.g:93:2: ( ( (lv_ownedImports_0_0= ruleImportCS ) )* ( ( (lv_ownedPackages_1_0= ruleQualifiedPackageCS ) ) | ( (lv_ownedTransformations_2_0= ruleTransformationCS ) ) )* )
            {
            // InternalQVTimperative.g:93:2: ( ( (lv_ownedImports_0_0= ruleImportCS ) )* ( ( (lv_ownedPackages_1_0= ruleQualifiedPackageCS ) ) | ( (lv_ownedTransformations_2_0= ruleTransformationCS ) ) )* )
            // InternalQVTimperative.g:94:3: ( (lv_ownedImports_0_0= ruleImportCS ) )* ( ( (lv_ownedPackages_1_0= ruleQualifiedPackageCS ) ) | ( (lv_ownedTransformations_2_0= ruleTransformationCS ) ) )*
            {
            // InternalQVTimperative.g:94:3: ( (lv_ownedImports_0_0= ruleImportCS ) )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==40) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalQVTimperative.g:95:4: (lv_ownedImports_0_0= ruleImportCS )
            	    {
            	    // InternalQVTimperative.g:95:4: (lv_ownedImports_0_0= ruleImportCS )
            	    // InternalQVTimperative.g:96:5: lv_ownedImports_0_0= ruleImportCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getTopLevelCSAccess().getOwnedImportsImportCSParserRuleCall_0_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    lv_ownedImports_0_0=ruleImportCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getTopLevelCSRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ownedImports",
            	      						lv_ownedImports_0_0,
            	      						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.ImportCS");
            	      					afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            // InternalQVTimperative.g:113:3: ( ( (lv_ownedPackages_1_0= ruleQualifiedPackageCS ) ) | ( (lv_ownedTransformations_2_0= ruleTransformationCS ) ) )*
            loop2:
            do {
                int alt2=3;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==52) ) {
                    alt2=1;
                }
                else if ( (LA2_0==64) ) {
                    alt2=2;
                }


                switch (alt2) {
            	case 1 :
            	    // InternalQVTimperative.g:114:4: ( (lv_ownedPackages_1_0= ruleQualifiedPackageCS ) )
            	    {
            	    // InternalQVTimperative.g:114:4: ( (lv_ownedPackages_1_0= ruleQualifiedPackageCS ) )
            	    // InternalQVTimperative.g:115:5: (lv_ownedPackages_1_0= ruleQualifiedPackageCS )
            	    {
            	    // InternalQVTimperative.g:115:5: (lv_ownedPackages_1_0= ruleQualifiedPackageCS )
            	    // InternalQVTimperative.g:116:6: lv_ownedPackages_1_0= ruleQualifiedPackageCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTopLevelCSAccess().getOwnedPackagesQualifiedPackageCSParserRuleCall_1_0_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_4);
            	    lv_ownedPackages_1_0=ruleQualifiedPackageCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTopLevelCSRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedPackages",
            	      							lv_ownedPackages_1_0,
            	      							"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.QualifiedPackageCS");
            	      						afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalQVTimperative.g:134:4: ( (lv_ownedTransformations_2_0= ruleTransformationCS ) )
            	    {
            	    // InternalQVTimperative.g:134:4: ( (lv_ownedTransformations_2_0= ruleTransformationCS ) )
            	    // InternalQVTimperative.g:135:5: (lv_ownedTransformations_2_0= ruleTransformationCS )
            	    {
            	    // InternalQVTimperative.g:135:5: (lv_ownedTransformations_2_0= ruleTransformationCS )
            	    // InternalQVTimperative.g:136:6: lv_ownedTransformations_2_0= ruleTransformationCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTopLevelCSAccess().getOwnedTransformationsTransformationCSParserRuleCall_1_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_4);
            	    lv_ownedTransformations_2_0=ruleTransformationCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTopLevelCSRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedTransformations",
            	      							lv_ownedTransformations_2_0,
            	      							"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.TransformationCS");
            	      						afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTopLevelCS"


    // $ANTLR start "entryRuleAddStatementCS"
    // InternalQVTimperative.g:158:1: entryRuleAddStatementCS returns [EObject current=null] : iv_ruleAddStatementCS= ruleAddStatementCS EOF ;
    public final EObject entryRuleAddStatementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAddStatementCS = null;


        try {
            // InternalQVTimperative.g:158:55: (iv_ruleAddStatementCS= ruleAddStatementCS EOF )
            // InternalQVTimperative.g:159:2: iv_ruleAddStatementCS= ruleAddStatementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAddStatementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAddStatementCS=ruleAddStatementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAddStatementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAddStatementCS"


    // $ANTLR start "ruleAddStatementCS"
    // InternalQVTimperative.g:165:1: ruleAddStatementCS returns [EObject current=null] : ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'add' ( ( ruleUnrestrictedName ) ) otherlv_6= '+=' ( (lv_ownedExpression_7_0= ruleExpCS ) ) otherlv_8= ';' ) ;
    public final EObject ruleAddStatementCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        EObject lv_observedProperties_1_0 = null;

        EObject lv_observedProperties_3_0 = null;

        EObject lv_ownedExpression_7_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:171:2: ( ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'add' ( ( ruleUnrestrictedName ) ) otherlv_6= '+=' ( (lv_ownedExpression_7_0= ruleExpCS ) ) otherlv_8= ';' ) )
            // InternalQVTimperative.g:172:2: ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'add' ( ( ruleUnrestrictedName ) ) otherlv_6= '+=' ( (lv_ownedExpression_7_0= ruleExpCS ) ) otherlv_8= ';' )
            {
            // InternalQVTimperative.g:172:2: ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'add' ( ( ruleUnrestrictedName ) ) otherlv_6= '+=' ( (lv_ownedExpression_7_0= ruleExpCS ) ) otherlv_8= ';' )
            // InternalQVTimperative.g:173:3: (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'add' ( ( ruleUnrestrictedName ) ) otherlv_6= '+=' ( (lv_ownedExpression_7_0= ruleExpCS ) ) otherlv_8= ';'
            {
            // InternalQVTimperative.g:173:3: (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )?
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==17) ) {
                alt4=1;
            }
            switch (alt4) {
                case 1 :
                    // InternalQVTimperative.g:174:4: otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )*
                    {
                    otherlv_0=(Token)match(input,17,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getAddStatementCSAccess().getObserveKeyword_0_0());

                    }
                    // InternalQVTimperative.g:178:4: ( (lv_observedProperties_1_0= rulePathNameCS ) )
                    // InternalQVTimperative.g:179:5: (lv_observedProperties_1_0= rulePathNameCS )
                    {
                    // InternalQVTimperative.g:179:5: (lv_observedProperties_1_0= rulePathNameCS )
                    // InternalQVTimperative.g:180:6: lv_observedProperties_1_0= rulePathNameCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAddStatementCSAccess().getObservedPropertiesPathNameCSParserRuleCall_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_6);
                    lv_observedProperties_1_0=rulePathNameCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAddStatementCSRule());
                      						}
                      						add(
                      							current,
                      							"observedProperties",
                      							lv_observedProperties_1_0,
                      							"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:197:4: (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )*
                    loop3:
                    do {
                        int alt3=2;
                        int LA3_0 = input.LA(1);

                        if ( (LA3_0==18) ) {
                            alt3=1;
                        }


                        switch (alt3) {
                    	case 1 :
                    	    // InternalQVTimperative.g:198:5: otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) )
                    	    {
                    	    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_2, grammarAccess.getAddStatementCSAccess().getCommaKeyword_0_2_0());

                    	    }
                    	    // InternalQVTimperative.g:202:5: ( (lv_observedProperties_3_0= rulePathNameCS ) )
                    	    // InternalQVTimperative.g:203:6: (lv_observedProperties_3_0= rulePathNameCS )
                    	    {
                    	    // InternalQVTimperative.g:203:6: (lv_observedProperties_3_0= rulePathNameCS )
                    	    // InternalQVTimperative.g:204:7: lv_observedProperties_3_0= rulePathNameCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAddStatementCSAccess().getObservedPropertiesPathNameCSParserRuleCall_0_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_6);
                    	    lv_observedProperties_3_0=rulePathNameCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAddStatementCSRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"observedProperties",
                    	      								lv_observedProperties_3_0,
                    	      								"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                    	      							afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop3;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_4=(Token)match(input,19,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getAddStatementCSAccess().getAddKeyword_1());

            }
            // InternalQVTimperative.g:227:3: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:228:4: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:228:4: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:229:5: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					/* */

            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAddStatementCSRule());
              					}

            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAddStatementCSAccess().getTargetVariableConnectionVariableCrossReference_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_7);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_6=(Token)match(input,20,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getAddStatementCSAccess().getPlusSignEqualsSignKeyword_3());

            }
            // InternalQVTimperative.g:250:3: ( (lv_ownedExpression_7_0= ruleExpCS ) )
            // InternalQVTimperative.g:251:4: (lv_ownedExpression_7_0= ruleExpCS )
            {
            // InternalQVTimperative.g:251:4: (lv_ownedExpression_7_0= ruleExpCS )
            // InternalQVTimperative.g:252:5: lv_ownedExpression_7_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAddStatementCSAccess().getOwnedExpressionExpCSParserRuleCall_4_0());

            }
            pushFollow(FollowSets000.FOLLOW_9);
            lv_ownedExpression_7_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAddStatementCSRule());
              					}
              					set(
              						current,
              						"ownedExpression",
              						lv_ownedExpression_7_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_8=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getAddStatementCSAccess().getSemicolonKeyword_5());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAddStatementCS"


    // $ANTLR start "entryRuleAppendParameterBindingCS"
    // InternalQVTimperative.g:277:1: entryRuleAppendParameterBindingCS returns [EObject current=null] : iv_ruleAppendParameterBindingCS= ruleAppendParameterBindingCS EOF ;
    public final EObject entryRuleAppendParameterBindingCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAppendParameterBindingCS = null;


        try {
            // InternalQVTimperative.g:277:65: (iv_ruleAppendParameterBindingCS= ruleAppendParameterBindingCS EOF )
            // InternalQVTimperative.g:278:2: iv_ruleAppendParameterBindingCS= ruleAppendParameterBindingCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAppendParameterBindingCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAppendParameterBindingCS=ruleAppendParameterBindingCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAppendParameterBindingCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAppendParameterBindingCS"


    // $ANTLR start "ruleAppendParameterBindingCS"
    // InternalQVTimperative.g:284:1: ruleAppendParameterBindingCS returns [EObject current=null] : ( ( ( ruleUnrestrictedName ) ) otherlv_1= 'appendsTo' ( ( ruleUnrestrictedName ) ) otherlv_3= ';' ) ;
    public final EObject ruleAppendParameterBindingCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;


        	enterRule();

        try {
            // InternalQVTimperative.g:290:2: ( ( ( ( ruleUnrestrictedName ) ) otherlv_1= 'appendsTo' ( ( ruleUnrestrictedName ) ) otherlv_3= ';' ) )
            // InternalQVTimperative.g:291:2: ( ( ( ruleUnrestrictedName ) ) otherlv_1= 'appendsTo' ( ( ruleUnrestrictedName ) ) otherlv_3= ';' )
            {
            // InternalQVTimperative.g:291:2: ( ( ( ruleUnrestrictedName ) ) otherlv_1= 'appendsTo' ( ( ruleUnrestrictedName ) ) otherlv_3= ';' )
            // InternalQVTimperative.g:292:3: ( ( ruleUnrestrictedName ) ) otherlv_1= 'appendsTo' ( ( ruleUnrestrictedName ) ) otherlv_3= ';'
            {
            // InternalQVTimperative.g:292:3: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:293:4: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:293:4: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:294:5: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					/* */

            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAppendParameterBindingCSRule());
              					}

            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAppendParameterBindingCSAccess().getReferredVariableAppendParameterCrossReference_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_10);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_1=(Token)match(input,22,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAppendParameterBindingCSAccess().getAppendsToKeyword_1());

            }
            // InternalQVTimperative.g:315:3: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:316:4: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:316:4: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:317:5: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					/* */

            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAppendParameterBindingCSRule());
              					}

            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAppendParameterBindingCSAccess().getValueConnectionVariableCrossReference_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_9);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_3=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getAppendParameterBindingCSAccess().getSemicolonKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAppendParameterBindingCS"


    // $ANTLR start "entryRuleAppendParameterCS"
    // InternalQVTimperative.g:342:1: entryRuleAppendParameterCS returns [EObject current=null] : iv_ruleAppendParameterCS= ruleAppendParameterCS EOF ;
    public final EObject entryRuleAppendParameterCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAppendParameterCS = null;


        try {
            // InternalQVTimperative.g:342:58: (iv_ruleAppendParameterCS= ruleAppendParameterCS EOF )
            // InternalQVTimperative.g:343:2: iv_ruleAppendParameterCS= ruleAppendParameterCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAppendParameterCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAppendParameterCS=ruleAppendParameterCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAppendParameterCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAppendParameterCS"


    // $ANTLR start "ruleAppendParameterCS"
    // InternalQVTimperative.g:349:1: ruleAppendParameterCS returns [EObject current=null] : (otherlv_0= 'append' ( (lv_name_1_0= ruleUnrestrictedName ) ) otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) otherlv_4= ';' ) ;
    public final EObject ruleAppendParameterCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_ownedType_3_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:355:2: ( (otherlv_0= 'append' ( (lv_name_1_0= ruleUnrestrictedName ) ) otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) otherlv_4= ';' ) )
            // InternalQVTimperative.g:356:2: (otherlv_0= 'append' ( (lv_name_1_0= ruleUnrestrictedName ) ) otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) otherlv_4= ';' )
            {
            // InternalQVTimperative.g:356:2: (otherlv_0= 'append' ( (lv_name_1_0= ruleUnrestrictedName ) ) otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) otherlv_4= ';' )
            // InternalQVTimperative.g:357:3: otherlv_0= 'append' ( (lv_name_1_0= ruleUnrestrictedName ) ) otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) otherlv_4= ';'
            {
            otherlv_0=(Token)match(input,23,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAppendParameterCSAccess().getAppendKeyword_0());

            }
            // InternalQVTimperative.g:361:3: ( (lv_name_1_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:362:4: (lv_name_1_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:362:4: (lv_name_1_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:363:5: lv_name_1_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAppendParameterCSAccess().getNameUnrestrictedNameParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_11);
            lv_name_1_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAppendParameterCSRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_2=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAppendParameterCSAccess().getColonKeyword_2());

            }
            // InternalQVTimperative.g:384:3: ( (lv_ownedType_3_0= ruleTypeExpCS ) )
            // InternalQVTimperative.g:385:4: (lv_ownedType_3_0= ruleTypeExpCS )
            {
            // InternalQVTimperative.g:385:4: (lv_ownedType_3_0= ruleTypeExpCS )
            // InternalQVTimperative.g:386:5: lv_ownedType_3_0= ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAppendParameterCSAccess().getOwnedTypeTypeExpCSParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_9);
            lv_ownedType_3_0=ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAppendParameterCSRule());
              					}
              					set(
              						current,
              						"ownedType",
              						lv_ownedType_3_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_4=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getAppendParameterCSAccess().getSemicolonKeyword_4());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAppendParameterCS"


    // $ANTLR start "entryRuleBufferStatementCS"
    // InternalQVTimperative.g:411:1: entryRuleBufferStatementCS returns [EObject current=null] : iv_ruleBufferStatementCS= ruleBufferStatementCS EOF ;
    public final EObject entryRuleBufferStatementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBufferStatementCS = null;


        try {
            // InternalQVTimperative.g:411:58: (iv_ruleBufferStatementCS= ruleBufferStatementCS EOF )
            // InternalQVTimperative.g:412:2: iv_ruleBufferStatementCS= ruleBufferStatementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBufferStatementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBufferStatementCS=ruleBufferStatementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBufferStatementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBufferStatementCS"


    // $ANTLR start "ruleBufferStatementCS"
    // InternalQVTimperative.g:418:1: ruleBufferStatementCS returns [EObject current=null] : ( ( (lv_isStrict_0_0= 'strict' ) )? otherlv_1= 'buffer' (otherlv_2= ':' ( (lv_firstPass_3_0= ruleLOWER ) ) (otherlv_4= '..' ( (lv_lastPass_5_0= ruleLOWER ) ) )? )? ( (lv_name_6_0= ruleUnrestrictedName ) ) (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) )? (otherlv_9= ':=' ( (lv_ownedExpression_10_0= ruleExpCS ) ) )? otherlv_11= ';' ) ;
    public final EObject ruleBufferStatementCS() throws RecognitionException {
        EObject current = null;

        Token lv_isStrict_0_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        AntlrDatatypeRuleToken lv_firstPass_3_0 = null;

        AntlrDatatypeRuleToken lv_lastPass_5_0 = null;

        AntlrDatatypeRuleToken lv_name_6_0 = null;

        EObject lv_ownedType_8_0 = null;

        EObject lv_ownedExpression_10_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:424:2: ( ( ( (lv_isStrict_0_0= 'strict' ) )? otherlv_1= 'buffer' (otherlv_2= ':' ( (lv_firstPass_3_0= ruleLOWER ) ) (otherlv_4= '..' ( (lv_lastPass_5_0= ruleLOWER ) ) )? )? ( (lv_name_6_0= ruleUnrestrictedName ) ) (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) )? (otherlv_9= ':=' ( (lv_ownedExpression_10_0= ruleExpCS ) ) )? otherlv_11= ';' ) )
            // InternalQVTimperative.g:425:2: ( ( (lv_isStrict_0_0= 'strict' ) )? otherlv_1= 'buffer' (otherlv_2= ':' ( (lv_firstPass_3_0= ruleLOWER ) ) (otherlv_4= '..' ( (lv_lastPass_5_0= ruleLOWER ) ) )? )? ( (lv_name_6_0= ruleUnrestrictedName ) ) (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) )? (otherlv_9= ':=' ( (lv_ownedExpression_10_0= ruleExpCS ) ) )? otherlv_11= ';' )
            {
            // InternalQVTimperative.g:425:2: ( ( (lv_isStrict_0_0= 'strict' ) )? otherlv_1= 'buffer' (otherlv_2= ':' ( (lv_firstPass_3_0= ruleLOWER ) ) (otherlv_4= '..' ( (lv_lastPass_5_0= ruleLOWER ) ) )? )? ( (lv_name_6_0= ruleUnrestrictedName ) ) (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) )? (otherlv_9= ':=' ( (lv_ownedExpression_10_0= ruleExpCS ) ) )? otherlv_11= ';' )
            // InternalQVTimperative.g:426:3: ( (lv_isStrict_0_0= 'strict' ) )? otherlv_1= 'buffer' (otherlv_2= ':' ( (lv_firstPass_3_0= ruleLOWER ) ) (otherlv_4= '..' ( (lv_lastPass_5_0= ruleLOWER ) ) )? )? ( (lv_name_6_0= ruleUnrestrictedName ) ) (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) )? (otherlv_9= ':=' ( (lv_ownedExpression_10_0= ruleExpCS ) ) )? otherlv_11= ';'
            {
            // InternalQVTimperative.g:426:3: ( (lv_isStrict_0_0= 'strict' ) )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==25) ) {
                alt5=1;
            }
            switch (alt5) {
                case 1 :
                    // InternalQVTimperative.g:427:4: (lv_isStrict_0_0= 'strict' )
                    {
                    // InternalQVTimperative.g:427:4: (lv_isStrict_0_0= 'strict' )
                    // InternalQVTimperative.g:428:5: lv_isStrict_0_0= 'strict'
                    {
                    lv_isStrict_0_0=(Token)match(input,25,FollowSets000.FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isStrict_0_0, grammarAccess.getBufferStatementCSAccess().getIsStrictStrictKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getBufferStatementCSRule());
                      					}
                      					setWithLastConsumed(current, "isStrict", lv_isStrict_0_0 != null, "strict");

                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,26,FollowSets000.FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getBufferStatementCSAccess().getBufferKeyword_1());

            }
            // InternalQVTimperative.g:444:3: (otherlv_2= ':' ( (lv_firstPass_3_0= ruleLOWER ) ) (otherlv_4= '..' ( (lv_lastPass_5_0= ruleLOWER ) ) )? )?
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==24) ) {
                alt7=1;
            }
            switch (alt7) {
                case 1 :
                    // InternalQVTimperative.g:445:4: otherlv_2= ':' ( (lv_firstPass_3_0= ruleLOWER ) ) (otherlv_4= '..' ( (lv_lastPass_5_0= ruleLOWER ) ) )?
                    {
                    otherlv_2=(Token)match(input,24,FollowSets000.FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getBufferStatementCSAccess().getColonKeyword_2_0());

                    }
                    // InternalQVTimperative.g:449:4: ( (lv_firstPass_3_0= ruleLOWER ) )
                    // InternalQVTimperative.g:450:5: (lv_firstPass_3_0= ruleLOWER )
                    {
                    // InternalQVTimperative.g:450:5: (lv_firstPass_3_0= ruleLOWER )
                    // InternalQVTimperative.g:451:6: lv_firstPass_3_0= ruleLOWER
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBufferStatementCSAccess().getFirstPassLOWERParserRuleCall_2_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_16);
                    lv_firstPass_3_0=ruleLOWER();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getBufferStatementCSRule());
                      						}
                      						set(
                      							current,
                      							"firstPass",
                      							lv_firstPass_3_0,
                      							"org.eclipse.ocl.xtext.base.Base.LOWER");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:468:4: (otherlv_4= '..' ( (lv_lastPass_5_0= ruleLOWER ) ) )?
                    int alt6=2;
                    int LA6_0 = input.LA(1);

                    if ( (LA6_0==27) ) {
                        alt6=1;
                    }
                    switch (alt6) {
                        case 1 :
                            // InternalQVTimperative.g:469:5: otherlv_4= '..' ( (lv_lastPass_5_0= ruleLOWER ) )
                            {
                            otherlv_4=(Token)match(input,27,FollowSets000.FOLLOW_15); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getBufferStatementCSAccess().getFullStopFullStopKeyword_2_2_0());

                            }
                            // InternalQVTimperative.g:473:5: ( (lv_lastPass_5_0= ruleLOWER ) )
                            // InternalQVTimperative.g:474:6: (lv_lastPass_5_0= ruleLOWER )
                            {
                            // InternalQVTimperative.g:474:6: (lv_lastPass_5_0= ruleLOWER )
                            // InternalQVTimperative.g:475:7: lv_lastPass_5_0= ruleLOWER
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getBufferStatementCSAccess().getLastPassLOWERParserRuleCall_2_2_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_5);
                            lv_lastPass_5_0=ruleLOWER();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getBufferStatementCSRule());
                              							}
                              							set(
                              								current,
                              								"lastPass",
                              								lv_lastPass_5_0,
                              								"org.eclipse.ocl.xtext.base.Base.LOWER");
                              							afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:494:3: ( (lv_name_6_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:495:4: (lv_name_6_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:495:4: (lv_name_6_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:496:5: lv_name_6_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBufferStatementCSAccess().getNameUnrestrictedNameParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_17);
            lv_name_6_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBufferStatementCSRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_6_0,
              						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:513:3: (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==24) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // InternalQVTimperative.g:514:4: otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) )
                    {
                    otherlv_7=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getBufferStatementCSAccess().getColonKeyword_4_0());

                    }
                    // InternalQVTimperative.g:518:4: ( (lv_ownedType_8_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:519:5: (lv_ownedType_8_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:519:5: (lv_ownedType_8_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:520:6: lv_ownedType_8_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBufferStatementCSAccess().getOwnedTypeTypeExpCSParserRuleCall_4_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_18);
                    lv_ownedType_8_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getBufferStatementCSRule());
                      						}
                      						set(
                      							current,
                      							"ownedType",
                      							lv_ownedType_8_0,
                      							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:538:3: (otherlv_9= ':=' ( (lv_ownedExpression_10_0= ruleExpCS ) ) )?
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==28) ) {
                alt9=1;
            }
            switch (alt9) {
                case 1 :
                    // InternalQVTimperative.g:539:4: otherlv_9= ':=' ( (lv_ownedExpression_10_0= ruleExpCS ) )
                    {
                    otherlv_9=(Token)match(input,28,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getBufferStatementCSAccess().getColonEqualsSignKeyword_5_0());

                    }
                    // InternalQVTimperative.g:543:4: ( (lv_ownedExpression_10_0= ruleExpCS ) )
                    // InternalQVTimperative.g:544:5: (lv_ownedExpression_10_0= ruleExpCS )
                    {
                    // InternalQVTimperative.g:544:5: (lv_ownedExpression_10_0= ruleExpCS )
                    // InternalQVTimperative.g:545:6: lv_ownedExpression_10_0= ruleExpCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBufferStatementCSAccess().getOwnedExpressionExpCSParserRuleCall_5_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_ownedExpression_10_0=ruleExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getBufferStatementCSRule());
                      						}
                      						set(
                      							current,
                      							"ownedExpression",
                      							lv_ownedExpression_10_0,
                      							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_11=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getBufferStatementCSAccess().getSemicolonKeyword_6());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBufferStatementCS"


    // $ANTLR start "entryRuleCommitStatementCS"
    // InternalQVTimperative.g:571:1: entryRuleCommitStatementCS returns [EObject current=null] : iv_ruleCommitStatementCS= ruleCommitStatementCS EOF ;
    public final EObject entryRuleCommitStatementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCommitStatementCS = null;


        try {
            // InternalQVTimperative.g:571:58: (iv_ruleCommitStatementCS= ruleCommitStatementCS EOF )
            // InternalQVTimperative.g:572:2: iv_ruleCommitStatementCS= ruleCommitStatementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommitStatementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCommitStatementCS=ruleCommitStatementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommitStatementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommitStatementCS"


    // $ANTLR start "ruleCommitStatementCS"
    // InternalQVTimperative.g:578:1: ruleCommitStatementCS returns [EObject current=null] : (this_NewStatementCS_0= ruleNewStatementCS | this_SetStatementCS_1= ruleSetStatementCS ) ;
    public final EObject ruleCommitStatementCS() throws RecognitionException {
        EObject current = null;

        EObject this_NewStatementCS_0 = null;

        EObject this_SetStatementCS_1 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:584:2: ( (this_NewStatementCS_0= ruleNewStatementCS | this_SetStatementCS_1= ruleSetStatementCS ) )
            // InternalQVTimperative.g:585:2: (this_NewStatementCS_0= ruleNewStatementCS | this_SetStatementCS_1= ruleSetStatementCS )
            {
            // InternalQVTimperative.g:585:2: (this_NewStatementCS_0= ruleNewStatementCS | this_SetStatementCS_1= ruleSetStatementCS )
            int alt10=2;
            alt10 = dfa10.predict(input);
            switch (alt10) {
                case 1 :
                    // InternalQVTimperative.g:586:3: this_NewStatementCS_0= ruleNewStatementCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getCommitStatementCSAccess().getNewStatementCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NewStatementCS_0=ruleNewStatementCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NewStatementCS_0;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:598:3: this_SetStatementCS_1= ruleSetStatementCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getCommitStatementCSAccess().getSetStatementCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SetStatementCS_1=ruleSetStatementCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SetStatementCS_1;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommitStatementCS"


    // $ANTLR start "entryRuleCheckStatementCS"
    // InternalQVTimperative.g:613:1: entryRuleCheckStatementCS returns [EObject current=null] : iv_ruleCheckStatementCS= ruleCheckStatementCS EOF ;
    public final EObject entryRuleCheckStatementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCheckStatementCS = null;


        try {
            // InternalQVTimperative.g:613:57: (iv_ruleCheckStatementCS= ruleCheckStatementCS EOF )
            // InternalQVTimperative.g:614:2: iv_ruleCheckStatementCS= ruleCheckStatementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCheckStatementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCheckStatementCS=ruleCheckStatementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCheckStatementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCheckStatementCS"


    // $ANTLR start "ruleCheckStatementCS"
    // InternalQVTimperative.g:620:1: ruleCheckStatementCS returns [EObject current=null] : ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'check' ( (lv_ownedCondition_5_0= ruleExpCS ) ) otherlv_6= ';' ) ;
    public final EObject ruleCheckStatementCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_observedProperties_1_0 = null;

        EObject lv_observedProperties_3_0 = null;

        EObject lv_ownedCondition_5_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:626:2: ( ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'check' ( (lv_ownedCondition_5_0= ruleExpCS ) ) otherlv_6= ';' ) )
            // InternalQVTimperative.g:627:2: ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'check' ( (lv_ownedCondition_5_0= ruleExpCS ) ) otherlv_6= ';' )
            {
            // InternalQVTimperative.g:627:2: ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'check' ( (lv_ownedCondition_5_0= ruleExpCS ) ) otherlv_6= ';' )
            // InternalQVTimperative.g:628:3: (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'check' ( (lv_ownedCondition_5_0= ruleExpCS ) ) otherlv_6= ';'
            {
            // InternalQVTimperative.g:628:3: (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==17) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // InternalQVTimperative.g:629:4: otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )*
                    {
                    otherlv_0=(Token)match(input,17,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getCheckStatementCSAccess().getObserveKeyword_0_0());

                    }
                    // InternalQVTimperative.g:633:4: ( (lv_observedProperties_1_0= rulePathNameCS ) )
                    // InternalQVTimperative.g:634:5: (lv_observedProperties_1_0= rulePathNameCS )
                    {
                    // InternalQVTimperative.g:634:5: (lv_observedProperties_1_0= rulePathNameCS )
                    // InternalQVTimperative.g:635:6: lv_observedProperties_1_0= rulePathNameCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCheckStatementCSAccess().getObservedPropertiesPathNameCSParserRuleCall_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_19);
                    lv_observedProperties_1_0=rulePathNameCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCheckStatementCSRule());
                      						}
                      						add(
                      							current,
                      							"observedProperties",
                      							lv_observedProperties_1_0,
                      							"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:652:4: (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )*
                    loop11:
                    do {
                        int alt11=2;
                        int LA11_0 = input.LA(1);

                        if ( (LA11_0==18) ) {
                            alt11=1;
                        }


                        switch (alt11) {
                    	case 1 :
                    	    // InternalQVTimperative.g:653:5: otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) )
                    	    {
                    	    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_2, grammarAccess.getCheckStatementCSAccess().getCommaKeyword_0_2_0());

                    	    }
                    	    // InternalQVTimperative.g:657:5: ( (lv_observedProperties_3_0= rulePathNameCS ) )
                    	    // InternalQVTimperative.g:658:6: (lv_observedProperties_3_0= rulePathNameCS )
                    	    {
                    	    // InternalQVTimperative.g:658:6: (lv_observedProperties_3_0= rulePathNameCS )
                    	    // InternalQVTimperative.g:659:7: lv_observedProperties_3_0= rulePathNameCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getCheckStatementCSAccess().getObservedPropertiesPathNameCSParserRuleCall_0_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_19);
                    	    lv_observedProperties_3_0=rulePathNameCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getCheckStatementCSRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"observedProperties",
                    	      								lv_observedProperties_3_0,
                    	      								"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                    	      							afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop11;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_4=(Token)match(input,29,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getCheckStatementCSAccess().getCheckKeyword_1());

            }
            // InternalQVTimperative.g:682:3: ( (lv_ownedCondition_5_0= ruleExpCS ) )
            // InternalQVTimperative.g:683:4: (lv_ownedCondition_5_0= ruleExpCS )
            {
            // InternalQVTimperative.g:683:4: (lv_ownedCondition_5_0= ruleExpCS )
            // InternalQVTimperative.g:684:5: lv_ownedCondition_5_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCheckStatementCSAccess().getOwnedConditionExpCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_9);
            lv_ownedCondition_5_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCheckStatementCSRule());
              					}
              					set(
              						current,
              						"ownedCondition",
              						lv_ownedCondition_5_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_6=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getCheckStatementCSAccess().getSemicolonKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCheckStatementCS"


    // $ANTLR start "entryRuleControlStatementCS"
    // InternalQVTimperative.g:709:1: entryRuleControlStatementCS returns [EObject current=null] : iv_ruleControlStatementCS= ruleControlStatementCS EOF ;
    public final EObject entryRuleControlStatementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleControlStatementCS = null;


        try {
            // InternalQVTimperative.g:709:59: (iv_ruleControlStatementCS= ruleControlStatementCS EOF )
            // InternalQVTimperative.g:710:2: iv_ruleControlStatementCS= ruleControlStatementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getControlStatementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleControlStatementCS=ruleControlStatementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleControlStatementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleControlStatementCS"


    // $ANTLR start "ruleControlStatementCS"
    // InternalQVTimperative.g:716:1: ruleControlStatementCS returns [EObject current=null] : (this_AddStatementCS_0= ruleAddStatementCS | this_MappingCallCS_1= ruleMappingCallCS | this_MappingLoopCS_2= ruleMappingLoopCS ) ;
    public final EObject ruleControlStatementCS() throws RecognitionException {
        EObject current = null;

        EObject this_AddStatementCS_0 = null;

        EObject this_MappingCallCS_1 = null;

        EObject this_MappingLoopCS_2 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:722:2: ( (this_AddStatementCS_0= ruleAddStatementCS | this_MappingCallCS_1= ruleMappingCallCS | this_MappingLoopCS_2= ruleMappingLoopCS ) )
            // InternalQVTimperative.g:723:2: (this_AddStatementCS_0= ruleAddStatementCS | this_MappingCallCS_1= ruleMappingCallCS | this_MappingLoopCS_2= ruleMappingLoopCS )
            {
            // InternalQVTimperative.g:723:2: (this_AddStatementCS_0= ruleAddStatementCS | this_MappingCallCS_1= ruleMappingCallCS | this_MappingLoopCS_2= ruleMappingLoopCS )
            int alt13=3;
            alt13 = dfa13.predict(input);
            switch (alt13) {
                case 1 :
                    // InternalQVTimperative.g:724:3: this_AddStatementCS_0= ruleAddStatementCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getControlStatementCSAccess().getAddStatementCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AddStatementCS_0=ruleAddStatementCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AddStatementCS_0;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:736:3: this_MappingCallCS_1= ruleMappingCallCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getControlStatementCSAccess().getMappingCallCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_MappingCallCS_1=ruleMappingCallCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MappingCallCS_1;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:748:3: this_MappingLoopCS_2= ruleMappingLoopCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getControlStatementCSAccess().getMappingLoopCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_MappingLoopCS_2=ruleMappingLoopCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MappingLoopCS_2;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleControlStatementCS"


    // $ANTLR start "entryRuleDeclareStatementCS"
    // InternalQVTimperative.g:763:1: entryRuleDeclareStatementCS returns [EObject current=null] : iv_ruleDeclareStatementCS= ruleDeclareStatementCS EOF ;
    public final EObject entryRuleDeclareStatementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclareStatementCS = null;


        try {
            // InternalQVTimperative.g:763:59: (iv_ruleDeclareStatementCS= ruleDeclareStatementCS EOF )
            // InternalQVTimperative.g:764:2: iv_ruleDeclareStatementCS= ruleDeclareStatementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclareStatementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclareStatementCS=ruleDeclareStatementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclareStatementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclareStatementCS"


    // $ANTLR start "ruleDeclareStatementCS"
    // InternalQVTimperative.g:770:1: ruleDeclareStatementCS returns [EObject current=null] : ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isCheck_4_0= 'check' ) )? otherlv_5= 'var' ( (lv_name_6_0= ruleUnrestrictedName ) ) (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) )? otherlv_9= ':=' ( (lv_ownedExpression_10_0= ruleExpCS ) ) otherlv_11= ';' ) ;
    public final EObject ruleDeclareStatementCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token lv_isCheck_4_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        EObject lv_observedProperties_1_0 = null;

        EObject lv_observedProperties_3_0 = null;

        AntlrDatatypeRuleToken lv_name_6_0 = null;

        EObject lv_ownedType_8_0 = null;

        EObject lv_ownedExpression_10_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:776:2: ( ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isCheck_4_0= 'check' ) )? otherlv_5= 'var' ( (lv_name_6_0= ruleUnrestrictedName ) ) (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) )? otherlv_9= ':=' ( (lv_ownedExpression_10_0= ruleExpCS ) ) otherlv_11= ';' ) )
            // InternalQVTimperative.g:777:2: ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isCheck_4_0= 'check' ) )? otherlv_5= 'var' ( (lv_name_6_0= ruleUnrestrictedName ) ) (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) )? otherlv_9= ':=' ( (lv_ownedExpression_10_0= ruleExpCS ) ) otherlv_11= ';' )
            {
            // InternalQVTimperative.g:777:2: ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isCheck_4_0= 'check' ) )? otherlv_5= 'var' ( (lv_name_6_0= ruleUnrestrictedName ) ) (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) )? otherlv_9= ':=' ( (lv_ownedExpression_10_0= ruleExpCS ) ) otherlv_11= ';' )
            // InternalQVTimperative.g:778:3: (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isCheck_4_0= 'check' ) )? otherlv_5= 'var' ( (lv_name_6_0= ruleUnrestrictedName ) ) (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) )? otherlv_9= ':=' ( (lv_ownedExpression_10_0= ruleExpCS ) ) otherlv_11= ';'
            {
            // InternalQVTimperative.g:778:3: (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==17) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // InternalQVTimperative.g:779:4: otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )*
                    {
                    otherlv_0=(Token)match(input,17,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getDeclareStatementCSAccess().getObserveKeyword_0_0());

                    }
                    // InternalQVTimperative.g:783:4: ( (lv_observedProperties_1_0= rulePathNameCS ) )
                    // InternalQVTimperative.g:784:5: (lv_observedProperties_1_0= rulePathNameCS )
                    {
                    // InternalQVTimperative.g:784:5: (lv_observedProperties_1_0= rulePathNameCS )
                    // InternalQVTimperative.g:785:6: lv_observedProperties_1_0= rulePathNameCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclareStatementCSAccess().getObservedPropertiesPathNameCSParserRuleCall_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_20);
                    lv_observedProperties_1_0=rulePathNameCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclareStatementCSRule());
                      						}
                      						add(
                      							current,
                      							"observedProperties",
                      							lv_observedProperties_1_0,
                      							"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:802:4: (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )*
                    loop14:
                    do {
                        int alt14=2;
                        int LA14_0 = input.LA(1);

                        if ( (LA14_0==18) ) {
                            alt14=1;
                        }


                        switch (alt14) {
                    	case 1 :
                    	    // InternalQVTimperative.g:803:5: otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) )
                    	    {
                    	    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_2, grammarAccess.getDeclareStatementCSAccess().getCommaKeyword_0_2_0());

                    	    }
                    	    // InternalQVTimperative.g:807:5: ( (lv_observedProperties_3_0= rulePathNameCS ) )
                    	    // InternalQVTimperative.g:808:6: (lv_observedProperties_3_0= rulePathNameCS )
                    	    {
                    	    // InternalQVTimperative.g:808:6: (lv_observedProperties_3_0= rulePathNameCS )
                    	    // InternalQVTimperative.g:809:7: lv_observedProperties_3_0= rulePathNameCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDeclareStatementCSAccess().getObservedPropertiesPathNameCSParserRuleCall_0_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_20);
                    	    lv_observedProperties_3_0=rulePathNameCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getDeclareStatementCSRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"observedProperties",
                    	      								lv_observedProperties_3_0,
                    	      								"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                    	      							afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop14;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalQVTimperative.g:828:3: ( (lv_isCheck_4_0= 'check' ) )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==29) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // InternalQVTimperative.g:829:4: (lv_isCheck_4_0= 'check' )
                    {
                    // InternalQVTimperative.g:829:4: (lv_isCheck_4_0= 'check' )
                    // InternalQVTimperative.g:830:5: lv_isCheck_4_0= 'check'
                    {
                    lv_isCheck_4_0=(Token)match(input,29,FollowSets000.FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isCheck_4_0, grammarAccess.getDeclareStatementCSAccess().getIsCheckCheckKeyword_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDeclareStatementCSRule());
                      					}
                      					setWithLastConsumed(current, "isCheck", lv_isCheck_4_0 != null, "check");

                    }

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,30,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getDeclareStatementCSAccess().getVarKeyword_2());

            }
            // InternalQVTimperative.g:846:3: ( (lv_name_6_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:847:4: (lv_name_6_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:847:4: (lv_name_6_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:848:5: lv_name_6_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDeclareStatementCSAccess().getNameUnrestrictedNameParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_22);
            lv_name_6_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDeclareStatementCSRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_6_0,
              						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:865:3: (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==24) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // InternalQVTimperative.g:866:4: otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) )
                    {
                    otherlv_7=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getDeclareStatementCSAccess().getColonKeyword_4_0());

                    }
                    // InternalQVTimperative.g:870:4: ( (lv_ownedType_8_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:871:5: (lv_ownedType_8_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:871:5: (lv_ownedType_8_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:872:6: lv_ownedType_8_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDeclareStatementCSAccess().getOwnedTypeTypeExpCSParserRuleCall_4_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_23);
                    lv_ownedType_8_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDeclareStatementCSRule());
                      						}
                      						set(
                      							current,
                      							"ownedType",
                      							lv_ownedType_8_0,
                      							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_9=(Token)match(input,28,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getDeclareStatementCSAccess().getColonEqualsSignKeyword_5());

            }
            // InternalQVTimperative.g:894:3: ( (lv_ownedExpression_10_0= ruleExpCS ) )
            // InternalQVTimperative.g:895:4: (lv_ownedExpression_10_0= ruleExpCS )
            {
            // InternalQVTimperative.g:895:4: (lv_ownedExpression_10_0= ruleExpCS )
            // InternalQVTimperative.g:896:5: lv_ownedExpression_10_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDeclareStatementCSAccess().getOwnedExpressionExpCSParserRuleCall_6_0());

            }
            pushFollow(FollowSets000.FOLLOW_9);
            lv_ownedExpression_10_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDeclareStatementCSRule());
              					}
              					set(
              						current,
              						"ownedExpression",
              						lv_ownedExpression_10_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_11=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getDeclareStatementCSAccess().getSemicolonKeyword_7());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclareStatementCS"


    // $ANTLR start "entryRuleDirectionCS"
    // InternalQVTimperative.g:921:1: entryRuleDirectionCS returns [EObject current=null] : iv_ruleDirectionCS= ruleDirectionCS EOF ;
    public final EObject entryRuleDirectionCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDirectionCS = null;


        try {
            // InternalQVTimperative.g:921:52: (iv_ruleDirectionCS= ruleDirectionCS EOF )
            // InternalQVTimperative.g:922:2: iv_ruleDirectionCS= ruleDirectionCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDirectionCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDirectionCS=ruleDirectionCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDirectionCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDirectionCS"


    // $ANTLR start "ruleDirectionCS"
    // InternalQVTimperative.g:928:1: ruleDirectionCS returns [EObject current=null] : ( () ( (lv_name_1_0= ruleIdentifier ) )? (otherlv_2= 'imports' ( ( ruleUnrestrictedName ) ) (otherlv_4= ',' ( ( ruleUnrestrictedName ) ) )* )? otherlv_6= ';' ) ;
    public final EObject ruleDirectionCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:934:2: ( ( () ( (lv_name_1_0= ruleIdentifier ) )? (otherlv_2= 'imports' ( ( ruleUnrestrictedName ) ) (otherlv_4= ',' ( ( ruleUnrestrictedName ) ) )* )? otherlv_6= ';' ) )
            // InternalQVTimperative.g:935:2: ( () ( (lv_name_1_0= ruleIdentifier ) )? (otherlv_2= 'imports' ( ( ruleUnrestrictedName ) ) (otherlv_4= ',' ( ( ruleUnrestrictedName ) ) )* )? otherlv_6= ';' )
            {
            // InternalQVTimperative.g:935:2: ( () ( (lv_name_1_0= ruleIdentifier ) )? (otherlv_2= 'imports' ( ( ruleUnrestrictedName ) ) (otherlv_4= ',' ( ( ruleUnrestrictedName ) ) )* )? otherlv_6= ';' )
            // InternalQVTimperative.g:936:3: () ( (lv_name_1_0= ruleIdentifier ) )? (otherlv_2= 'imports' ( ( ruleUnrestrictedName ) ) (otherlv_4= ',' ( ( ruleUnrestrictedName ) ) )* )? otherlv_6= ';'
            {
            // InternalQVTimperative.g:936:3: ()
            // InternalQVTimperative.g:937:4:
            {
            if ( state.backtracking==0 ) {

              				/* */

            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDirectionCSAccess().getDirectionCSAction_0(),
              					current);

            }

            }

            // InternalQVTimperative.g:946:3: ( (lv_name_1_0= ruleIdentifier ) )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( ((LA18_0>=RULE_SIMPLE_ID && LA18_0<=RULE_ESCAPED_ID)) ) {
                alt18=1;
            }
            switch (alt18) {
                case 1 :
                    // InternalQVTimperative.g:947:4: (lv_name_1_0= ruleIdentifier )
                    {
                    // InternalQVTimperative.g:947:4: (lv_name_1_0= ruleIdentifier )
                    // InternalQVTimperative.g:948:5: lv_name_1_0= ruleIdentifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDirectionCSAccess().getNameIdentifierParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_24);
                    lv_name_1_0=ruleIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDirectionCSRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_1_0,
                      						"org.eclipse.ocl.xtext.base.Base.Identifier");
                      					afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:965:3: (otherlv_2= 'imports' ( ( ruleUnrestrictedName ) ) (otherlv_4= ',' ( ( ruleUnrestrictedName ) ) )* )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==31) ) {
                alt20=1;
            }
            switch (alt20) {
                case 1 :
                    // InternalQVTimperative.g:966:4: otherlv_2= 'imports' ( ( ruleUnrestrictedName ) ) (otherlv_4= ',' ( ( ruleUnrestrictedName ) ) )*
                    {
                    otherlv_2=(Token)match(input,31,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getDirectionCSAccess().getImportsKeyword_2_0());

                    }
                    // InternalQVTimperative.g:970:4: ( ( ruleUnrestrictedName ) )
                    // InternalQVTimperative.g:971:5: ( ruleUnrestrictedName )
                    {
                    // InternalQVTimperative.g:971:5: ( ruleUnrestrictedName )
                    // InternalQVTimperative.g:972:6: ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      						/* */

                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDirectionCSRule());
                      						}

                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDirectionCSAccess().getImportsPackageCrossReference_2_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_25);
                    ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:989:4: (otherlv_4= ',' ( ( ruleUnrestrictedName ) ) )*
                    loop19:
                    do {
                        int alt19=2;
                        int LA19_0 = input.LA(1);

                        if ( (LA19_0==18) ) {
                            alt19=1;
                        }


                        switch (alt19) {
                    	case 1 :
                    	    // InternalQVTimperative.g:990:5: otherlv_4= ',' ( ( ruleUnrestrictedName ) )
                    	    {
                    	    otherlv_4=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getDirectionCSAccess().getCommaKeyword_2_2_0());

                    	    }
                    	    // InternalQVTimperative.g:994:5: ( ( ruleUnrestrictedName ) )
                    	    // InternalQVTimperative.g:995:6: ( ruleUnrestrictedName )
                    	    {
                    	    // InternalQVTimperative.g:995:6: ( ruleUnrestrictedName )
                    	    // InternalQVTimperative.g:996:7: ruleUnrestrictedName
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							/* */

                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getDirectionCSRule());
                    	      							}

                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getDirectionCSAccess().getImportsPackageCrossReference_2_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_25);
                    	    ruleUnrestrictedName();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop19;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getDirectionCSAccess().getSemicolonKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDirectionCS"


    // $ANTLR start "entryRuleEntryPointCS"
    // InternalQVTimperative.g:1023:1: entryRuleEntryPointCS returns [EObject current=null] : iv_ruleEntryPointCS= ruleEntryPointCS EOF ;
    public final EObject entryRuleEntryPointCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEntryPointCS = null;


        try {
            // InternalQVTimperative.g:1023:53: (iv_ruleEntryPointCS= ruleEntryPointCS EOF )
            // InternalQVTimperative.g:1024:2: iv_ruleEntryPointCS= ruleEntryPointCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEntryPointCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEntryPointCS=ruleEntryPointCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEntryPointCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEntryPointCS"


    // $ANTLR start "ruleEntryPointCS"
    // InternalQVTimperative.g:1030:1: ruleEntryPointCS returns [EObject current=null] : ( () ( (lv_isStrict_1_0= 'strict' ) )? otherlv_2= 'entry' (otherlv_3= ':' ( (lv_targetName_4_0= ruleUnrestrictedName ) ) )? ( (lv_name_5_0= ruleUnrestrictedName ) ) (otherlv_6= 'input' ( ( ruleUnrestrictedName ) ) (otherlv_8= ',' ( ( ruleUnrestrictedName ) ) )* )? (otherlv_10= 'output' ( ( ruleUnrestrictedName ) ) (otherlv_12= ',' ( ( ruleUnrestrictedName ) ) )* )? otherlv_14= '{' ( (lv_ownedParameters_15_0= ruleMappingParameterCS ) )* ( (lv_ownedStatements_16_0= ruleGuardStatementCS ) )* ( (lv_ownedStatements_17_0= ruleCommitStatementCS ) )* ( (lv_ownedStatements_18_0= ruleControlStatementCS ) )* otherlv_19= '}' ) ;
    public final EObject ruleEntryPointCS() throws RecognitionException {
        EObject current = null;

        Token lv_isStrict_1_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_19=null;
        AntlrDatatypeRuleToken lv_targetName_4_0 = null;

        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_ownedParameters_15_0 = null;

        EObject lv_ownedStatements_16_0 = null;

        EObject lv_ownedStatements_17_0 = null;

        EObject lv_ownedStatements_18_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:1036:2: ( ( () ( (lv_isStrict_1_0= 'strict' ) )? otherlv_2= 'entry' (otherlv_3= ':' ( (lv_targetName_4_0= ruleUnrestrictedName ) ) )? ( (lv_name_5_0= ruleUnrestrictedName ) ) (otherlv_6= 'input' ( ( ruleUnrestrictedName ) ) (otherlv_8= ',' ( ( ruleUnrestrictedName ) ) )* )? (otherlv_10= 'output' ( ( ruleUnrestrictedName ) ) (otherlv_12= ',' ( ( ruleUnrestrictedName ) ) )* )? otherlv_14= '{' ( (lv_ownedParameters_15_0= ruleMappingParameterCS ) )* ( (lv_ownedStatements_16_0= ruleGuardStatementCS ) )* ( (lv_ownedStatements_17_0= ruleCommitStatementCS ) )* ( (lv_ownedStatements_18_0= ruleControlStatementCS ) )* otherlv_19= '}' ) )
            // InternalQVTimperative.g:1037:2: ( () ( (lv_isStrict_1_0= 'strict' ) )? otherlv_2= 'entry' (otherlv_3= ':' ( (lv_targetName_4_0= ruleUnrestrictedName ) ) )? ( (lv_name_5_0= ruleUnrestrictedName ) ) (otherlv_6= 'input' ( ( ruleUnrestrictedName ) ) (otherlv_8= ',' ( ( ruleUnrestrictedName ) ) )* )? (otherlv_10= 'output' ( ( ruleUnrestrictedName ) ) (otherlv_12= ',' ( ( ruleUnrestrictedName ) ) )* )? otherlv_14= '{' ( (lv_ownedParameters_15_0= ruleMappingParameterCS ) )* ( (lv_ownedStatements_16_0= ruleGuardStatementCS ) )* ( (lv_ownedStatements_17_0= ruleCommitStatementCS ) )* ( (lv_ownedStatements_18_0= ruleControlStatementCS ) )* otherlv_19= '}' )
            {
            // InternalQVTimperative.g:1037:2: ( () ( (lv_isStrict_1_0= 'strict' ) )? otherlv_2= 'entry' (otherlv_3= ':' ( (lv_targetName_4_0= ruleUnrestrictedName ) ) )? ( (lv_name_5_0= ruleUnrestrictedName ) ) (otherlv_6= 'input' ( ( ruleUnrestrictedName ) ) (otherlv_8= ',' ( ( ruleUnrestrictedName ) ) )* )? (otherlv_10= 'output' ( ( ruleUnrestrictedName ) ) (otherlv_12= ',' ( ( ruleUnrestrictedName ) ) )* )? otherlv_14= '{' ( (lv_ownedParameters_15_0= ruleMappingParameterCS ) )* ( (lv_ownedStatements_16_0= ruleGuardStatementCS ) )* ( (lv_ownedStatements_17_0= ruleCommitStatementCS ) )* ( (lv_ownedStatements_18_0= ruleControlStatementCS ) )* otherlv_19= '}' )
            // InternalQVTimperative.g:1038:3: () ( (lv_isStrict_1_0= 'strict' ) )? otherlv_2= 'entry' (otherlv_3= ':' ( (lv_targetName_4_0= ruleUnrestrictedName ) ) )? ( (lv_name_5_0= ruleUnrestrictedName ) ) (otherlv_6= 'input' ( ( ruleUnrestrictedName ) ) (otherlv_8= ',' ( ( ruleUnrestrictedName ) ) )* )? (otherlv_10= 'output' ( ( ruleUnrestrictedName ) ) (otherlv_12= ',' ( ( ruleUnrestrictedName ) ) )* )? otherlv_14= '{' ( (lv_ownedParameters_15_0= ruleMappingParameterCS ) )* ( (lv_ownedStatements_16_0= ruleGuardStatementCS ) )* ( (lv_ownedStatements_17_0= ruleCommitStatementCS ) )* ( (lv_ownedStatements_18_0= ruleControlStatementCS ) )* otherlv_19= '}'
            {
            // InternalQVTimperative.g:1038:3: ()
            // InternalQVTimperative.g:1039:4:
            {
            if ( state.backtracking==0 ) {

              				/* */

            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getEntryPointCSAccess().getEntryPointCSAction_0(),
              					current);

            }

            }

            // InternalQVTimperative.g:1048:3: ( (lv_isStrict_1_0= 'strict' ) )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==25) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // InternalQVTimperative.g:1049:4: (lv_isStrict_1_0= 'strict' )
                    {
                    // InternalQVTimperative.g:1049:4: (lv_isStrict_1_0= 'strict' )
                    // InternalQVTimperative.g:1050:5: lv_isStrict_1_0= 'strict'
                    {
                    lv_isStrict_1_0=(Token)match(input,25,FollowSets000.FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isStrict_1_0, grammarAccess.getEntryPointCSAccess().getIsStrictStrictKeyword_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getEntryPointCSRule());
                      					}
                      					setWithLastConsumed(current, "isStrict", lv_isStrict_1_0 != null, "strict");

                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,32,FollowSets000.FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getEntryPointCSAccess().getEntryKeyword_2());

            }
            // InternalQVTimperative.g:1066:3: (otherlv_3= ':' ( (lv_targetName_4_0= ruleUnrestrictedName ) ) )?
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==24) ) {
                alt22=1;
            }
            switch (alt22) {
                case 1 :
                    // InternalQVTimperative.g:1067:4: otherlv_3= ':' ( (lv_targetName_4_0= ruleUnrestrictedName ) )
                    {
                    otherlv_3=(Token)match(input,24,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getEntryPointCSAccess().getColonKeyword_3_0());

                    }
                    // InternalQVTimperative.g:1071:4: ( (lv_targetName_4_0= ruleUnrestrictedName ) )
                    // InternalQVTimperative.g:1072:5: (lv_targetName_4_0= ruleUnrestrictedName )
                    {
                    // InternalQVTimperative.g:1072:5: (lv_targetName_4_0= ruleUnrestrictedName )
                    // InternalQVTimperative.g:1073:6: lv_targetName_4_0= ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEntryPointCSAccess().getTargetNameUnrestrictedNameParserRuleCall_3_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_5);
                    lv_targetName_4_0=ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEntryPointCSRule());
                      						}
                      						set(
                      							current,
                      							"targetName",
                      							lv_targetName_4_0,
                      							"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:1091:3: ( (lv_name_5_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:1092:4: (lv_name_5_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:1092:4: (lv_name_5_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:1093:5: lv_name_5_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEntryPointCSAccess().getNameUnrestrictedNameParserRuleCall_4_0());

            }
            pushFollow(FollowSets000.FOLLOW_27);
            lv_name_5_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEntryPointCSRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_5_0,
              						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:1110:3: (otherlv_6= 'input' ( ( ruleUnrestrictedName ) ) (otherlv_8= ',' ( ( ruleUnrestrictedName ) ) )* )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==33) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // InternalQVTimperative.g:1111:4: otherlv_6= 'input' ( ( ruleUnrestrictedName ) ) (otherlv_8= ',' ( ( ruleUnrestrictedName ) ) )*
                    {
                    otherlv_6=(Token)match(input,33,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getEntryPointCSAccess().getInputKeyword_5_0());

                    }
                    // InternalQVTimperative.g:1115:4: ( ( ruleUnrestrictedName ) )
                    // InternalQVTimperative.g:1116:5: ( ruleUnrestrictedName )
                    {
                    // InternalQVTimperative.g:1116:5: ( ruleUnrestrictedName )
                    // InternalQVTimperative.g:1117:6: ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      						/* */

                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getEntryPointCSRule());
                      						}

                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEntryPointCSAccess().getInputTypedModelsTypedModelCrossReference_5_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_28);
                    ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:1134:4: (otherlv_8= ',' ( ( ruleUnrestrictedName ) ) )*
                    loop23:
                    do {
                        int alt23=2;
                        int LA23_0 = input.LA(1);

                        if ( (LA23_0==18) ) {
                            alt23=1;
                        }


                        switch (alt23) {
                    	case 1 :
                    	    // InternalQVTimperative.g:1135:5: otherlv_8= ',' ( ( ruleUnrestrictedName ) )
                    	    {
                    	    otherlv_8=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getEntryPointCSAccess().getCommaKeyword_5_2_0());

                    	    }
                    	    // InternalQVTimperative.g:1139:5: ( ( ruleUnrestrictedName ) )
                    	    // InternalQVTimperative.g:1140:6: ( ruleUnrestrictedName )
                    	    {
                    	    // InternalQVTimperative.g:1140:6: ( ruleUnrestrictedName )
                    	    // InternalQVTimperative.g:1141:7: ruleUnrestrictedName
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							/* */

                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getEntryPointCSRule());
                    	      							}

                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getEntryPointCSAccess().getInputTypedModelsTypedModelCrossReference_5_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_28);
                    	    ruleUnrestrictedName();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop23;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalQVTimperative.g:1160:3: (otherlv_10= 'output' ( ( ruleUnrestrictedName ) ) (otherlv_12= ',' ( ( ruleUnrestrictedName ) ) )* )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==34) ) {
                alt26=1;
            }
            switch (alt26) {
                case 1 :
                    // InternalQVTimperative.g:1161:4: otherlv_10= 'output' ( ( ruleUnrestrictedName ) ) (otherlv_12= ',' ( ( ruleUnrestrictedName ) ) )*
                    {
                    otherlv_10=(Token)match(input,34,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getEntryPointCSAccess().getOutputKeyword_6_0());

                    }
                    // InternalQVTimperative.g:1165:4: ( ( ruleUnrestrictedName ) )
                    // InternalQVTimperative.g:1166:5: ( ruleUnrestrictedName )
                    {
                    // InternalQVTimperative.g:1166:5: ( ruleUnrestrictedName )
                    // InternalQVTimperative.g:1167:6: ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      						/* */

                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getEntryPointCSRule());
                      						}

                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEntryPointCSAccess().getOutputTypedModelsTypedModelCrossReference_6_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_29);
                    ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:1184:4: (otherlv_12= ',' ( ( ruleUnrestrictedName ) ) )*
                    loop25:
                    do {
                        int alt25=2;
                        int LA25_0 = input.LA(1);

                        if ( (LA25_0==18) ) {
                            alt25=1;
                        }


                        switch (alt25) {
                    	case 1 :
                    	    // InternalQVTimperative.g:1185:5: otherlv_12= ',' ( ( ruleUnrestrictedName ) )
                    	    {
                    	    otherlv_12=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_12, grammarAccess.getEntryPointCSAccess().getCommaKeyword_6_2_0());

                    	    }
                    	    // InternalQVTimperative.g:1189:5: ( ( ruleUnrestrictedName ) )
                    	    // InternalQVTimperative.g:1190:6: ( ruleUnrestrictedName )
                    	    {
                    	    // InternalQVTimperative.g:1190:6: ( ruleUnrestrictedName )
                    	    // InternalQVTimperative.g:1191:7: ruleUnrestrictedName
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							/* */

                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getEntryPointCSRule());
                    	      							}

                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getEntryPointCSAccess().getOutputTypedModelsTypedModelCrossReference_6_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_29);
                    	    ruleUnrestrictedName();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop25;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_14=(Token)match(input,35,FollowSets000.FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_14, grammarAccess.getEntryPointCSAccess().getLeftCurlyBracketKeyword_7());

            }
            // InternalQVTimperative.g:1214:3: ( (lv_ownedParameters_15_0= ruleMappingParameterCS ) )*
            loop27:
            do {
                int alt27=2;
                int LA27_0 = input.LA(1);

                if ( (LA27_0==23||LA27_0==38||LA27_0==49) ) {
                    alt27=1;
                }


                switch (alt27) {
            	case 1 :
            	    // InternalQVTimperative.g:1215:4: (lv_ownedParameters_15_0= ruleMappingParameterCS )
            	    {
            	    // InternalQVTimperative.g:1215:4: (lv_ownedParameters_15_0= ruleMappingParameterCS )
            	    // InternalQVTimperative.g:1216:5: lv_ownedParameters_15_0= ruleMappingParameterCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getEntryPointCSAccess().getOwnedParametersMappingParameterCSParserRuleCall_8_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_30);
            	    lv_ownedParameters_15_0=ruleMappingParameterCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getEntryPointCSRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ownedParameters",
            	      						lv_ownedParameters_15_0,
            	      						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.MappingParameterCS");
            	      					afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);

            // InternalQVTimperative.g:1233:3: ( (lv_ownedStatements_16_0= ruleGuardStatementCS ) )*
            loop28:
            do {
                int alt28=2;
                alt28 = dfa28.predict(input);
                switch (alt28) {
            	case 1 :
            	    // InternalQVTimperative.g:1234:4: (lv_ownedStatements_16_0= ruleGuardStatementCS )
            	    {
            	    // InternalQVTimperative.g:1234:4: (lv_ownedStatements_16_0= ruleGuardStatementCS )
            	    // InternalQVTimperative.g:1235:5: lv_ownedStatements_16_0= ruleGuardStatementCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getEntryPointCSAccess().getOwnedStatementsGuardStatementCSParserRuleCall_9_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_31);
            	    lv_ownedStatements_16_0=ruleGuardStatementCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getEntryPointCSRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ownedStatements",
            	      						lv_ownedStatements_16_0,
            	      						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.GuardStatementCS");
            	      					afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop28;
                }
            } while (true);

            // InternalQVTimperative.g:1252:3: ( (lv_ownedStatements_17_0= ruleCommitStatementCS ) )*
            loop29:
            do {
                int alt29=2;
                alt29 = dfa29.predict(input);
                switch (alt29) {
            	case 1 :
            	    // InternalQVTimperative.g:1253:4: (lv_ownedStatements_17_0= ruleCommitStatementCS )
            	    {
            	    // InternalQVTimperative.g:1253:4: (lv_ownedStatements_17_0= ruleCommitStatementCS )
            	    // InternalQVTimperative.g:1254:5: lv_ownedStatements_17_0= ruleCommitStatementCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getEntryPointCSAccess().getOwnedStatementsCommitStatementCSParserRuleCall_10_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_32);
            	    lv_ownedStatements_17_0=ruleCommitStatementCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getEntryPointCSRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ownedStatements",
            	      						lv_ownedStatements_17_0,
            	      						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.CommitStatementCS");
            	      					afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop29;
                }
            } while (true);

            // InternalQVTimperative.g:1271:3: ( (lv_ownedStatements_18_0= ruleControlStatementCS ) )*
            loop30:
            do {
                int alt30=2;
                int LA30_0 = input.LA(1);

                if ( (LA30_0==17||LA30_0==19||(LA30_0>=45 && LA30_0<=48)) ) {
                    alt30=1;
                }


                switch (alt30) {
            	case 1 :
            	    // InternalQVTimperative.g:1272:4: (lv_ownedStatements_18_0= ruleControlStatementCS )
            	    {
            	    // InternalQVTimperative.g:1272:4: (lv_ownedStatements_18_0= ruleControlStatementCS )
            	    // InternalQVTimperative.g:1273:5: lv_ownedStatements_18_0= ruleControlStatementCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getEntryPointCSAccess().getOwnedStatementsControlStatementCSParserRuleCall_11_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_33);
            	    lv_ownedStatements_18_0=ruleControlStatementCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getEntryPointCSRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ownedStatements",
            	      						lv_ownedStatements_18_0,
            	      						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.ControlStatementCS");
            	      					afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop30;
                }
            } while (true);

            otherlv_19=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_19, grammarAccess.getEntryPointCSAccess().getRightCurlyBracketKeyword_12());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEntryPointCS"


    // $ANTLR start "entryRuleGuardParameterBindingCS"
    // InternalQVTimperative.g:1298:1: entryRuleGuardParameterBindingCS returns [EObject current=null] : iv_ruleGuardParameterBindingCS= ruleGuardParameterBindingCS EOF ;
    public final EObject entryRuleGuardParameterBindingCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGuardParameterBindingCS = null;


        try {
            // InternalQVTimperative.g:1298:64: (iv_ruleGuardParameterBindingCS= ruleGuardParameterBindingCS EOF )
            // InternalQVTimperative.g:1299:2: iv_ruleGuardParameterBindingCS= ruleGuardParameterBindingCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGuardParameterBindingCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleGuardParameterBindingCS=ruleGuardParameterBindingCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGuardParameterBindingCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGuardParameterBindingCS"


    // $ANTLR start "ruleGuardParameterBindingCS"
    // InternalQVTimperative.g:1305:1: ruleGuardParameterBindingCS returns [EObject current=null] : ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'consumes' ( ( ruleUnrestrictedName ) ) otherlv_4= ';' ) ;
    public final EObject ruleGuardParameterBindingCS() throws RecognitionException {
        EObject current = null;

        Token lv_isCheck_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;


        	enterRule();

        try {
            // InternalQVTimperative.g:1311:2: ( ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'consumes' ( ( ruleUnrestrictedName ) ) otherlv_4= ';' ) )
            // InternalQVTimperative.g:1312:2: ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'consumes' ( ( ruleUnrestrictedName ) ) otherlv_4= ';' )
            {
            // InternalQVTimperative.g:1312:2: ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'consumes' ( ( ruleUnrestrictedName ) ) otherlv_4= ';' )
            // InternalQVTimperative.g:1313:3: ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'consumes' ( ( ruleUnrestrictedName ) ) otherlv_4= ';'
            {
            // InternalQVTimperative.g:1313:3: ( (lv_isCheck_0_0= 'check' ) )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==29) ) {
                int LA31_1 = input.LA(2);

                if ( ((LA31_1>=RULE_SIMPLE_ID && LA31_1<=RULE_ESCAPED_ID)||LA31_1==17||LA31_1==19||(LA31_1>=22 && LA31_1<=23)||(LA31_1>=25 && LA31_1<=26)||(LA31_1>=29 && LA31_1<=34)||LA31_1==39||(LA31_1>=43 && LA31_1<=48)||(LA31_1>=50 && LA31_1<=52)||(LA31_1>=54 && LA31_1<=55)||(LA31_1>=58 && LA31_1<=60)||(LA31_1>=62 && LA31_1<=70)||LA31_1==72||LA31_1==74||LA31_1==76||LA31_1==79||LA31_1==81||LA31_1==83||(LA31_1>=85 && LA31_1<=89)||(LA31_1>=91 && LA31_1<=96)||LA31_1==98||LA31_1==100||(LA31_1>=102 && LA31_1<=105)) ) {
                    alt31=1;
                }
            }
            switch (alt31) {
                case 1 :
                    // InternalQVTimperative.g:1314:4: (lv_isCheck_0_0= 'check' )
                    {
                    // InternalQVTimperative.g:1314:4: (lv_isCheck_0_0= 'check' )
                    // InternalQVTimperative.g:1315:5: lv_isCheck_0_0= 'check'
                    {
                    lv_isCheck_0_0=(Token)match(input,29,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isCheck_0_0, grammarAccess.getGuardParameterBindingCSAccess().getIsCheckCheckKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getGuardParameterBindingCSRule());
                      					}
                      					setWithLastConsumed(current, "isCheck", lv_isCheck_0_0 != null, "check");

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:1327:3: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:1328:4: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:1328:4: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:1329:5: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					/* */

            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGuardParameterBindingCSRule());
              					}

            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGuardParameterBindingCSAccess().getReferredVariableGuardParameterCrossReference_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_34);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_2=(Token)match(input,37,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getGuardParameterBindingCSAccess().getConsumesKeyword_2());

            }
            // InternalQVTimperative.g:1350:3: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:1351:4: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:1351:4: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:1352:5: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					/* */

            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGuardParameterBindingCSRule());
              					}

            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGuardParameterBindingCSAccess().getValueConnectionVariableCrossReference_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_9);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_4=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getGuardParameterBindingCSAccess().getSemicolonKeyword_4());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGuardParameterBindingCS"


    // $ANTLR start "entryRuleGuardParameterCS"
    // InternalQVTimperative.g:1377:1: entryRuleGuardParameterCS returns [EObject current=null] : iv_ruleGuardParameterCS= ruleGuardParameterCS EOF ;
    public final EObject entryRuleGuardParameterCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGuardParameterCS = null;


        try {
            // InternalQVTimperative.g:1377:57: (iv_ruleGuardParameterCS= ruleGuardParameterCS EOF )
            // InternalQVTimperative.g:1378:2: iv_ruleGuardParameterCS= ruleGuardParameterCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGuardParameterCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleGuardParameterCS=ruleGuardParameterCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGuardParameterCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGuardParameterCS"


    // $ANTLR start "ruleGuardParameterCS"
    // InternalQVTimperative.g:1384:1: ruleGuardParameterCS returns [EObject current=null] : (otherlv_0= 'guard' otherlv_1= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' ( (lv_ownedType_5_0= ruleTypeExpCS ) ) (otherlv_6= 'success' ( ( ruleUnrestrictedName ) ) )? otherlv_8= ';' ) ;
    public final EObject ruleGuardParameterCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_ownedType_5_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:1390:2: ( (otherlv_0= 'guard' otherlv_1= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' ( (lv_ownedType_5_0= ruleTypeExpCS ) ) (otherlv_6= 'success' ( ( ruleUnrestrictedName ) ) )? otherlv_8= ';' ) )
            // InternalQVTimperative.g:1391:2: (otherlv_0= 'guard' otherlv_1= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' ( (lv_ownedType_5_0= ruleTypeExpCS ) ) (otherlv_6= 'success' ( ( ruleUnrestrictedName ) ) )? otherlv_8= ';' )
            {
            // InternalQVTimperative.g:1391:2: (otherlv_0= 'guard' otherlv_1= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' ( (lv_ownedType_5_0= ruleTypeExpCS ) ) (otherlv_6= 'success' ( ( ruleUnrestrictedName ) ) )? otherlv_8= ';' )
            // InternalQVTimperative.g:1392:3: otherlv_0= 'guard' otherlv_1= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' ( (lv_ownedType_5_0= ruleTypeExpCS ) ) (otherlv_6= 'success' ( ( ruleUnrestrictedName ) ) )? otherlv_8= ';'
            {
            otherlv_0=(Token)match(input,38,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getGuardParameterCSAccess().getGuardKeyword_0());

            }
            otherlv_1=(Token)match(input,24,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getGuardParameterCSAccess().getColonKeyword_1());

            }
            // InternalQVTimperative.g:1400:3: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:1401:4: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:1401:4: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:1402:5: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					/* */

            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGuardParameterCSRule());
              					}

            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGuardParameterCSAccess().getReferredTypedModelTypedModelCrossReference_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_5);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:1419:3: ( (lv_name_3_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:1420:4: (lv_name_3_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:1420:4: (lv_name_3_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:1421:5: lv_name_3_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGuardParameterCSAccess().getNameUnrestrictedNameParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_11);
            lv_name_3_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGuardParameterCSRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_3_0,
              						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_4=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getGuardParameterCSAccess().getColonKeyword_4());

            }
            // InternalQVTimperative.g:1442:3: ( (lv_ownedType_5_0= ruleTypeExpCS ) )
            // InternalQVTimperative.g:1443:4: (lv_ownedType_5_0= ruleTypeExpCS )
            {
            // InternalQVTimperative.g:1443:4: (lv_ownedType_5_0= ruleTypeExpCS )
            // InternalQVTimperative.g:1444:5: lv_ownedType_5_0= ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGuardParameterCSAccess().getOwnedTypeTypeExpCSParserRuleCall_5_0());

            }
            pushFollow(FollowSets000.FOLLOW_35);
            lv_ownedType_5_0=ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGuardParameterCSRule());
              					}
              					set(
              						current,
              						"ownedType",
              						lv_ownedType_5_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:1461:3: (otherlv_6= 'success' ( ( ruleUnrestrictedName ) ) )?
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==39) ) {
                alt32=1;
            }
            switch (alt32) {
                case 1 :
                    // InternalQVTimperative.g:1462:4: otherlv_6= 'success' ( ( ruleUnrestrictedName ) )
                    {
                    otherlv_6=(Token)match(input,39,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getGuardParameterCSAccess().getSuccessKeyword_6_0());

                    }
                    // InternalQVTimperative.g:1466:4: ( ( ruleUnrestrictedName ) )
                    // InternalQVTimperative.g:1467:5: ( ruleUnrestrictedName )
                    {
                    // InternalQVTimperative.g:1467:5: ( ruleUnrestrictedName )
                    // InternalQVTimperative.g:1468:6: ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      						/* */

                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getGuardParameterCSRule());
                      						}

                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getGuardParameterCSAccess().getSuccessPropertyPropertyCrossReference_6_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getGuardParameterCSAccess().getSemicolonKeyword_7());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGuardParameterCS"


    // $ANTLR start "entryRuleGuardStatementCS"
    // InternalQVTimperative.g:1494:1: entryRuleGuardStatementCS returns [EObject current=null] : iv_ruleGuardStatementCS= ruleGuardStatementCS EOF ;
    public final EObject entryRuleGuardStatementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGuardStatementCS = null;


        try {
            // InternalQVTimperative.g:1494:57: (iv_ruleGuardStatementCS= ruleGuardStatementCS EOF )
            // InternalQVTimperative.g:1495:2: iv_ruleGuardStatementCS= ruleGuardStatementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGuardStatementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleGuardStatementCS=ruleGuardStatementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGuardStatementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGuardStatementCS"


    // $ANTLR start "ruleGuardStatementCS"
    // InternalQVTimperative.g:1501:1: ruleGuardStatementCS returns [EObject current=null] : (this_BufferStatementCS_0= ruleBufferStatementCS | this_DeclareStatementCS_1= ruleDeclareStatementCS | this_DeclareStatementCS_2= ruleDeclareStatementCS | this_CheckStatementCS_3= ruleCheckStatementCS | this_SpeculateStatementCS_4= ruleSpeculateStatementCS ) ;
    public final EObject ruleGuardStatementCS() throws RecognitionException {
        EObject current = null;

        EObject this_BufferStatementCS_0 = null;

        EObject this_DeclareStatementCS_1 = null;

        EObject this_DeclareStatementCS_2 = null;

        EObject this_CheckStatementCS_3 = null;

        EObject this_SpeculateStatementCS_4 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:1507:2: ( (this_BufferStatementCS_0= ruleBufferStatementCS | this_DeclareStatementCS_1= ruleDeclareStatementCS | this_DeclareStatementCS_2= ruleDeclareStatementCS | this_CheckStatementCS_3= ruleCheckStatementCS | this_SpeculateStatementCS_4= ruleSpeculateStatementCS ) )
            // InternalQVTimperative.g:1508:2: (this_BufferStatementCS_0= ruleBufferStatementCS | this_DeclareStatementCS_1= ruleDeclareStatementCS | this_DeclareStatementCS_2= ruleDeclareStatementCS | this_CheckStatementCS_3= ruleCheckStatementCS | this_SpeculateStatementCS_4= ruleSpeculateStatementCS )
            {
            // InternalQVTimperative.g:1508:2: (this_BufferStatementCS_0= ruleBufferStatementCS | this_DeclareStatementCS_1= ruleDeclareStatementCS | this_DeclareStatementCS_2= ruleDeclareStatementCS | this_CheckStatementCS_3= ruleCheckStatementCS | this_SpeculateStatementCS_4= ruleSpeculateStatementCS )
            int alt33=5;
            alt33 = dfa33.predict(input);
            switch (alt33) {
                case 1 :
                    // InternalQVTimperative.g:1509:3: this_BufferStatementCS_0= ruleBufferStatementCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getGuardStatementCSAccess().getBufferStatementCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BufferStatementCS_0=ruleBufferStatementCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BufferStatementCS_0;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:1521:3: this_DeclareStatementCS_1= ruleDeclareStatementCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getGuardStatementCSAccess().getDeclareStatementCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DeclareStatementCS_1=ruleDeclareStatementCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DeclareStatementCS_1;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:1533:3: this_DeclareStatementCS_2= ruleDeclareStatementCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getGuardStatementCSAccess().getDeclareStatementCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DeclareStatementCS_2=ruleDeclareStatementCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DeclareStatementCS_2;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:1545:3: this_CheckStatementCS_3= ruleCheckStatementCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getGuardStatementCSAccess().getCheckStatementCSParserRuleCall_3());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CheckStatementCS_3=ruleCheckStatementCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CheckStatementCS_3;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 5 :
                    // InternalQVTimperative.g:1557:3: this_SpeculateStatementCS_4= ruleSpeculateStatementCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getGuardStatementCSAccess().getSpeculateStatementCSParserRuleCall_4());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SpeculateStatementCS_4=ruleSpeculateStatementCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SpeculateStatementCS_4;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGuardStatementCS"


    // $ANTLR start "entryRuleImportCS"
    // InternalQVTimperative.g:1572:1: entryRuleImportCS returns [EObject current=null] : iv_ruleImportCS= ruleImportCS EOF ;
    public final EObject entryRuleImportCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImportCS = null;


        try {
            // InternalQVTimperative.g:1572:49: (iv_ruleImportCS= ruleImportCS EOF )
            // InternalQVTimperative.g:1573:2: iv_ruleImportCS= ruleImportCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleImportCS=ruleImportCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImportCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImportCS"


    // $ANTLR start "ruleImportCS"
    // InternalQVTimperative.g:1579:1: ruleImportCS returns [EObject current=null] : (otherlv_0= 'import' ( ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= ':' )? ( (lv_ownedPathName_3_0= ruleURIPathNameCS ) ) ( ( (lv_isAll_4_0= '::' ) ) otherlv_5= '*' )? otherlv_6= ';' ) ;
    public final EObject ruleImportCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token lv_isAll_4_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_ownedPathName_3_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:1585:2: ( (otherlv_0= 'import' ( ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= ':' )? ( (lv_ownedPathName_3_0= ruleURIPathNameCS ) ) ( ( (lv_isAll_4_0= '::' ) ) otherlv_5= '*' )? otherlv_6= ';' ) )
            // InternalQVTimperative.g:1586:2: (otherlv_0= 'import' ( ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= ':' )? ( (lv_ownedPathName_3_0= ruleURIPathNameCS ) ) ( ( (lv_isAll_4_0= '::' ) ) otherlv_5= '*' )? otherlv_6= ';' )
            {
            // InternalQVTimperative.g:1586:2: (otherlv_0= 'import' ( ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= ':' )? ( (lv_ownedPathName_3_0= ruleURIPathNameCS ) ) ( ( (lv_isAll_4_0= '::' ) ) otherlv_5= '*' )? otherlv_6= ';' )
            // InternalQVTimperative.g:1587:3: otherlv_0= 'import' ( ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= ':' )? ( (lv_ownedPathName_3_0= ruleURIPathNameCS ) ) ( ( (lv_isAll_4_0= '::' ) ) otherlv_5= '*' )? otherlv_6= ';'
            {
            otherlv_0=(Token)match(input,40,FollowSets000.FOLLOW_36); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getImportCSAccess().getImportKeyword_0());

            }
            // InternalQVTimperative.g:1591:3: ( ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= ':' )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==RULE_SIMPLE_ID) ) {
                int LA34_1 = input.LA(2);

                if ( (LA34_1==24) ) {
                    alt34=1;
                }
            }
            else if ( (LA34_0==RULE_ESCAPED_ID) ) {
                int LA34_2 = input.LA(2);

                if ( (LA34_2==24) ) {
                    alt34=1;
                }
            }
            switch (alt34) {
                case 1 :
                    // InternalQVTimperative.g:1592:4: ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= ':'
                    {
                    // InternalQVTimperative.g:1592:4: ( (lv_name_1_0= ruleIdentifier ) )
                    // InternalQVTimperative.g:1593:5: (lv_name_1_0= ruleIdentifier )
                    {
                    // InternalQVTimperative.g:1593:5: (lv_name_1_0= ruleIdentifier )
                    // InternalQVTimperative.g:1594:6: lv_name_1_0= ruleIdentifier
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getImportCSAccess().getNameIdentifierParserRuleCall_1_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_name_1_0=ruleIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getImportCSRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"org.eclipse.ocl.xtext.base.Base.Identifier");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    otherlv_2=(Token)match(input,24,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getImportCSAccess().getColonKeyword_1_1());

                    }

                    }
                    break;

            }

            // InternalQVTimperative.g:1616:3: ( (lv_ownedPathName_3_0= ruleURIPathNameCS ) )
            // InternalQVTimperative.g:1617:4: (lv_ownedPathName_3_0= ruleURIPathNameCS )
            {
            // InternalQVTimperative.g:1617:4: (lv_ownedPathName_3_0= ruleURIPathNameCS )
            // InternalQVTimperative.g:1618:5: lv_ownedPathName_3_0= ruleURIPathNameCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getImportCSAccess().getOwnedPathNameURIPathNameCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_37);
            lv_ownedPathName_3_0=ruleURIPathNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getImportCSRule());
              					}
              					set(
              						current,
              						"ownedPathName",
              						lv_ownedPathName_3_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.URIPathNameCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:1635:3: ( ( (lv_isAll_4_0= '::' ) ) otherlv_5= '*' )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==41) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // InternalQVTimperative.g:1636:4: ( (lv_isAll_4_0= '::' ) ) otherlv_5= '*'
                    {
                    // InternalQVTimperative.g:1636:4: ( (lv_isAll_4_0= '::' ) )
                    // InternalQVTimperative.g:1637:5: (lv_isAll_4_0= '::' )
                    {
                    // InternalQVTimperative.g:1637:5: (lv_isAll_4_0= '::' )
                    // InternalQVTimperative.g:1638:6: lv_isAll_4_0= '::'
                    {
                    lv_isAll_4_0=(Token)match(input,41,FollowSets000.FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_isAll_4_0, grammarAccess.getImportCSAccess().getIsAllColonColonKeyword_3_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getImportCSRule());
                      						}
                      						setWithLastConsumed(current, "isAll", lv_isAll_4_0 != null, "::");

                    }

                    }


                    }

                    otherlv_5=(Token)match(input,42,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getImportCSAccess().getAsteriskKeyword_3_1());

                    }

                    }
                    break;

            }

            otherlv_6=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getImportCSAccess().getSemicolonKeyword_4());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImportCS"


    // $ANTLR start "entryRuleLoopParameterBindingCS"
    // InternalQVTimperative.g:1663:1: entryRuleLoopParameterBindingCS returns [EObject current=null] : iv_ruleLoopParameterBindingCS= ruleLoopParameterBindingCS EOF ;
    public final EObject entryRuleLoopParameterBindingCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLoopParameterBindingCS = null;


        try {
            // InternalQVTimperative.g:1663:63: (iv_ruleLoopParameterBindingCS= ruleLoopParameterBindingCS EOF )
            // InternalQVTimperative.g:1664:2: iv_ruleLoopParameterBindingCS= ruleLoopParameterBindingCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLoopParameterBindingCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLoopParameterBindingCS=ruleLoopParameterBindingCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLoopParameterBindingCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLoopParameterBindingCS"


    // $ANTLR start "ruleLoopParameterBindingCS"
    // InternalQVTimperative.g:1670:1: ruleLoopParameterBindingCS returns [EObject current=null] : ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'iterates' ( ( ruleUnrestrictedName ) ) otherlv_4= ';' ) ;
    public final EObject ruleLoopParameterBindingCS() throws RecognitionException {
        EObject current = null;

        Token lv_isCheck_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;


        	enterRule();

        try {
            // InternalQVTimperative.g:1676:2: ( ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'iterates' ( ( ruleUnrestrictedName ) ) otherlv_4= ';' ) )
            // InternalQVTimperative.g:1677:2: ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'iterates' ( ( ruleUnrestrictedName ) ) otherlv_4= ';' )
            {
            // InternalQVTimperative.g:1677:2: ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'iterates' ( ( ruleUnrestrictedName ) ) otherlv_4= ';' )
            // InternalQVTimperative.g:1678:3: ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'iterates' ( ( ruleUnrestrictedName ) ) otherlv_4= ';'
            {
            // InternalQVTimperative.g:1678:3: ( (lv_isCheck_0_0= 'check' ) )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==29) ) {
                int LA36_1 = input.LA(2);

                if ( ((LA36_1>=RULE_SIMPLE_ID && LA36_1<=RULE_ESCAPED_ID)||LA36_1==17||LA36_1==19||(LA36_1>=22 && LA36_1<=23)||(LA36_1>=25 && LA36_1<=26)||(LA36_1>=29 && LA36_1<=34)||LA36_1==39||(LA36_1>=44 && LA36_1<=48)||(LA36_1>=50 && LA36_1<=52)||(LA36_1>=54 && LA36_1<=55)||(LA36_1>=58 && LA36_1<=60)||(LA36_1>=62 && LA36_1<=70)||LA36_1==72||LA36_1==74||LA36_1==76||LA36_1==79||LA36_1==81||LA36_1==83||(LA36_1>=85 && LA36_1<=89)||(LA36_1>=91 && LA36_1<=96)||LA36_1==98||LA36_1==100||(LA36_1>=102 && LA36_1<=105)) ) {
                    alt36=1;
                }
                else if ( (LA36_1==43) ) {
                    int LA36_4 = input.LA(3);

                    if ( (LA36_4==43) ) {
                        int LA36_5 = input.LA(4);

                        if ( ((LA36_5>=RULE_SIMPLE_ID && LA36_5<=RULE_ESCAPED_ID)||LA36_5==17||LA36_5==19||(LA36_5>=22 && LA36_5<=23)||(LA36_5>=25 && LA36_5<=26)||(LA36_5>=29 && LA36_5<=34)||LA36_5==39||(LA36_5>=43 && LA36_5<=48)||(LA36_5>=50 && LA36_5<=52)||(LA36_5>=54 && LA36_5<=55)||(LA36_5>=58 && LA36_5<=60)||(LA36_5>=62 && LA36_5<=70)||LA36_5==72||LA36_5==74||LA36_5==76||LA36_5==79||LA36_5==81||LA36_5==83||(LA36_5>=85 && LA36_5<=89)||(LA36_5>=91 && LA36_5<=96)||LA36_5==98||LA36_5==100||(LA36_5>=102 && LA36_5<=105)) ) {
                            alt36=1;
                        }
                    }
                }
            }
            switch (alt36) {
                case 1 :
                    // InternalQVTimperative.g:1679:4: (lv_isCheck_0_0= 'check' )
                    {
                    // InternalQVTimperative.g:1679:4: (lv_isCheck_0_0= 'check' )
                    // InternalQVTimperative.g:1680:5: lv_isCheck_0_0= 'check'
                    {
                    lv_isCheck_0_0=(Token)match(input,29,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isCheck_0_0, grammarAccess.getLoopParameterBindingCSAccess().getIsCheckCheckKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLoopParameterBindingCSRule());
                      					}
                      					setWithLastConsumed(current, "isCheck", lv_isCheck_0_0 != null, "check");

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:1692:3: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:1693:4: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:1693:4: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:1694:5: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					/* */

            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getLoopParameterBindingCSRule());
              					}

            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLoopParameterBindingCSAccess().getReferredVariableGuardParameterCrossReference_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_39);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_2=(Token)match(input,43,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getLoopParameterBindingCSAccess().getIteratesKeyword_2());

            }
            // InternalQVTimperative.g:1715:3: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:1716:4: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:1716:4: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:1717:5: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					/* */

            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getLoopParameterBindingCSRule());
              					}

            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLoopParameterBindingCSAccess().getValueLoopVariableCrossReference_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_9);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_4=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getLoopParameterBindingCSAccess().getSemicolonKeyword_4());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLoopParameterBindingCS"


    // $ANTLR start "entryRuleMappingCS"
    // InternalQVTimperative.g:1742:1: entryRuleMappingCS returns [EObject current=null] : iv_ruleMappingCS= ruleMappingCS EOF ;
    public final EObject entryRuleMappingCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMappingCS = null;


        try {
            // InternalQVTimperative.g:1742:50: (iv_ruleMappingCS= ruleMappingCS EOF )
            // InternalQVTimperative.g:1743:2: iv_ruleMappingCS= ruleMappingCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMappingCS=ruleMappingCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMappingCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMappingCS"


    // $ANTLR start "ruleMappingCS"
    // InternalQVTimperative.g:1749:1: ruleMappingCS returns [EObject current=null] : ( () ( (lv_isStrict_1_0= 'strict' ) )? otherlv_2= 'map' (otherlv_3= ':' ( (lv_firstPass_4_0= ruleLOWER ) ) (otherlv_5= '..' ( (lv_lastPass_6_0= ruleLOWER ) ) )? )? ( (lv_name_7_0= ruleUnrestrictedName ) ) otherlv_8= '{' ( (lv_ownedParameters_9_0= ruleMappingParameterCS ) )* ( (lv_ownedStatements_10_0= ruleGuardStatementCS ) )* ( (lv_ownedStatements_11_0= ruleCommitStatementCS ) )* ( (lv_ownedStatements_12_0= ruleControlStatementCS ) )* otherlv_13= '}' ) ;
    public final EObject ruleMappingCS() throws RecognitionException {
        EObject current = null;

        Token lv_isStrict_1_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_8=null;
        Token otherlv_13=null;
        AntlrDatatypeRuleToken lv_firstPass_4_0 = null;

        AntlrDatatypeRuleToken lv_lastPass_6_0 = null;

        AntlrDatatypeRuleToken lv_name_7_0 = null;

        EObject lv_ownedParameters_9_0 = null;

        EObject lv_ownedStatements_10_0 = null;

        EObject lv_ownedStatements_11_0 = null;

        EObject lv_ownedStatements_12_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:1755:2: ( ( () ( (lv_isStrict_1_0= 'strict' ) )? otherlv_2= 'map' (otherlv_3= ':' ( (lv_firstPass_4_0= ruleLOWER ) ) (otherlv_5= '..' ( (lv_lastPass_6_0= ruleLOWER ) ) )? )? ( (lv_name_7_0= ruleUnrestrictedName ) ) otherlv_8= '{' ( (lv_ownedParameters_9_0= ruleMappingParameterCS ) )* ( (lv_ownedStatements_10_0= ruleGuardStatementCS ) )* ( (lv_ownedStatements_11_0= ruleCommitStatementCS ) )* ( (lv_ownedStatements_12_0= ruleControlStatementCS ) )* otherlv_13= '}' ) )
            // InternalQVTimperative.g:1756:2: ( () ( (lv_isStrict_1_0= 'strict' ) )? otherlv_2= 'map' (otherlv_3= ':' ( (lv_firstPass_4_0= ruleLOWER ) ) (otherlv_5= '..' ( (lv_lastPass_6_0= ruleLOWER ) ) )? )? ( (lv_name_7_0= ruleUnrestrictedName ) ) otherlv_8= '{' ( (lv_ownedParameters_9_0= ruleMappingParameterCS ) )* ( (lv_ownedStatements_10_0= ruleGuardStatementCS ) )* ( (lv_ownedStatements_11_0= ruleCommitStatementCS ) )* ( (lv_ownedStatements_12_0= ruleControlStatementCS ) )* otherlv_13= '}' )
            {
            // InternalQVTimperative.g:1756:2: ( () ( (lv_isStrict_1_0= 'strict' ) )? otherlv_2= 'map' (otherlv_3= ':' ( (lv_firstPass_4_0= ruleLOWER ) ) (otherlv_5= '..' ( (lv_lastPass_6_0= ruleLOWER ) ) )? )? ( (lv_name_7_0= ruleUnrestrictedName ) ) otherlv_8= '{' ( (lv_ownedParameters_9_0= ruleMappingParameterCS ) )* ( (lv_ownedStatements_10_0= ruleGuardStatementCS ) )* ( (lv_ownedStatements_11_0= ruleCommitStatementCS ) )* ( (lv_ownedStatements_12_0= ruleControlStatementCS ) )* otherlv_13= '}' )
            // InternalQVTimperative.g:1757:3: () ( (lv_isStrict_1_0= 'strict' ) )? otherlv_2= 'map' (otherlv_3= ':' ( (lv_firstPass_4_0= ruleLOWER ) ) (otherlv_5= '..' ( (lv_lastPass_6_0= ruleLOWER ) ) )? )? ( (lv_name_7_0= ruleUnrestrictedName ) ) otherlv_8= '{' ( (lv_ownedParameters_9_0= ruleMappingParameterCS ) )* ( (lv_ownedStatements_10_0= ruleGuardStatementCS ) )* ( (lv_ownedStatements_11_0= ruleCommitStatementCS ) )* ( (lv_ownedStatements_12_0= ruleControlStatementCS ) )* otherlv_13= '}'
            {
            // InternalQVTimperative.g:1757:3: ()
            // InternalQVTimperative.g:1758:4:
            {
            if ( state.backtracking==0 ) {

              				/* */

            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMappingCSAccess().getMappingCSAction_0(),
              					current);

            }

            }

            // InternalQVTimperative.g:1767:3: ( (lv_isStrict_1_0= 'strict' ) )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==25) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // InternalQVTimperative.g:1768:4: (lv_isStrict_1_0= 'strict' )
                    {
                    // InternalQVTimperative.g:1768:4: (lv_isStrict_1_0= 'strict' )
                    // InternalQVTimperative.g:1769:5: lv_isStrict_1_0= 'strict'
                    {
                    lv_isStrict_1_0=(Token)match(input,25,FollowSets000.FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isStrict_1_0, grammarAccess.getMappingCSAccess().getIsStrictStrictKeyword_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getMappingCSRule());
                      					}
                      					setWithLastConsumed(current, "isStrict", lv_isStrict_1_0 != null, "strict");

                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,44,FollowSets000.FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getMappingCSAccess().getMapKeyword_2());

            }
            // InternalQVTimperative.g:1785:3: (otherlv_3= ':' ( (lv_firstPass_4_0= ruleLOWER ) ) (otherlv_5= '..' ( (lv_lastPass_6_0= ruleLOWER ) ) )? )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==24) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalQVTimperative.g:1786:4: otherlv_3= ':' ( (lv_firstPass_4_0= ruleLOWER ) ) (otherlv_5= '..' ( (lv_lastPass_6_0= ruleLOWER ) ) )?
                    {
                    otherlv_3=(Token)match(input,24,FollowSets000.FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getMappingCSAccess().getColonKeyword_3_0());

                    }
                    // InternalQVTimperative.g:1790:4: ( (lv_firstPass_4_0= ruleLOWER ) )
                    // InternalQVTimperative.g:1791:5: (lv_firstPass_4_0= ruleLOWER )
                    {
                    // InternalQVTimperative.g:1791:5: (lv_firstPass_4_0= ruleLOWER )
                    // InternalQVTimperative.g:1792:6: lv_firstPass_4_0= ruleLOWER
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMappingCSAccess().getFirstPassLOWERParserRuleCall_3_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_16);
                    lv_firstPass_4_0=ruleLOWER();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMappingCSRule());
                      						}
                      						set(
                      							current,
                      							"firstPass",
                      							lv_firstPass_4_0,
                      							"org.eclipse.ocl.xtext.base.Base.LOWER");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:1809:4: (otherlv_5= '..' ( (lv_lastPass_6_0= ruleLOWER ) ) )?
                    int alt38=2;
                    int LA38_0 = input.LA(1);

                    if ( (LA38_0==27) ) {
                        alt38=1;
                    }
                    switch (alt38) {
                        case 1 :
                            // InternalQVTimperative.g:1810:5: otherlv_5= '..' ( (lv_lastPass_6_0= ruleLOWER ) )
                            {
                            otherlv_5=(Token)match(input,27,FollowSets000.FOLLOW_15); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_5, grammarAccess.getMappingCSAccess().getFullStopFullStopKeyword_3_2_0());

                            }
                            // InternalQVTimperative.g:1814:5: ( (lv_lastPass_6_0= ruleLOWER ) )
                            // InternalQVTimperative.g:1815:6: (lv_lastPass_6_0= ruleLOWER )
                            {
                            // InternalQVTimperative.g:1815:6: (lv_lastPass_6_0= ruleLOWER )
                            // InternalQVTimperative.g:1816:7: lv_lastPass_6_0= ruleLOWER
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getMappingCSAccess().getLastPassLOWERParserRuleCall_3_2_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_5);
                            lv_lastPass_6_0=ruleLOWER();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getMappingCSRule());
                              							}
                              							set(
                              								current,
                              								"lastPass",
                              								lv_lastPass_6_0,
                              								"org.eclipse.ocl.xtext.base.Base.LOWER");
                              							afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:1835:3: ( (lv_name_7_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:1836:4: (lv_name_7_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:1836:4: (lv_name_7_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:1837:5: lv_name_7_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMappingCSAccess().getNameUnrestrictedNameParserRuleCall_4_0());

            }
            pushFollow(FollowSets000.FOLLOW_41);
            lv_name_7_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMappingCSRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_7_0,
              						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_8=(Token)match(input,35,FollowSets000.FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getMappingCSAccess().getLeftCurlyBracketKeyword_5());

            }
            // InternalQVTimperative.g:1858:3: ( (lv_ownedParameters_9_0= ruleMappingParameterCS ) )*
            loop40:
            do {
                int alt40=2;
                int LA40_0 = input.LA(1);

                if ( (LA40_0==23||LA40_0==38||LA40_0==49) ) {
                    alt40=1;
                }


                switch (alt40) {
            	case 1 :
            	    // InternalQVTimperative.g:1859:4: (lv_ownedParameters_9_0= ruleMappingParameterCS )
            	    {
            	    // InternalQVTimperative.g:1859:4: (lv_ownedParameters_9_0= ruleMappingParameterCS )
            	    // InternalQVTimperative.g:1860:5: lv_ownedParameters_9_0= ruleMappingParameterCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getMappingCSAccess().getOwnedParametersMappingParameterCSParserRuleCall_6_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_30);
            	    lv_ownedParameters_9_0=ruleMappingParameterCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getMappingCSRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ownedParameters",
            	      						lv_ownedParameters_9_0,
            	      						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.MappingParameterCS");
            	      					afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop40;
                }
            } while (true);

            // InternalQVTimperative.g:1877:3: ( (lv_ownedStatements_10_0= ruleGuardStatementCS ) )*
            loop41:
            do {
                int alt41=2;
                alt41 = dfa41.predict(input);
                switch (alt41) {
            	case 1 :
            	    // InternalQVTimperative.g:1878:4: (lv_ownedStatements_10_0= ruleGuardStatementCS )
            	    {
            	    // InternalQVTimperative.g:1878:4: (lv_ownedStatements_10_0= ruleGuardStatementCS )
            	    // InternalQVTimperative.g:1879:5: lv_ownedStatements_10_0= ruleGuardStatementCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getMappingCSAccess().getOwnedStatementsGuardStatementCSParserRuleCall_7_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_31);
            	    lv_ownedStatements_10_0=ruleGuardStatementCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getMappingCSRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ownedStatements",
            	      						lv_ownedStatements_10_0,
            	      						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.GuardStatementCS");
            	      					afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);

            // InternalQVTimperative.g:1896:3: ( (lv_ownedStatements_11_0= ruleCommitStatementCS ) )*
            loop42:
            do {
                int alt42=2;
                alt42 = dfa42.predict(input);
                switch (alt42) {
            	case 1 :
            	    // InternalQVTimperative.g:1897:4: (lv_ownedStatements_11_0= ruleCommitStatementCS )
            	    {
            	    // InternalQVTimperative.g:1897:4: (lv_ownedStatements_11_0= ruleCommitStatementCS )
            	    // InternalQVTimperative.g:1898:5: lv_ownedStatements_11_0= ruleCommitStatementCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getMappingCSAccess().getOwnedStatementsCommitStatementCSParserRuleCall_8_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_32);
            	    lv_ownedStatements_11_0=ruleCommitStatementCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getMappingCSRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ownedStatements",
            	      						lv_ownedStatements_11_0,
            	      						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.CommitStatementCS");
            	      					afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

            // InternalQVTimperative.g:1915:3: ( (lv_ownedStatements_12_0= ruleControlStatementCS ) )*
            loop43:
            do {
                int alt43=2;
                int LA43_0 = input.LA(1);

                if ( (LA43_0==17||LA43_0==19||(LA43_0>=45 && LA43_0<=48)) ) {
                    alt43=1;
                }


                switch (alt43) {
            	case 1 :
            	    // InternalQVTimperative.g:1916:4: (lv_ownedStatements_12_0= ruleControlStatementCS )
            	    {
            	    // InternalQVTimperative.g:1916:4: (lv_ownedStatements_12_0= ruleControlStatementCS )
            	    // InternalQVTimperative.g:1917:5: lv_ownedStatements_12_0= ruleControlStatementCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getMappingCSAccess().getOwnedStatementsControlStatementCSParserRuleCall_9_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_33);
            	    lv_ownedStatements_12_0=ruleControlStatementCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getMappingCSRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ownedStatements",
            	      						lv_ownedStatements_12_0,
            	      						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.ControlStatementCS");
            	      					afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);

            otherlv_13=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_13, grammarAccess.getMappingCSAccess().getRightCurlyBracketKeyword_10());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMappingCS"


    // $ANTLR start "entryRuleMappingCallCS"
    // InternalQVTimperative.g:1942:1: entryRuleMappingCallCS returns [EObject current=null] : iv_ruleMappingCallCS= ruleMappingCallCS EOF ;
    public final EObject entryRuleMappingCallCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMappingCallCS = null;


        try {
            // InternalQVTimperative.g:1942:54: (iv_ruleMappingCallCS= ruleMappingCallCS EOF )
            // InternalQVTimperative.g:1943:2: iv_ruleMappingCallCS= ruleMappingCallCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingCallCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMappingCallCS=ruleMappingCallCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMappingCallCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMappingCallCS"


    // $ANTLR start "ruleMappingCallCS"
    // InternalQVTimperative.g:1949:1: ruleMappingCallCS returns [EObject current=null] : ( () (otherlv_1= 'call' | ( (lv_isInstall_2_0= 'install' ) ) | ( (lv_isInvoke_3_0= 'invoke' ) ) ) ( (lv_ownedPathName_4_0= rulePathNameCS ) ) otherlv_5= '{' ( (lv_ownedBindings_6_0= ruleMappingParameterBindingCS ) )* otherlv_7= '}' ) ;
    public final EObject ruleMappingCallCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_isInstall_2_0=null;
        Token lv_isInvoke_3_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_ownedPathName_4_0 = null;

        EObject lv_ownedBindings_6_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:1955:2: ( ( () (otherlv_1= 'call' | ( (lv_isInstall_2_0= 'install' ) ) | ( (lv_isInvoke_3_0= 'invoke' ) ) ) ( (lv_ownedPathName_4_0= rulePathNameCS ) ) otherlv_5= '{' ( (lv_ownedBindings_6_0= ruleMappingParameterBindingCS ) )* otherlv_7= '}' ) )
            // InternalQVTimperative.g:1956:2: ( () (otherlv_1= 'call' | ( (lv_isInstall_2_0= 'install' ) ) | ( (lv_isInvoke_3_0= 'invoke' ) ) ) ( (lv_ownedPathName_4_0= rulePathNameCS ) ) otherlv_5= '{' ( (lv_ownedBindings_6_0= ruleMappingParameterBindingCS ) )* otherlv_7= '}' )
            {
            // InternalQVTimperative.g:1956:2: ( () (otherlv_1= 'call' | ( (lv_isInstall_2_0= 'install' ) ) | ( (lv_isInvoke_3_0= 'invoke' ) ) ) ( (lv_ownedPathName_4_0= rulePathNameCS ) ) otherlv_5= '{' ( (lv_ownedBindings_6_0= ruleMappingParameterBindingCS ) )* otherlv_7= '}' )
            // InternalQVTimperative.g:1957:3: () (otherlv_1= 'call' | ( (lv_isInstall_2_0= 'install' ) ) | ( (lv_isInvoke_3_0= 'invoke' ) ) ) ( (lv_ownedPathName_4_0= rulePathNameCS ) ) otherlv_5= '{' ( (lv_ownedBindings_6_0= ruleMappingParameterBindingCS ) )* otherlv_7= '}'
            {
            // InternalQVTimperative.g:1957:3: ()
            // InternalQVTimperative.g:1958:4:
            {
            if ( state.backtracking==0 ) {

              				/* */

            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMappingCallCSAccess().getMappingCallCSAction_0(),
              					current);

            }

            }

            // InternalQVTimperative.g:1967:3: (otherlv_1= 'call' | ( (lv_isInstall_2_0= 'install' ) ) | ( (lv_isInvoke_3_0= 'invoke' ) ) )
            int alt44=3;
            switch ( input.LA(1) ) {
            case 45:
                {
                alt44=1;
                }
                break;
            case 46:
                {
                alt44=2;
                }
                break;
            case 47:
                {
                alt44=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;
            }

            switch (alt44) {
                case 1 :
                    // InternalQVTimperative.g:1968:4: otherlv_1= 'call'
                    {
                    otherlv_1=(Token)match(input,45,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getMappingCallCSAccess().getCallKeyword_1_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:1973:4: ( (lv_isInstall_2_0= 'install' ) )
                    {
                    // InternalQVTimperative.g:1973:4: ( (lv_isInstall_2_0= 'install' ) )
                    // InternalQVTimperative.g:1974:5: (lv_isInstall_2_0= 'install' )
                    {
                    // InternalQVTimperative.g:1974:5: (lv_isInstall_2_0= 'install' )
                    // InternalQVTimperative.g:1975:6: lv_isInstall_2_0= 'install'
                    {
                    lv_isInstall_2_0=(Token)match(input,46,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_isInstall_2_0, grammarAccess.getMappingCallCSAccess().getIsInstallInstallKeyword_1_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getMappingCallCSRule());
                      						}
                      						setWithLastConsumed(current, "isInstall", lv_isInstall_2_0 != null, "install");

                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:1988:4: ( (lv_isInvoke_3_0= 'invoke' ) )
                    {
                    // InternalQVTimperative.g:1988:4: ( (lv_isInvoke_3_0= 'invoke' ) )
                    // InternalQVTimperative.g:1989:5: (lv_isInvoke_3_0= 'invoke' )
                    {
                    // InternalQVTimperative.g:1989:5: (lv_isInvoke_3_0= 'invoke' )
                    // InternalQVTimperative.g:1990:6: lv_isInvoke_3_0= 'invoke'
                    {
                    lv_isInvoke_3_0=(Token)match(input,47,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_isInvoke_3_0, grammarAccess.getMappingCallCSAccess().getIsInvokeInvokeKeyword_1_2_0());

                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getMappingCallCSRule());
                      						}
                      						setWithLastConsumed(current, "isInvoke", lv_isInvoke_3_0 != null, "invoke");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:2003:3: ( (lv_ownedPathName_4_0= rulePathNameCS ) )
            // InternalQVTimperative.g:2004:4: (lv_ownedPathName_4_0= rulePathNameCS )
            {
            // InternalQVTimperative.g:2004:4: (lv_ownedPathName_4_0= rulePathNameCS )
            // InternalQVTimperative.g:2005:5: lv_ownedPathName_4_0= rulePathNameCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMappingCallCSAccess().getOwnedPathNamePathNameCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_41);
            lv_ownedPathName_4_0=rulePathNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMappingCallCSRule());
              					}
              					set(
              						current,
              						"ownedPathName",
              						lv_ownedPathName_4_0,
              						"org.eclipse.ocl.xtext.base.Base.PathNameCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_5=(Token)match(input,35,FollowSets000.FOLLOW_42); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getMappingCallCSAccess().getLeftCurlyBracketKeyword_3());

            }
            // InternalQVTimperative.g:2026:3: ( (lv_ownedBindings_6_0= ruleMappingParameterBindingCS ) )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( ((LA45_0>=RULE_SIMPLE_ID && LA45_0<=RULE_ESCAPED_ID)||LA45_0==17||LA45_0==19||(LA45_0>=22 && LA45_0<=23)||(LA45_0>=25 && LA45_0<=26)||(LA45_0>=29 && LA45_0<=34)||LA45_0==39||(LA45_0>=43 && LA45_0<=48)||(LA45_0>=50 && LA45_0<=52)||(LA45_0>=54 && LA45_0<=55)||(LA45_0>=58 && LA45_0<=60)||(LA45_0>=62 && LA45_0<=70)||LA45_0==72||LA45_0==74||LA45_0==76||LA45_0==79||LA45_0==81||LA45_0==83||(LA45_0>=85 && LA45_0<=89)||(LA45_0>=91 && LA45_0<=96)||LA45_0==98||LA45_0==100||(LA45_0>=102 && LA45_0<=105)) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // InternalQVTimperative.g:2027:4: (lv_ownedBindings_6_0= ruleMappingParameterBindingCS )
            	    {
            	    // InternalQVTimperative.g:2027:4: (lv_ownedBindings_6_0= ruleMappingParameterBindingCS )
            	    // InternalQVTimperative.g:2028:5: lv_ownedBindings_6_0= ruleMappingParameterBindingCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getMappingCallCSAccess().getOwnedBindingsMappingParameterBindingCSParserRuleCall_4_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_42);
            	    lv_ownedBindings_6_0=ruleMappingParameterBindingCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getMappingCallCSRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ownedBindings",
            	      						lv_ownedBindings_6_0,
            	      						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.MappingParameterBindingCS");
            	      					afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);

            otherlv_7=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getMappingCallCSAccess().getRightCurlyBracketKeyword_5());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMappingCallCS"


    // $ANTLR start "entryRuleMappingLoopCS"
    // InternalQVTimperative.g:2053:1: entryRuleMappingLoopCS returns [EObject current=null] : iv_ruleMappingLoopCS= ruleMappingLoopCS EOF ;
    public final EObject entryRuleMappingLoopCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMappingLoopCS = null;


        try {
            // InternalQVTimperative.g:2053:54: (iv_ruleMappingLoopCS= ruleMappingLoopCS EOF )
            // InternalQVTimperative.g:2054:2: iv_ruleMappingLoopCS= ruleMappingLoopCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingLoopCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMappingLoopCS=ruleMappingLoopCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMappingLoopCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMappingLoopCS"


    // $ANTLR start "ruleMappingLoopCS"
    // InternalQVTimperative.g:2060:1: ruleMappingLoopCS returns [EObject current=null] : ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'for' ( (lv_ownedIterator_5_0= ruleMappingIteratorCS ) ) otherlv_6= 'in' ( (lv_ownedInExpression_7_0= ruleExpCS ) ) otherlv_8= '{' ( (lv_ownedMappingStatements_9_0= ruleControlStatementCS ) )+ otherlv_10= '}' ) ;
    public final EObject ruleMappingLoopCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        EObject lv_observedProperties_1_0 = null;

        EObject lv_observedProperties_3_0 = null;

        EObject lv_ownedIterator_5_0 = null;

        EObject lv_ownedInExpression_7_0 = null;

        EObject lv_ownedMappingStatements_9_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:2066:2: ( ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'for' ( (lv_ownedIterator_5_0= ruleMappingIteratorCS ) ) otherlv_6= 'in' ( (lv_ownedInExpression_7_0= ruleExpCS ) ) otherlv_8= '{' ( (lv_ownedMappingStatements_9_0= ruleControlStatementCS ) )+ otherlv_10= '}' ) )
            // InternalQVTimperative.g:2067:2: ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'for' ( (lv_ownedIterator_5_0= ruleMappingIteratorCS ) ) otherlv_6= 'in' ( (lv_ownedInExpression_7_0= ruleExpCS ) ) otherlv_8= '{' ( (lv_ownedMappingStatements_9_0= ruleControlStatementCS ) )+ otherlv_10= '}' )
            {
            // InternalQVTimperative.g:2067:2: ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'for' ( (lv_ownedIterator_5_0= ruleMappingIteratorCS ) ) otherlv_6= 'in' ( (lv_ownedInExpression_7_0= ruleExpCS ) ) otherlv_8= '{' ( (lv_ownedMappingStatements_9_0= ruleControlStatementCS ) )+ otherlv_10= '}' )
            // InternalQVTimperative.g:2068:3: (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'for' ( (lv_ownedIterator_5_0= ruleMappingIteratorCS ) ) otherlv_6= 'in' ( (lv_ownedInExpression_7_0= ruleExpCS ) ) otherlv_8= '{' ( (lv_ownedMappingStatements_9_0= ruleControlStatementCS ) )+ otherlv_10= '}'
            {
            // InternalQVTimperative.g:2068:3: (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==17) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalQVTimperative.g:2069:4: otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )*
                    {
                    otherlv_0=(Token)match(input,17,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getMappingLoopCSAccess().getObserveKeyword_0_0());

                    }
                    // InternalQVTimperative.g:2073:4: ( (lv_observedProperties_1_0= rulePathNameCS ) )
                    // InternalQVTimperative.g:2074:5: (lv_observedProperties_1_0= rulePathNameCS )
                    {
                    // InternalQVTimperative.g:2074:5: (lv_observedProperties_1_0= rulePathNameCS )
                    // InternalQVTimperative.g:2075:6: lv_observedProperties_1_0= rulePathNameCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMappingLoopCSAccess().getObservedPropertiesPathNameCSParserRuleCall_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_43);
                    lv_observedProperties_1_0=rulePathNameCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMappingLoopCSRule());
                      						}
                      						add(
                      							current,
                      							"observedProperties",
                      							lv_observedProperties_1_0,
                      							"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:2092:4: (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )*
                    loop46:
                    do {
                        int alt46=2;
                        int LA46_0 = input.LA(1);

                        if ( (LA46_0==18) ) {
                            alt46=1;
                        }


                        switch (alt46) {
                    	case 1 :
                    	    // InternalQVTimperative.g:2093:5: otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) )
                    	    {
                    	    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_2, grammarAccess.getMappingLoopCSAccess().getCommaKeyword_0_2_0());

                    	    }
                    	    // InternalQVTimperative.g:2097:5: ( (lv_observedProperties_3_0= rulePathNameCS ) )
                    	    // InternalQVTimperative.g:2098:6: (lv_observedProperties_3_0= rulePathNameCS )
                    	    {
                    	    // InternalQVTimperative.g:2098:6: (lv_observedProperties_3_0= rulePathNameCS )
                    	    // InternalQVTimperative.g:2099:7: lv_observedProperties_3_0= rulePathNameCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMappingLoopCSAccess().getObservedPropertiesPathNameCSParserRuleCall_0_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_43);
                    	    lv_observedProperties_3_0=rulePathNameCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMappingLoopCSRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"observedProperties",
                    	      								lv_observedProperties_3_0,
                    	      								"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                    	      							afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop46;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_4=(Token)match(input,48,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getMappingLoopCSAccess().getForKeyword_1());

            }
            // InternalQVTimperative.g:2122:3: ( (lv_ownedIterator_5_0= ruleMappingIteratorCS ) )
            // InternalQVTimperative.g:2123:4: (lv_ownedIterator_5_0= ruleMappingIteratorCS )
            {
            // InternalQVTimperative.g:2123:4: (lv_ownedIterator_5_0= ruleMappingIteratorCS )
            // InternalQVTimperative.g:2124:5: lv_ownedIterator_5_0= ruleMappingIteratorCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMappingLoopCSAccess().getOwnedIteratorMappingIteratorCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_44);
            lv_ownedIterator_5_0=ruleMappingIteratorCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMappingLoopCSRule());
              					}
              					set(
              						current,
              						"ownedIterator",
              						lv_ownedIterator_5_0,
              						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.MappingIteratorCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_6=(Token)match(input,49,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getMappingLoopCSAccess().getInKeyword_3());

            }
            // InternalQVTimperative.g:2145:3: ( (lv_ownedInExpression_7_0= ruleExpCS ) )
            // InternalQVTimperative.g:2146:4: (lv_ownedInExpression_7_0= ruleExpCS )
            {
            // InternalQVTimperative.g:2146:4: (lv_ownedInExpression_7_0= ruleExpCS )
            // InternalQVTimperative.g:2147:5: lv_ownedInExpression_7_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMappingLoopCSAccess().getOwnedInExpressionExpCSParserRuleCall_4_0());

            }
            pushFollow(FollowSets000.FOLLOW_41);
            lv_ownedInExpression_7_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMappingLoopCSRule());
              					}
              					set(
              						current,
              						"ownedInExpression",
              						lv_ownedInExpression_7_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_8=(Token)match(input,35,FollowSets000.FOLLOW_45); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getMappingLoopCSAccess().getLeftCurlyBracketKeyword_5());

            }
            // InternalQVTimperative.g:2168:3: ( (lv_ownedMappingStatements_9_0= ruleControlStatementCS ) )+
            int cnt48=0;
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==17||LA48_0==19||(LA48_0>=45 && LA48_0<=48)) ) {
                    alt48=1;
                }


                switch (alt48) {
            	case 1 :
            	    // InternalQVTimperative.g:2169:4: (lv_ownedMappingStatements_9_0= ruleControlStatementCS )
            	    {
            	    // InternalQVTimperative.g:2169:4: (lv_ownedMappingStatements_9_0= ruleControlStatementCS )
            	    // InternalQVTimperative.g:2170:5: lv_ownedMappingStatements_9_0= ruleControlStatementCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getMappingLoopCSAccess().getOwnedMappingStatementsControlStatementCSParserRuleCall_6_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_33);
            	    lv_ownedMappingStatements_9_0=ruleControlStatementCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getMappingLoopCSRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ownedMappingStatements",
            	      						lv_ownedMappingStatements_9_0,
            	      						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.ControlStatementCS");
            	      					afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt48 >= 1 ) break loop48;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(48, input);
                        throw eee;
                }
                cnt48++;
            } while (true);

            otherlv_10=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getMappingLoopCSAccess().getRightCurlyBracketKeyword_7());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMappingLoopCS"


    // $ANTLR start "entryRuleMappingIteratorCS"
    // InternalQVTimperative.g:2195:1: entryRuleMappingIteratorCS returns [EObject current=null] : iv_ruleMappingIteratorCS= ruleMappingIteratorCS EOF ;
    public final EObject entryRuleMappingIteratorCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMappingIteratorCS = null;


        try {
            // InternalQVTimperative.g:2195:58: (iv_ruleMappingIteratorCS= ruleMappingIteratorCS EOF )
            // InternalQVTimperative.g:2196:2: iv_ruleMappingIteratorCS= ruleMappingIteratorCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingIteratorCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMappingIteratorCS=ruleMappingIteratorCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMappingIteratorCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMappingIteratorCS"


    // $ANTLR start "ruleMappingIteratorCS"
    // InternalQVTimperative.g:2202:1: ruleMappingIteratorCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? ) ;
    public final EObject ruleMappingIteratorCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedType_2_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:2208:2: ( ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? ) )
            // InternalQVTimperative.g:2209:2: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? )
            {
            // InternalQVTimperative.g:2209:2: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? )
            // InternalQVTimperative.g:2210:3: ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )?
            {
            // InternalQVTimperative.g:2210:3: ( (lv_name_0_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:2211:4: (lv_name_0_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:2211:4: (lv_name_0_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:2212:5: lv_name_0_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMappingIteratorCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_46);
            lv_name_0_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMappingIteratorCSRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:2229:3: (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==24) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // InternalQVTimperative.g:2230:4: otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) )
                    {
                    otherlv_1=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getMappingIteratorCSAccess().getColonKeyword_1_0());

                    }
                    // InternalQVTimperative.g:2234:4: ( (lv_ownedType_2_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:2235:5: (lv_ownedType_2_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:2235:5: (lv_ownedType_2_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:2236:6: lv_ownedType_2_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMappingIteratorCSAccess().getOwnedTypeTypeExpCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedType_2_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMappingIteratorCSRule());
                      						}
                      						set(
                      							current,
                      							"ownedType",
                      							lv_ownedType_2_0,
                      							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMappingIteratorCS"


    // $ANTLR start "entryRuleMappingParameterBindingCS"
    // InternalQVTimperative.g:2258:1: entryRuleMappingParameterBindingCS returns [EObject current=null] : iv_ruleMappingParameterBindingCS= ruleMappingParameterBindingCS EOF ;
    public final EObject entryRuleMappingParameterBindingCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMappingParameterBindingCS = null;


        try {
            // InternalQVTimperative.g:2258:66: (iv_ruleMappingParameterBindingCS= ruleMappingParameterBindingCS EOF )
            // InternalQVTimperative.g:2259:2: iv_ruleMappingParameterBindingCS= ruleMappingParameterBindingCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingParameterBindingCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMappingParameterBindingCS=ruleMappingParameterBindingCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMappingParameterBindingCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMappingParameterBindingCS"


    // $ANTLR start "ruleMappingParameterBindingCS"
    // InternalQVTimperative.g:2265:1: ruleMappingParameterBindingCS returns [EObject current=null] : (this_AppendParameterBindingCS_0= ruleAppendParameterBindingCS | this_GuardParameterBindingCS_1= ruleGuardParameterBindingCS | this_LoopParameterBindingCS_2= ruleLoopParameterBindingCS | this_SimpleParameterBindingCS_3= ruleSimpleParameterBindingCS ) ;
    public final EObject ruleMappingParameterBindingCS() throws RecognitionException {
        EObject current = null;

        EObject this_AppendParameterBindingCS_0 = null;

        EObject this_GuardParameterBindingCS_1 = null;

        EObject this_LoopParameterBindingCS_2 = null;

        EObject this_SimpleParameterBindingCS_3 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:2271:2: ( (this_AppendParameterBindingCS_0= ruleAppendParameterBindingCS | this_GuardParameterBindingCS_1= ruleGuardParameterBindingCS | this_LoopParameterBindingCS_2= ruleLoopParameterBindingCS | this_SimpleParameterBindingCS_3= ruleSimpleParameterBindingCS ) )
            // InternalQVTimperative.g:2272:2: (this_AppendParameterBindingCS_0= ruleAppendParameterBindingCS | this_GuardParameterBindingCS_1= ruleGuardParameterBindingCS | this_LoopParameterBindingCS_2= ruleLoopParameterBindingCS | this_SimpleParameterBindingCS_3= ruleSimpleParameterBindingCS )
            {
            // InternalQVTimperative.g:2272:2: (this_AppendParameterBindingCS_0= ruleAppendParameterBindingCS | this_GuardParameterBindingCS_1= ruleGuardParameterBindingCS | this_LoopParameterBindingCS_2= ruleLoopParameterBindingCS | this_SimpleParameterBindingCS_3= ruleSimpleParameterBindingCS )
            int alt50=4;
            alt50 = dfa50.predict(input);
            switch (alt50) {
                case 1 :
                    // InternalQVTimperative.g:2273:3: this_AppendParameterBindingCS_0= ruleAppendParameterBindingCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getMappingParameterBindingCSAccess().getAppendParameterBindingCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AppendParameterBindingCS_0=ruleAppendParameterBindingCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AppendParameterBindingCS_0;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:2285:3: this_GuardParameterBindingCS_1= ruleGuardParameterBindingCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getMappingParameterBindingCSAccess().getGuardParameterBindingCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_GuardParameterBindingCS_1=ruleGuardParameterBindingCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_GuardParameterBindingCS_1;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:2297:3: this_LoopParameterBindingCS_2= ruleLoopParameterBindingCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getMappingParameterBindingCSAccess().getLoopParameterBindingCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_LoopParameterBindingCS_2=ruleLoopParameterBindingCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LoopParameterBindingCS_2;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:2309:3: this_SimpleParameterBindingCS_3= ruleSimpleParameterBindingCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getMappingParameterBindingCSAccess().getSimpleParameterBindingCSParserRuleCall_3());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SimpleParameterBindingCS_3=ruleSimpleParameterBindingCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SimpleParameterBindingCS_3;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMappingParameterBindingCS"


    // $ANTLR start "entryRuleMappingParameterCS"
    // InternalQVTimperative.g:2324:1: entryRuleMappingParameterCS returns [EObject current=null] : iv_ruleMappingParameterCS= ruleMappingParameterCS EOF ;
    public final EObject entryRuleMappingParameterCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMappingParameterCS = null;


        try {
            // InternalQVTimperative.g:2324:59: (iv_ruleMappingParameterCS= ruleMappingParameterCS EOF )
            // InternalQVTimperative.g:2325:2: iv_ruleMappingParameterCS= ruleMappingParameterCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingParameterCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMappingParameterCS=ruleMappingParameterCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMappingParameterCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMappingParameterCS"


    // $ANTLR start "ruleMappingParameterCS"
    // InternalQVTimperative.g:2331:1: ruleMappingParameterCS returns [EObject current=null] : (this_AppendParameterCS_0= ruleAppendParameterCS | this_GuardParameterCS_1= ruleGuardParameterCS | this_SimpleParameterCS_2= ruleSimpleParameterCS ) ;
    public final EObject ruleMappingParameterCS() throws RecognitionException {
        EObject current = null;

        EObject this_AppendParameterCS_0 = null;

        EObject this_GuardParameterCS_1 = null;

        EObject this_SimpleParameterCS_2 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:2337:2: ( (this_AppendParameterCS_0= ruleAppendParameterCS | this_GuardParameterCS_1= ruleGuardParameterCS | this_SimpleParameterCS_2= ruleSimpleParameterCS ) )
            // InternalQVTimperative.g:2338:2: (this_AppendParameterCS_0= ruleAppendParameterCS | this_GuardParameterCS_1= ruleGuardParameterCS | this_SimpleParameterCS_2= ruleSimpleParameterCS )
            {
            // InternalQVTimperative.g:2338:2: (this_AppendParameterCS_0= ruleAppendParameterCS | this_GuardParameterCS_1= ruleGuardParameterCS | this_SimpleParameterCS_2= ruleSimpleParameterCS )
            int alt51=3;
            switch ( input.LA(1) ) {
            case 23:
                {
                alt51=1;
                }
                break;
            case 38:
                {
                alt51=2;
                }
                break;
            case 49:
                {
                alt51=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 51, 0, input);

                throw nvae;
            }

            switch (alt51) {
                case 1 :
                    // InternalQVTimperative.g:2339:3: this_AppendParameterCS_0= ruleAppendParameterCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getMappingParameterCSAccess().getAppendParameterCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AppendParameterCS_0=ruleAppendParameterCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AppendParameterCS_0;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:2351:3: this_GuardParameterCS_1= ruleGuardParameterCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getMappingParameterCSAccess().getGuardParameterCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_GuardParameterCS_1=ruleGuardParameterCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_GuardParameterCS_1;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:2363:3: this_SimpleParameterCS_2= ruleSimpleParameterCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getMappingParameterCSAccess().getSimpleParameterCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SimpleParameterCS_2=ruleSimpleParameterCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SimpleParameterCS_2;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMappingParameterCS"


    // $ANTLR start "entryRuleNewStatementCS"
    // InternalQVTimperative.g:2378:1: entryRuleNewStatementCS returns [EObject current=null] : iv_ruleNewStatementCS= ruleNewStatementCS EOF ;
    public final EObject entryRuleNewStatementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNewStatementCS = null;


        try {
            // InternalQVTimperative.g:2378:55: (iv_ruleNewStatementCS= ruleNewStatementCS EOF )
            // InternalQVTimperative.g:2379:2: iv_ruleNewStatementCS= ruleNewStatementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNewStatementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNewStatementCS=ruleNewStatementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNewStatementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNewStatementCS"


    // $ANTLR start "ruleNewStatementCS"
    // InternalQVTimperative.g:2385:1: ruleNewStatementCS returns [EObject current=null] : ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isContained_4_0= 'contained' ) )? otherlv_5= 'new' otherlv_6= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_8_0= ruleUnrestrictedName ) ) otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypeExpCS ) ) (otherlv_11= ':=' ( (lv_ownedExpression_12_0= ruleExpCS ) ) )? otherlv_13= ';' ) ;
    public final EObject ruleNewStatementCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token lv_isContained_4_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_observedProperties_1_0 = null;

        EObject lv_observedProperties_3_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_ownedType_10_0 = null;

        EObject lv_ownedExpression_12_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:2391:2: ( ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isContained_4_0= 'contained' ) )? otherlv_5= 'new' otherlv_6= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_8_0= ruleUnrestrictedName ) ) otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypeExpCS ) ) (otherlv_11= ':=' ( (lv_ownedExpression_12_0= ruleExpCS ) ) )? otherlv_13= ';' ) )
            // InternalQVTimperative.g:2392:2: ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isContained_4_0= 'contained' ) )? otherlv_5= 'new' otherlv_6= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_8_0= ruleUnrestrictedName ) ) otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypeExpCS ) ) (otherlv_11= ':=' ( (lv_ownedExpression_12_0= ruleExpCS ) ) )? otherlv_13= ';' )
            {
            // InternalQVTimperative.g:2392:2: ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isContained_4_0= 'contained' ) )? otherlv_5= 'new' otherlv_6= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_8_0= ruleUnrestrictedName ) ) otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypeExpCS ) ) (otherlv_11= ':=' ( (lv_ownedExpression_12_0= ruleExpCS ) ) )? otherlv_13= ';' )
            // InternalQVTimperative.g:2393:3: (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isContained_4_0= 'contained' ) )? otherlv_5= 'new' otherlv_6= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_8_0= ruleUnrestrictedName ) ) otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypeExpCS ) ) (otherlv_11= ':=' ( (lv_ownedExpression_12_0= ruleExpCS ) ) )? otherlv_13= ';'
            {
            // InternalQVTimperative.g:2393:3: (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==17) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalQVTimperative.g:2394:4: otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )*
                    {
                    otherlv_0=(Token)match(input,17,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getNewStatementCSAccess().getObserveKeyword_0_0());

                    }
                    // InternalQVTimperative.g:2398:4: ( (lv_observedProperties_1_0= rulePathNameCS ) )
                    // InternalQVTimperative.g:2399:5: (lv_observedProperties_1_0= rulePathNameCS )
                    {
                    // InternalQVTimperative.g:2399:5: (lv_observedProperties_1_0= rulePathNameCS )
                    // InternalQVTimperative.g:2400:6: lv_observedProperties_1_0= rulePathNameCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNewStatementCSAccess().getObservedPropertiesPathNameCSParserRuleCall_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_47);
                    lv_observedProperties_1_0=rulePathNameCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNewStatementCSRule());
                      						}
                      						add(
                      							current,
                      							"observedProperties",
                      							lv_observedProperties_1_0,
                      							"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:2417:4: (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )*
                    loop52:
                    do {
                        int alt52=2;
                        int LA52_0 = input.LA(1);

                        if ( (LA52_0==18) ) {
                            alt52=1;
                        }


                        switch (alt52) {
                    	case 1 :
                    	    // InternalQVTimperative.g:2418:5: otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) )
                    	    {
                    	    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_2, grammarAccess.getNewStatementCSAccess().getCommaKeyword_0_2_0());

                    	    }
                    	    // InternalQVTimperative.g:2422:5: ( (lv_observedProperties_3_0= rulePathNameCS ) )
                    	    // InternalQVTimperative.g:2423:6: (lv_observedProperties_3_0= rulePathNameCS )
                    	    {
                    	    // InternalQVTimperative.g:2423:6: (lv_observedProperties_3_0= rulePathNameCS )
                    	    // InternalQVTimperative.g:2424:7: lv_observedProperties_3_0= rulePathNameCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getNewStatementCSAccess().getObservedPropertiesPathNameCSParserRuleCall_0_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_47);
                    	    lv_observedProperties_3_0=rulePathNameCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getNewStatementCSRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"observedProperties",
                    	      								lv_observedProperties_3_0,
                    	      								"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                    	      							afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop52;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalQVTimperative.g:2443:3: ( (lv_isContained_4_0= 'contained' ) )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==50) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalQVTimperative.g:2444:4: (lv_isContained_4_0= 'contained' )
                    {
                    // InternalQVTimperative.g:2444:4: (lv_isContained_4_0= 'contained' )
                    // InternalQVTimperative.g:2445:5: lv_isContained_4_0= 'contained'
                    {
                    lv_isContained_4_0=(Token)match(input,50,FollowSets000.FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isContained_4_0, grammarAccess.getNewStatementCSAccess().getIsContainedContainedKeyword_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getNewStatementCSRule());
                      					}
                      					setWithLastConsumed(current, "isContained", lv_isContained_4_0 != null, "contained");

                    }

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,51,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getNewStatementCSAccess().getNewKeyword_2());

            }
            otherlv_6=(Token)match(input,24,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getNewStatementCSAccess().getColonKeyword_3());

            }
            // InternalQVTimperative.g:2465:3: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:2466:4: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:2466:4: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:2467:5: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					/* */

            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getNewStatementCSRule());
              					}

            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNewStatementCSAccess().getReferredTypedModelTypedModelCrossReference_4_0());

            }
            pushFollow(FollowSets000.FOLLOW_5);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:2484:3: ( (lv_name_8_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:2485:4: (lv_name_8_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:2485:4: (lv_name_8_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:2486:5: lv_name_8_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNewStatementCSAccess().getNameUnrestrictedNameParserRuleCall_5_0());

            }
            pushFollow(FollowSets000.FOLLOW_11);
            lv_name_8_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNewStatementCSRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_8_0,
              						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_9=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getNewStatementCSAccess().getColonKeyword_6());

            }
            // InternalQVTimperative.g:2507:3: ( (lv_ownedType_10_0= ruleTypeExpCS ) )
            // InternalQVTimperative.g:2508:4: (lv_ownedType_10_0= ruleTypeExpCS )
            {
            // InternalQVTimperative.g:2508:4: (lv_ownedType_10_0= ruleTypeExpCS )
            // InternalQVTimperative.g:2509:5: lv_ownedType_10_0= ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNewStatementCSAccess().getOwnedTypeTypeExpCSParserRuleCall_7_0());

            }
            pushFollow(FollowSets000.FOLLOW_18);
            lv_ownedType_10_0=ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNewStatementCSRule());
              					}
              					set(
              						current,
              						"ownedType",
              						lv_ownedType_10_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:2526:3: (otherlv_11= ':=' ( (lv_ownedExpression_12_0= ruleExpCS ) ) )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==28) ) {
                alt55=1;
            }
            switch (alt55) {
                case 1 :
                    // InternalQVTimperative.g:2527:4: otherlv_11= ':=' ( (lv_ownedExpression_12_0= ruleExpCS ) )
                    {
                    otherlv_11=(Token)match(input,28,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getNewStatementCSAccess().getColonEqualsSignKeyword_8_0());

                    }
                    // InternalQVTimperative.g:2531:4: ( (lv_ownedExpression_12_0= ruleExpCS ) )
                    // InternalQVTimperative.g:2532:5: (lv_ownedExpression_12_0= ruleExpCS )
                    {
                    // InternalQVTimperative.g:2532:5: (lv_ownedExpression_12_0= ruleExpCS )
                    // InternalQVTimperative.g:2533:6: lv_ownedExpression_12_0= ruleExpCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNewStatementCSAccess().getOwnedExpressionExpCSParserRuleCall_8_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_ownedExpression_12_0=ruleExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNewStatementCSRule());
                      						}
                      						set(
                      							current,
                      							"ownedExpression",
                      							lv_ownedExpression_12_0,
                      							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_13=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_13, grammarAccess.getNewStatementCSAccess().getSemicolonKeyword_9());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNewStatementCS"


    // $ANTLR start "entryRuleParamDeclarationCS"
    // InternalQVTimperative.g:2559:1: entryRuleParamDeclarationCS returns [EObject current=null] : iv_ruleParamDeclarationCS= ruleParamDeclarationCS EOF ;
    public final EObject entryRuleParamDeclarationCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParamDeclarationCS = null;


        try {
            // InternalQVTimperative.g:2559:59: (iv_ruleParamDeclarationCS= ruleParamDeclarationCS EOF )
            // InternalQVTimperative.g:2560:2: iv_ruleParamDeclarationCS= ruleParamDeclarationCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParamDeclarationCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleParamDeclarationCS=ruleParamDeclarationCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParamDeclarationCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParamDeclarationCS"


    // $ANTLR start "ruleParamDeclarationCS"
    // InternalQVTimperative.g:2566:1: ruleParamDeclarationCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) ) ;
    public final EObject ruleParamDeclarationCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedType_2_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:2572:2: ( ( ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) ) )
            // InternalQVTimperative.g:2573:2: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )
            {
            // InternalQVTimperative.g:2573:2: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )
            // InternalQVTimperative.g:2574:3: ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) )
            {
            // InternalQVTimperative.g:2574:3: ( (lv_name_0_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:2575:4: (lv_name_0_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:2575:4: (lv_name_0_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:2576:5: lv_name_0_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getParamDeclarationCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_11);
            lv_name_0_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getParamDeclarationCSRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_1=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getParamDeclarationCSAccess().getColonKeyword_1());

            }
            // InternalQVTimperative.g:2597:3: ( (lv_ownedType_2_0= ruleTypeExpCS ) )
            // InternalQVTimperative.g:2598:4: (lv_ownedType_2_0= ruleTypeExpCS )
            {
            // InternalQVTimperative.g:2598:4: (lv_ownedType_2_0= ruleTypeExpCS )
            // InternalQVTimperative.g:2599:5: lv_ownedType_2_0= ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getParamDeclarationCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedType_2_0=ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getParamDeclarationCSRule());
              					}
              					set(
              						current,
              						"ownedType",
              						lv_ownedType_2_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParamDeclarationCS"


    // $ANTLR start "entryRuleQualifiedPackageCS"
    // InternalQVTimperative.g:2620:1: entryRuleQualifiedPackageCS returns [EObject current=null] : iv_ruleQualifiedPackageCS= ruleQualifiedPackageCS EOF ;
    public final EObject entryRuleQualifiedPackageCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQualifiedPackageCS = null;


        try {
            // InternalQVTimperative.g:2620:59: (iv_ruleQualifiedPackageCS= ruleQualifiedPackageCS EOF )
            // InternalQVTimperative.g:2621:2: iv_ruleQualifiedPackageCS= ruleQualifiedPackageCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedPackageCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQualifiedPackageCS=ruleQualifiedPackageCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedPackageCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedPackageCS"


    // $ANTLR start "ruleQualifiedPackageCS"
    // InternalQVTimperative.g:2627:1: ruleQualifiedPackageCS returns [EObject current=null] : (otherlv_0= 'package' ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )? ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= ':' ( (lv_nsPrefix_4_0= ruleUnrestrictedName ) ) )? (otherlv_5= '=' ( (lv_nsURI_6_0= ruleURI ) ) )? ( (otherlv_7= '{' ( ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) ) | ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) ) )* otherlv_10= '}' ) | otherlv_11= ';' ) ) ;
    public final EObject ruleQualifiedPackageCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        EObject lv_ownedPathName_1_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        AntlrDatatypeRuleToken lv_nsPrefix_4_0 = null;

        AntlrDatatypeRuleToken lv_nsURI_6_0 = null;

        EObject lv_ownedPackages_8_0 = null;

        EObject lv_ownedClasses_9_1 = null;

        EObject lv_ownedClasses_9_2 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:2633:2: ( (otherlv_0= 'package' ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )? ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= ':' ( (lv_nsPrefix_4_0= ruleUnrestrictedName ) ) )? (otherlv_5= '=' ( (lv_nsURI_6_0= ruleURI ) ) )? ( (otherlv_7= '{' ( ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) ) | ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) ) )* otherlv_10= '}' ) | otherlv_11= ';' ) ) )
            // InternalQVTimperative.g:2634:2: (otherlv_0= 'package' ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )? ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= ':' ( (lv_nsPrefix_4_0= ruleUnrestrictedName ) ) )? (otherlv_5= '=' ( (lv_nsURI_6_0= ruleURI ) ) )? ( (otherlv_7= '{' ( ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) ) | ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) ) )* otherlv_10= '}' ) | otherlv_11= ';' ) )
            {
            // InternalQVTimperative.g:2634:2: (otherlv_0= 'package' ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )? ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= ':' ( (lv_nsPrefix_4_0= ruleUnrestrictedName ) ) )? (otherlv_5= '=' ( (lv_nsURI_6_0= ruleURI ) ) )? ( (otherlv_7= '{' ( ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) ) | ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) ) )* otherlv_10= '}' ) | otherlv_11= ';' ) )
            // InternalQVTimperative.g:2635:3: otherlv_0= 'package' ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )? ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= ':' ( (lv_nsPrefix_4_0= ruleUnrestrictedName ) ) )? (otherlv_5= '=' ( (lv_nsURI_6_0= ruleURI ) ) )? ( (otherlv_7= '{' ( ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) ) | ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) ) )* otherlv_10= '}' ) | otherlv_11= ';' )
            {
            otherlv_0=(Token)match(input,52,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getQualifiedPackageCSAccess().getPackageKeyword_0());

            }
            // InternalQVTimperative.g:2639:3: ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )?
            int alt56=2;
            alt56 = dfa56.predict(input);
            switch (alt56) {
                case 1 :
                    // InternalQVTimperative.g:2640:4: (lv_ownedPathName_1_0= ruleScopeNameCS )
                    {
                    // InternalQVTimperative.g:2640:4: (lv_ownedPathName_1_0= ruleScopeNameCS )
                    // InternalQVTimperative.g:2641:5: lv_ownedPathName_1_0= ruleScopeNameCS
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getQualifiedPackageCSAccess().getOwnedPathNameScopeNameCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_5);
                    lv_ownedPathName_1_0=ruleScopeNameCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getQualifiedPackageCSRule());
                      					}
                      					set(
                      						current,
                      						"ownedPathName",
                      						lv_ownedPathName_1_0,
                      						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.ScopeNameCS");
                      					afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:2658:3: ( (lv_name_2_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:2659:4: (lv_name_2_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:2659:4: (lv_name_2_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:2660:5: lv_name_2_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQualifiedPackageCSAccess().getNameUnrestrictedNameParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_49);
            lv_name_2_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQualifiedPackageCSRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:2677:3: (otherlv_3= ':' ( (lv_nsPrefix_4_0= ruleUnrestrictedName ) ) )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==24) ) {
                alt57=1;
            }
            switch (alt57) {
                case 1 :
                    // InternalQVTimperative.g:2678:4: otherlv_3= ':' ( (lv_nsPrefix_4_0= ruleUnrestrictedName ) )
                    {
                    otherlv_3=(Token)match(input,24,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getQualifiedPackageCSAccess().getColonKeyword_3_0());

                    }
                    // InternalQVTimperative.g:2682:4: ( (lv_nsPrefix_4_0= ruleUnrestrictedName ) )
                    // InternalQVTimperative.g:2683:5: (lv_nsPrefix_4_0= ruleUnrestrictedName )
                    {
                    // InternalQVTimperative.g:2683:5: (lv_nsPrefix_4_0= ruleUnrestrictedName )
                    // InternalQVTimperative.g:2684:6: lv_nsPrefix_4_0= ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQualifiedPackageCSAccess().getNsPrefixUnrestrictedNameParserRuleCall_3_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_50);
                    lv_nsPrefix_4_0=ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQualifiedPackageCSRule());
                      						}
                      						set(
                      							current,
                      							"nsPrefix",
                      							lv_nsPrefix_4_0,
                      							"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:2702:3: (otherlv_5= '=' ( (lv_nsURI_6_0= ruleURI ) ) )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==53) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalQVTimperative.g:2703:4: otherlv_5= '=' ( (lv_nsURI_6_0= ruleURI ) )
                    {
                    otherlv_5=(Token)match(input,53,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getQualifiedPackageCSAccess().getEqualsSignKeyword_4_0());

                    }
                    // InternalQVTimperative.g:2707:4: ( (lv_nsURI_6_0= ruleURI ) )
                    // InternalQVTimperative.g:2708:5: (lv_nsURI_6_0= ruleURI )
                    {
                    // InternalQVTimperative.g:2708:5: (lv_nsURI_6_0= ruleURI )
                    // InternalQVTimperative.g:2709:6: lv_nsURI_6_0= ruleURI
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQualifiedPackageCSAccess().getNsURIURIParserRuleCall_4_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_51);
                    lv_nsURI_6_0=ruleURI();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQualifiedPackageCSRule());
                      						}
                      						set(
                      							current,
                      							"nsURI",
                      							lv_nsURI_6_0,
                      							"org.eclipse.ocl.xtext.base.Base.URI");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:2727:3: ( (otherlv_7= '{' ( ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) ) | ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) ) )* otherlv_10= '}' ) | otherlv_11= ';' )
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==35) ) {
                alt61=1;
            }
            else if ( (LA61_0==21) ) {
                alt61=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 61, 0, input);

                throw nvae;
            }
            switch (alt61) {
                case 1 :
                    // InternalQVTimperative.g:2728:4: (otherlv_7= '{' ( ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) ) | ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) ) )* otherlv_10= '}' )
                    {
                    // InternalQVTimperative.g:2728:4: (otherlv_7= '{' ( ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) ) | ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) ) )* otherlv_10= '}' )
                    // InternalQVTimperative.g:2729:5: otherlv_7= '{' ( ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) ) | ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) ) )* otherlv_10= '}'
                    {
                    otherlv_7=(Token)match(input,35,FollowSets000.FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getQualifiedPackageCSAccess().getLeftCurlyBracketKeyword_5_0_0());

                    }
                    // InternalQVTimperative.g:2733:5: ( ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) ) | ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) ) )*
                    loop60:
                    do {
                        int alt60=3;
                        int LA60_0 = input.LA(1);

                        if ( (LA60_0==52) ) {
                            alt60=1;
                        }
                        else if ( (LA60_0==64||(LA60_0>=87 && LA60_0<=88)||LA60_0==91||(LA60_0>=102 && LA60_0<=103)) ) {
                            alt60=2;
                        }


                        switch (alt60) {
                    	case 1 :
                    	    // InternalQVTimperative.g:2734:6: ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) )
                    	    {
                    	    // InternalQVTimperative.g:2734:6: ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) )
                    	    // InternalQVTimperative.g:2735:7: (lv_ownedPackages_8_0= ruleQualifiedPackageCS )
                    	    {
                    	    // InternalQVTimperative.g:2735:7: (lv_ownedPackages_8_0= ruleQualifiedPackageCS )
                    	    // InternalQVTimperative.g:2736:8: lv_ownedPackages_8_0= ruleQualifiedPackageCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getQualifiedPackageCSAccess().getOwnedPackagesQualifiedPackageCSParserRuleCall_5_0_1_0_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_52);
                    	    lv_ownedPackages_8_0=ruleQualifiedPackageCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getQualifiedPackageCSRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"ownedPackages",
                    	      									lv_ownedPackages_8_0,
                    	      									"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.QualifiedPackageCS");
                    	      								afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQVTimperative.g:2754:6: ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) )
                    	    {
                    	    // InternalQVTimperative.g:2754:6: ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) )
                    	    // InternalQVTimperative.g:2755:7: ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) )
                    	    {
                    	    // InternalQVTimperative.g:2755:7: ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) )
                    	    // InternalQVTimperative.g:2756:8: (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS )
                    	    {
                    	    // InternalQVTimperative.g:2756:8: (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS )
                    	    int alt59=2;
                    	    int LA59_0 = input.LA(1);

                    	    if ( ((LA59_0>=87 && LA59_0<=88)||LA59_0==91||(LA59_0>=102 && LA59_0<=103)) ) {
                    	        alt59=1;
                    	    }
                    	    else if ( (LA59_0==64) ) {
                    	        alt59=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 59, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt59) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:2757:9: lv_ownedClasses_9_1= ruleClassCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              									newCompositeNode(grammarAccess.getQualifiedPackageCSAccess().getOwnedClassesClassCSParserRuleCall_5_0_1_1_0_0());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_52);
                    	            lv_ownedClasses_9_1=ruleClassCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              									if (current==null) {
                    	              										current = createModelElementForParent(grammarAccess.getQualifiedPackageCSRule());
                    	              									}
                    	              									add(
                    	              										current,
                    	              										"ownedClasses",
                    	              										lv_ownedClasses_9_1,
                    	              										"org.eclipse.qvtd.xtext.qvtbase.QVTbase.ClassCS");
                    	              									afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalQVTimperative.g:2773:9: lv_ownedClasses_9_2= ruleTransformationCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              									newCompositeNode(grammarAccess.getQualifiedPackageCSAccess().getOwnedClassesTransformationCSParserRuleCall_5_0_1_1_0_1());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_52);
                    	            lv_ownedClasses_9_2=ruleTransformationCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              									if (current==null) {
                    	              										current = createModelElementForParent(grammarAccess.getQualifiedPackageCSRule());
                    	              									}
                    	              									add(
                    	              										current,
                    	              										"ownedClasses",
                    	              										lv_ownedClasses_9_2,
                    	              										"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.TransformationCS");
                    	              									afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop60;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_10, grammarAccess.getQualifiedPackageCSAccess().getRightCurlyBracketKeyword_5_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:2798:4: otherlv_11= ';'
                    {
                    otherlv_11=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getQualifiedPackageCSAccess().getSemicolonKeyword_5_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedPackageCS"


    // $ANTLR start "entryRuleQueryCS"
    // InternalQVTimperative.g:2807:1: entryRuleQueryCS returns [EObject current=null] : iv_ruleQueryCS= ruleQueryCS EOF ;
    public final EObject entryRuleQueryCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQueryCS = null;


        try {
            // InternalQVTimperative.g:2807:48: (iv_ruleQueryCS= ruleQueryCS EOF )
            // InternalQVTimperative.g:2808:2: iv_ruleQueryCS= ruleQueryCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQueryCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQueryCS=ruleQueryCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQueryCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQueryCS"


    // $ANTLR start "ruleQueryCS"
    // InternalQVTimperative.g:2814:1: ruleQueryCS returns [EObject current=null] : ( ( (lv_isTransient_0_0= 'transient' ) )? otherlv_1= 'query' ( (lv_name_2_0= ruleUnrestrictedName ) ) otherlv_3= '(' ( ( (lv_ownedParameters_4_0= ruleParamDeclarationCS ) ) (otherlv_5= ',' ( (lv_ownedParameters_6_0= ruleParamDeclarationCS ) ) )* )? otherlv_7= ')' otherlv_8= ':' ( (lv_ownedType_9_0= ruleTypeExpCS ) ) (otherlv_10= ';' | (otherlv_11= '{' ( (lv_ownedExpression_12_0= ruleExpCS ) ) otherlv_13= '}' ) | (otherlv_14= 'implementedby' ( (otherlv_15= RULE_SINGLE_QUOTED_STRING ) ) otherlv_16= ';' ) ) ) ;
    public final EObject ruleQueryCS() throws RecognitionException {
        EObject current = null;

        Token lv_isTransient_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_ownedParameters_4_0 = null;

        EObject lv_ownedParameters_6_0 = null;

        EObject lv_ownedType_9_0 = null;

        EObject lv_ownedExpression_12_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:2820:2: ( ( ( (lv_isTransient_0_0= 'transient' ) )? otherlv_1= 'query' ( (lv_name_2_0= ruleUnrestrictedName ) ) otherlv_3= '(' ( ( (lv_ownedParameters_4_0= ruleParamDeclarationCS ) ) (otherlv_5= ',' ( (lv_ownedParameters_6_0= ruleParamDeclarationCS ) ) )* )? otherlv_7= ')' otherlv_8= ':' ( (lv_ownedType_9_0= ruleTypeExpCS ) ) (otherlv_10= ';' | (otherlv_11= '{' ( (lv_ownedExpression_12_0= ruleExpCS ) ) otherlv_13= '}' ) | (otherlv_14= 'implementedby' ( (otherlv_15= RULE_SINGLE_QUOTED_STRING ) ) otherlv_16= ';' ) ) ) )
            // InternalQVTimperative.g:2821:2: ( ( (lv_isTransient_0_0= 'transient' ) )? otherlv_1= 'query' ( (lv_name_2_0= ruleUnrestrictedName ) ) otherlv_3= '(' ( ( (lv_ownedParameters_4_0= ruleParamDeclarationCS ) ) (otherlv_5= ',' ( (lv_ownedParameters_6_0= ruleParamDeclarationCS ) ) )* )? otherlv_7= ')' otherlv_8= ':' ( (lv_ownedType_9_0= ruleTypeExpCS ) ) (otherlv_10= ';' | (otherlv_11= '{' ( (lv_ownedExpression_12_0= ruleExpCS ) ) otherlv_13= '}' ) | (otherlv_14= 'implementedby' ( (otherlv_15= RULE_SINGLE_QUOTED_STRING ) ) otherlv_16= ';' ) ) )
            {
            // InternalQVTimperative.g:2821:2: ( ( (lv_isTransient_0_0= 'transient' ) )? otherlv_1= 'query' ( (lv_name_2_0= ruleUnrestrictedName ) ) otherlv_3= '(' ( ( (lv_ownedParameters_4_0= ruleParamDeclarationCS ) ) (otherlv_5= ',' ( (lv_ownedParameters_6_0= ruleParamDeclarationCS ) ) )* )? otherlv_7= ')' otherlv_8= ':' ( (lv_ownedType_9_0= ruleTypeExpCS ) ) (otherlv_10= ';' | (otherlv_11= '{' ( (lv_ownedExpression_12_0= ruleExpCS ) ) otherlv_13= '}' ) | (otherlv_14= 'implementedby' ( (otherlv_15= RULE_SINGLE_QUOTED_STRING ) ) otherlv_16= ';' ) ) )
            // InternalQVTimperative.g:2822:3: ( (lv_isTransient_0_0= 'transient' ) )? otherlv_1= 'query' ( (lv_name_2_0= ruleUnrestrictedName ) ) otherlv_3= '(' ( ( (lv_ownedParameters_4_0= ruleParamDeclarationCS ) ) (otherlv_5= ',' ( (lv_ownedParameters_6_0= ruleParamDeclarationCS ) ) )* )? otherlv_7= ')' otherlv_8= ':' ( (lv_ownedType_9_0= ruleTypeExpCS ) ) (otherlv_10= ';' | (otherlv_11= '{' ( (lv_ownedExpression_12_0= ruleExpCS ) ) otherlv_13= '}' ) | (otherlv_14= 'implementedby' ( (otherlv_15= RULE_SINGLE_QUOTED_STRING ) ) otherlv_16= ';' ) )
            {
            // InternalQVTimperative.g:2822:3: ( (lv_isTransient_0_0= 'transient' ) )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==54) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // InternalQVTimperative.g:2823:4: (lv_isTransient_0_0= 'transient' )
                    {
                    // InternalQVTimperative.g:2823:4: (lv_isTransient_0_0= 'transient' )
                    // InternalQVTimperative.g:2824:5: lv_isTransient_0_0= 'transient'
                    {
                    lv_isTransient_0_0=(Token)match(input,54,FollowSets000.FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isTransient_0_0, grammarAccess.getQueryCSAccess().getIsTransientTransientKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getQueryCSRule());
                      					}
                      					setWithLastConsumed(current, "isTransient", lv_isTransient_0_0 != null, "transient");

                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,55,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getQueryCSAccess().getQueryKeyword_1());

            }
            // InternalQVTimperative.g:2840:3: ( (lv_name_2_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:2841:4: (lv_name_2_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:2841:4: (lv_name_2_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:2842:5: lv_name_2_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQueryCSAccess().getNameUnrestrictedNameParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_54);
            lv_name_2_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQueryCSRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_3=(Token)match(input,56,FollowSets000.FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getQueryCSAccess().getLeftParenthesisKeyword_3());

            }
            // InternalQVTimperative.g:2863:3: ( ( (lv_ownedParameters_4_0= ruleParamDeclarationCS ) ) (otherlv_5= ',' ( (lv_ownedParameters_6_0= ruleParamDeclarationCS ) ) )* )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( ((LA64_0>=RULE_SIMPLE_ID && LA64_0<=RULE_ESCAPED_ID)||LA64_0==17||LA64_0==19||(LA64_0>=22 && LA64_0<=23)||(LA64_0>=25 && LA64_0<=26)||(LA64_0>=29 && LA64_0<=34)||LA64_0==39||(LA64_0>=43 && LA64_0<=48)||(LA64_0>=50 && LA64_0<=52)||(LA64_0>=54 && LA64_0<=55)||(LA64_0>=58 && LA64_0<=60)||(LA64_0>=62 && LA64_0<=70)||LA64_0==72||LA64_0==74||LA64_0==76||LA64_0==79||LA64_0==81||LA64_0==83||(LA64_0>=85 && LA64_0<=89)||(LA64_0>=91 && LA64_0<=96)||LA64_0==98||LA64_0==100||(LA64_0>=102 && LA64_0<=105)) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalQVTimperative.g:2864:4: ( (lv_ownedParameters_4_0= ruleParamDeclarationCS ) ) (otherlv_5= ',' ( (lv_ownedParameters_6_0= ruleParamDeclarationCS ) ) )*
                    {
                    // InternalQVTimperative.g:2864:4: ( (lv_ownedParameters_4_0= ruleParamDeclarationCS ) )
                    // InternalQVTimperative.g:2865:5: (lv_ownedParameters_4_0= ruleParamDeclarationCS )
                    {
                    // InternalQVTimperative.g:2865:5: (lv_ownedParameters_4_0= ruleParamDeclarationCS )
                    // InternalQVTimperative.g:2866:6: lv_ownedParameters_4_0= ruleParamDeclarationCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQueryCSAccess().getOwnedParametersParamDeclarationCSParserRuleCall_4_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_56);
                    lv_ownedParameters_4_0=ruleParamDeclarationCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQueryCSRule());
                      						}
                      						add(
                      							current,
                      							"ownedParameters",
                      							lv_ownedParameters_4_0,
                      							"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.ParamDeclarationCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:2883:4: (otherlv_5= ',' ( (lv_ownedParameters_6_0= ruleParamDeclarationCS ) ) )*
                    loop63:
                    do {
                        int alt63=2;
                        int LA63_0 = input.LA(1);

                        if ( (LA63_0==18) ) {
                            alt63=1;
                        }


                        switch (alt63) {
                    	case 1 :
                    	    // InternalQVTimperative.g:2884:5: otherlv_5= ',' ( (lv_ownedParameters_6_0= ruleParamDeclarationCS ) )
                    	    {
                    	    otherlv_5=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getQueryCSAccess().getCommaKeyword_4_1_0());

                    	    }
                    	    // InternalQVTimperative.g:2888:5: ( (lv_ownedParameters_6_0= ruleParamDeclarationCS ) )
                    	    // InternalQVTimperative.g:2889:6: (lv_ownedParameters_6_0= ruleParamDeclarationCS )
                    	    {
                    	    // InternalQVTimperative.g:2889:6: (lv_ownedParameters_6_0= ruleParamDeclarationCS )
                    	    // InternalQVTimperative.g:2890:7: lv_ownedParameters_6_0= ruleParamDeclarationCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getQueryCSAccess().getOwnedParametersParamDeclarationCSParserRuleCall_4_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_56);
                    	    lv_ownedParameters_6_0=ruleParamDeclarationCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getQueryCSRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedParameters",
                    	      								lv_ownedParameters_6_0,
                    	      								"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.ParamDeclarationCS");
                    	      							afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop63;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_7=(Token)match(input,57,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getQueryCSAccess().getRightParenthesisKeyword_5());

            }
            otherlv_8=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getQueryCSAccess().getColonKeyword_6());

            }
            // InternalQVTimperative.g:2917:3: ( (lv_ownedType_9_0= ruleTypeExpCS ) )
            // InternalQVTimperative.g:2918:4: (lv_ownedType_9_0= ruleTypeExpCS )
            {
            // InternalQVTimperative.g:2918:4: (lv_ownedType_9_0= ruleTypeExpCS )
            // InternalQVTimperative.g:2919:5: lv_ownedType_9_0= ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQueryCSAccess().getOwnedTypeTypeExpCSParserRuleCall_7_0());

            }
            pushFollow(FollowSets000.FOLLOW_57);
            lv_ownedType_9_0=ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQueryCSRule());
              					}
              					set(
              						current,
              						"ownedType",
              						lv_ownedType_9_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:2936:3: (otherlv_10= ';' | (otherlv_11= '{' ( (lv_ownedExpression_12_0= ruleExpCS ) ) otherlv_13= '}' ) | (otherlv_14= 'implementedby' ( (otherlv_15= RULE_SINGLE_QUOTED_STRING ) ) otherlv_16= ';' ) )
            int alt65=3;
            switch ( input.LA(1) ) {
            case 21:
                {
                alt65=1;
                }
                break;
            case 35:
                {
                alt65=2;
                }
                break;
            case 58:
                {
                alt65=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 65, 0, input);

                throw nvae;
            }

            switch (alt65) {
                case 1 :
                    // InternalQVTimperative.g:2937:4: otherlv_10= ';'
                    {
                    otherlv_10=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getQueryCSAccess().getSemicolonKeyword_8_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:2942:4: (otherlv_11= '{' ( (lv_ownedExpression_12_0= ruleExpCS ) ) otherlv_13= '}' )
                    {
                    // InternalQVTimperative.g:2942:4: (otherlv_11= '{' ( (lv_ownedExpression_12_0= ruleExpCS ) ) otherlv_13= '}' )
                    // InternalQVTimperative.g:2943:5: otherlv_11= '{' ( (lv_ownedExpression_12_0= ruleExpCS ) ) otherlv_13= '}'
                    {
                    otherlv_11=(Token)match(input,35,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_11, grammarAccess.getQueryCSAccess().getLeftCurlyBracketKeyword_8_1_0());

                    }
                    // InternalQVTimperative.g:2947:5: ( (lv_ownedExpression_12_0= ruleExpCS ) )
                    // InternalQVTimperative.g:2948:6: (lv_ownedExpression_12_0= ruleExpCS )
                    {
                    // InternalQVTimperative.g:2948:6: (lv_ownedExpression_12_0= ruleExpCS )
                    // InternalQVTimperative.g:2949:7: lv_ownedExpression_12_0= ruleExpCS
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getQueryCSAccess().getOwnedExpressionExpCSParserRuleCall_8_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_58);
                    lv_ownedExpression_12_0=ruleExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getQueryCSRule());
                      							}
                      							set(
                      								current,
                      								"ownedExpression",
                      								lv_ownedExpression_12_0,
                      								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                      							afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    otherlv_13=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_13, grammarAccess.getQueryCSAccess().getRightCurlyBracketKeyword_8_1_2());

                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:2972:4: (otherlv_14= 'implementedby' ( (otherlv_15= RULE_SINGLE_QUOTED_STRING ) ) otherlv_16= ';' )
                    {
                    // InternalQVTimperative.g:2972:4: (otherlv_14= 'implementedby' ( (otherlv_15= RULE_SINGLE_QUOTED_STRING ) ) otherlv_16= ';' )
                    // InternalQVTimperative.g:2973:5: otherlv_14= 'implementedby' ( (otherlv_15= RULE_SINGLE_QUOTED_STRING ) ) otherlv_16= ';'
                    {
                    otherlv_14=(Token)match(input,58,FollowSets000.FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_14, grammarAccess.getQueryCSAccess().getImplementedbyKeyword_8_2_0());

                    }
                    // InternalQVTimperative.g:2977:5: ( (otherlv_15= RULE_SINGLE_QUOTED_STRING ) )
                    // InternalQVTimperative.g:2978:6: (otherlv_15= RULE_SINGLE_QUOTED_STRING )
                    {
                    // InternalQVTimperative.g:2978:6: (otherlv_15= RULE_SINGLE_QUOTED_STRING )
                    // InternalQVTimperative.g:2979:7: otherlv_15= RULE_SINGLE_QUOTED_STRING
                    {
                    if ( state.backtracking==0 ) {

                      							/* */

                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getQueryCSRule());
                      							}

                    }
                    otherlv_15=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(otherlv_15, grammarAccess.getQueryCSAccess().getImplementationJavaClassCSCrossReference_8_2_1_0());

                    }

                    }


                    }

                    otherlv_16=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_16, grammarAccess.getQueryCSAccess().getSemicolonKeyword_8_2_2());

                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQueryCS"


    // $ANTLR start "entryRuleScopeNameCS"
    // InternalQVTimperative.g:3003:1: entryRuleScopeNameCS returns [EObject current=null] : iv_ruleScopeNameCS= ruleScopeNameCS EOF ;
    public final EObject entryRuleScopeNameCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScopeNameCS = null;


        try {
            // InternalQVTimperative.g:3003:52: (iv_ruleScopeNameCS= ruleScopeNameCS EOF )
            // InternalQVTimperative.g:3004:2: iv_ruleScopeNameCS= ruleScopeNameCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScopeNameCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScopeNameCS=ruleScopeNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScopeNameCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScopeNameCS"


    // $ANTLR start "ruleScopeNameCS"
    // InternalQVTimperative.g:3010:1: ruleScopeNameCS returns [EObject current=null] : ( ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) otherlv_1= '::' ( ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) otherlv_3= '::' )* ) ;
    public final EObject ruleScopeNameCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_ownedPathElements_0_0 = null;

        EObject lv_ownedPathElements_2_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:3016:2: ( ( ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) otherlv_1= '::' ( ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) otherlv_3= '::' )* ) )
            // InternalQVTimperative.g:3017:2: ( ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) otherlv_1= '::' ( ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) otherlv_3= '::' )* )
            {
            // InternalQVTimperative.g:3017:2: ( ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) otherlv_1= '::' ( ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) otherlv_3= '::' )* )
            // InternalQVTimperative.g:3018:3: ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) otherlv_1= '::' ( ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) otherlv_3= '::' )*
            {
            // InternalQVTimperative.g:3018:3: ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) )
            // InternalQVTimperative.g:3019:4: (lv_ownedPathElements_0_0= ruleFirstPathElementCS )
            {
            // InternalQVTimperative.g:3019:4: (lv_ownedPathElements_0_0= ruleFirstPathElementCS )
            // InternalQVTimperative.g:3020:5: lv_ownedPathElements_0_0= ruleFirstPathElementCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getScopeNameCSAccess().getOwnedPathElementsFirstPathElementCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_60);
            lv_ownedPathElements_0_0=ruleFirstPathElementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getScopeNameCSRule());
              					}
              					add(
              						current,
              						"ownedPathElements",
              						lv_ownedPathElements_0_0,
              						"org.eclipse.ocl.xtext.base.Base.FirstPathElementCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_61); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getScopeNameCSAccess().getColonColonKeyword_1());

            }
            // InternalQVTimperative.g:3041:3: ( ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) otherlv_3= '::' )*
            loop66:
            do {
                int alt66=2;
                alt66 = dfa66.predict(input);
                switch (alt66) {
            	case 1 :
            	    // InternalQVTimperative.g:3042:4: ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) otherlv_3= '::'
            	    {
            	    // InternalQVTimperative.g:3042:4: ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) )
            	    // InternalQVTimperative.g:3043:5: (lv_ownedPathElements_2_0= ruleNextPathElementCS )
            	    {
            	    // InternalQVTimperative.g:3043:5: (lv_ownedPathElements_2_0= ruleNextPathElementCS )
            	    // InternalQVTimperative.g:3044:6: lv_ownedPathElements_2_0= ruleNextPathElementCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getScopeNameCSAccess().getOwnedPathElementsNextPathElementCSParserRuleCall_2_0_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_60);
            	    lv_ownedPathElements_2_0=ruleNextPathElementCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getScopeNameCSRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedPathElements",
            	      							lv_ownedPathElements_2_0,
            	      							"org.eclipse.ocl.xtext.base.Base.NextPathElementCS");
            	      						afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }

            	    otherlv_3=(Token)match(input,41,FollowSets000.FOLLOW_61); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getScopeNameCSAccess().getColonColonKeyword_2_1());

            	    }

            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScopeNameCS"


    // $ANTLR start "entryRuleSetStatementCS"
    // InternalQVTimperative.g:3070:1: entryRuleSetStatementCS returns [EObject current=null] : iv_ruleSetStatementCS= ruleSetStatementCS EOF ;
    public final EObject entryRuleSetStatementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSetStatementCS = null;


        try {
            // InternalQVTimperative.g:3070:55: (iv_ruleSetStatementCS= ruleSetStatementCS EOF )
            // InternalQVTimperative.g:3071:2: iv_ruleSetStatementCS= ruleSetStatementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSetStatementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSetStatementCS=ruleSetStatementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSetStatementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSetStatementCS"


    // $ANTLR start "ruleSetStatementCS"
    // InternalQVTimperative.g:3077:1: ruleSetStatementCS returns [EObject current=null] : ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isNotify_4_0= 'notify' ) )? otherlv_5= 'set' ( ( ruleUnrestrictedName ) ) otherlv_7= '.' ( ( ruleUnrestrictedName ) ) (otherlv_9= ':=' | ( (lv_isPartial_10_0= '+=' ) ) ) ( (lv_ownedExpression_11_0= ruleExpCS ) ) otherlv_12= ';' ) ;
    public final EObject ruleSetStatementCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token lv_isNotify_4_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token lv_isPartial_10_0=null;
        Token otherlv_12=null;
        EObject lv_observedProperties_1_0 = null;

        EObject lv_observedProperties_3_0 = null;

        EObject lv_ownedExpression_11_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:3083:2: ( ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isNotify_4_0= 'notify' ) )? otherlv_5= 'set' ( ( ruleUnrestrictedName ) ) otherlv_7= '.' ( ( ruleUnrestrictedName ) ) (otherlv_9= ':=' | ( (lv_isPartial_10_0= '+=' ) ) ) ( (lv_ownedExpression_11_0= ruleExpCS ) ) otherlv_12= ';' ) )
            // InternalQVTimperative.g:3084:2: ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isNotify_4_0= 'notify' ) )? otherlv_5= 'set' ( ( ruleUnrestrictedName ) ) otherlv_7= '.' ( ( ruleUnrestrictedName ) ) (otherlv_9= ':=' | ( (lv_isPartial_10_0= '+=' ) ) ) ( (lv_ownedExpression_11_0= ruleExpCS ) ) otherlv_12= ';' )
            {
            // InternalQVTimperative.g:3084:2: ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isNotify_4_0= 'notify' ) )? otherlv_5= 'set' ( ( ruleUnrestrictedName ) ) otherlv_7= '.' ( ( ruleUnrestrictedName ) ) (otherlv_9= ':=' | ( (lv_isPartial_10_0= '+=' ) ) ) ( (lv_ownedExpression_11_0= ruleExpCS ) ) otherlv_12= ';' )
            // InternalQVTimperative.g:3085:3: (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isNotify_4_0= 'notify' ) )? otherlv_5= 'set' ( ( ruleUnrestrictedName ) ) otherlv_7= '.' ( ( ruleUnrestrictedName ) ) (otherlv_9= ':=' | ( (lv_isPartial_10_0= '+=' ) ) ) ( (lv_ownedExpression_11_0= ruleExpCS ) ) otherlv_12= ';'
            {
            // InternalQVTimperative.g:3085:3: (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==17) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // InternalQVTimperative.g:3086:4: otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )*
                    {
                    otherlv_0=(Token)match(input,17,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSetStatementCSAccess().getObserveKeyword_0_0());

                    }
                    // InternalQVTimperative.g:3090:4: ( (lv_observedProperties_1_0= rulePathNameCS ) )
                    // InternalQVTimperative.g:3091:5: (lv_observedProperties_1_0= rulePathNameCS )
                    {
                    // InternalQVTimperative.g:3091:5: (lv_observedProperties_1_0= rulePathNameCS )
                    // InternalQVTimperative.g:3092:6: lv_observedProperties_1_0= rulePathNameCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSetStatementCSAccess().getObservedPropertiesPathNameCSParserRuleCall_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_62);
                    lv_observedProperties_1_0=rulePathNameCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSetStatementCSRule());
                      						}
                      						add(
                      							current,
                      							"observedProperties",
                      							lv_observedProperties_1_0,
                      							"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:3109:4: (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )*
                    loop67:
                    do {
                        int alt67=2;
                        int LA67_0 = input.LA(1);

                        if ( (LA67_0==18) ) {
                            alt67=1;
                        }


                        switch (alt67) {
                    	case 1 :
                    	    // InternalQVTimperative.g:3110:5: otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) )
                    	    {
                    	    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_2, grammarAccess.getSetStatementCSAccess().getCommaKeyword_0_2_0());

                    	    }
                    	    // InternalQVTimperative.g:3114:5: ( (lv_observedProperties_3_0= rulePathNameCS ) )
                    	    // InternalQVTimperative.g:3115:6: (lv_observedProperties_3_0= rulePathNameCS )
                    	    {
                    	    // InternalQVTimperative.g:3115:6: (lv_observedProperties_3_0= rulePathNameCS )
                    	    // InternalQVTimperative.g:3116:7: lv_observedProperties_3_0= rulePathNameCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSetStatementCSAccess().getObservedPropertiesPathNameCSParserRuleCall_0_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_62);
                    	    lv_observedProperties_3_0=rulePathNameCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSetStatementCSRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"observedProperties",
                    	      								lv_observedProperties_3_0,
                    	      								"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                    	      							afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop67;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalQVTimperative.g:3135:3: ( (lv_isNotify_4_0= 'notify' ) )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==59) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // InternalQVTimperative.g:3136:4: (lv_isNotify_4_0= 'notify' )
                    {
                    // InternalQVTimperative.g:3136:4: (lv_isNotify_4_0= 'notify' )
                    // InternalQVTimperative.g:3137:5: lv_isNotify_4_0= 'notify'
                    {
                    lv_isNotify_4_0=(Token)match(input,59,FollowSets000.FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isNotify_4_0, grammarAccess.getSetStatementCSAccess().getIsNotifyNotifyKeyword_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSetStatementCSRule());
                      					}
                      					setWithLastConsumed(current, "isNotify", lv_isNotify_4_0 != null, "notify");

                    }

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,60,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getSetStatementCSAccess().getSetKeyword_2());

            }
            // InternalQVTimperative.g:3153:3: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:3154:4: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:3154:4: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:3155:5: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					/* */

            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSetStatementCSRule());
              					}

            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSetStatementCSAccess().getReferredVariableVariableDeclarationCrossReference_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_64);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_7=(Token)match(input,61,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getSetStatementCSAccess().getFullStopKeyword_4());

            }
            // InternalQVTimperative.g:3176:3: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:3177:4: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:3177:4: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:3178:5: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					/* */

            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSetStatementCSRule());
              					}

            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSetStatementCSAccess().getReferredPropertyPropertyCrossReference_5_0());

            }
            pushFollow(FollowSets000.FOLLOW_65);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:3195:3: (otherlv_9= ':=' | ( (lv_isPartial_10_0= '+=' ) ) )
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==28) ) {
                alt70=1;
            }
            else if ( (LA70_0==20) ) {
                alt70=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 70, 0, input);

                throw nvae;
            }
            switch (alt70) {
                case 1 :
                    // InternalQVTimperative.g:3196:4: otherlv_9= ':='
                    {
                    otherlv_9=(Token)match(input,28,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getSetStatementCSAccess().getColonEqualsSignKeyword_6_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:3201:4: ( (lv_isPartial_10_0= '+=' ) )
                    {
                    // InternalQVTimperative.g:3201:4: ( (lv_isPartial_10_0= '+=' ) )
                    // InternalQVTimperative.g:3202:5: (lv_isPartial_10_0= '+=' )
                    {
                    // InternalQVTimperative.g:3202:5: (lv_isPartial_10_0= '+=' )
                    // InternalQVTimperative.g:3203:6: lv_isPartial_10_0= '+='
                    {
                    lv_isPartial_10_0=(Token)match(input,20,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_isPartial_10_0, grammarAccess.getSetStatementCSAccess().getIsPartialPlusSignEqualsSignKeyword_6_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSetStatementCSRule());
                      						}
                      						setWithLastConsumed(current, "isPartial", lv_isPartial_10_0 != null, "+=");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:3216:3: ( (lv_ownedExpression_11_0= ruleExpCS ) )
            // InternalQVTimperative.g:3217:4: (lv_ownedExpression_11_0= ruleExpCS )
            {
            // InternalQVTimperative.g:3217:4: (lv_ownedExpression_11_0= ruleExpCS )
            // InternalQVTimperative.g:3218:5: lv_ownedExpression_11_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSetStatementCSAccess().getOwnedExpressionExpCSParserRuleCall_7_0());

            }
            pushFollow(FollowSets000.FOLLOW_9);
            lv_ownedExpression_11_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSetStatementCSRule());
              					}
              					set(
              						current,
              						"ownedExpression",
              						lv_ownedExpression_11_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_12=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getSetStatementCSAccess().getSemicolonKeyword_8());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSetStatementCS"


    // $ANTLR start "entryRuleSimpleParameterBindingCS"
    // InternalQVTimperative.g:3243:1: entryRuleSimpleParameterBindingCS returns [EObject current=null] : iv_ruleSimpleParameterBindingCS= ruleSimpleParameterBindingCS EOF ;
    public final EObject entryRuleSimpleParameterBindingCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleParameterBindingCS = null;


        try {
            // InternalQVTimperative.g:3243:65: (iv_ruleSimpleParameterBindingCS= ruleSimpleParameterBindingCS EOF )
            // InternalQVTimperative.g:3244:2: iv_ruleSimpleParameterBindingCS= ruleSimpleParameterBindingCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleParameterBindingCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSimpleParameterBindingCS=ruleSimpleParameterBindingCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleParameterBindingCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleParameterBindingCS"


    // $ANTLR start "ruleSimpleParameterBindingCS"
    // InternalQVTimperative.g:3250:1: ruleSimpleParameterBindingCS returns [EObject current=null] : ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'uses' ( (lv_ownedValue_3_0= ruleExpCS ) ) otherlv_4= ';' ) ;
    public final EObject ruleSimpleParameterBindingCS() throws RecognitionException {
        EObject current = null;

        Token lv_isCheck_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedValue_3_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:3256:2: ( ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'uses' ( (lv_ownedValue_3_0= ruleExpCS ) ) otherlv_4= ';' ) )
            // InternalQVTimperative.g:3257:2: ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'uses' ( (lv_ownedValue_3_0= ruleExpCS ) ) otherlv_4= ';' )
            {
            // InternalQVTimperative.g:3257:2: ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'uses' ( (lv_ownedValue_3_0= ruleExpCS ) ) otherlv_4= ';' )
            // InternalQVTimperative.g:3258:3: ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'uses' ( (lv_ownedValue_3_0= ruleExpCS ) ) otherlv_4= ';'
            {
            // InternalQVTimperative.g:3258:3: ( (lv_isCheck_0_0= 'check' ) )?
            int alt71=2;
            alt71 = dfa71.predict(input);
            switch (alt71) {
                case 1 :
                    // InternalQVTimperative.g:3259:4: (lv_isCheck_0_0= 'check' )
                    {
                    // InternalQVTimperative.g:3259:4: (lv_isCheck_0_0= 'check' )
                    // InternalQVTimperative.g:3260:5: lv_isCheck_0_0= 'check'
                    {
                    lv_isCheck_0_0=(Token)match(input,29,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isCheck_0_0, grammarAccess.getSimpleParameterBindingCSAccess().getIsCheckCheckKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSimpleParameterBindingCSRule());
                      					}
                      					setWithLastConsumed(current, "isCheck", lv_isCheck_0_0 != null, "check");

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:3272:3: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:3273:4: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:3273:4: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:3274:5: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					/* */

            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSimpleParameterBindingCSRule());
              					}

            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSimpleParameterBindingCSAccess().getReferredVariableSimpleParameterCrossReference_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_66);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_2=(Token)match(input,62,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSimpleParameterBindingCSAccess().getUsesKeyword_2());

            }
            // InternalQVTimperative.g:3295:3: ( (lv_ownedValue_3_0= ruleExpCS ) )
            // InternalQVTimperative.g:3296:4: (lv_ownedValue_3_0= ruleExpCS )
            {
            // InternalQVTimperative.g:3296:4: (lv_ownedValue_3_0= ruleExpCS )
            // InternalQVTimperative.g:3297:5: lv_ownedValue_3_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSimpleParameterBindingCSAccess().getOwnedValueExpCSParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_9);
            lv_ownedValue_3_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSimpleParameterBindingCSRule());
              					}
              					set(
              						current,
              						"ownedValue",
              						lv_ownedValue_3_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_4=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getSimpleParameterBindingCSAccess().getSemicolonKeyword_4());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleParameterBindingCS"


    // $ANTLR start "entryRuleSimpleParameterCS"
    // InternalQVTimperative.g:3322:1: entryRuleSimpleParameterCS returns [EObject current=null] : iv_ruleSimpleParameterCS= ruleSimpleParameterCS EOF ;
    public final EObject entryRuleSimpleParameterCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleParameterCS = null;


        try {
            // InternalQVTimperative.g:3322:58: (iv_ruleSimpleParameterCS= ruleSimpleParameterCS EOF )
            // InternalQVTimperative.g:3323:2: iv_ruleSimpleParameterCS= ruleSimpleParameterCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleParameterCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSimpleParameterCS=ruleSimpleParameterCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleParameterCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleParameterCS"


    // $ANTLR start "ruleSimpleParameterCS"
    // InternalQVTimperative.g:3329:1: ruleSimpleParameterCS returns [EObject current=null] : (otherlv_0= 'in' otherlv_1= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' ( (lv_ownedType_5_0= ruleTypeExpCS ) ) otherlv_6= ';' ) ;
    public final EObject ruleSimpleParameterCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_ownedType_5_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:3335:2: ( (otherlv_0= 'in' otherlv_1= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' ( (lv_ownedType_5_0= ruleTypeExpCS ) ) otherlv_6= ';' ) )
            // InternalQVTimperative.g:3336:2: (otherlv_0= 'in' otherlv_1= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' ( (lv_ownedType_5_0= ruleTypeExpCS ) ) otherlv_6= ';' )
            {
            // InternalQVTimperative.g:3336:2: (otherlv_0= 'in' otherlv_1= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' ( (lv_ownedType_5_0= ruleTypeExpCS ) ) otherlv_6= ';' )
            // InternalQVTimperative.g:3337:3: otherlv_0= 'in' otherlv_1= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' ( (lv_ownedType_5_0= ruleTypeExpCS ) ) otherlv_6= ';'
            {
            otherlv_0=(Token)match(input,49,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSimpleParameterCSAccess().getInKeyword_0());

            }
            otherlv_1=(Token)match(input,24,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSimpleParameterCSAccess().getColonKeyword_1());

            }
            // InternalQVTimperative.g:3345:3: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:3346:4: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:3346:4: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:3347:5: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					/* */

            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSimpleParameterCSRule());
              					}

            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSimpleParameterCSAccess().getReferredTypedModelTypedModelCrossReference_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_5);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:3364:3: ( (lv_name_3_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:3365:4: (lv_name_3_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:3365:4: (lv_name_3_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:3366:5: lv_name_3_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSimpleParameterCSAccess().getNameUnrestrictedNameParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_11);
            lv_name_3_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSimpleParameterCSRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_3_0,
              						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_4=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getSimpleParameterCSAccess().getColonKeyword_4());

            }
            // InternalQVTimperative.g:3387:3: ( (lv_ownedType_5_0= ruleTypeExpCS ) )
            // InternalQVTimperative.g:3388:4: (lv_ownedType_5_0= ruleTypeExpCS )
            {
            // InternalQVTimperative.g:3388:4: (lv_ownedType_5_0= ruleTypeExpCS )
            // InternalQVTimperative.g:3389:5: lv_ownedType_5_0= ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSimpleParameterCSAccess().getOwnedTypeTypeExpCSParserRuleCall_5_0());

            }
            pushFollow(FollowSets000.FOLLOW_9);
            lv_ownedType_5_0=ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSimpleParameterCSRule());
              					}
              					set(
              						current,
              						"ownedType",
              						lv_ownedType_5_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_6=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getSimpleParameterCSAccess().getSemicolonKeyword_6());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleParameterCS"


    // $ANTLR start "entryRuleSpeculateStatementCS"
    // InternalQVTimperative.g:3414:1: entryRuleSpeculateStatementCS returns [EObject current=null] : iv_ruleSpeculateStatementCS= ruleSpeculateStatementCS EOF ;
    public final EObject entryRuleSpeculateStatementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSpeculateStatementCS = null;


        try {
            // InternalQVTimperative.g:3414:61: (iv_ruleSpeculateStatementCS= ruleSpeculateStatementCS EOF )
            // InternalQVTimperative.g:3415:2: iv_ruleSpeculateStatementCS= ruleSpeculateStatementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSpeculateStatementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSpeculateStatementCS=ruleSpeculateStatementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSpeculateStatementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSpeculateStatementCS"


    // $ANTLR start "ruleSpeculateStatementCS"
    // InternalQVTimperative.g:3421:1: ruleSpeculateStatementCS returns [EObject current=null] : (otherlv_0= 'speculate' ( (lv_ownedConditions_1_0= ruleExpCS ) ) (otherlv_2= ',' ( (lv_ownedConditions_3_0= ruleExpCS ) ) )* otherlv_4= ';' ) ;
    public final EObject ruleSpeculateStatementCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedConditions_1_0 = null;

        EObject lv_ownedConditions_3_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:3427:2: ( (otherlv_0= 'speculate' ( (lv_ownedConditions_1_0= ruleExpCS ) ) (otherlv_2= ',' ( (lv_ownedConditions_3_0= ruleExpCS ) ) )* otherlv_4= ';' ) )
            // InternalQVTimperative.g:3428:2: (otherlv_0= 'speculate' ( (lv_ownedConditions_1_0= ruleExpCS ) ) (otherlv_2= ',' ( (lv_ownedConditions_3_0= ruleExpCS ) ) )* otherlv_4= ';' )
            {
            // InternalQVTimperative.g:3428:2: (otherlv_0= 'speculate' ( (lv_ownedConditions_1_0= ruleExpCS ) ) (otherlv_2= ',' ( (lv_ownedConditions_3_0= ruleExpCS ) ) )* otherlv_4= ';' )
            // InternalQVTimperative.g:3429:3: otherlv_0= 'speculate' ( (lv_ownedConditions_1_0= ruleExpCS ) ) (otherlv_2= ',' ( (lv_ownedConditions_3_0= ruleExpCS ) ) )* otherlv_4= ';'
            {
            otherlv_0=(Token)match(input,63,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSpeculateStatementCSAccess().getSpeculateKeyword_0());

            }
            // InternalQVTimperative.g:3433:3: ( (lv_ownedConditions_1_0= ruleExpCS ) )
            // InternalQVTimperative.g:3434:4: (lv_ownedConditions_1_0= ruleExpCS )
            {
            // InternalQVTimperative.g:3434:4: (lv_ownedConditions_1_0= ruleExpCS )
            // InternalQVTimperative.g:3435:5: lv_ownedConditions_1_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSpeculateStatementCSAccess().getOwnedConditionsExpCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_25);
            lv_ownedConditions_1_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSpeculateStatementCSRule());
              					}
              					add(
              						current,
              						"ownedConditions",
              						lv_ownedConditions_1_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:3452:3: (otherlv_2= ',' ( (lv_ownedConditions_3_0= ruleExpCS ) ) )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==18) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // InternalQVTimperative.g:3453:4: otherlv_2= ',' ( (lv_ownedConditions_3_0= ruleExpCS ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getSpeculateStatementCSAccess().getCommaKeyword_2_0());

            	    }
            	    // InternalQVTimperative.g:3457:4: ( (lv_ownedConditions_3_0= ruleExpCS ) )
            	    // InternalQVTimperative.g:3458:5: (lv_ownedConditions_3_0= ruleExpCS )
            	    {
            	    // InternalQVTimperative.g:3458:5: (lv_ownedConditions_3_0= ruleExpCS )
            	    // InternalQVTimperative.g:3459:6: lv_ownedConditions_3_0= ruleExpCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSpeculateStatementCSAccess().getOwnedConditionsExpCSParserRuleCall_2_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_25);
            	    lv_ownedConditions_3_0=ruleExpCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSpeculateStatementCSRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedConditions",
            	      							lv_ownedConditions_3_0,
            	      							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
            	      						afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

            otherlv_4=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getSpeculateStatementCSAccess().getSemicolonKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSpeculateStatementCS"


    // $ANTLR start "entryRuleTransformationCS"
    // InternalQVTimperative.g:3485:1: entryRuleTransformationCS returns [EObject current=null] : iv_ruleTransformationCS= ruleTransformationCS EOF ;
    public final EObject entryRuleTransformationCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTransformationCS = null;


        try {
            // InternalQVTimperative.g:3485:57: (iv_ruleTransformationCS= ruleTransformationCS EOF )
            // InternalQVTimperative.g:3486:2: iv_ruleTransformationCS= ruleTransformationCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTransformationCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTransformationCS=ruleTransformationCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTransformationCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTransformationCS"


    // $ANTLR start "ruleTransformationCS"
    // InternalQVTimperative.g:3492:1: ruleTransformationCS returns [EObject current=null] : (otherlv_0= 'transformation' ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )? ( (lv_name_2_0= ruleUnreservedName ) ) (otherlv_3= ':' ( (lv_ownedContextType_4_0= ruleTypeExpCS ) ) )? otherlv_5= '{' ( (lv_ownedDirections_6_0= ruleDirectionCS ) )* ( ( ( (lv_ownedMappings_7_1= ruleEntryPointCS | lv_ownedMappings_7_2= ruleMappingCS ) ) ) | ( (lv_ownedQueries_8_0= ruleQueryCS ) ) | ( (lv_ownedProperties_9_0= ruleStructuralFeatureCS ) ) )* otherlv_10= '}' ) ;
    public final EObject ruleTransformationCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_10=null;
        EObject lv_ownedPathName_1_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_ownedContextType_4_0 = null;

        EObject lv_ownedDirections_6_0 = null;

        EObject lv_ownedMappings_7_1 = null;

        EObject lv_ownedMappings_7_2 = null;

        EObject lv_ownedQueries_8_0 = null;

        EObject lv_ownedProperties_9_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:3498:2: ( (otherlv_0= 'transformation' ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )? ( (lv_name_2_0= ruleUnreservedName ) ) (otherlv_3= ':' ( (lv_ownedContextType_4_0= ruleTypeExpCS ) ) )? otherlv_5= '{' ( (lv_ownedDirections_6_0= ruleDirectionCS ) )* ( ( ( (lv_ownedMappings_7_1= ruleEntryPointCS | lv_ownedMappings_7_2= ruleMappingCS ) ) ) | ( (lv_ownedQueries_8_0= ruleQueryCS ) ) | ( (lv_ownedProperties_9_0= ruleStructuralFeatureCS ) ) )* otherlv_10= '}' ) )
            // InternalQVTimperative.g:3499:2: (otherlv_0= 'transformation' ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )? ( (lv_name_2_0= ruleUnreservedName ) ) (otherlv_3= ':' ( (lv_ownedContextType_4_0= ruleTypeExpCS ) ) )? otherlv_5= '{' ( (lv_ownedDirections_6_0= ruleDirectionCS ) )* ( ( ( (lv_ownedMappings_7_1= ruleEntryPointCS | lv_ownedMappings_7_2= ruleMappingCS ) ) ) | ( (lv_ownedQueries_8_0= ruleQueryCS ) ) | ( (lv_ownedProperties_9_0= ruleStructuralFeatureCS ) ) )* otherlv_10= '}' )
            {
            // InternalQVTimperative.g:3499:2: (otherlv_0= 'transformation' ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )? ( (lv_name_2_0= ruleUnreservedName ) ) (otherlv_3= ':' ( (lv_ownedContextType_4_0= ruleTypeExpCS ) ) )? otherlv_5= '{' ( (lv_ownedDirections_6_0= ruleDirectionCS ) )* ( ( ( (lv_ownedMappings_7_1= ruleEntryPointCS | lv_ownedMappings_7_2= ruleMappingCS ) ) ) | ( (lv_ownedQueries_8_0= ruleQueryCS ) ) | ( (lv_ownedProperties_9_0= ruleStructuralFeatureCS ) ) )* otherlv_10= '}' )
            // InternalQVTimperative.g:3500:3: otherlv_0= 'transformation' ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )? ( (lv_name_2_0= ruleUnreservedName ) ) (otherlv_3= ':' ( (lv_ownedContextType_4_0= ruleTypeExpCS ) ) )? otherlv_5= '{' ( (lv_ownedDirections_6_0= ruleDirectionCS ) )* ( ( ( (lv_ownedMappings_7_1= ruleEntryPointCS | lv_ownedMappings_7_2= ruleMappingCS ) ) ) | ( (lv_ownedQueries_8_0= ruleQueryCS ) ) | ( (lv_ownedProperties_9_0= ruleStructuralFeatureCS ) ) )* otherlv_10= '}'
            {
            otherlv_0=(Token)match(input,64,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTransformationCSAccess().getTransformationKeyword_0());

            }
            // InternalQVTimperative.g:3504:3: ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )?
            int alt73=2;
            alt73 = dfa73.predict(input);
            switch (alt73) {
                case 1 :
                    // InternalQVTimperative.g:3505:4: (lv_ownedPathName_1_0= ruleScopeNameCS )
                    {
                    // InternalQVTimperative.g:3505:4: (lv_ownedPathName_1_0= ruleScopeNameCS )
                    // InternalQVTimperative.g:3506:5: lv_ownedPathName_1_0= ruleScopeNameCS
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTransformationCSAccess().getOwnedPathNameScopeNameCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_12);
                    lv_ownedPathName_1_0=ruleScopeNameCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTransformationCSRule());
                      					}
                      					set(
                      						current,
                      						"ownedPathName",
                      						lv_ownedPathName_1_0,
                      						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.ScopeNameCS");
                      					afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:3523:3: ( (lv_name_2_0= ruleUnreservedName ) )
            // InternalQVTimperative.g:3524:4: (lv_name_2_0= ruleUnreservedName )
            {
            // InternalQVTimperative.g:3524:4: (lv_name_2_0= ruleUnreservedName )
            // InternalQVTimperative.g:3525:5: lv_name_2_0= ruleUnreservedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTransformationCSAccess().getNameUnreservedNameParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_67);
            lv_name_2_0=ruleUnreservedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTransformationCSRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.UnreservedName");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:3542:3: (otherlv_3= ':' ( (lv_ownedContextType_4_0= ruleTypeExpCS ) ) )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==24) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // InternalQVTimperative.g:3543:4: otherlv_3= ':' ( (lv_ownedContextType_4_0= ruleTypeExpCS ) )
                    {
                    otherlv_3=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getTransformationCSAccess().getColonKeyword_3_0());

                    }
                    // InternalQVTimperative.g:3547:4: ( (lv_ownedContextType_4_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:3548:5: (lv_ownedContextType_4_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:3548:5: (lv_ownedContextType_4_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:3549:6: lv_ownedContextType_4_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTransformationCSAccess().getOwnedContextTypeTypeExpCSParserRuleCall_3_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_41);
                    lv_ownedContextType_4_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTransformationCSRule());
                      						}
                      						set(
                      							current,
                      							"ownedContextType",
                      							lv_ownedContextType_4_0,
                      							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,35,FollowSets000.FOLLOW_68); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getTransformationCSAccess().getLeftCurlyBracketKeyword_4());

            }
            // InternalQVTimperative.g:3571:3: ( (lv_ownedDirections_6_0= ruleDirectionCS ) )*
            loop75:
            do {
                int alt75=2;
                int LA75_0 = input.LA(1);

                if ( ((LA75_0>=RULE_SIMPLE_ID && LA75_0<=RULE_ESCAPED_ID)||LA75_0==21||LA75_0==31) ) {
                    alt75=1;
                }


                switch (alt75) {
            	case 1 :
            	    // InternalQVTimperative.g:3572:4: (lv_ownedDirections_6_0= ruleDirectionCS )
            	    {
            	    // InternalQVTimperative.g:3572:4: (lv_ownedDirections_6_0= ruleDirectionCS )
            	    // InternalQVTimperative.g:3573:5: lv_ownedDirections_6_0= ruleDirectionCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getTransformationCSAccess().getOwnedDirectionsDirectionCSParserRuleCall_5_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_68);
            	    lv_ownedDirections_6_0=ruleDirectionCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getTransformationCSRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ownedDirections",
            	      						lv_ownedDirections_6_0,
            	      						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.DirectionCS");
            	      					afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop75;
                }
            } while (true);

            // InternalQVTimperative.g:3590:3: ( ( ( (lv_ownedMappings_7_1= ruleEntryPointCS | lv_ownedMappings_7_2= ruleMappingCS ) ) ) | ( (lv_ownedQueries_8_0= ruleQueryCS ) ) | ( (lv_ownedProperties_9_0= ruleStructuralFeatureCS ) ) )*
            loop77:
            do {
                int alt77=4;
                switch ( input.LA(1) ) {
                case 25:
                case 32:
                case 44:
                    {
                    alt77=1;
                    }
                    break;
                case 54:
                case 55:
                    {
                    alt77=2;
                    }
                    break;
                case 67:
                case 68:
                case 69:
                case 96:
                    {
                    alt77=3;
                    }
                    break;

                }

                switch (alt77) {
            	case 1 :
            	    // InternalQVTimperative.g:3591:4: ( ( (lv_ownedMappings_7_1= ruleEntryPointCS | lv_ownedMappings_7_2= ruleMappingCS ) ) )
            	    {
            	    // InternalQVTimperative.g:3591:4: ( ( (lv_ownedMappings_7_1= ruleEntryPointCS | lv_ownedMappings_7_2= ruleMappingCS ) ) )
            	    // InternalQVTimperative.g:3592:5: ( (lv_ownedMappings_7_1= ruleEntryPointCS | lv_ownedMappings_7_2= ruleMappingCS ) )
            	    {
            	    // InternalQVTimperative.g:3592:5: ( (lv_ownedMappings_7_1= ruleEntryPointCS | lv_ownedMappings_7_2= ruleMappingCS ) )
            	    // InternalQVTimperative.g:3593:6: (lv_ownedMappings_7_1= ruleEntryPointCS | lv_ownedMappings_7_2= ruleMappingCS )
            	    {
            	    // InternalQVTimperative.g:3593:6: (lv_ownedMappings_7_1= ruleEntryPointCS | lv_ownedMappings_7_2= ruleMappingCS )
            	    int alt76=2;
            	    switch ( input.LA(1) ) {
            	    case 25:
            	        {
            	        int LA76_1 = input.LA(2);

            	        if ( (LA76_1==32) ) {
            	            alt76=1;
            	        }
            	        else if ( (LA76_1==44) ) {
            	            alt76=2;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return current;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 76, 1, input);

            	            throw nvae;
            	        }
            	        }
            	        break;
            	    case 32:
            	        {
            	        alt76=1;
            	        }
            	        break;
            	    case 44:
            	        {
            	        alt76=2;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 76, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt76) {
            	        case 1 :
            	            // InternalQVTimperative.g:3594:7: lv_ownedMappings_7_1= ruleEntryPointCS
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getTransformationCSAccess().getOwnedMappingsEntryPointCSParserRuleCall_6_0_0_0());

            	            }
            	            pushFollow(FollowSets000.FOLLOW_69);
            	            lv_ownedMappings_7_1=ruleEntryPointCS();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getTransformationCSRule());
            	              							}
            	              							add(
            	              								current,
            	              								"ownedMappings",
            	              								lv_ownedMappings_7_1,
            	              								"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.EntryPointCS");
            	              							afterParserOrEnumRuleCall();

            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalQVTimperative.g:3610:7: lv_ownedMappings_7_2= ruleMappingCS
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getTransformationCSAccess().getOwnedMappingsMappingCSParserRuleCall_6_0_0_1());

            	            }
            	            pushFollow(FollowSets000.FOLLOW_69);
            	            lv_ownedMappings_7_2=ruleMappingCS();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getTransformationCSRule());
            	              							}
            	              							add(
            	              								current,
            	              								"ownedMappings",
            	              								lv_ownedMappings_7_2,
            	              								"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.MappingCS");
            	              							afterParserOrEnumRuleCall();

            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalQVTimperative.g:3629:4: ( (lv_ownedQueries_8_0= ruleQueryCS ) )
            	    {
            	    // InternalQVTimperative.g:3629:4: ( (lv_ownedQueries_8_0= ruleQueryCS ) )
            	    // InternalQVTimperative.g:3630:5: (lv_ownedQueries_8_0= ruleQueryCS )
            	    {
            	    // InternalQVTimperative.g:3630:5: (lv_ownedQueries_8_0= ruleQueryCS )
            	    // InternalQVTimperative.g:3631:6: lv_ownedQueries_8_0= ruleQueryCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTransformationCSAccess().getOwnedQueriesQueryCSParserRuleCall_6_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_69);
            	    lv_ownedQueries_8_0=ruleQueryCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTransformationCSRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedQueries",
            	      							lv_ownedQueries_8_0,
            	      							"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.QueryCS");
            	      						afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalQVTimperative.g:3649:4: ( (lv_ownedProperties_9_0= ruleStructuralFeatureCS ) )
            	    {
            	    // InternalQVTimperative.g:3649:4: ( (lv_ownedProperties_9_0= ruleStructuralFeatureCS ) )
            	    // InternalQVTimperative.g:3650:5: (lv_ownedProperties_9_0= ruleStructuralFeatureCS )
            	    {
            	    // InternalQVTimperative.g:3650:5: (lv_ownedProperties_9_0= ruleStructuralFeatureCS )
            	    // InternalQVTimperative.g:3651:6: lv_ownedProperties_9_0= ruleStructuralFeatureCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTransformationCSAccess().getOwnedPropertiesStructuralFeatureCSParserRuleCall_6_2_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_69);
            	    lv_ownedProperties_9_0=ruleStructuralFeatureCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTransformationCSRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedProperties",
            	      							lv_ownedProperties_9_0,
            	      							"org.eclipse.qvtd.xtext.qvtbase.QVTbase.StructuralFeatureCS");
            	      						afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);

            otherlv_10=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getTransformationCSAccess().getRightCurlyBracketKeyword_7());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTransformationCS"


    // $ANTLR start "entryRuleQVTimperativeUnrestrictedName"
    // InternalQVTimperative.g:3677:1: entryRuleQVTimperativeUnrestrictedName returns [String current=null] : iv_ruleQVTimperativeUnrestrictedName= ruleQVTimperativeUnrestrictedName EOF ;
    public final String entryRuleQVTimperativeUnrestrictedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQVTimperativeUnrestrictedName = null;


        try {
            // InternalQVTimperative.g:3677:69: (iv_ruleQVTimperativeUnrestrictedName= ruleQVTimperativeUnrestrictedName EOF )
            // InternalQVTimperative.g:3678:2: iv_ruleQVTimperativeUnrestrictedName= ruleQVTimperativeUnrestrictedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQVTimperativeUnrestrictedNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQVTimperativeUnrestrictedName=ruleQVTimperativeUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQVTimperativeUnrestrictedName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQVTimperativeUnrestrictedName"


    // $ANTLR start "ruleQVTimperativeUnrestrictedName"
    // InternalQVTimperative.g:3684:1: ruleQVTimperativeUnrestrictedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'add' | kw= 'append' | kw= 'appendsTo' | kw= 'buffer' | kw= 'call' | kw= 'check' | kw= 'contained' | kw= 'entry' | kw= 'for' | kw= 'implementedby' | kw= 'imports' | kw= 'input' | kw= 'install' | kw= 'invoke' | kw= 'iterates' | kw= 'map' | kw= 'new' | kw= 'notify' | kw= 'observe' | kw= 'output' | kw= 'package' | kw= 'query' | kw= 'set' | kw= 'speculate' | kw= 'strict' | kw= 'success' | kw= 'target' | kw= 'transformation' | kw= 'transient' | kw= 'uses' | kw= 'var' | kw= 'via' ) ;
    public final AntlrDatatypeRuleToken ruleQVTimperativeUnrestrictedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalQVTimperative.g:3690:2: ( (kw= 'add' | kw= 'append' | kw= 'appendsTo' | kw= 'buffer' | kw= 'call' | kw= 'check' | kw= 'contained' | kw= 'entry' | kw= 'for' | kw= 'implementedby' | kw= 'imports' | kw= 'input' | kw= 'install' | kw= 'invoke' | kw= 'iterates' | kw= 'map' | kw= 'new' | kw= 'notify' | kw= 'observe' | kw= 'output' | kw= 'package' | kw= 'query' | kw= 'set' | kw= 'speculate' | kw= 'strict' | kw= 'success' | kw= 'target' | kw= 'transformation' | kw= 'transient' | kw= 'uses' | kw= 'var' | kw= 'via' ) )
            // InternalQVTimperative.g:3691:2: (kw= 'add' | kw= 'append' | kw= 'appendsTo' | kw= 'buffer' | kw= 'call' | kw= 'check' | kw= 'contained' | kw= 'entry' | kw= 'for' | kw= 'implementedby' | kw= 'imports' | kw= 'input' | kw= 'install' | kw= 'invoke' | kw= 'iterates' | kw= 'map' | kw= 'new' | kw= 'notify' | kw= 'observe' | kw= 'output' | kw= 'package' | kw= 'query' | kw= 'set' | kw= 'speculate' | kw= 'strict' | kw= 'success' | kw= 'target' | kw= 'transformation' | kw= 'transient' | kw= 'uses' | kw= 'var' | kw= 'via' )
            {
            // InternalQVTimperative.g:3691:2: (kw= 'add' | kw= 'append' | kw= 'appendsTo' | kw= 'buffer' | kw= 'call' | kw= 'check' | kw= 'contained' | kw= 'entry' | kw= 'for' | kw= 'implementedby' | kw= 'imports' | kw= 'input' | kw= 'install' | kw= 'invoke' | kw= 'iterates' | kw= 'map' | kw= 'new' | kw= 'notify' | kw= 'observe' | kw= 'output' | kw= 'package' | kw= 'query' | kw= 'set' | kw= 'speculate' | kw= 'strict' | kw= 'success' | kw= 'target' | kw= 'transformation' | kw= 'transient' | kw= 'uses' | kw= 'var' | kw= 'via' )
            int alt78=32;
            switch ( input.LA(1) ) {
            case 19:
                {
                alt78=1;
                }
                break;
            case 23:
                {
                alt78=2;
                }
                break;
            case 22:
                {
                alt78=3;
                }
                break;
            case 26:
                {
                alt78=4;
                }
                break;
            case 45:
                {
                alt78=5;
                }
                break;
            case 29:
                {
                alt78=6;
                }
                break;
            case 50:
                {
                alt78=7;
                }
                break;
            case 32:
                {
                alt78=8;
                }
                break;
            case 48:
                {
                alt78=9;
                }
                break;
            case 58:
                {
                alt78=10;
                }
                break;
            case 31:
                {
                alt78=11;
                }
                break;
            case 33:
                {
                alt78=12;
                }
                break;
            case 46:
                {
                alt78=13;
                }
                break;
            case 47:
                {
                alt78=14;
                }
                break;
            case 43:
                {
                alt78=15;
                }
                break;
            case 44:
                {
                alt78=16;
                }
                break;
            case 51:
                {
                alt78=17;
                }
                break;
            case 59:
                {
                alt78=18;
                }
                break;
            case 17:
                {
                alt78=19;
                }
                break;
            case 34:
                {
                alt78=20;
                }
                break;
            case 52:
                {
                alt78=21;
                }
                break;
            case 55:
                {
                alt78=22;
                }
                break;
            case 60:
                {
                alt78=23;
                }
                break;
            case 63:
                {
                alt78=24;
                }
                break;
            case 25:
                {
                alt78=25;
                }
                break;
            case 39:
                {
                alt78=26;
                }
                break;
            case 65:
                {
                alt78=27;
                }
                break;
            case 64:
                {
                alt78=28;
                }
                break;
            case 54:
                {
                alt78=29;
                }
                break;
            case 62:
                {
                alt78=30;
                }
                break;
            case 30:
                {
                alt78=31;
                }
                break;
            case 66:
                {
                alt78=32;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 78, 0, input);

                throw nvae;
            }

            switch (alt78) {
                case 1 :
                    // InternalQVTimperative.g:3692:3: kw= 'add'
                    {
                    kw=(Token)match(input,19,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getAddKeyword_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:3698:3: kw= 'append'
                    {
                    kw=(Token)match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getAppendKeyword_1());

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:3704:3: kw= 'appendsTo'
                    {
                    kw=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getAppendsToKeyword_2());

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:3710:3: kw= 'buffer'
                    {
                    kw=(Token)match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getBufferKeyword_3());

                    }

                    }
                    break;
                case 5 :
                    // InternalQVTimperative.g:3716:3: kw= 'call'
                    {
                    kw=(Token)match(input,45,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getCallKeyword_4());

                    }

                    }
                    break;
                case 6 :
                    // InternalQVTimperative.g:3722:3: kw= 'check'
                    {
                    kw=(Token)match(input,29,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getCheckKeyword_5());

                    }

                    }
                    break;
                case 7 :
                    // InternalQVTimperative.g:3728:3: kw= 'contained'
                    {
                    kw=(Token)match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getContainedKeyword_6());

                    }

                    }
                    break;
                case 8 :
                    // InternalQVTimperative.g:3734:3: kw= 'entry'
                    {
                    kw=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getEntryKeyword_7());

                    }

                    }
                    break;
                case 9 :
                    // InternalQVTimperative.g:3740:3: kw= 'for'
                    {
                    kw=(Token)match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getForKeyword_8());

                    }

                    }
                    break;
                case 10 :
                    // InternalQVTimperative.g:3746:3: kw= 'implementedby'
                    {
                    kw=(Token)match(input,58,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getImplementedbyKeyword_9());

                    }

                    }
                    break;
                case 11 :
                    // InternalQVTimperative.g:3752:3: kw= 'imports'
                    {
                    kw=(Token)match(input,31,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getImportsKeyword_10());

                    }

                    }
                    break;
                case 12 :
                    // InternalQVTimperative.g:3758:3: kw= 'input'
                    {
                    kw=(Token)match(input,33,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getInputKeyword_11());

                    }

                    }
                    break;
                case 13 :
                    // InternalQVTimperative.g:3764:3: kw= 'install'
                    {
                    kw=(Token)match(input,46,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getInstallKeyword_12());

                    }

                    }
                    break;
                case 14 :
                    // InternalQVTimperative.g:3770:3: kw= 'invoke'
                    {
                    kw=(Token)match(input,47,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getInvokeKeyword_13());

                    }

                    }
                    break;
                case 15 :
                    // InternalQVTimperative.g:3776:3: kw= 'iterates'
                    {
                    kw=(Token)match(input,43,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getIteratesKeyword_14());

                    }

                    }
                    break;
                case 16 :
                    // InternalQVTimperative.g:3782:3: kw= 'map'
                    {
                    kw=(Token)match(input,44,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getMapKeyword_15());

                    }

                    }
                    break;
                case 17 :
                    // InternalQVTimperative.g:3788:3: kw= 'new'
                    {
                    kw=(Token)match(input,51,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getNewKeyword_16());

                    }

                    }
                    break;
                case 18 :
                    // InternalQVTimperative.g:3794:3: kw= 'notify'
                    {
                    kw=(Token)match(input,59,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getNotifyKeyword_17());

                    }

                    }
                    break;
                case 19 :
                    // InternalQVTimperative.g:3800:3: kw= 'observe'
                    {
                    kw=(Token)match(input,17,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getObserveKeyword_18());

                    }

                    }
                    break;
                case 20 :
                    // InternalQVTimperative.g:3806:3: kw= 'output'
                    {
                    kw=(Token)match(input,34,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getOutputKeyword_19());

                    }

                    }
                    break;
                case 21 :
                    // InternalQVTimperative.g:3812:3: kw= 'package'
                    {
                    kw=(Token)match(input,52,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getPackageKeyword_20());

                    }

                    }
                    break;
                case 22 :
                    // InternalQVTimperative.g:3818:3: kw= 'query'
                    {
                    kw=(Token)match(input,55,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getQueryKeyword_21());

                    }

                    }
                    break;
                case 23 :
                    // InternalQVTimperative.g:3824:3: kw= 'set'
                    {
                    kw=(Token)match(input,60,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getSetKeyword_22());

                    }

                    }
                    break;
                case 24 :
                    // InternalQVTimperative.g:3830:3: kw= 'speculate'
                    {
                    kw=(Token)match(input,63,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getSpeculateKeyword_23());

                    }

                    }
                    break;
                case 25 :
                    // InternalQVTimperative.g:3836:3: kw= 'strict'
                    {
                    kw=(Token)match(input,25,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getStrictKeyword_24());

                    }

                    }
                    break;
                case 26 :
                    // InternalQVTimperative.g:3842:3: kw= 'success'
                    {
                    kw=(Token)match(input,39,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getSuccessKeyword_25());

                    }

                    }
                    break;
                case 27 :
                    // InternalQVTimperative.g:3848:3: kw= 'target'
                    {
                    kw=(Token)match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getTargetKeyword_26());

                    }

                    }
                    break;
                case 28 :
                    // InternalQVTimperative.g:3854:3: kw= 'transformation'
                    {
                    kw=(Token)match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getTransformationKeyword_27());

                    }

                    }
                    break;
                case 29 :
                    // InternalQVTimperative.g:3860:3: kw= 'transient'
                    {
                    kw=(Token)match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getTransientKeyword_28());

                    }

                    }
                    break;
                case 30 :
                    // InternalQVTimperative.g:3866:3: kw= 'uses'
                    {
                    kw=(Token)match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getUsesKeyword_29());

                    }

                    }
                    break;
                case 31 :
                    // InternalQVTimperative.g:3872:3: kw= 'var'
                    {
                    kw=(Token)match(input,30,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getVarKeyword_30());

                    }

                    }
                    break;
                case 32 :
                    // InternalQVTimperative.g:3878:3: kw= 'via'
                    {
                    kw=(Token)match(input,66,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getViaKeyword_31());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQVTimperativeUnrestrictedName"


    // $ANTLR start "entryRuleUnrestrictedName"
    // InternalQVTimperative.g:3887:1: entryRuleUnrestrictedName returns [String current=null] : iv_ruleUnrestrictedName= ruleUnrestrictedName EOF ;
    public final String entryRuleUnrestrictedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUnrestrictedName = null;


        try {
            // InternalQVTimperative.g:3887:56: (iv_ruleUnrestrictedName= ruleUnrestrictedName EOF )
            // InternalQVTimperative.g:3888:2: iv_ruleUnrestrictedName= ruleUnrestrictedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnrestrictedNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleUnrestrictedName=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnrestrictedName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnrestrictedName"


    // $ANTLR start "ruleUnrestrictedName"
    // InternalQVTimperative.g:3894:1: ruleUnrestrictedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_EssentialOCLUnrestrictedName_0= ruleEssentialOCLUnrestrictedName | this_QVTbaseUnrestrictedName_1= ruleQVTbaseUnrestrictedName | this_QVTimperativeUnrestrictedName_2= ruleQVTimperativeUnrestrictedName ) ;
    public final AntlrDatatypeRuleToken ruleUnrestrictedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_EssentialOCLUnrestrictedName_0 = null;

        AntlrDatatypeRuleToken this_QVTbaseUnrestrictedName_1 = null;

        AntlrDatatypeRuleToken this_QVTimperativeUnrestrictedName_2 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:3900:2: ( (this_EssentialOCLUnrestrictedName_0= ruleEssentialOCLUnrestrictedName | this_QVTbaseUnrestrictedName_1= ruleQVTbaseUnrestrictedName | this_QVTimperativeUnrestrictedName_2= ruleQVTimperativeUnrestrictedName ) )
            // InternalQVTimperative.g:3901:2: (this_EssentialOCLUnrestrictedName_0= ruleEssentialOCLUnrestrictedName | this_QVTbaseUnrestrictedName_1= ruleQVTbaseUnrestrictedName | this_QVTimperativeUnrestrictedName_2= ruleQVTimperativeUnrestrictedName )
            {
            // InternalQVTimperative.g:3901:2: (this_EssentialOCLUnrestrictedName_0= ruleEssentialOCLUnrestrictedName | this_QVTbaseUnrestrictedName_1= ruleQVTbaseUnrestrictedName | this_QVTimperativeUnrestrictedName_2= ruleQVTimperativeUnrestrictedName )
            int alt79=3;
            switch ( input.LA(1) ) {
            case RULE_SIMPLE_ID:
            case RULE_ESCAPED_ID:
                {
                alt79=1;
                }
                break;
            case 67:
            case 68:
            case 69:
            case 70:
            case 72:
            case 74:
            case 76:
            case 79:
            case 81:
            case 83:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 91:
            case 92:
            case 93:
            case 94:
            case 95:
            case 96:
            case 98:
            case 100:
            case 102:
            case 103:
            case 104:
            case 105:
                {
                alt79=2;
                }
                break;
            case 54:
                {
                int LA79_3 = input.LA(2);

                if ( (synpred123_InternalQVTimperative()) ) {
                    alt79=2;
                }
                else if ( (true) ) {
                    alt79=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 79, 3, input);

                    throw nvae;
                }
                }
                break;
            case 17:
            case 19:
            case 22:
            case 23:
            case 25:
            case 26:
            case 29:
            case 30:
            case 31:
            case 32:
            case 33:
            case 34:
            case 39:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 48:
            case 50:
            case 51:
            case 52:
            case 55:
            case 58:
            case 59:
            case 60:
            case 62:
            case 63:
            case 64:
            case 65:
            case 66:
                {
                alt79=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 79, 0, input);

                throw nvae;
            }

            switch (alt79) {
                case 1 :
                    // InternalQVTimperative.g:3902:3: this_EssentialOCLUnrestrictedName_0= ruleEssentialOCLUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnrestrictedNameAccess().getEssentialOCLUnrestrictedNameParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EssentialOCLUnrestrictedName_0=ruleEssentialOCLUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_EssentialOCLUnrestrictedName_0);

                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:3913:3: this_QVTbaseUnrestrictedName_1= ruleQVTbaseUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnrestrictedNameAccess().getQVTbaseUnrestrictedNameParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_QVTbaseUnrestrictedName_1=ruleQVTbaseUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_QVTbaseUnrestrictedName_1);

                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:3924:3: this_QVTimperativeUnrestrictedName_2= ruleQVTimperativeUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnrestrictedNameAccess().getQVTimperativeUnrestrictedNameParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_QVTimperativeUnrestrictedName_2=ruleQVTimperativeUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_QVTimperativeUnrestrictedName_2);

                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnrestrictedName"


    // $ANTLR start "entryRuleAttributeCS"
    // InternalQVTimperative.g:3938:1: entryRuleAttributeCS returns [EObject current=null] : iv_ruleAttributeCS= ruleAttributeCS EOF ;
    public final EObject entryRuleAttributeCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAttributeCS = null;


        try {
            // InternalQVTimperative.g:3938:52: (iv_ruleAttributeCS= ruleAttributeCS EOF )
            // InternalQVTimperative.g:3939:2: iv_ruleAttributeCS= ruleAttributeCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAttributeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAttributeCS=ruleAttributeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAttributeCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAttributeCS"


    // $ANTLR start "ruleAttributeCS"
    // InternalQVTimperative.g:3945:1: ruleAttributeCS returns [EObject current=null] : ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'attribute' ( (lv_name_5_0= ruleUnrestrictedName ) ) (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_8= '=' ( (lv_default_9_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_10= '{' ( ( ( (lv_qualifiers_11_0= 'derived' ) ) | ( (lv_qualifiers_12_0= '!derived' ) ) | ( (lv_qualifiers_13_0= 'id' ) ) | ( (lv_qualifiers_14_0= '!id' ) ) | ( (lv_qualifiers_15_0= 'ordered' ) ) | ( (lv_qualifiers_16_0= '!ordered' ) ) | ( (lv_qualifiers_17_0= 'readonly' ) ) | ( (lv_qualifiers_18_0= '!readonly' ) ) | ( (lv_qualifiers_19_0= 'transient' ) ) | ( (lv_qualifiers_20_0= '!transient' ) ) | ( (lv_qualifiers_21_0= 'unique' ) ) | ( (lv_qualifiers_22_0= '!unique' ) ) | ( (lv_qualifiers_23_0= 'unsettable' ) ) | ( (lv_qualifiers_24_0= '!unsettable' ) ) | ( (lv_qualifiers_25_0= 'volatile' ) ) | ( (lv_qualifiers_26_0= '!volatile' ) ) ) (otherlv_27= ',' )? )+ otherlv_28= '}' )? ( (otherlv_29= '{' ( (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' ) | (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' ) )* otherlv_40= '}' ) | otherlv_41= ';' ) ) ;
    public final EObject ruleAttributeCS() throws RecognitionException {
        EObject current = null;

        Token lv_qualifiers_0_0=null;
        Token lv_qualifiers_1_0=null;
        Token lv_qualifiers_2_0=null;
        Token lv_qualifiers_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_default_9_0=null;
        Token otherlv_10=null;
        Token lv_qualifiers_11_0=null;
        Token lv_qualifiers_12_0=null;
        Token lv_qualifiers_13_0=null;
        Token lv_qualifiers_14_0=null;
        Token lv_qualifiers_15_0=null;
        Token lv_qualifiers_16_0=null;
        Token lv_qualifiers_17_0=null;
        Token lv_qualifiers_18_0=null;
        Token lv_qualifiers_19_0=null;
        Token lv_qualifiers_20_0=null;
        Token lv_qualifiers_21_0=null;
        Token lv_qualifiers_22_0=null;
        Token lv_qualifiers_23_0=null;
        Token lv_qualifiers_24_0=null;
        Token lv_qualifiers_25_0=null;
        Token lv_qualifiers_26_0=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token otherlv_30=null;
        Token otherlv_32=null;
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token otherlv_37=null;
        Token otherlv_39=null;
        Token otherlv_40=null;
        Token otherlv_41=null;
        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_ownedType_7_0 = null;

        EObject lv_ownedDefaultExpressions_33_0 = null;

        EObject lv_ownedDefaultExpressions_38_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:3951:2: ( ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'attribute' ( (lv_name_5_0= ruleUnrestrictedName ) ) (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_8= '=' ( (lv_default_9_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_10= '{' ( ( ( (lv_qualifiers_11_0= 'derived' ) ) | ( (lv_qualifiers_12_0= '!derived' ) ) | ( (lv_qualifiers_13_0= 'id' ) ) | ( (lv_qualifiers_14_0= '!id' ) ) | ( (lv_qualifiers_15_0= 'ordered' ) ) | ( (lv_qualifiers_16_0= '!ordered' ) ) | ( (lv_qualifiers_17_0= 'readonly' ) ) | ( (lv_qualifiers_18_0= '!readonly' ) ) | ( (lv_qualifiers_19_0= 'transient' ) ) | ( (lv_qualifiers_20_0= '!transient' ) ) | ( (lv_qualifiers_21_0= 'unique' ) ) | ( (lv_qualifiers_22_0= '!unique' ) ) | ( (lv_qualifiers_23_0= 'unsettable' ) ) | ( (lv_qualifiers_24_0= '!unsettable' ) ) | ( (lv_qualifiers_25_0= 'volatile' ) ) | ( (lv_qualifiers_26_0= '!volatile' ) ) ) (otherlv_27= ',' )? )+ otherlv_28= '}' )? ( (otherlv_29= '{' ( (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' ) | (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' ) )* otherlv_40= '}' ) | otherlv_41= ';' ) ) )
            // InternalQVTimperative.g:3952:2: ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'attribute' ( (lv_name_5_0= ruleUnrestrictedName ) ) (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_8= '=' ( (lv_default_9_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_10= '{' ( ( ( (lv_qualifiers_11_0= 'derived' ) ) | ( (lv_qualifiers_12_0= '!derived' ) ) | ( (lv_qualifiers_13_0= 'id' ) ) | ( (lv_qualifiers_14_0= '!id' ) ) | ( (lv_qualifiers_15_0= 'ordered' ) ) | ( (lv_qualifiers_16_0= '!ordered' ) ) | ( (lv_qualifiers_17_0= 'readonly' ) ) | ( (lv_qualifiers_18_0= '!readonly' ) ) | ( (lv_qualifiers_19_0= 'transient' ) ) | ( (lv_qualifiers_20_0= '!transient' ) ) | ( (lv_qualifiers_21_0= 'unique' ) ) | ( (lv_qualifiers_22_0= '!unique' ) ) | ( (lv_qualifiers_23_0= 'unsettable' ) ) | ( (lv_qualifiers_24_0= '!unsettable' ) ) | ( (lv_qualifiers_25_0= 'volatile' ) ) | ( (lv_qualifiers_26_0= '!volatile' ) ) ) (otherlv_27= ',' )? )+ otherlv_28= '}' )? ( (otherlv_29= '{' ( (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' ) | (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' ) )* otherlv_40= '}' ) | otherlv_41= ';' ) )
            {
            // InternalQVTimperative.g:3952:2: ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'attribute' ( (lv_name_5_0= ruleUnrestrictedName ) ) (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_8= '=' ( (lv_default_9_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_10= '{' ( ( ( (lv_qualifiers_11_0= 'derived' ) ) | ( (lv_qualifiers_12_0= '!derived' ) ) | ( (lv_qualifiers_13_0= 'id' ) ) | ( (lv_qualifiers_14_0= '!id' ) ) | ( (lv_qualifiers_15_0= 'ordered' ) ) | ( (lv_qualifiers_16_0= '!ordered' ) ) | ( (lv_qualifiers_17_0= 'readonly' ) ) | ( (lv_qualifiers_18_0= '!readonly' ) ) | ( (lv_qualifiers_19_0= 'transient' ) ) | ( (lv_qualifiers_20_0= '!transient' ) ) | ( (lv_qualifiers_21_0= 'unique' ) ) | ( (lv_qualifiers_22_0= '!unique' ) ) | ( (lv_qualifiers_23_0= 'unsettable' ) ) | ( (lv_qualifiers_24_0= '!unsettable' ) ) | ( (lv_qualifiers_25_0= 'volatile' ) ) | ( (lv_qualifiers_26_0= '!volatile' ) ) ) (otherlv_27= ',' )? )+ otherlv_28= '}' )? ( (otherlv_29= '{' ( (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' ) | (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' ) )* otherlv_40= '}' ) | otherlv_41= ';' ) )
            // InternalQVTimperative.g:3953:3: ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'attribute' ( (lv_name_5_0= ruleUnrestrictedName ) ) (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_8= '=' ( (lv_default_9_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_10= '{' ( ( ( (lv_qualifiers_11_0= 'derived' ) ) | ( (lv_qualifiers_12_0= '!derived' ) ) | ( (lv_qualifiers_13_0= 'id' ) ) | ( (lv_qualifiers_14_0= '!id' ) ) | ( (lv_qualifiers_15_0= 'ordered' ) ) | ( (lv_qualifiers_16_0= '!ordered' ) ) | ( (lv_qualifiers_17_0= 'readonly' ) ) | ( (lv_qualifiers_18_0= '!readonly' ) ) | ( (lv_qualifiers_19_0= 'transient' ) ) | ( (lv_qualifiers_20_0= '!transient' ) ) | ( (lv_qualifiers_21_0= 'unique' ) ) | ( (lv_qualifiers_22_0= '!unique' ) ) | ( (lv_qualifiers_23_0= 'unsettable' ) ) | ( (lv_qualifiers_24_0= '!unsettable' ) ) | ( (lv_qualifiers_25_0= 'volatile' ) ) | ( (lv_qualifiers_26_0= '!volatile' ) ) ) (otherlv_27= ',' )? )+ otherlv_28= '}' )? ( (otherlv_29= '{' ( (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' ) | (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' ) )* otherlv_40= '}' ) | otherlv_41= ';' )
            {
            // InternalQVTimperative.g:3953:3: ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )?
            int alt82=3;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==67) ) {
                alt82=1;
            }
            else if ( (LA82_0==68) ) {
                alt82=2;
            }
            switch (alt82) {
                case 1 :
                    // InternalQVTimperative.g:3954:4: ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? )
                    {
                    // InternalQVTimperative.g:3954:4: ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? )
                    // InternalQVTimperative.g:3955:5: ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )?
                    {
                    // InternalQVTimperative.g:3955:5: ( (lv_qualifiers_0_0= 'static' ) )
                    // InternalQVTimperative.g:3956:6: (lv_qualifiers_0_0= 'static' )
                    {
                    // InternalQVTimperative.g:3956:6: (lv_qualifiers_0_0= 'static' )
                    // InternalQVTimperative.g:3957:7: lv_qualifiers_0_0= 'static'
                    {
                    lv_qualifiers_0_0=(Token)match(input,67,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_qualifiers_0_0, grammarAccess.getAttributeCSAccess().getQualifiersStaticKeyword_0_0_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getAttributeCSRule());
                      							}
                      							addWithLastConsumed(current, "qualifiers", lv_qualifiers_0_0, "static");

                    }

                    }


                    }

                    // InternalQVTimperative.g:3969:5: ( (lv_qualifiers_1_0= 'definition' ) )?
                    int alt80=2;
                    int LA80_0 = input.LA(1);

                    if ( (LA80_0==68) ) {
                        alt80=1;
                    }
                    switch (alt80) {
                        case 1 :
                            // InternalQVTimperative.g:3970:6: (lv_qualifiers_1_0= 'definition' )
                            {
                            // InternalQVTimperative.g:3970:6: (lv_qualifiers_1_0= 'definition' )
                            // InternalQVTimperative.g:3971:7: lv_qualifiers_1_0= 'definition'
                            {
                            lv_qualifiers_1_0=(Token)match(input,68,FollowSets000.FOLLOW_71); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_qualifiers_1_0, grammarAccess.getAttributeCSAccess().getQualifiersDefinitionKeyword_0_0_1_0());

                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getAttributeCSRule());
                              							}
                              							addWithLastConsumed(current, "qualifiers", lv_qualifiers_1_0, "definition");

                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:3985:4: ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? )
                    {
                    // InternalQVTimperative.g:3985:4: ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? )
                    // InternalQVTimperative.g:3986:5: ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )?
                    {
                    // InternalQVTimperative.g:3986:5: ( (lv_qualifiers_2_0= 'definition' ) )
                    // InternalQVTimperative.g:3987:6: (lv_qualifiers_2_0= 'definition' )
                    {
                    // InternalQVTimperative.g:3987:6: (lv_qualifiers_2_0= 'definition' )
                    // InternalQVTimperative.g:3988:7: lv_qualifiers_2_0= 'definition'
                    {
                    lv_qualifiers_2_0=(Token)match(input,68,FollowSets000.FOLLOW_72); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_qualifiers_2_0, grammarAccess.getAttributeCSAccess().getQualifiersDefinitionKeyword_0_1_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getAttributeCSRule());
                      							}
                      							addWithLastConsumed(current, "qualifiers", lv_qualifiers_2_0, "definition");

                    }

                    }


                    }

                    // InternalQVTimperative.g:4000:5: ( (lv_qualifiers_3_0= 'static' ) )?
                    int alt81=2;
                    int LA81_0 = input.LA(1);

                    if ( (LA81_0==67) ) {
                        alt81=1;
                    }
                    switch (alt81) {
                        case 1 :
                            // InternalQVTimperative.g:4001:6: (lv_qualifiers_3_0= 'static' )
                            {
                            // InternalQVTimperative.g:4001:6: (lv_qualifiers_3_0= 'static' )
                            // InternalQVTimperative.g:4002:7: lv_qualifiers_3_0= 'static'
                            {
                            lv_qualifiers_3_0=(Token)match(input,67,FollowSets000.FOLLOW_71); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_qualifiers_3_0, grammarAccess.getAttributeCSAccess().getQualifiersStaticKeyword_0_1_1_0());

                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getAttributeCSRule());
                              							}
                              							addWithLastConsumed(current, "qualifiers", lv_qualifiers_3_0, "static");

                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,69,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getAttributeCSAccess().getAttributeKeyword_1());

            }
            // InternalQVTimperative.g:4020:3: ( (lv_name_5_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:4021:4: (lv_name_5_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:4021:4: (lv_name_5_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:4022:5: lv_name_5_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAttributeCSAccess().getNameUnrestrictedNameParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_49);
            lv_name_5_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAttributeCSRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_5_0,
              						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:4039:3: (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypedMultiplicityRefCS ) ) )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==24) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalQVTimperative.g:4040:4: otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypedMultiplicityRefCS ) )
                    {
                    otherlv_6=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getAttributeCSAccess().getColonKeyword_3_0());

                    }
                    // InternalQVTimperative.g:4044:4: ( (lv_ownedType_7_0= ruleTypedMultiplicityRefCS ) )
                    // InternalQVTimperative.g:4045:5: (lv_ownedType_7_0= ruleTypedMultiplicityRefCS )
                    {
                    // InternalQVTimperative.g:4045:5: (lv_ownedType_7_0= ruleTypedMultiplicityRefCS )
                    // InternalQVTimperative.g:4046:6: lv_ownedType_7_0= ruleTypedMultiplicityRefCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAttributeCSAccess().getOwnedTypeTypedMultiplicityRefCSParserRuleCall_3_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_50);
                    lv_ownedType_7_0=ruleTypedMultiplicityRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAttributeCSRule());
                      						}
                      						set(
                      							current,
                      							"ownedType",
                      							lv_ownedType_7_0,
                      							"org.eclipse.qvtd.xtext.qvtbase.QVTbase.TypedMultiplicityRefCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:4064:3: (otherlv_8= '=' ( (lv_default_9_0= RULE_SINGLE_QUOTED_STRING ) ) )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==53) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalQVTimperative.g:4065:4: otherlv_8= '=' ( (lv_default_9_0= RULE_SINGLE_QUOTED_STRING ) )
                    {
                    otherlv_8=(Token)match(input,53,FollowSets000.FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getAttributeCSAccess().getEqualsSignKeyword_4_0());

                    }
                    // InternalQVTimperative.g:4069:4: ( (lv_default_9_0= RULE_SINGLE_QUOTED_STRING ) )
                    // InternalQVTimperative.g:4070:5: (lv_default_9_0= RULE_SINGLE_QUOTED_STRING )
                    {
                    // InternalQVTimperative.g:4070:5: (lv_default_9_0= RULE_SINGLE_QUOTED_STRING )
                    // InternalQVTimperative.g:4071:6: lv_default_9_0= RULE_SINGLE_QUOTED_STRING
                    {
                    lv_default_9_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_default_9_0, grammarAccess.getAttributeCSAccess().getDefaultSINGLE_QUOTED_STRINGTerminalRuleCall_4_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getAttributeCSRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"default",
                      							lv_default_9_0,
                      							"org.eclipse.ocl.xtext.base.Base.SINGLE_QUOTED_STRING");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:4088:3: (otherlv_10= '{' ( ( ( (lv_qualifiers_11_0= 'derived' ) ) | ( (lv_qualifiers_12_0= '!derived' ) ) | ( (lv_qualifiers_13_0= 'id' ) ) | ( (lv_qualifiers_14_0= '!id' ) ) | ( (lv_qualifiers_15_0= 'ordered' ) ) | ( (lv_qualifiers_16_0= '!ordered' ) ) | ( (lv_qualifiers_17_0= 'readonly' ) ) | ( (lv_qualifiers_18_0= '!readonly' ) ) | ( (lv_qualifiers_19_0= 'transient' ) ) | ( (lv_qualifiers_20_0= '!transient' ) ) | ( (lv_qualifiers_21_0= 'unique' ) ) | ( (lv_qualifiers_22_0= '!unique' ) ) | ( (lv_qualifiers_23_0= 'unsettable' ) ) | ( (lv_qualifiers_24_0= '!unsettable' ) ) | ( (lv_qualifiers_25_0= 'volatile' ) ) | ( (lv_qualifiers_26_0= '!volatile' ) ) ) (otherlv_27= ',' )? )+ otherlv_28= '}' )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==35) ) {
                int LA88_1 = input.LA(2);

                if ( (LA88_1==54||(LA88_1>=70 && LA88_1<=84)) ) {
                    alt88=1;
                }
            }
            switch (alt88) {
                case 1 :
                    // InternalQVTimperative.g:4089:4: otherlv_10= '{' ( ( ( (lv_qualifiers_11_0= 'derived' ) ) | ( (lv_qualifiers_12_0= '!derived' ) ) | ( (lv_qualifiers_13_0= 'id' ) ) | ( (lv_qualifiers_14_0= '!id' ) ) | ( (lv_qualifiers_15_0= 'ordered' ) ) | ( (lv_qualifiers_16_0= '!ordered' ) ) | ( (lv_qualifiers_17_0= 'readonly' ) ) | ( (lv_qualifiers_18_0= '!readonly' ) ) | ( (lv_qualifiers_19_0= 'transient' ) ) | ( (lv_qualifiers_20_0= '!transient' ) ) | ( (lv_qualifiers_21_0= 'unique' ) ) | ( (lv_qualifiers_22_0= '!unique' ) ) | ( (lv_qualifiers_23_0= 'unsettable' ) ) | ( (lv_qualifiers_24_0= '!unsettable' ) ) | ( (lv_qualifiers_25_0= 'volatile' ) ) | ( (lv_qualifiers_26_0= '!volatile' ) ) ) (otherlv_27= ',' )? )+ otherlv_28= '}'
                    {
                    otherlv_10=(Token)match(input,35,FollowSets000.FOLLOW_73); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getAttributeCSAccess().getLeftCurlyBracketKeyword_5_0());

                    }
                    // InternalQVTimperative.g:4093:4: ( ( ( (lv_qualifiers_11_0= 'derived' ) ) | ( (lv_qualifiers_12_0= '!derived' ) ) | ( (lv_qualifiers_13_0= 'id' ) ) | ( (lv_qualifiers_14_0= '!id' ) ) | ( (lv_qualifiers_15_0= 'ordered' ) ) | ( (lv_qualifiers_16_0= '!ordered' ) ) | ( (lv_qualifiers_17_0= 'readonly' ) ) | ( (lv_qualifiers_18_0= '!readonly' ) ) | ( (lv_qualifiers_19_0= 'transient' ) ) | ( (lv_qualifiers_20_0= '!transient' ) ) | ( (lv_qualifiers_21_0= 'unique' ) ) | ( (lv_qualifiers_22_0= '!unique' ) ) | ( (lv_qualifiers_23_0= 'unsettable' ) ) | ( (lv_qualifiers_24_0= '!unsettable' ) ) | ( (lv_qualifiers_25_0= 'volatile' ) ) | ( (lv_qualifiers_26_0= '!volatile' ) ) ) (otherlv_27= ',' )? )+
                    int cnt87=0;
                    loop87:
                    do {
                        int alt87=2;
                        int LA87_0 = input.LA(1);

                        if ( (LA87_0==54||(LA87_0>=70 && LA87_0<=84)) ) {
                            alt87=1;
                        }


                        switch (alt87) {
                    	case 1 :
                    	    // InternalQVTimperative.g:4094:5: ( ( (lv_qualifiers_11_0= 'derived' ) ) | ( (lv_qualifiers_12_0= '!derived' ) ) | ( (lv_qualifiers_13_0= 'id' ) ) | ( (lv_qualifiers_14_0= '!id' ) ) | ( (lv_qualifiers_15_0= 'ordered' ) ) | ( (lv_qualifiers_16_0= '!ordered' ) ) | ( (lv_qualifiers_17_0= 'readonly' ) ) | ( (lv_qualifiers_18_0= '!readonly' ) ) | ( (lv_qualifiers_19_0= 'transient' ) ) | ( (lv_qualifiers_20_0= '!transient' ) ) | ( (lv_qualifiers_21_0= 'unique' ) ) | ( (lv_qualifiers_22_0= '!unique' ) ) | ( (lv_qualifiers_23_0= 'unsettable' ) ) | ( (lv_qualifiers_24_0= '!unsettable' ) ) | ( (lv_qualifiers_25_0= 'volatile' ) ) | ( (lv_qualifiers_26_0= '!volatile' ) ) ) (otherlv_27= ',' )?
                    	    {
                    	    // InternalQVTimperative.g:4094:5: ( ( (lv_qualifiers_11_0= 'derived' ) ) | ( (lv_qualifiers_12_0= '!derived' ) ) | ( (lv_qualifiers_13_0= 'id' ) ) | ( (lv_qualifiers_14_0= '!id' ) ) | ( (lv_qualifiers_15_0= 'ordered' ) ) | ( (lv_qualifiers_16_0= '!ordered' ) ) | ( (lv_qualifiers_17_0= 'readonly' ) ) | ( (lv_qualifiers_18_0= '!readonly' ) ) | ( (lv_qualifiers_19_0= 'transient' ) ) | ( (lv_qualifiers_20_0= '!transient' ) ) | ( (lv_qualifiers_21_0= 'unique' ) ) | ( (lv_qualifiers_22_0= '!unique' ) ) | ( (lv_qualifiers_23_0= 'unsettable' ) ) | ( (lv_qualifiers_24_0= '!unsettable' ) ) | ( (lv_qualifiers_25_0= 'volatile' ) ) | ( (lv_qualifiers_26_0= '!volatile' ) ) )
                    	    int alt85=16;
                    	    switch ( input.LA(1) ) {
                    	    case 70:
                    	        {
                    	        alt85=1;
                    	        }
                    	        break;
                    	    case 71:
                    	        {
                    	        alt85=2;
                    	        }
                    	        break;
                    	    case 72:
                    	        {
                    	        alt85=3;
                    	        }
                    	        break;
                    	    case 73:
                    	        {
                    	        alt85=4;
                    	        }
                    	        break;
                    	    case 74:
                    	        {
                    	        alt85=5;
                    	        }
                    	        break;
                    	    case 75:
                    	        {
                    	        alt85=6;
                    	        }
                    	        break;
                    	    case 76:
                    	        {
                    	        alt85=7;
                    	        }
                    	        break;
                    	    case 77:
                    	        {
                    	        alt85=8;
                    	        }
                    	        break;
                    	    case 54:
                    	        {
                    	        alt85=9;
                    	        }
                    	        break;
                    	    case 78:
                    	        {
                    	        alt85=10;
                    	        }
                    	        break;
                    	    case 79:
                    	        {
                    	        alt85=11;
                    	        }
                    	        break;
                    	    case 80:
                    	        {
                    	        alt85=12;
                    	        }
                    	        break;
                    	    case 81:
                    	        {
                    	        alt85=13;
                    	        }
                    	        break;
                    	    case 82:
                    	        {
                    	        alt85=14;
                    	        }
                    	        break;
                    	    case 83:
                    	        {
                    	        alt85=15;
                    	        }
                    	        break;
                    	    case 84:
                    	        {
                    	        alt85=16;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 85, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt85) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:4095:6: ( (lv_qualifiers_11_0= 'derived' ) )
                    	            {
                    	            // InternalQVTimperative.g:4095:6: ( (lv_qualifiers_11_0= 'derived' ) )
                    	            // InternalQVTimperative.g:4096:7: (lv_qualifiers_11_0= 'derived' )
                    	            {
                    	            // InternalQVTimperative.g:4096:7: (lv_qualifiers_11_0= 'derived' )
                    	            // InternalQVTimperative.g:4097:8: lv_qualifiers_11_0= 'derived'
                    	            {
                    	            lv_qualifiers_11_0=(Token)match(input,70,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_11_0, grammarAccess.getAttributeCSAccess().getQualifiersDerivedKeyword_5_1_0_0_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_11_0, "derived");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalQVTimperative.g:4110:6: ( (lv_qualifiers_12_0= '!derived' ) )
                    	            {
                    	            // InternalQVTimperative.g:4110:6: ( (lv_qualifiers_12_0= '!derived' ) )
                    	            // InternalQVTimperative.g:4111:7: (lv_qualifiers_12_0= '!derived' )
                    	            {
                    	            // InternalQVTimperative.g:4111:7: (lv_qualifiers_12_0= '!derived' )
                    	            // InternalQVTimperative.g:4112:8: lv_qualifiers_12_0= '!derived'
                    	            {
                    	            lv_qualifiers_12_0=(Token)match(input,71,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_12_0, grammarAccess.getAttributeCSAccess().getQualifiersDerivedKeyword_5_1_0_1_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_12_0, "!derived");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 3 :
                    	            // InternalQVTimperative.g:4125:6: ( (lv_qualifiers_13_0= 'id' ) )
                    	            {
                    	            // InternalQVTimperative.g:4125:6: ( (lv_qualifiers_13_0= 'id' ) )
                    	            // InternalQVTimperative.g:4126:7: (lv_qualifiers_13_0= 'id' )
                    	            {
                    	            // InternalQVTimperative.g:4126:7: (lv_qualifiers_13_0= 'id' )
                    	            // InternalQVTimperative.g:4127:8: lv_qualifiers_13_0= 'id'
                    	            {
                    	            lv_qualifiers_13_0=(Token)match(input,72,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_13_0, grammarAccess.getAttributeCSAccess().getQualifiersIdKeyword_5_1_0_2_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_13_0, "id");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 4 :
                    	            // InternalQVTimperative.g:4140:6: ( (lv_qualifiers_14_0= '!id' ) )
                    	            {
                    	            // InternalQVTimperative.g:4140:6: ( (lv_qualifiers_14_0= '!id' ) )
                    	            // InternalQVTimperative.g:4141:7: (lv_qualifiers_14_0= '!id' )
                    	            {
                    	            // InternalQVTimperative.g:4141:7: (lv_qualifiers_14_0= '!id' )
                    	            // InternalQVTimperative.g:4142:8: lv_qualifiers_14_0= '!id'
                    	            {
                    	            lv_qualifiers_14_0=(Token)match(input,73,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_14_0, grammarAccess.getAttributeCSAccess().getQualifiersIdKeyword_5_1_0_3_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_14_0, "!id");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 5 :
                    	            // InternalQVTimperative.g:4155:6: ( (lv_qualifiers_15_0= 'ordered' ) )
                    	            {
                    	            // InternalQVTimperative.g:4155:6: ( (lv_qualifiers_15_0= 'ordered' ) )
                    	            // InternalQVTimperative.g:4156:7: (lv_qualifiers_15_0= 'ordered' )
                    	            {
                    	            // InternalQVTimperative.g:4156:7: (lv_qualifiers_15_0= 'ordered' )
                    	            // InternalQVTimperative.g:4157:8: lv_qualifiers_15_0= 'ordered'
                    	            {
                    	            lv_qualifiers_15_0=(Token)match(input,74,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_15_0, grammarAccess.getAttributeCSAccess().getQualifiersOrderedKeyword_5_1_0_4_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_15_0, "ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 6 :
                    	            // InternalQVTimperative.g:4170:6: ( (lv_qualifiers_16_0= '!ordered' ) )
                    	            {
                    	            // InternalQVTimperative.g:4170:6: ( (lv_qualifiers_16_0= '!ordered' ) )
                    	            // InternalQVTimperative.g:4171:7: (lv_qualifiers_16_0= '!ordered' )
                    	            {
                    	            // InternalQVTimperative.g:4171:7: (lv_qualifiers_16_0= '!ordered' )
                    	            // InternalQVTimperative.g:4172:8: lv_qualifiers_16_0= '!ordered'
                    	            {
                    	            lv_qualifiers_16_0=(Token)match(input,75,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_16_0, grammarAccess.getAttributeCSAccess().getQualifiersOrderedKeyword_5_1_0_5_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_16_0, "!ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 7 :
                    	            // InternalQVTimperative.g:4185:6: ( (lv_qualifiers_17_0= 'readonly' ) )
                    	            {
                    	            // InternalQVTimperative.g:4185:6: ( (lv_qualifiers_17_0= 'readonly' ) )
                    	            // InternalQVTimperative.g:4186:7: (lv_qualifiers_17_0= 'readonly' )
                    	            {
                    	            // InternalQVTimperative.g:4186:7: (lv_qualifiers_17_0= 'readonly' )
                    	            // InternalQVTimperative.g:4187:8: lv_qualifiers_17_0= 'readonly'
                    	            {
                    	            lv_qualifiers_17_0=(Token)match(input,76,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_17_0, grammarAccess.getAttributeCSAccess().getQualifiersReadonlyKeyword_5_1_0_6_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_17_0, "readonly");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 8 :
                    	            // InternalQVTimperative.g:4200:6: ( (lv_qualifiers_18_0= '!readonly' ) )
                    	            {
                    	            // InternalQVTimperative.g:4200:6: ( (lv_qualifiers_18_0= '!readonly' ) )
                    	            // InternalQVTimperative.g:4201:7: (lv_qualifiers_18_0= '!readonly' )
                    	            {
                    	            // InternalQVTimperative.g:4201:7: (lv_qualifiers_18_0= '!readonly' )
                    	            // InternalQVTimperative.g:4202:8: lv_qualifiers_18_0= '!readonly'
                    	            {
                    	            lv_qualifiers_18_0=(Token)match(input,77,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_18_0, grammarAccess.getAttributeCSAccess().getQualifiersReadonlyKeyword_5_1_0_7_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_18_0, "!readonly");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 9 :
                    	            // InternalQVTimperative.g:4215:6: ( (lv_qualifiers_19_0= 'transient' ) )
                    	            {
                    	            // InternalQVTimperative.g:4215:6: ( (lv_qualifiers_19_0= 'transient' ) )
                    	            // InternalQVTimperative.g:4216:7: (lv_qualifiers_19_0= 'transient' )
                    	            {
                    	            // InternalQVTimperative.g:4216:7: (lv_qualifiers_19_0= 'transient' )
                    	            // InternalQVTimperative.g:4217:8: lv_qualifiers_19_0= 'transient'
                    	            {
                    	            lv_qualifiers_19_0=(Token)match(input,54,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_19_0, grammarAccess.getAttributeCSAccess().getQualifiersTransientKeyword_5_1_0_8_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_19_0, "transient");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 10 :
                    	            // InternalQVTimperative.g:4230:6: ( (lv_qualifiers_20_0= '!transient' ) )
                    	            {
                    	            // InternalQVTimperative.g:4230:6: ( (lv_qualifiers_20_0= '!transient' ) )
                    	            // InternalQVTimperative.g:4231:7: (lv_qualifiers_20_0= '!transient' )
                    	            {
                    	            // InternalQVTimperative.g:4231:7: (lv_qualifiers_20_0= '!transient' )
                    	            // InternalQVTimperative.g:4232:8: lv_qualifiers_20_0= '!transient'
                    	            {
                    	            lv_qualifiers_20_0=(Token)match(input,78,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_20_0, grammarAccess.getAttributeCSAccess().getQualifiersTransientKeyword_5_1_0_9_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_20_0, "!transient");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 11 :
                    	            // InternalQVTimperative.g:4245:6: ( (lv_qualifiers_21_0= 'unique' ) )
                    	            {
                    	            // InternalQVTimperative.g:4245:6: ( (lv_qualifiers_21_0= 'unique' ) )
                    	            // InternalQVTimperative.g:4246:7: (lv_qualifiers_21_0= 'unique' )
                    	            {
                    	            // InternalQVTimperative.g:4246:7: (lv_qualifiers_21_0= 'unique' )
                    	            // InternalQVTimperative.g:4247:8: lv_qualifiers_21_0= 'unique'
                    	            {
                    	            lv_qualifiers_21_0=(Token)match(input,79,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_21_0, grammarAccess.getAttributeCSAccess().getQualifiersUniqueKeyword_5_1_0_10_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_21_0, "unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 12 :
                    	            // InternalQVTimperative.g:4260:6: ( (lv_qualifiers_22_0= '!unique' ) )
                    	            {
                    	            // InternalQVTimperative.g:4260:6: ( (lv_qualifiers_22_0= '!unique' ) )
                    	            // InternalQVTimperative.g:4261:7: (lv_qualifiers_22_0= '!unique' )
                    	            {
                    	            // InternalQVTimperative.g:4261:7: (lv_qualifiers_22_0= '!unique' )
                    	            // InternalQVTimperative.g:4262:8: lv_qualifiers_22_0= '!unique'
                    	            {
                    	            lv_qualifiers_22_0=(Token)match(input,80,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_22_0, grammarAccess.getAttributeCSAccess().getQualifiersUniqueKeyword_5_1_0_11_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_22_0, "!unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 13 :
                    	            // InternalQVTimperative.g:4275:6: ( (lv_qualifiers_23_0= 'unsettable' ) )
                    	            {
                    	            // InternalQVTimperative.g:4275:6: ( (lv_qualifiers_23_0= 'unsettable' ) )
                    	            // InternalQVTimperative.g:4276:7: (lv_qualifiers_23_0= 'unsettable' )
                    	            {
                    	            // InternalQVTimperative.g:4276:7: (lv_qualifiers_23_0= 'unsettable' )
                    	            // InternalQVTimperative.g:4277:8: lv_qualifiers_23_0= 'unsettable'
                    	            {
                    	            lv_qualifiers_23_0=(Token)match(input,81,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_23_0, grammarAccess.getAttributeCSAccess().getQualifiersUnsettableKeyword_5_1_0_12_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_23_0, "unsettable");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 14 :
                    	            // InternalQVTimperative.g:4290:6: ( (lv_qualifiers_24_0= '!unsettable' ) )
                    	            {
                    	            // InternalQVTimperative.g:4290:6: ( (lv_qualifiers_24_0= '!unsettable' ) )
                    	            // InternalQVTimperative.g:4291:7: (lv_qualifiers_24_0= '!unsettable' )
                    	            {
                    	            // InternalQVTimperative.g:4291:7: (lv_qualifiers_24_0= '!unsettable' )
                    	            // InternalQVTimperative.g:4292:8: lv_qualifiers_24_0= '!unsettable'
                    	            {
                    	            lv_qualifiers_24_0=(Token)match(input,82,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_24_0, grammarAccess.getAttributeCSAccess().getQualifiersUnsettableKeyword_5_1_0_13_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_24_0, "!unsettable");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 15 :
                    	            // InternalQVTimperative.g:4305:6: ( (lv_qualifiers_25_0= 'volatile' ) )
                    	            {
                    	            // InternalQVTimperative.g:4305:6: ( (lv_qualifiers_25_0= 'volatile' ) )
                    	            // InternalQVTimperative.g:4306:7: (lv_qualifiers_25_0= 'volatile' )
                    	            {
                    	            // InternalQVTimperative.g:4306:7: (lv_qualifiers_25_0= 'volatile' )
                    	            // InternalQVTimperative.g:4307:8: lv_qualifiers_25_0= 'volatile'
                    	            {
                    	            lv_qualifiers_25_0=(Token)match(input,83,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_25_0, grammarAccess.getAttributeCSAccess().getQualifiersVolatileKeyword_5_1_0_14_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_25_0, "volatile");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 16 :
                    	            // InternalQVTimperative.g:4320:6: ( (lv_qualifiers_26_0= '!volatile' ) )
                    	            {
                    	            // InternalQVTimperative.g:4320:6: ( (lv_qualifiers_26_0= '!volatile' ) )
                    	            // InternalQVTimperative.g:4321:7: (lv_qualifiers_26_0= '!volatile' )
                    	            {
                    	            // InternalQVTimperative.g:4321:7: (lv_qualifiers_26_0= '!volatile' )
                    	            // InternalQVTimperative.g:4322:8: lv_qualifiers_26_0= '!volatile'
                    	            {
                    	            lv_qualifiers_26_0=(Token)match(input,84,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_26_0, grammarAccess.getAttributeCSAccess().getQualifiersVolatileKeyword_5_1_0_15_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_26_0, "!volatile");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalQVTimperative.g:4335:5: (otherlv_27= ',' )?
                    	    int alt86=2;
                    	    int LA86_0 = input.LA(1);

                    	    if ( (LA86_0==18) ) {
                    	        alt86=1;
                    	    }
                    	    switch (alt86) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:4336:6: otherlv_27= ','
                    	            {
                    	            otherlv_27=(Token)match(input,18,FollowSets000.FOLLOW_75); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(otherlv_27, grammarAccess.getAttributeCSAccess().getCommaKeyword_5_1_1());

                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt87 >= 1 ) break loop87;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(87, input);
                                throw eee;
                        }
                        cnt87++;
                    } while (true);

                    otherlv_28=(Token)match(input,36,FollowSets000.FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_28, grammarAccess.getAttributeCSAccess().getRightCurlyBracketKeyword_5_2());

                    }

                    }
                    break;

            }

            // InternalQVTimperative.g:4347:3: ( (otherlv_29= '{' ( (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' ) | (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' ) )* otherlv_40= '}' ) | otherlv_41= ';' )
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==35) ) {
                alt94=1;
            }
            else if ( (LA94_0==21) ) {
                alt94=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 94, 0, input);

                throw nvae;
            }
            switch (alt94) {
                case 1 :
                    // InternalQVTimperative.g:4348:4: (otherlv_29= '{' ( (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' ) | (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' ) )* otherlv_40= '}' )
                    {
                    // InternalQVTimperative.g:4348:4: (otherlv_29= '{' ( (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' ) | (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' ) )* otherlv_40= '}' )
                    // InternalQVTimperative.g:4349:5: otherlv_29= '{' ( (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' ) | (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' ) )* otherlv_40= '}'
                    {
                    otherlv_29=(Token)match(input,35,FollowSets000.FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_29, grammarAccess.getAttributeCSAccess().getLeftCurlyBracketKeyword_6_0_0());

                    }
                    // InternalQVTimperative.g:4353:5: ( (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' ) | (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' ) )*
                    loop93:
                    do {
                        int alt93=3;
                        int LA93_0 = input.LA(1);

                        if ( (LA93_0==85) ) {
                            alt93=1;
                        }
                        else if ( (LA93_0==86) ) {
                            alt93=2;
                        }


                        switch (alt93) {
                    	case 1 :
                    	    // InternalQVTimperative.g:4354:6: (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' )
                    	    {
                    	    // InternalQVTimperative.g:4354:6: (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' )
                    	    // InternalQVTimperative.g:4355:7: otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';'
                    	    {
                    	    otherlv_30=(Token)match(input,85,FollowSets000.FOLLOW_14); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_30, grammarAccess.getAttributeCSAccess().getInitialKeyword_6_0_1_0_0());

                    	    }
                    	    // InternalQVTimperative.g:4359:7: ( ruleUnrestrictedName )?
                    	    int alt89=2;
                    	    int LA89_0 = input.LA(1);

                    	    if ( ((LA89_0>=RULE_SIMPLE_ID && LA89_0<=RULE_ESCAPED_ID)||LA89_0==17||LA89_0==19||(LA89_0>=22 && LA89_0<=23)||(LA89_0>=25 && LA89_0<=26)||(LA89_0>=29 && LA89_0<=34)||LA89_0==39||(LA89_0>=43 && LA89_0<=48)||(LA89_0>=50 && LA89_0<=52)||(LA89_0>=54 && LA89_0<=55)||(LA89_0>=58 && LA89_0<=60)||(LA89_0>=62 && LA89_0<=70)||LA89_0==72||LA89_0==74||LA89_0==76||LA89_0==79||LA89_0==81||LA89_0==83||(LA89_0>=85 && LA89_0<=89)||(LA89_0>=91 && LA89_0<=96)||LA89_0==98||LA89_0==100||(LA89_0>=102 && LA89_0<=105)) ) {
                    	        alt89=1;
                    	    }
                    	    switch (alt89) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:4360:8: ruleUnrestrictedName
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              								/* */

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								newCompositeNode(grammarAccess.getAttributeCSAccess().getUnrestrictedNameParserRuleCall_6_0_1_0_1());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_11);
                    	            ruleUnrestrictedName();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;

                    	    }

                    	    otherlv_32=(Token)match(input,24,FollowSets000.FOLLOW_77); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_32, grammarAccess.getAttributeCSAccess().getColonKeyword_6_0_1_0_2());

                    	    }
                    	    // InternalQVTimperative.g:4375:7: ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )?
                    	    int alt90=2;
                    	    int LA90_0 = input.LA(1);

                    	    if ( ((LA90_0>=RULE_SINGLE_QUOTED_STRING && LA90_0<=RULE_ESCAPED_ID)||LA90_0==17||LA90_0==19||(LA90_0>=22 && LA90_0<=23)||(LA90_0>=25 && LA90_0<=26)||(LA90_0>=29 && LA90_0<=34)||LA90_0==39||(LA90_0>=42 && LA90_0<=48)||(LA90_0>=50 && LA90_0<=52)||(LA90_0>=54 && LA90_0<=56)||(LA90_0>=58 && LA90_0<=60)||(LA90_0>=62 && LA90_0<=70)||LA90_0==72||LA90_0==74||LA90_0==76||LA90_0==79||LA90_0==81||LA90_0==83||(LA90_0>=85 && LA90_0<=89)||(LA90_0>=91 && LA90_0<=96)||LA90_0==98||LA90_0==100||(LA90_0>=102 && LA90_0<=108)||(LA90_0>=127 && LA90_0<=141)||LA90_0==143||(LA90_0>=146 && LA90_0<=149)||LA90_0==155||(LA90_0>=160 && LA90_0<=161)) ) {
                    	        alt90=1;
                    	    }
                    	    switch (alt90) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:4376:8: (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS )
                    	            {
                    	            // InternalQVTimperative.g:4376:8: (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS )
                    	            // InternalQVTimperative.g:4377:9: lv_ownedDefaultExpressions_33_0= ruleSpecificationCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              									newCompositeNode(grammarAccess.getAttributeCSAccess().getOwnedDefaultExpressionsSpecificationCSParserRuleCall_6_0_1_0_3_0());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_9);
                    	            lv_ownedDefaultExpressions_33_0=ruleSpecificationCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              									if (current==null) {
                    	              										current = createModelElementForParent(grammarAccess.getAttributeCSRule());
                    	              									}
                    	              									add(
                    	              										current,
                    	              										"ownedDefaultExpressions",
                    	              										lv_ownedDefaultExpressions_33_0,
                    	              										"org.eclipse.qvtd.xtext.qvtbase.QVTbase.SpecificationCS");
                    	              									afterParserOrEnumRuleCall();

                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    otherlv_34=(Token)match(input,21,FollowSets000.FOLLOW_76); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_34, grammarAccess.getAttributeCSAccess().getSemicolonKeyword_6_0_1_0_4());

                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQVTimperative.g:4400:6: (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' )
                    	    {
                    	    // InternalQVTimperative.g:4400:6: (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' )
                    	    // InternalQVTimperative.g:4401:7: otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';'
                    	    {
                    	    otherlv_35=(Token)match(input,86,FollowSets000.FOLLOW_14); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_35, grammarAccess.getAttributeCSAccess().getDerivationKeyword_6_0_1_1_0());

                    	    }
                    	    // InternalQVTimperative.g:4405:7: ( ruleUnrestrictedName )?
                    	    int alt91=2;
                    	    int LA91_0 = input.LA(1);

                    	    if ( ((LA91_0>=RULE_SIMPLE_ID && LA91_0<=RULE_ESCAPED_ID)||LA91_0==17||LA91_0==19||(LA91_0>=22 && LA91_0<=23)||(LA91_0>=25 && LA91_0<=26)||(LA91_0>=29 && LA91_0<=34)||LA91_0==39||(LA91_0>=43 && LA91_0<=48)||(LA91_0>=50 && LA91_0<=52)||(LA91_0>=54 && LA91_0<=55)||(LA91_0>=58 && LA91_0<=60)||(LA91_0>=62 && LA91_0<=70)||LA91_0==72||LA91_0==74||LA91_0==76||LA91_0==79||LA91_0==81||LA91_0==83||(LA91_0>=85 && LA91_0<=89)||(LA91_0>=91 && LA91_0<=96)||LA91_0==98||LA91_0==100||(LA91_0>=102 && LA91_0<=105)) ) {
                    	        alt91=1;
                    	    }
                    	    switch (alt91) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:4406:8: ruleUnrestrictedName
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              								/* */

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								newCompositeNode(grammarAccess.getAttributeCSAccess().getUnrestrictedNameParserRuleCall_6_0_1_1_1());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_11);
                    	            ruleUnrestrictedName();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;

                    	    }

                    	    otherlv_37=(Token)match(input,24,FollowSets000.FOLLOW_77); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_37, grammarAccess.getAttributeCSAccess().getColonKeyword_6_0_1_1_2());

                    	    }
                    	    // InternalQVTimperative.g:4421:7: ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )?
                    	    int alt92=2;
                    	    int LA92_0 = input.LA(1);

                    	    if ( ((LA92_0>=RULE_SINGLE_QUOTED_STRING && LA92_0<=RULE_ESCAPED_ID)||LA92_0==17||LA92_0==19||(LA92_0>=22 && LA92_0<=23)||(LA92_0>=25 && LA92_0<=26)||(LA92_0>=29 && LA92_0<=34)||LA92_0==39||(LA92_0>=42 && LA92_0<=48)||(LA92_0>=50 && LA92_0<=52)||(LA92_0>=54 && LA92_0<=56)||(LA92_0>=58 && LA92_0<=60)||(LA92_0>=62 && LA92_0<=70)||LA92_0==72||LA92_0==74||LA92_0==76||LA92_0==79||LA92_0==81||LA92_0==83||(LA92_0>=85 && LA92_0<=89)||(LA92_0>=91 && LA92_0<=96)||LA92_0==98||LA92_0==100||(LA92_0>=102 && LA92_0<=108)||(LA92_0>=127 && LA92_0<=141)||LA92_0==143||(LA92_0>=146 && LA92_0<=149)||LA92_0==155||(LA92_0>=160 && LA92_0<=161)) ) {
                    	        alt92=1;
                    	    }
                    	    switch (alt92) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:4422:8: (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS )
                    	            {
                    	            // InternalQVTimperative.g:4422:8: (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS )
                    	            // InternalQVTimperative.g:4423:9: lv_ownedDefaultExpressions_38_0= ruleSpecificationCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              									newCompositeNode(grammarAccess.getAttributeCSAccess().getOwnedDefaultExpressionsSpecificationCSParserRuleCall_6_0_1_1_3_0());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_9);
                    	            lv_ownedDefaultExpressions_38_0=ruleSpecificationCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              									if (current==null) {
                    	              										current = createModelElementForParent(grammarAccess.getAttributeCSRule());
                    	              									}
                    	              									add(
                    	              										current,
                    	              										"ownedDefaultExpressions",
                    	              										lv_ownedDefaultExpressions_38_0,
                    	              										"org.eclipse.qvtd.xtext.qvtbase.QVTbase.SpecificationCS");
                    	              									afterParserOrEnumRuleCall();

                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    otherlv_39=(Token)match(input,21,FollowSets000.FOLLOW_76); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_39, grammarAccess.getAttributeCSAccess().getSemicolonKeyword_6_0_1_1_4());

                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop93;
                        }
                    } while (true);

                    otherlv_40=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_40, grammarAccess.getAttributeCSAccess().getRightCurlyBracketKeyword_6_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:4452:4: otherlv_41= ';'
                    {
                    otherlv_41=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_41, grammarAccess.getAttributeCSAccess().getSemicolonKeyword_6_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAttributeCS"


    // $ANTLR start "entryRuleClassCS"
    // InternalQVTimperative.g:4461:1: entryRuleClassCS returns [EObject current=null] : iv_ruleClassCS= ruleClassCS EOF ;
    public final EObject entryRuleClassCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassCS = null;


        try {
            // InternalQVTimperative.g:4461:48: (iv_ruleClassCS= ruleClassCS EOF )
            // InternalQVTimperative.g:4462:2: iv_ruleClassCS= ruleClassCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleClassCS=ruleClassCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassCS"


    // $ANTLR start "ruleClassCS"
    // InternalQVTimperative.g:4468:1: ruleClassCS returns [EObject current=null] : (this_StructuredClassCS_0= ruleStructuredClassCS | this_DataTypeCS_1= ruleDataTypeCS | this_EnumerationCS_2= ruleEnumerationCS ) ;
    public final EObject ruleClassCS() throws RecognitionException {
        EObject current = null;

        EObject this_StructuredClassCS_0 = null;

        EObject this_DataTypeCS_1 = null;

        EObject this_EnumerationCS_2 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:4474:2: ( (this_StructuredClassCS_0= ruleStructuredClassCS | this_DataTypeCS_1= ruleDataTypeCS | this_EnumerationCS_2= ruleEnumerationCS ) )
            // InternalQVTimperative.g:4475:2: (this_StructuredClassCS_0= ruleStructuredClassCS | this_DataTypeCS_1= ruleDataTypeCS | this_EnumerationCS_2= ruleEnumerationCS )
            {
            // InternalQVTimperative.g:4475:2: (this_StructuredClassCS_0= ruleStructuredClassCS | this_DataTypeCS_1= ruleDataTypeCS | this_EnumerationCS_2= ruleEnumerationCS )
            int alt95=3;
            switch ( input.LA(1) ) {
            case 102:
            case 103:
                {
                alt95=1;
                }
                break;
            case 87:
            case 88:
                {
                alt95=2;
                }
                break;
            case 91:
                {
                alt95=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 95, 0, input);

                throw nvae;
            }

            switch (alt95) {
                case 1 :
                    // InternalQVTimperative.g:4476:3: this_StructuredClassCS_0= ruleStructuredClassCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getClassCSAccess().getStructuredClassCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StructuredClassCS_0=ruleStructuredClassCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StructuredClassCS_0;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:4488:3: this_DataTypeCS_1= ruleDataTypeCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getClassCSAccess().getDataTypeCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DataTypeCS_1=ruleDataTypeCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DataTypeCS_1;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:4500:3: this_EnumerationCS_2= ruleEnumerationCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getClassCSAccess().getEnumerationCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EnumerationCS_2=ruleEnumerationCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EnumerationCS_2;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassCS"


    // $ANTLR start "entryRuleCompoundTargetElementCS"
    // InternalQVTimperative.g:4515:1: entryRuleCompoundTargetElementCS returns [EObject current=null] : iv_ruleCompoundTargetElementCS= ruleCompoundTargetElementCS EOF ;
    public final EObject entryRuleCompoundTargetElementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompoundTargetElementCS = null;


        try {
            // InternalQVTimperative.g:4515:64: (iv_ruleCompoundTargetElementCS= ruleCompoundTargetElementCS EOF )
            // InternalQVTimperative.g:4516:2: iv_ruleCompoundTargetElementCS= ruleCompoundTargetElementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompoundTargetElementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCompoundTargetElementCS=ruleCompoundTargetElementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCompoundTargetElementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCompoundTargetElementCS"


    // $ANTLR start "ruleCompoundTargetElementCS"
    // InternalQVTimperative.g:4522:1: ruleCompoundTargetElementCS returns [EObject current=null] : (otherlv_0= '{' ( (lv_ownedTargetElements_1_0= ruleSimpleTargetElementCS ) )* otherlv_2= '}' (otherlv_3= ';' )? ) ;
    public final EObject ruleCompoundTargetElementCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        EObject lv_ownedTargetElements_1_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:4528:2: ( (otherlv_0= '{' ( (lv_ownedTargetElements_1_0= ruleSimpleTargetElementCS ) )* otherlv_2= '}' (otherlv_3= ';' )? ) )
            // InternalQVTimperative.g:4529:2: (otherlv_0= '{' ( (lv_ownedTargetElements_1_0= ruleSimpleTargetElementCS ) )* otherlv_2= '}' (otherlv_3= ';' )? )
            {
            // InternalQVTimperative.g:4529:2: (otherlv_0= '{' ( (lv_ownedTargetElements_1_0= ruleSimpleTargetElementCS ) )* otherlv_2= '}' (otherlv_3= ';' )? )
            // InternalQVTimperative.g:4530:3: otherlv_0= '{' ( (lv_ownedTargetElements_1_0= ruleSimpleTargetElementCS ) )* otherlv_2= '}' (otherlv_3= ';' )?
            {
            otherlv_0=(Token)match(input,35,FollowSets000.FOLLOW_78); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getCompoundTargetElementCSAccess().getLeftCurlyBracketKeyword_0());

            }
            // InternalQVTimperative.g:4534:3: ( (lv_ownedTargetElements_1_0= ruleSimpleTargetElementCS ) )*
            loop96:
            do {
                int alt96=2;
                int LA96_0 = input.LA(1);

                if ( ((LA96_0>=33 && LA96_0<=34)||LA96_0==66) ) {
                    alt96=1;
                }


                switch (alt96) {
            	case 1 :
            	    // InternalQVTimperative.g:4535:4: (lv_ownedTargetElements_1_0= ruleSimpleTargetElementCS )
            	    {
            	    // InternalQVTimperative.g:4535:4: (lv_ownedTargetElements_1_0= ruleSimpleTargetElementCS )
            	    // InternalQVTimperative.g:4536:5: lv_ownedTargetElements_1_0= ruleSimpleTargetElementCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getCompoundTargetElementCSAccess().getOwnedTargetElementsSimpleTargetElementCSParserRuleCall_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_78);
            	    lv_ownedTargetElements_1_0=ruleSimpleTargetElementCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getCompoundTargetElementCSRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ownedTargetElements",
            	      						lv_ownedTargetElements_1_0,
            	      						"org.eclipse.qvtd.xtext.qvtbase.QVTbase.SimpleTargetElementCS");
            	      					afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop96;
                }
            } while (true);

            otherlv_2=(Token)match(input,36,FollowSets000.FOLLOW_79); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getCompoundTargetElementCSAccess().getRightCurlyBracketKeyword_2());

            }
            // InternalQVTimperative.g:4557:3: (otherlv_3= ';' )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==21) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // InternalQVTimperative.g:4558:4: otherlv_3= ';'
                    {
                    otherlv_3=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getCompoundTargetElementCSAccess().getSemicolonKeyword_3());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompoundTargetElementCS"


    // $ANTLR start "entryRuleDataTypeCS"
    // InternalQVTimperative.g:4567:1: entryRuleDataTypeCS returns [EObject current=null] : iv_ruleDataTypeCS= ruleDataTypeCS EOF ;
    public final EObject entryRuleDataTypeCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDataTypeCS = null;


        try {
            // InternalQVTimperative.g:4567:51: (iv_ruleDataTypeCS= ruleDataTypeCS EOF )
            // InternalQVTimperative.g:4568:2: iv_ruleDataTypeCS= ruleDataTypeCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDataTypeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDataTypeCS=ruleDataTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDataTypeCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDataTypeCS"


    // $ANTLR start "ruleDataTypeCS"
    // InternalQVTimperative.g:4574:1: ruleDataTypeCS returns [EObject current=null] : ( ( (lv_isPrimitive_0_0= 'primitive' ) )? otherlv_1= 'datatype' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= ':' ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_6= '{' ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )? otherlv_9= '}' )? ( (otherlv_10= '{' otherlv_11= '}' ) | otherlv_12= ';' ) ) ;
    public final EObject ruleDataTypeCS() throws RecognitionException {
        EObject current = null;

        Token lv_isPrimitive_0_0=null;
        Token otherlv_1=null;
        Token otherlv_4=null;
        Token lv_instanceClassName_5_0=null;
        Token otherlv_6=null;
        Token lv_isSerializable_7_0=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_ownedSignature_3_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:4580:2: ( ( ( (lv_isPrimitive_0_0= 'primitive' ) )? otherlv_1= 'datatype' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= ':' ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_6= '{' ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )? otherlv_9= '}' )? ( (otherlv_10= '{' otherlv_11= '}' ) | otherlv_12= ';' ) ) )
            // InternalQVTimperative.g:4581:2: ( ( (lv_isPrimitive_0_0= 'primitive' ) )? otherlv_1= 'datatype' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= ':' ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_6= '{' ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )? otherlv_9= '}' )? ( (otherlv_10= '{' otherlv_11= '}' ) | otherlv_12= ';' ) )
            {
            // InternalQVTimperative.g:4581:2: ( ( (lv_isPrimitive_0_0= 'primitive' ) )? otherlv_1= 'datatype' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= ':' ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_6= '{' ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )? otherlv_9= '}' )? ( (otherlv_10= '{' otherlv_11= '}' ) | otherlv_12= ';' ) )
            // InternalQVTimperative.g:4582:3: ( (lv_isPrimitive_0_0= 'primitive' ) )? otherlv_1= 'datatype' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= ':' ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_6= '{' ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )? otherlv_9= '}' )? ( (otherlv_10= '{' otherlv_11= '}' ) | otherlv_12= ';' )
            {
            // InternalQVTimperative.g:4582:3: ( (lv_isPrimitive_0_0= 'primitive' ) )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==87) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // InternalQVTimperative.g:4583:4: (lv_isPrimitive_0_0= 'primitive' )
                    {
                    // InternalQVTimperative.g:4583:4: (lv_isPrimitive_0_0= 'primitive' )
                    // InternalQVTimperative.g:4584:5: lv_isPrimitive_0_0= 'primitive'
                    {
                    lv_isPrimitive_0_0=(Token)match(input,87,FollowSets000.FOLLOW_80); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isPrimitive_0_0, grammarAccess.getDataTypeCSAccess().getIsPrimitivePrimitiveKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDataTypeCSRule());
                      					}
                      					setWithLastConsumed(current, "isPrimitive", lv_isPrimitive_0_0 != null, "primitive");

                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,88,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDataTypeCSAccess().getDatatypeKeyword_1());

            }
            // InternalQVTimperative.g:4600:3: ( (lv_name_2_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:4601:4: (lv_name_2_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:4601:4: (lv_name_2_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:4602:5: lv_name_2_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDataTypeCSAccess().getNameUnrestrictedNameParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_81);
            lv_name_2_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDataTypeCSRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:4619:3: ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )?
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==56) ) {
                alt99=1;
            }
            switch (alt99) {
                case 1 :
                    // InternalQVTimperative.g:4620:4: (lv_ownedSignature_3_0= ruleTemplateSignatureCS )
                    {
                    // InternalQVTimperative.g:4620:4: (lv_ownedSignature_3_0= ruleTemplateSignatureCS )
                    // InternalQVTimperative.g:4621:5: lv_ownedSignature_3_0= ruleTemplateSignatureCS
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDataTypeCSAccess().getOwnedSignatureTemplateSignatureCSParserRuleCall_3_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_82);
                    lv_ownedSignature_3_0=ruleTemplateSignatureCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDataTypeCSRule());
                      					}
                      					set(
                      						current,
                      						"ownedSignature",
                      						lv_ownedSignature_3_0,
                      						"org.eclipse.ocl.xtext.base.Base.TemplateSignatureCS");
                      					afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:4638:3: (otherlv_4= ':' ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) ) )?
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==24) ) {
                alt100=1;
            }
            switch (alt100) {
                case 1 :
                    // InternalQVTimperative.g:4639:4: otherlv_4= ':' ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) )
                    {
                    otherlv_4=(Token)match(input,24,FollowSets000.FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getDataTypeCSAccess().getColonKeyword_4_0());

                    }
                    // InternalQVTimperative.g:4643:4: ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) )
                    // InternalQVTimperative.g:4644:5: (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING )
                    {
                    // InternalQVTimperative.g:4644:5: (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING )
                    // InternalQVTimperative.g:4645:6: lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING
                    {
                    lv_instanceClassName_5_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_instanceClassName_5_0, grammarAccess.getDataTypeCSAccess().getInstanceClassNameSINGLE_QUOTED_STRINGTerminalRuleCall_4_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDataTypeCSRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"instanceClassName",
                      							lv_instanceClassName_5_0,
                      							"org.eclipse.ocl.xtext.base.Base.SINGLE_QUOTED_STRING");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:4662:3: (otherlv_6= '{' ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )? otherlv_9= '}' )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==35) ) {
                int LA102_1 = input.LA(2);

                if ( ((LA102_1>=89 && LA102_1<=90)) ) {
                    alt102=1;
                }
                else if ( (LA102_1==36) ) {
                    int LA102_4 = input.LA(3);

                    if ( (LA102_4==21||LA102_4==35) ) {
                        alt102=1;
                    }
                }
            }
            switch (alt102) {
                case 1 :
                    // InternalQVTimperative.g:4663:4: otherlv_6= '{' ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )? otherlv_9= '}'
                    {
                    otherlv_6=(Token)match(input,35,FollowSets000.FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getDataTypeCSAccess().getLeftCurlyBracketKeyword_5_0());

                    }
                    // InternalQVTimperative.g:4667:4: ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )?
                    int alt101=3;
                    int LA101_0 = input.LA(1);

                    if ( (LA101_0==89) ) {
                        alt101=1;
                    }
                    else if ( (LA101_0==90) ) {
                        alt101=2;
                    }
                    switch (alt101) {
                        case 1 :
                            // InternalQVTimperative.g:4668:5: ( (lv_isSerializable_7_0= 'serializable' ) )
                            {
                            // InternalQVTimperative.g:4668:5: ( (lv_isSerializable_7_0= 'serializable' ) )
                            // InternalQVTimperative.g:4669:6: (lv_isSerializable_7_0= 'serializable' )
                            {
                            // InternalQVTimperative.g:4669:6: (lv_isSerializable_7_0= 'serializable' )
                            // InternalQVTimperative.g:4670:7: lv_isSerializable_7_0= 'serializable'
                            {
                            lv_isSerializable_7_0=(Token)match(input,89,FollowSets000.FOLLOW_58); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_isSerializable_7_0, grammarAccess.getDataTypeCSAccess().getIsSerializableSerializableKeyword_5_1_0_0());

                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDataTypeCSRule());
                              							}
                              							setWithLastConsumed(current, "isSerializable", lv_isSerializable_7_0 != null, "serializable");

                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalQVTimperative.g:4683:5: otherlv_8= '!serializable'
                            {
                            otherlv_8=(Token)match(input,90,FollowSets000.FOLLOW_58); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getDataTypeCSAccess().getSerializableKeyword_5_1_1());

                            }

                            }
                            break;

                    }

                    otherlv_9=(Token)match(input,36,FollowSets000.FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getDataTypeCSAccess().getRightCurlyBracketKeyword_5_2());

                    }

                    }
                    break;

            }

            // InternalQVTimperative.g:4693:3: ( (otherlv_10= '{' otherlv_11= '}' ) | otherlv_12= ';' )
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==35) ) {
                alt103=1;
            }
            else if ( (LA103_0==21) ) {
                alt103=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 103, 0, input);

                throw nvae;
            }
            switch (alt103) {
                case 1 :
                    // InternalQVTimperative.g:4694:4: (otherlv_10= '{' otherlv_11= '}' )
                    {
                    // InternalQVTimperative.g:4694:4: (otherlv_10= '{' otherlv_11= '}' )
                    // InternalQVTimperative.g:4695:5: otherlv_10= '{' otherlv_11= '}'
                    {
                    otherlv_10=(Token)match(input,35,FollowSets000.FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_10, grammarAccess.getDataTypeCSAccess().getLeftCurlyBracketKeyword_6_0_0());

                    }
                    otherlv_11=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_11, grammarAccess.getDataTypeCSAccess().getRightCurlyBracketKeyword_6_0_1());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:4705:4: otherlv_12= ';'
                    {
                    otherlv_12=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getDataTypeCSAccess().getSemicolonKeyword_6_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDataTypeCS"


    // $ANTLR start "entryRuleEnumerationCS"
    // InternalQVTimperative.g:4714:1: entryRuleEnumerationCS returns [EObject current=null] : iv_ruleEnumerationCS= ruleEnumerationCS EOF ;
    public final EObject entryRuleEnumerationCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnumerationCS = null;


        try {
            // InternalQVTimperative.g:4714:54: (iv_ruleEnumerationCS= ruleEnumerationCS EOF )
            // InternalQVTimperative.g:4715:2: iv_ruleEnumerationCS= ruleEnumerationCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumerationCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEnumerationCS=ruleEnumerationCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumerationCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumerationCS"


    // $ANTLR start "ruleEnumerationCS"
    // InternalQVTimperative.g:4721:1: ruleEnumerationCS returns [EObject current=null] : (otherlv_0= 'enum' ( (lv_name_1_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_2_0= ruleTemplateSignatureCS ) )? (otherlv_3= ':' ( (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_5= '{' ( ( (lv_isSerializable_6_0= 'serializable' ) ) | otherlv_7= '!serializable' )? otherlv_8= '}' )? ( (otherlv_9= '{' ( (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS ) )* otherlv_11= '}' ) | otherlv_12= ';' ) ) ;
    public final EObject ruleEnumerationCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token lv_instanceClassName_4_0=null;
        Token otherlv_5=null;
        Token lv_isSerializable_6_0=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_ownedSignature_2_0 = null;

        EObject lv_ownedLiterals_10_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:4727:2: ( (otherlv_0= 'enum' ( (lv_name_1_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_2_0= ruleTemplateSignatureCS ) )? (otherlv_3= ':' ( (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_5= '{' ( ( (lv_isSerializable_6_0= 'serializable' ) ) | otherlv_7= '!serializable' )? otherlv_8= '}' )? ( (otherlv_9= '{' ( (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS ) )* otherlv_11= '}' ) | otherlv_12= ';' ) ) )
            // InternalQVTimperative.g:4728:2: (otherlv_0= 'enum' ( (lv_name_1_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_2_0= ruleTemplateSignatureCS ) )? (otherlv_3= ':' ( (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_5= '{' ( ( (lv_isSerializable_6_0= 'serializable' ) ) | otherlv_7= '!serializable' )? otherlv_8= '}' )? ( (otherlv_9= '{' ( (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS ) )* otherlv_11= '}' ) | otherlv_12= ';' ) )
            {
            // InternalQVTimperative.g:4728:2: (otherlv_0= 'enum' ( (lv_name_1_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_2_0= ruleTemplateSignatureCS ) )? (otherlv_3= ':' ( (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_5= '{' ( ( (lv_isSerializable_6_0= 'serializable' ) ) | otherlv_7= '!serializable' )? otherlv_8= '}' )? ( (otherlv_9= '{' ( (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS ) )* otherlv_11= '}' ) | otherlv_12= ';' ) )
            // InternalQVTimperative.g:4729:3: otherlv_0= 'enum' ( (lv_name_1_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_2_0= ruleTemplateSignatureCS ) )? (otherlv_3= ':' ( (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_5= '{' ( ( (lv_isSerializable_6_0= 'serializable' ) ) | otherlv_7= '!serializable' )? otherlv_8= '}' )? ( (otherlv_9= '{' ( (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS ) )* otherlv_11= '}' ) | otherlv_12= ';' )
            {
            otherlv_0=(Token)match(input,91,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEnumerationCSAccess().getEnumKeyword_0());

            }
            // InternalQVTimperative.g:4733:3: ( (lv_name_1_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:4734:4: (lv_name_1_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:4734:4: (lv_name_1_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:4735:5: lv_name_1_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEnumerationCSAccess().getNameUnrestrictedNameParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_81);
            lv_name_1_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEnumerationCSRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:4752:3: ( (lv_ownedSignature_2_0= ruleTemplateSignatureCS ) )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==56) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalQVTimperative.g:4753:4: (lv_ownedSignature_2_0= ruleTemplateSignatureCS )
                    {
                    // InternalQVTimperative.g:4753:4: (lv_ownedSignature_2_0= ruleTemplateSignatureCS )
                    // InternalQVTimperative.g:4754:5: lv_ownedSignature_2_0= ruleTemplateSignatureCS
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getEnumerationCSAccess().getOwnedSignatureTemplateSignatureCSParserRuleCall_2_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_82);
                    lv_ownedSignature_2_0=ruleTemplateSignatureCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getEnumerationCSRule());
                      					}
                      					set(
                      						current,
                      						"ownedSignature",
                      						lv_ownedSignature_2_0,
                      						"org.eclipse.ocl.xtext.base.Base.TemplateSignatureCS");
                      					afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:4771:3: (otherlv_3= ':' ( (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING ) ) )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==24) ) {
                alt105=1;
            }
            switch (alt105) {
                case 1 :
                    // InternalQVTimperative.g:4772:4: otherlv_3= ':' ( (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING ) )
                    {
                    otherlv_3=(Token)match(input,24,FollowSets000.FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getEnumerationCSAccess().getColonKeyword_3_0());

                    }
                    // InternalQVTimperative.g:4776:4: ( (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING ) )
                    // InternalQVTimperative.g:4777:5: (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING )
                    {
                    // InternalQVTimperative.g:4777:5: (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING )
                    // InternalQVTimperative.g:4778:6: lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING
                    {
                    lv_instanceClassName_4_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_instanceClassName_4_0, grammarAccess.getEnumerationCSAccess().getInstanceClassNameSINGLE_QUOTED_STRINGTerminalRuleCall_3_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getEnumerationCSRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"instanceClassName",
                      							lv_instanceClassName_4_0,
                      							"org.eclipse.ocl.xtext.base.Base.SINGLE_QUOTED_STRING");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:4795:3: (otherlv_5= '{' ( ( (lv_isSerializable_6_0= 'serializable' ) ) | otherlv_7= '!serializable' )? otherlv_8= '}' )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==35) ) {
                int LA107_1 = input.LA(2);

                if ( ((LA107_1>=89 && LA107_1<=90)) ) {
                    alt107=1;
                }
                else if ( (LA107_1==36) ) {
                    int LA107_4 = input.LA(3);

                    if ( (LA107_4==21||LA107_4==35) ) {
                        alt107=1;
                    }
                }
            }
            switch (alt107) {
                case 1 :
                    // InternalQVTimperative.g:4796:4: otherlv_5= '{' ( ( (lv_isSerializable_6_0= 'serializable' ) ) | otherlv_7= '!serializable' )? otherlv_8= '}'
                    {
                    otherlv_5=(Token)match(input,35,FollowSets000.FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getEnumerationCSAccess().getLeftCurlyBracketKeyword_4_0());

                    }
                    // InternalQVTimperative.g:4800:4: ( ( (lv_isSerializable_6_0= 'serializable' ) ) | otherlv_7= '!serializable' )?
                    int alt106=3;
                    int LA106_0 = input.LA(1);

                    if ( (LA106_0==89) ) {
                        alt106=1;
                    }
                    else if ( (LA106_0==90) ) {
                        alt106=2;
                    }
                    switch (alt106) {
                        case 1 :
                            // InternalQVTimperative.g:4801:5: ( (lv_isSerializable_6_0= 'serializable' ) )
                            {
                            // InternalQVTimperative.g:4801:5: ( (lv_isSerializable_6_0= 'serializable' ) )
                            // InternalQVTimperative.g:4802:6: (lv_isSerializable_6_0= 'serializable' )
                            {
                            // InternalQVTimperative.g:4802:6: (lv_isSerializable_6_0= 'serializable' )
                            // InternalQVTimperative.g:4803:7: lv_isSerializable_6_0= 'serializable'
                            {
                            lv_isSerializable_6_0=(Token)match(input,89,FollowSets000.FOLLOW_58); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_isSerializable_6_0, grammarAccess.getEnumerationCSAccess().getIsSerializableSerializableKeyword_4_1_0_0());

                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getEnumerationCSRule());
                              							}
                              							setWithLastConsumed(current, "isSerializable", lv_isSerializable_6_0 != null, "serializable");

                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalQVTimperative.g:4816:5: otherlv_7= '!serializable'
                            {
                            otherlv_7=(Token)match(input,90,FollowSets000.FOLLOW_58); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_7, grammarAccess.getEnumerationCSAccess().getSerializableKeyword_4_1_1());

                            }

                            }
                            break;

                    }

                    otherlv_8=(Token)match(input,36,FollowSets000.FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getEnumerationCSAccess().getRightCurlyBracketKeyword_4_2());

                    }

                    }
                    break;

            }

            // InternalQVTimperative.g:4826:3: ( (otherlv_9= '{' ( (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS ) )* otherlv_11= '}' ) | otherlv_12= ';' )
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==35) ) {
                alt109=1;
            }
            else if ( (LA109_0==21) ) {
                alt109=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 109, 0, input);

                throw nvae;
            }
            switch (alt109) {
                case 1 :
                    // InternalQVTimperative.g:4827:4: (otherlv_9= '{' ( (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS ) )* otherlv_11= '}' )
                    {
                    // InternalQVTimperative.g:4827:4: (otherlv_9= '{' ( (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS ) )* otherlv_11= '}' )
                    // InternalQVTimperative.g:4828:5: otherlv_9= '{' ( (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS ) )* otherlv_11= '}'
                    {
                    otherlv_9=(Token)match(input,35,FollowSets000.FOLLOW_84); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getEnumerationCSAccess().getLeftCurlyBracketKeyword_5_0_0());

                    }
                    // InternalQVTimperative.g:4832:5: ( (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS ) )*
                    loop108:
                    do {
                        int alt108=2;
                        int LA108_0 = input.LA(1);

                        if ( ((LA108_0>=RULE_SIMPLE_ID && LA108_0<=RULE_ESCAPED_ID)||LA108_0==92) ) {
                            alt108=1;
                        }


                        switch (alt108) {
                    	case 1 :
                    	    // InternalQVTimperative.g:4833:6: (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS )
                    	    {
                    	    // InternalQVTimperative.g:4833:6: (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS )
                    	    // InternalQVTimperative.g:4834:7: lv_ownedLiterals_10_0= ruleEnumerationLiteralCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getEnumerationCSAccess().getOwnedLiteralsEnumerationLiteralCSParserRuleCall_5_0_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_84);
                    	    lv_ownedLiterals_10_0=ruleEnumerationLiteralCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getEnumerationCSRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedLiterals",
                    	      								lv_ownedLiterals_10_0,
                    	      								"org.eclipse.qvtd.xtext.qvtbase.QVTbase.EnumerationLiteralCS");
                    	      							afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop108;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_11, grammarAccess.getEnumerationCSAccess().getRightCurlyBracketKeyword_5_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:4857:4: otherlv_12= ';'
                    {
                    otherlv_12=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getEnumerationCSAccess().getSemicolonKeyword_5_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumerationCS"


    // $ANTLR start "entryRuleEnumerationLiteralCS"
    // InternalQVTimperative.g:4866:1: entryRuleEnumerationLiteralCS returns [EObject current=null] : iv_ruleEnumerationLiteralCS= ruleEnumerationLiteralCS EOF ;
    public final EObject entryRuleEnumerationLiteralCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnumerationLiteralCS = null;


        try {
            // InternalQVTimperative.g:4866:61: (iv_ruleEnumerationLiteralCS= ruleEnumerationLiteralCS EOF )
            // InternalQVTimperative.g:4867:2: iv_ruleEnumerationLiteralCS= ruleEnumerationLiteralCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumerationLiteralCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEnumerationLiteralCS=ruleEnumerationLiteralCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumerationLiteralCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumerationLiteralCS"


    // $ANTLR start "ruleEnumerationLiteralCS"
    // InternalQVTimperative.g:4873:1: ruleEnumerationLiteralCS returns [EObject current=null] : ( ( (otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) ) ) | ( (lv_name_2_0= ruleEnumerationLiteralName ) ) ) (otherlv_3= '=' ( (lv_value_4_0= ruleSIGNED ) ) )? ( (otherlv_5= '{' otherlv_6= '}' ) | otherlv_7= ';' ) ) ;
    public final EObject ruleEnumerationLiteralCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        AntlrDatatypeRuleToken lv_value_4_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:4879:2: ( ( ( (otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) ) ) | ( (lv_name_2_0= ruleEnumerationLiteralName ) ) ) (otherlv_3= '=' ( (lv_value_4_0= ruleSIGNED ) ) )? ( (otherlv_5= '{' otherlv_6= '}' ) | otherlv_7= ';' ) ) )
            // InternalQVTimperative.g:4880:2: ( ( (otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) ) ) | ( (lv_name_2_0= ruleEnumerationLiteralName ) ) ) (otherlv_3= '=' ( (lv_value_4_0= ruleSIGNED ) ) )? ( (otherlv_5= '{' otherlv_6= '}' ) | otherlv_7= ';' ) )
            {
            // InternalQVTimperative.g:4880:2: ( ( (otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) ) ) | ( (lv_name_2_0= ruleEnumerationLiteralName ) ) ) (otherlv_3= '=' ( (lv_value_4_0= ruleSIGNED ) ) )? ( (otherlv_5= '{' otherlv_6= '}' ) | otherlv_7= ';' ) )
            // InternalQVTimperative.g:4881:3: ( (otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) ) ) | ( (lv_name_2_0= ruleEnumerationLiteralName ) ) ) (otherlv_3= '=' ( (lv_value_4_0= ruleSIGNED ) ) )? ( (otherlv_5= '{' otherlv_6= '}' ) | otherlv_7= ';' )
            {
            // InternalQVTimperative.g:4881:3: ( (otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) ) ) | ( (lv_name_2_0= ruleEnumerationLiteralName ) ) )
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==92) ) {
                alt110=1;
            }
            else if ( ((LA110_0>=RULE_SIMPLE_ID && LA110_0<=RULE_ESCAPED_ID)) ) {
                alt110=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 110, 0, input);

                throw nvae;
            }
            switch (alt110) {
                case 1 :
                    // InternalQVTimperative.g:4882:4: (otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) ) )
                    {
                    // InternalQVTimperative.g:4882:4: (otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) ) )
                    // InternalQVTimperative.g:4883:5: otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) )
                    {
                    otherlv_0=(Token)match(input,92,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_0, grammarAccess.getEnumerationLiteralCSAccess().getLiteralKeyword_0_0_0());

                    }
                    // InternalQVTimperative.g:4887:5: ( (lv_name_1_0= ruleUnrestrictedName ) )
                    // InternalQVTimperative.g:4888:6: (lv_name_1_0= ruleUnrestrictedName )
                    {
                    // InternalQVTimperative.g:4888:6: (lv_name_1_0= ruleUnrestrictedName )
                    // InternalQVTimperative.g:4889:7: lv_name_1_0= ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getEnumerationLiteralCSAccess().getNameUnrestrictedNameParserRuleCall_0_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_50);
                    lv_name_1_0=ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getEnumerationLiteralCSRule());
                      							}
                      							set(
                      								current,
                      								"name",
                      								lv_name_1_0,
                      								"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
                      							afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:4908:4: ( (lv_name_2_0= ruleEnumerationLiteralName ) )
                    {
                    // InternalQVTimperative.g:4908:4: ( (lv_name_2_0= ruleEnumerationLiteralName ) )
                    // InternalQVTimperative.g:4909:5: (lv_name_2_0= ruleEnumerationLiteralName )
                    {
                    // InternalQVTimperative.g:4909:5: (lv_name_2_0= ruleEnumerationLiteralName )
                    // InternalQVTimperative.g:4910:6: lv_name_2_0= ruleEnumerationLiteralName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEnumerationLiteralCSAccess().getNameEnumerationLiteralNameParserRuleCall_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_50);
                    lv_name_2_0=ruleEnumerationLiteralName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEnumerationLiteralCSRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_2_0,
                      							"org.eclipse.qvtd.xtext.qvtbase.QVTbase.EnumerationLiteralName");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:4928:3: (otherlv_3= '=' ( (lv_value_4_0= ruleSIGNED ) ) )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==53) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // InternalQVTimperative.g:4929:4: otherlv_3= '=' ( (lv_value_4_0= ruleSIGNED ) )
                    {
                    otherlv_3=(Token)match(input,53,FollowSets000.FOLLOW_85); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getEnumerationLiteralCSAccess().getEqualsSignKeyword_1_0());

                    }
                    // InternalQVTimperative.g:4933:4: ( (lv_value_4_0= ruleSIGNED ) )
                    // InternalQVTimperative.g:4934:5: (lv_value_4_0= ruleSIGNED )
                    {
                    // InternalQVTimperative.g:4934:5: (lv_value_4_0= ruleSIGNED )
                    // InternalQVTimperative.g:4935:6: lv_value_4_0= ruleSIGNED
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEnumerationLiteralCSAccess().getValueSIGNEDParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_51);
                    lv_value_4_0=ruleSIGNED();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEnumerationLiteralCSRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_4_0,
                      							"org.eclipse.qvtd.xtext.qvtbase.QVTbase.SIGNED");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:4953:3: ( (otherlv_5= '{' otherlv_6= '}' ) | otherlv_7= ';' )
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==35) ) {
                alt112=1;
            }
            else if ( (LA112_0==21) ) {
                alt112=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 112, 0, input);

                throw nvae;
            }
            switch (alt112) {
                case 1 :
                    // InternalQVTimperative.g:4954:4: (otherlv_5= '{' otherlv_6= '}' )
                    {
                    // InternalQVTimperative.g:4954:4: (otherlv_5= '{' otherlv_6= '}' )
                    // InternalQVTimperative.g:4955:5: otherlv_5= '{' otherlv_6= '}'
                    {
                    otherlv_5=(Token)match(input,35,FollowSets000.FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getEnumerationLiteralCSAccess().getLeftCurlyBracketKeyword_2_0_0());

                    }
                    otherlv_6=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getEnumerationLiteralCSAccess().getRightCurlyBracketKeyword_2_0_1());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:4965:4: otherlv_7= ';'
                    {
                    otherlv_7=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getEnumerationLiteralCSAccess().getSemicolonKeyword_2_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumerationLiteralCS"


    // $ANTLR start "entryRuleOperationCS"
    // InternalQVTimperative.g:4974:1: entryRuleOperationCS returns [EObject current=null] : iv_ruleOperationCS= ruleOperationCS EOF ;
    public final EObject entryRuleOperationCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOperationCS = null;


        try {
            // InternalQVTimperative.g:4974:52: (iv_ruleOperationCS= ruleOperationCS EOF )
            // InternalQVTimperative.g:4975:2: iv_ruleOperationCS= ruleOperationCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOperationCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOperationCS=ruleOperationCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOperationCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOperationCS"


    // $ANTLR start "ruleOperationCS"
    // InternalQVTimperative.g:4981:1: ruleOperationCS returns [EObject current=null] : ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'operation' ( (lv_ownedSignature_5_0= ruleTemplateSignatureCS ) )? ( (lv_name_6_0= ruleUnrestrictedName ) ) otherlv_7= '(' ( ( (lv_ownedParameters_8_0= ruleParameterCS ) ) (otherlv_9= ',' ( (lv_ownedParameters_10_0= ruleParameterCS ) ) )* )? otherlv_11= ')' (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_14= 'throws' ( (lv_ownedExceptions_15_0= ruleTypedRefCS ) ) (otherlv_16= ',' ( (lv_ownedExceptions_17_0= ruleTypedRefCS ) ) )* )? (otherlv_18= '{' ( ( ( (lv_qualifiers_19_0= 'derived' ) ) | ( (lv_qualifiers_20_0= '!derived' ) ) | ( (lv_qualifiers_21_0= 'ordered' ) ) | ( (lv_qualifiers_22_0= '!ordered' ) ) | ( (lv_qualifiers_23_0= 'unique' ) ) | ( (lv_qualifiers_24_0= '!unique' ) ) ) (otherlv_25= ',' )? )+ otherlv_26= '}' )? ( (otherlv_27= '{' (otherlv_28= 'body' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' )* otherlv_33= '}' ) | otherlv_34= ';' ) ) ;
    public final EObject ruleOperationCS() throws RecognitionException {
        EObject current = null;

        Token lv_qualifiers_0_0=null;
        Token lv_qualifiers_1_0=null;
        Token lv_qualifiers_2_0=null;
        Token lv_qualifiers_3_0=null;
        Token otherlv_4=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token lv_qualifiers_19_0=null;
        Token lv_qualifiers_20_0=null;
        Token lv_qualifiers_21_0=null;
        Token lv_qualifiers_22_0=null;
        Token lv_qualifiers_23_0=null;
        Token lv_qualifiers_24_0=null;
        Token otherlv_25=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token otherlv_30=null;
        Token otherlv_32=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        EObject lv_ownedSignature_5_0 = null;

        AntlrDatatypeRuleToken lv_name_6_0 = null;

        EObject lv_ownedParameters_8_0 = null;

        EObject lv_ownedParameters_10_0 = null;

        EObject lv_ownedType_13_0 = null;

        EObject lv_ownedExceptions_15_0 = null;

        EObject lv_ownedExceptions_17_0 = null;

        EObject lv_ownedBodyExpressions_31_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:4987:2: ( ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'operation' ( (lv_ownedSignature_5_0= ruleTemplateSignatureCS ) )? ( (lv_name_6_0= ruleUnrestrictedName ) ) otherlv_7= '(' ( ( (lv_ownedParameters_8_0= ruleParameterCS ) ) (otherlv_9= ',' ( (lv_ownedParameters_10_0= ruleParameterCS ) ) )* )? otherlv_11= ')' (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_14= 'throws' ( (lv_ownedExceptions_15_0= ruleTypedRefCS ) ) (otherlv_16= ',' ( (lv_ownedExceptions_17_0= ruleTypedRefCS ) ) )* )? (otherlv_18= '{' ( ( ( (lv_qualifiers_19_0= 'derived' ) ) | ( (lv_qualifiers_20_0= '!derived' ) ) | ( (lv_qualifiers_21_0= 'ordered' ) ) | ( (lv_qualifiers_22_0= '!ordered' ) ) | ( (lv_qualifiers_23_0= 'unique' ) ) | ( (lv_qualifiers_24_0= '!unique' ) ) ) (otherlv_25= ',' )? )+ otherlv_26= '}' )? ( (otherlv_27= '{' (otherlv_28= 'body' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' )* otherlv_33= '}' ) | otherlv_34= ';' ) ) )
            // InternalQVTimperative.g:4988:2: ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'operation' ( (lv_ownedSignature_5_0= ruleTemplateSignatureCS ) )? ( (lv_name_6_0= ruleUnrestrictedName ) ) otherlv_7= '(' ( ( (lv_ownedParameters_8_0= ruleParameterCS ) ) (otherlv_9= ',' ( (lv_ownedParameters_10_0= ruleParameterCS ) ) )* )? otherlv_11= ')' (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_14= 'throws' ( (lv_ownedExceptions_15_0= ruleTypedRefCS ) ) (otherlv_16= ',' ( (lv_ownedExceptions_17_0= ruleTypedRefCS ) ) )* )? (otherlv_18= '{' ( ( ( (lv_qualifiers_19_0= 'derived' ) ) | ( (lv_qualifiers_20_0= '!derived' ) ) | ( (lv_qualifiers_21_0= 'ordered' ) ) | ( (lv_qualifiers_22_0= '!ordered' ) ) | ( (lv_qualifiers_23_0= 'unique' ) ) | ( (lv_qualifiers_24_0= '!unique' ) ) ) (otherlv_25= ',' )? )+ otherlv_26= '}' )? ( (otherlv_27= '{' (otherlv_28= 'body' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' )* otherlv_33= '}' ) | otherlv_34= ';' ) )
            {
            // InternalQVTimperative.g:4988:2: ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'operation' ( (lv_ownedSignature_5_0= ruleTemplateSignatureCS ) )? ( (lv_name_6_0= ruleUnrestrictedName ) ) otherlv_7= '(' ( ( (lv_ownedParameters_8_0= ruleParameterCS ) ) (otherlv_9= ',' ( (lv_ownedParameters_10_0= ruleParameterCS ) ) )* )? otherlv_11= ')' (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_14= 'throws' ( (lv_ownedExceptions_15_0= ruleTypedRefCS ) ) (otherlv_16= ',' ( (lv_ownedExceptions_17_0= ruleTypedRefCS ) ) )* )? (otherlv_18= '{' ( ( ( (lv_qualifiers_19_0= 'derived' ) ) | ( (lv_qualifiers_20_0= '!derived' ) ) | ( (lv_qualifiers_21_0= 'ordered' ) ) | ( (lv_qualifiers_22_0= '!ordered' ) ) | ( (lv_qualifiers_23_0= 'unique' ) ) | ( (lv_qualifiers_24_0= '!unique' ) ) ) (otherlv_25= ',' )? )+ otherlv_26= '}' )? ( (otherlv_27= '{' (otherlv_28= 'body' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' )* otherlv_33= '}' ) | otherlv_34= ';' ) )
            // InternalQVTimperative.g:4989:3: ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'operation' ( (lv_ownedSignature_5_0= ruleTemplateSignatureCS ) )? ( (lv_name_6_0= ruleUnrestrictedName ) ) otherlv_7= '(' ( ( (lv_ownedParameters_8_0= ruleParameterCS ) ) (otherlv_9= ',' ( (lv_ownedParameters_10_0= ruleParameterCS ) ) )* )? otherlv_11= ')' (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_14= 'throws' ( (lv_ownedExceptions_15_0= ruleTypedRefCS ) ) (otherlv_16= ',' ( (lv_ownedExceptions_17_0= ruleTypedRefCS ) ) )* )? (otherlv_18= '{' ( ( ( (lv_qualifiers_19_0= 'derived' ) ) | ( (lv_qualifiers_20_0= '!derived' ) ) | ( (lv_qualifiers_21_0= 'ordered' ) ) | ( (lv_qualifiers_22_0= '!ordered' ) ) | ( (lv_qualifiers_23_0= 'unique' ) ) | ( (lv_qualifiers_24_0= '!unique' ) ) ) (otherlv_25= ',' )? )+ otherlv_26= '}' )? ( (otherlv_27= '{' (otherlv_28= 'body' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' )* otherlv_33= '}' ) | otherlv_34= ';' )
            {
            // InternalQVTimperative.g:4989:3: ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )?
            int alt115=3;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==67) ) {
                alt115=1;
            }
            else if ( (LA115_0==68) ) {
                alt115=2;
            }
            switch (alt115) {
                case 1 :
                    // InternalQVTimperative.g:4990:4: ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? )
                    {
                    // InternalQVTimperative.g:4990:4: ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? )
                    // InternalQVTimperative.g:4991:5: ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )?
                    {
                    // InternalQVTimperative.g:4991:5: ( (lv_qualifiers_0_0= 'static' ) )
                    // InternalQVTimperative.g:4992:6: (lv_qualifiers_0_0= 'static' )
                    {
                    // InternalQVTimperative.g:4992:6: (lv_qualifiers_0_0= 'static' )
                    // InternalQVTimperative.g:4993:7: lv_qualifiers_0_0= 'static'
                    {
                    lv_qualifiers_0_0=(Token)match(input,67,FollowSets000.FOLLOW_86); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_qualifiers_0_0, grammarAccess.getOperationCSAccess().getQualifiersStaticKeyword_0_0_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getOperationCSRule());
                      							}
                      							addWithLastConsumed(current, "qualifiers", lv_qualifiers_0_0, "static");

                    }

                    }


                    }

                    // InternalQVTimperative.g:5005:5: ( (lv_qualifiers_1_0= 'definition' ) )?
                    int alt113=2;
                    int LA113_0 = input.LA(1);

                    if ( (LA113_0==68) ) {
                        alt113=1;
                    }
                    switch (alt113) {
                        case 1 :
                            // InternalQVTimperative.g:5006:6: (lv_qualifiers_1_0= 'definition' )
                            {
                            // InternalQVTimperative.g:5006:6: (lv_qualifiers_1_0= 'definition' )
                            // InternalQVTimperative.g:5007:7: lv_qualifiers_1_0= 'definition'
                            {
                            lv_qualifiers_1_0=(Token)match(input,68,FollowSets000.FOLLOW_87); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_qualifiers_1_0, grammarAccess.getOperationCSAccess().getQualifiersDefinitionKeyword_0_0_1_0());

                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getOperationCSRule());
                              							}
                              							addWithLastConsumed(current, "qualifiers", lv_qualifiers_1_0, "definition");

                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:5021:4: ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? )
                    {
                    // InternalQVTimperative.g:5021:4: ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? )
                    // InternalQVTimperative.g:5022:5: ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )?
                    {
                    // InternalQVTimperative.g:5022:5: ( (lv_qualifiers_2_0= 'definition' ) )
                    // InternalQVTimperative.g:5023:6: (lv_qualifiers_2_0= 'definition' )
                    {
                    // InternalQVTimperative.g:5023:6: (lv_qualifiers_2_0= 'definition' )
                    // InternalQVTimperative.g:5024:7: lv_qualifiers_2_0= 'definition'
                    {
                    lv_qualifiers_2_0=(Token)match(input,68,FollowSets000.FOLLOW_88); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_qualifiers_2_0, grammarAccess.getOperationCSAccess().getQualifiersDefinitionKeyword_0_1_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getOperationCSRule());
                      							}
                      							addWithLastConsumed(current, "qualifiers", lv_qualifiers_2_0, "definition");

                    }

                    }


                    }

                    // InternalQVTimperative.g:5036:5: ( (lv_qualifiers_3_0= 'static' ) )?
                    int alt114=2;
                    int LA114_0 = input.LA(1);

                    if ( (LA114_0==67) ) {
                        alt114=1;
                    }
                    switch (alt114) {
                        case 1 :
                            // InternalQVTimperative.g:5037:6: (lv_qualifiers_3_0= 'static' )
                            {
                            // InternalQVTimperative.g:5037:6: (lv_qualifiers_3_0= 'static' )
                            // InternalQVTimperative.g:5038:7: lv_qualifiers_3_0= 'static'
                            {
                            lv_qualifiers_3_0=(Token)match(input,67,FollowSets000.FOLLOW_87); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_qualifiers_3_0, grammarAccess.getOperationCSAccess().getQualifiersStaticKeyword_0_1_1_0());

                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getOperationCSRule());
                              							}
                              							addWithLastConsumed(current, "qualifiers", lv_qualifiers_3_0, "static");

                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,93,FollowSets000.FOLLOW_89); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getOperationCSAccess().getOperationKeyword_1());

            }
            // InternalQVTimperative.g:5056:3: ( (lv_ownedSignature_5_0= ruleTemplateSignatureCS ) )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==56) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // InternalQVTimperative.g:5057:4: (lv_ownedSignature_5_0= ruleTemplateSignatureCS )
                    {
                    // InternalQVTimperative.g:5057:4: (lv_ownedSignature_5_0= ruleTemplateSignatureCS )
                    // InternalQVTimperative.g:5058:5: lv_ownedSignature_5_0= ruleTemplateSignatureCS
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedSignatureTemplateSignatureCSParserRuleCall_2_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_5);
                    lv_ownedSignature_5_0=ruleTemplateSignatureCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOperationCSRule());
                      					}
                      					set(
                      						current,
                      						"ownedSignature",
                      						lv_ownedSignature_5_0,
                      						"org.eclipse.ocl.xtext.base.Base.TemplateSignatureCS");
                      					afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:5075:3: ( (lv_name_6_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:5076:4: (lv_name_6_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:5076:4: (lv_name_6_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:5077:5: lv_name_6_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getOperationCSAccess().getNameUnrestrictedNameParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_54);
            lv_name_6_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getOperationCSRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_6_0,
              						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_7=(Token)match(input,56,FollowSets000.FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getOperationCSAccess().getLeftParenthesisKeyword_4());

            }
            // InternalQVTimperative.g:5098:3: ( ( (lv_ownedParameters_8_0= ruleParameterCS ) ) (otherlv_9= ',' ( (lv_ownedParameters_10_0= ruleParameterCS ) ) )* )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( ((LA118_0>=RULE_SIMPLE_ID && LA118_0<=RULE_ESCAPED_ID)||LA118_0==17||LA118_0==19||(LA118_0>=22 && LA118_0<=23)||(LA118_0>=25 && LA118_0<=26)||(LA118_0>=29 && LA118_0<=34)||LA118_0==39||(LA118_0>=43 && LA118_0<=48)||(LA118_0>=50 && LA118_0<=52)||(LA118_0>=54 && LA118_0<=55)||(LA118_0>=58 && LA118_0<=60)||(LA118_0>=62 && LA118_0<=70)||LA118_0==72||LA118_0==74||LA118_0==76||LA118_0==79||LA118_0==81||LA118_0==83||(LA118_0>=85 && LA118_0<=89)||(LA118_0>=91 && LA118_0<=96)||LA118_0==98||LA118_0==100||(LA118_0>=102 && LA118_0<=105)) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // InternalQVTimperative.g:5099:4: ( (lv_ownedParameters_8_0= ruleParameterCS ) ) (otherlv_9= ',' ( (lv_ownedParameters_10_0= ruleParameterCS ) ) )*
                    {
                    // InternalQVTimperative.g:5099:4: ( (lv_ownedParameters_8_0= ruleParameterCS ) )
                    // InternalQVTimperative.g:5100:5: (lv_ownedParameters_8_0= ruleParameterCS )
                    {
                    // InternalQVTimperative.g:5100:5: (lv_ownedParameters_8_0= ruleParameterCS )
                    // InternalQVTimperative.g:5101:6: lv_ownedParameters_8_0= ruleParameterCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedParametersParameterCSParserRuleCall_5_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_56);
                    lv_ownedParameters_8_0=ruleParameterCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOperationCSRule());
                      						}
                      						add(
                      							current,
                      							"ownedParameters",
                      							lv_ownedParameters_8_0,
                      							"org.eclipse.qvtd.xtext.qvtbase.QVTbase.ParameterCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:5118:4: (otherlv_9= ',' ( (lv_ownedParameters_10_0= ruleParameterCS ) ) )*
                    loop117:
                    do {
                        int alt117=2;
                        int LA117_0 = input.LA(1);

                        if ( (LA117_0==18) ) {
                            alt117=1;
                        }


                        switch (alt117) {
                    	case 1 :
                    	    // InternalQVTimperative.g:5119:5: otherlv_9= ',' ( (lv_ownedParameters_10_0= ruleParameterCS ) )
                    	    {
                    	    otherlv_9=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_9, grammarAccess.getOperationCSAccess().getCommaKeyword_5_1_0());

                    	    }
                    	    // InternalQVTimperative.g:5123:5: ( (lv_ownedParameters_10_0= ruleParameterCS ) )
                    	    // InternalQVTimperative.g:5124:6: (lv_ownedParameters_10_0= ruleParameterCS )
                    	    {
                    	    // InternalQVTimperative.g:5124:6: (lv_ownedParameters_10_0= ruleParameterCS )
                    	    // InternalQVTimperative.g:5125:7: lv_ownedParameters_10_0= ruleParameterCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedParametersParameterCSParserRuleCall_5_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_56);
                    	    lv_ownedParameters_10_0=ruleParameterCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getOperationCSRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedParameters",
                    	      								lv_ownedParameters_10_0,
                    	      								"org.eclipse.qvtd.xtext.qvtbase.QVTbase.ParameterCS");
                    	      							afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop117;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_11=(Token)match(input,57,FollowSets000.FOLLOW_90); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getOperationCSAccess().getRightParenthesisKeyword_6());

            }
            // InternalQVTimperative.g:5148:3: (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypedMultiplicityRefCS ) ) )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==24) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // InternalQVTimperative.g:5149:4: otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypedMultiplicityRefCS ) )
                    {
                    otherlv_12=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getOperationCSAccess().getColonKeyword_7_0());

                    }
                    // InternalQVTimperative.g:5153:4: ( (lv_ownedType_13_0= ruleTypedMultiplicityRefCS ) )
                    // InternalQVTimperative.g:5154:5: (lv_ownedType_13_0= ruleTypedMultiplicityRefCS )
                    {
                    // InternalQVTimperative.g:5154:5: (lv_ownedType_13_0= ruleTypedMultiplicityRefCS )
                    // InternalQVTimperative.g:5155:6: lv_ownedType_13_0= ruleTypedMultiplicityRefCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedTypeTypedMultiplicityRefCSParserRuleCall_7_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_91);
                    lv_ownedType_13_0=ruleTypedMultiplicityRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOperationCSRule());
                      						}
                      						set(
                      							current,
                      							"ownedType",
                      							lv_ownedType_13_0,
                      							"org.eclipse.qvtd.xtext.qvtbase.QVTbase.TypedMultiplicityRefCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:5173:3: (otherlv_14= 'throws' ( (lv_ownedExceptions_15_0= ruleTypedRefCS ) ) (otherlv_16= ',' ( (lv_ownedExceptions_17_0= ruleTypedRefCS ) ) )* )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==94) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // InternalQVTimperative.g:5174:4: otherlv_14= 'throws' ( (lv_ownedExceptions_15_0= ruleTypedRefCS ) ) (otherlv_16= ',' ( (lv_ownedExceptions_17_0= ruleTypedRefCS ) ) )*
                    {
                    otherlv_14=(Token)match(input,94,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getOperationCSAccess().getThrowsKeyword_8_0());

                    }
                    // InternalQVTimperative.g:5178:4: ( (lv_ownedExceptions_15_0= ruleTypedRefCS ) )
                    // InternalQVTimperative.g:5179:5: (lv_ownedExceptions_15_0= ruleTypedRefCS )
                    {
                    // InternalQVTimperative.g:5179:5: (lv_ownedExceptions_15_0= ruleTypedRefCS )
                    // InternalQVTimperative.g:5180:6: lv_ownedExceptions_15_0= ruleTypedRefCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedExceptionsTypedRefCSParserRuleCall_8_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_92);
                    lv_ownedExceptions_15_0=ruleTypedRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOperationCSRule());
                      						}
                      						add(
                      							current,
                      							"ownedExceptions",
                      							lv_ownedExceptions_15_0,
                      							"org.eclipse.qvtd.xtext.qvtbase.QVTbase.TypedRefCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:5197:4: (otherlv_16= ',' ( (lv_ownedExceptions_17_0= ruleTypedRefCS ) ) )*
                    loop120:
                    do {
                        int alt120=2;
                        int LA120_0 = input.LA(1);

                        if ( (LA120_0==18) ) {
                            alt120=1;
                        }


                        switch (alt120) {
                    	case 1 :
                    	    // InternalQVTimperative.g:5198:5: otherlv_16= ',' ( (lv_ownedExceptions_17_0= ruleTypedRefCS ) )
                    	    {
                    	    otherlv_16=(Token)match(input,18,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_16, grammarAccess.getOperationCSAccess().getCommaKeyword_8_2_0());

                    	    }
                    	    // InternalQVTimperative.g:5202:5: ( (lv_ownedExceptions_17_0= ruleTypedRefCS ) )
                    	    // InternalQVTimperative.g:5203:6: (lv_ownedExceptions_17_0= ruleTypedRefCS )
                    	    {
                    	    // InternalQVTimperative.g:5203:6: (lv_ownedExceptions_17_0= ruleTypedRefCS )
                    	    // InternalQVTimperative.g:5204:7: lv_ownedExceptions_17_0= ruleTypedRefCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedExceptionsTypedRefCSParserRuleCall_8_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_92);
                    	    lv_ownedExceptions_17_0=ruleTypedRefCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getOperationCSRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedExceptions",
                    	      								lv_ownedExceptions_17_0,
                    	      								"org.eclipse.qvtd.xtext.qvtbase.QVTbase.TypedRefCS");
                    	      							afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop120;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalQVTimperative.g:5223:3: (otherlv_18= '{' ( ( ( (lv_qualifiers_19_0= 'derived' ) ) | ( (lv_qualifiers_20_0= '!derived' ) ) | ( (lv_qualifiers_21_0= 'ordered' ) ) | ( (lv_qualifiers_22_0= '!ordered' ) ) | ( (lv_qualifiers_23_0= 'unique' ) ) | ( (lv_qualifiers_24_0= '!unique' ) ) ) (otherlv_25= ',' )? )+ otherlv_26= '}' )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==35) ) {
                int LA125_1 = input.LA(2);

                if ( ((LA125_1>=70 && LA125_1<=71)||(LA125_1>=74 && LA125_1<=75)||(LA125_1>=79 && LA125_1<=80)) ) {
                    alt125=1;
                }
            }
            switch (alt125) {
                case 1 :
                    // InternalQVTimperative.g:5224:4: otherlv_18= '{' ( ( ( (lv_qualifiers_19_0= 'derived' ) ) | ( (lv_qualifiers_20_0= '!derived' ) ) | ( (lv_qualifiers_21_0= 'ordered' ) ) | ( (lv_qualifiers_22_0= '!ordered' ) ) | ( (lv_qualifiers_23_0= 'unique' ) ) | ( (lv_qualifiers_24_0= '!unique' ) ) ) (otherlv_25= ',' )? )+ otherlv_26= '}'
                    {
                    otherlv_18=(Token)match(input,35,FollowSets000.FOLLOW_93); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getOperationCSAccess().getLeftCurlyBracketKeyword_9_0());

                    }
                    // InternalQVTimperative.g:5228:4: ( ( ( (lv_qualifiers_19_0= 'derived' ) ) | ( (lv_qualifiers_20_0= '!derived' ) ) | ( (lv_qualifiers_21_0= 'ordered' ) ) | ( (lv_qualifiers_22_0= '!ordered' ) ) | ( (lv_qualifiers_23_0= 'unique' ) ) | ( (lv_qualifiers_24_0= '!unique' ) ) ) (otherlv_25= ',' )? )+
                    int cnt124=0;
                    loop124:
                    do {
                        int alt124=2;
                        int LA124_0 = input.LA(1);

                        if ( ((LA124_0>=70 && LA124_0<=71)||(LA124_0>=74 && LA124_0<=75)||(LA124_0>=79 && LA124_0<=80)) ) {
                            alt124=1;
                        }


                        switch (alt124) {
                    	case 1 :
                    	    // InternalQVTimperative.g:5229:5: ( ( (lv_qualifiers_19_0= 'derived' ) ) | ( (lv_qualifiers_20_0= '!derived' ) ) | ( (lv_qualifiers_21_0= 'ordered' ) ) | ( (lv_qualifiers_22_0= '!ordered' ) ) | ( (lv_qualifiers_23_0= 'unique' ) ) | ( (lv_qualifiers_24_0= '!unique' ) ) ) (otherlv_25= ',' )?
                    	    {
                    	    // InternalQVTimperative.g:5229:5: ( ( (lv_qualifiers_19_0= 'derived' ) ) | ( (lv_qualifiers_20_0= '!derived' ) ) | ( (lv_qualifiers_21_0= 'ordered' ) ) | ( (lv_qualifiers_22_0= '!ordered' ) ) | ( (lv_qualifiers_23_0= 'unique' ) ) | ( (lv_qualifiers_24_0= '!unique' ) ) )
                    	    int alt122=6;
                    	    switch ( input.LA(1) ) {
                    	    case 70:
                    	        {
                    	        alt122=1;
                    	        }
                    	        break;
                    	    case 71:
                    	        {
                    	        alt122=2;
                    	        }
                    	        break;
                    	    case 74:
                    	        {
                    	        alt122=3;
                    	        }
                    	        break;
                    	    case 75:
                    	        {
                    	        alt122=4;
                    	        }
                    	        break;
                    	    case 79:
                    	        {
                    	        alt122=5;
                    	        }
                    	        break;
                    	    case 80:
                    	        {
                    	        alt122=6;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 122, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt122) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:5230:6: ( (lv_qualifiers_19_0= 'derived' ) )
                    	            {
                    	            // InternalQVTimperative.g:5230:6: ( (lv_qualifiers_19_0= 'derived' ) )
                    	            // InternalQVTimperative.g:5231:7: (lv_qualifiers_19_0= 'derived' )
                    	            {
                    	            // InternalQVTimperative.g:5231:7: (lv_qualifiers_19_0= 'derived' )
                    	            // InternalQVTimperative.g:5232:8: lv_qualifiers_19_0= 'derived'
                    	            {
                    	            lv_qualifiers_19_0=(Token)match(input,70,FollowSets000.FOLLOW_94); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_19_0, grammarAccess.getOperationCSAccess().getQualifiersDerivedKeyword_9_1_0_0_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getOperationCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_19_0, "derived");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalQVTimperative.g:5245:6: ( (lv_qualifiers_20_0= '!derived' ) )
                    	            {
                    	            // InternalQVTimperative.g:5245:6: ( (lv_qualifiers_20_0= '!derived' ) )
                    	            // InternalQVTimperative.g:5246:7: (lv_qualifiers_20_0= '!derived' )
                    	            {
                    	            // InternalQVTimperative.g:5246:7: (lv_qualifiers_20_0= '!derived' )
                    	            // InternalQVTimperative.g:5247:8: lv_qualifiers_20_0= '!derived'
                    	            {
                    	            lv_qualifiers_20_0=(Token)match(input,71,FollowSets000.FOLLOW_94); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_20_0, grammarAccess.getOperationCSAccess().getQualifiersDerivedKeyword_9_1_0_1_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getOperationCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_20_0, "!derived");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 3 :
                    	            // InternalQVTimperative.g:5260:6: ( (lv_qualifiers_21_0= 'ordered' ) )
                    	            {
                    	            // InternalQVTimperative.g:5260:6: ( (lv_qualifiers_21_0= 'ordered' ) )
                    	            // InternalQVTimperative.g:5261:7: (lv_qualifiers_21_0= 'ordered' )
                    	            {
                    	            // InternalQVTimperative.g:5261:7: (lv_qualifiers_21_0= 'ordered' )
                    	            // InternalQVTimperative.g:5262:8: lv_qualifiers_21_0= 'ordered'
                    	            {
                    	            lv_qualifiers_21_0=(Token)match(input,74,FollowSets000.FOLLOW_94); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_21_0, grammarAccess.getOperationCSAccess().getQualifiersOrderedKeyword_9_1_0_2_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getOperationCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_21_0, "ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 4 :
                    	            // InternalQVTimperative.g:5275:6: ( (lv_qualifiers_22_0= '!ordered' ) )
                    	            {
                    	            // InternalQVTimperative.g:5275:6: ( (lv_qualifiers_22_0= '!ordered' ) )
                    	            // InternalQVTimperative.g:5276:7: (lv_qualifiers_22_0= '!ordered' )
                    	            {
                    	            // InternalQVTimperative.g:5276:7: (lv_qualifiers_22_0= '!ordered' )
                    	            // InternalQVTimperative.g:5277:8: lv_qualifiers_22_0= '!ordered'
                    	            {
                    	            lv_qualifiers_22_0=(Token)match(input,75,FollowSets000.FOLLOW_94); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_22_0, grammarAccess.getOperationCSAccess().getQualifiersOrderedKeyword_9_1_0_3_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getOperationCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_22_0, "!ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 5 :
                    	            // InternalQVTimperative.g:5290:6: ( (lv_qualifiers_23_0= 'unique' ) )
                    	            {
                    	            // InternalQVTimperative.g:5290:6: ( (lv_qualifiers_23_0= 'unique' ) )
                    	            // InternalQVTimperative.g:5291:7: (lv_qualifiers_23_0= 'unique' )
                    	            {
                    	            // InternalQVTimperative.g:5291:7: (lv_qualifiers_23_0= 'unique' )
                    	            // InternalQVTimperative.g:5292:8: lv_qualifiers_23_0= 'unique'
                    	            {
                    	            lv_qualifiers_23_0=(Token)match(input,79,FollowSets000.FOLLOW_94); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_23_0, grammarAccess.getOperationCSAccess().getQualifiersUniqueKeyword_9_1_0_4_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getOperationCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_23_0, "unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 6 :
                    	            // InternalQVTimperative.g:5305:6: ( (lv_qualifiers_24_0= '!unique' ) )
                    	            {
                    	            // InternalQVTimperative.g:5305:6: ( (lv_qualifiers_24_0= '!unique' ) )
                    	            // InternalQVTimperative.g:5306:7: (lv_qualifiers_24_0= '!unique' )
                    	            {
                    	            // InternalQVTimperative.g:5306:7: (lv_qualifiers_24_0= '!unique' )
                    	            // InternalQVTimperative.g:5307:8: lv_qualifiers_24_0= '!unique'
                    	            {
                    	            lv_qualifiers_24_0=(Token)match(input,80,FollowSets000.FOLLOW_94); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_24_0, grammarAccess.getOperationCSAccess().getQualifiersUniqueKeyword_9_1_0_5_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getOperationCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_24_0, "!unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalQVTimperative.g:5320:5: (otherlv_25= ',' )?
                    	    int alt123=2;
                    	    int LA123_0 = input.LA(1);

                    	    if ( (LA123_0==18) ) {
                    	        alt123=1;
                    	    }
                    	    switch (alt123) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:5321:6: otherlv_25= ','
                    	            {
                    	            otherlv_25=(Token)match(input,18,FollowSets000.FOLLOW_95); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(otherlv_25, grammarAccess.getOperationCSAccess().getCommaKeyword_9_1_1());

                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt124 >= 1 ) break loop124;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(124, input);
                                throw eee;
                        }
                        cnt124++;
                    } while (true);

                    otherlv_26=(Token)match(input,36,FollowSets000.FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_26, grammarAccess.getOperationCSAccess().getRightCurlyBracketKeyword_9_2());

                    }

                    }
                    break;

            }

            // InternalQVTimperative.g:5332:3: ( (otherlv_27= '{' (otherlv_28= 'body' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' )* otherlv_33= '}' ) | otherlv_34= ';' )
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==35) ) {
                alt129=1;
            }
            else if ( (LA129_0==21) ) {
                alt129=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 129, 0, input);

                throw nvae;
            }
            switch (alt129) {
                case 1 :
                    // InternalQVTimperative.g:5333:4: (otherlv_27= '{' (otherlv_28= 'body' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' )* otherlv_33= '}' )
                    {
                    // InternalQVTimperative.g:5333:4: (otherlv_27= '{' (otherlv_28= 'body' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' )* otherlv_33= '}' )
                    // InternalQVTimperative.g:5334:5: otherlv_27= '{' (otherlv_28= 'body' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' )* otherlv_33= '}'
                    {
                    otherlv_27=(Token)match(input,35,FollowSets000.FOLLOW_96); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_27, grammarAccess.getOperationCSAccess().getLeftCurlyBracketKeyword_10_0_0());

                    }
                    // InternalQVTimperative.g:5338:5: (otherlv_28= 'body' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' )*
                    loop128:
                    do {
                        int alt128=2;
                        int LA128_0 = input.LA(1);

                        if ( (LA128_0==95) ) {
                            alt128=1;
                        }


                        switch (alt128) {
                    	case 1 :
                    	    // InternalQVTimperative.g:5339:6: otherlv_28= 'body' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';'
                    	    {
                    	    otherlv_28=(Token)match(input,95,FollowSets000.FOLLOW_14); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_28, grammarAccess.getOperationCSAccess().getBodyKeyword_10_0_1_0());

                    	    }
                    	    // InternalQVTimperative.g:5343:6: ( ruleUnrestrictedName )?
                    	    int alt126=2;
                    	    int LA126_0 = input.LA(1);

                    	    if ( ((LA126_0>=RULE_SIMPLE_ID && LA126_0<=RULE_ESCAPED_ID)||LA126_0==17||LA126_0==19||(LA126_0>=22 && LA126_0<=23)||(LA126_0>=25 && LA126_0<=26)||(LA126_0>=29 && LA126_0<=34)||LA126_0==39||(LA126_0>=43 && LA126_0<=48)||(LA126_0>=50 && LA126_0<=52)||(LA126_0>=54 && LA126_0<=55)||(LA126_0>=58 && LA126_0<=60)||(LA126_0>=62 && LA126_0<=70)||LA126_0==72||LA126_0==74||LA126_0==76||LA126_0==79||LA126_0==81||LA126_0==83||(LA126_0>=85 && LA126_0<=89)||(LA126_0>=91 && LA126_0<=96)||LA126_0==98||LA126_0==100||(LA126_0>=102 && LA126_0<=105)) ) {
                    	        alt126=1;
                    	    }
                    	    switch (alt126) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:5344:7: ruleUnrestrictedName
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              							/* */

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              							newCompositeNode(grammarAccess.getOperationCSAccess().getUnrestrictedNameParserRuleCall_10_0_1_1());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_11);
                    	            ruleUnrestrictedName();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              							afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;

                    	    }

                    	    otherlv_30=(Token)match(input,24,FollowSets000.FOLLOW_77); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_30, grammarAccess.getOperationCSAccess().getColonKeyword_10_0_1_2());

                    	    }
                    	    // InternalQVTimperative.g:5359:6: ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )?
                    	    int alt127=2;
                    	    int LA127_0 = input.LA(1);

                    	    if ( ((LA127_0>=RULE_SINGLE_QUOTED_STRING && LA127_0<=RULE_ESCAPED_ID)||LA127_0==17||LA127_0==19||(LA127_0>=22 && LA127_0<=23)||(LA127_0>=25 && LA127_0<=26)||(LA127_0>=29 && LA127_0<=34)||LA127_0==39||(LA127_0>=42 && LA127_0<=48)||(LA127_0>=50 && LA127_0<=52)||(LA127_0>=54 && LA127_0<=56)||(LA127_0>=58 && LA127_0<=60)||(LA127_0>=62 && LA127_0<=70)||LA127_0==72||LA127_0==74||LA127_0==76||LA127_0==79||LA127_0==81||LA127_0==83||(LA127_0>=85 && LA127_0<=89)||(LA127_0>=91 && LA127_0<=96)||LA127_0==98||LA127_0==100||(LA127_0>=102 && LA127_0<=108)||(LA127_0>=127 && LA127_0<=141)||LA127_0==143||(LA127_0>=146 && LA127_0<=149)||LA127_0==155||(LA127_0>=160 && LA127_0<=161)) ) {
                    	        alt127=1;
                    	    }
                    	    switch (alt127) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:5360:7: (lv_ownedBodyExpressions_31_0= ruleSpecificationCS )
                    	            {
                    	            // InternalQVTimperative.g:5360:7: (lv_ownedBodyExpressions_31_0= ruleSpecificationCS )
                    	            // InternalQVTimperative.g:5361:8: lv_ownedBodyExpressions_31_0= ruleSpecificationCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              								newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedBodyExpressionsSpecificationCSParserRuleCall_10_0_1_3_0());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_9);
                    	            lv_ownedBodyExpressions_31_0=ruleSpecificationCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElementForParent(grammarAccess.getOperationCSRule());
                    	              								}
                    	              								add(
                    	              									current,
                    	              									"ownedBodyExpressions",
                    	              									lv_ownedBodyExpressions_31_0,
                    	              									"org.eclipse.qvtd.xtext.qvtbase.QVTbase.SpecificationCS");
                    	              								afterParserOrEnumRuleCall();

                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    otherlv_32=(Token)match(input,21,FollowSets000.FOLLOW_96); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_32, grammarAccess.getOperationCSAccess().getSemicolonKeyword_10_0_1_4());

                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop128;
                        }
                    } while (true);

                    otherlv_33=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_33, grammarAccess.getOperationCSAccess().getRightCurlyBracketKeyword_10_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:5389:4: otherlv_34= ';'
                    {
                    otherlv_34=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_34, grammarAccess.getOperationCSAccess().getSemicolonKeyword_10_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOperationCS"


    // $ANTLR start "entryRuleParameterCS"
    // InternalQVTimperative.g:5398:1: entryRuleParameterCS returns [EObject current=null] : iv_ruleParameterCS= ruleParameterCS EOF ;
    public final EObject entryRuleParameterCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterCS = null;


        try {
            // InternalQVTimperative.g:5398:52: (iv_ruleParameterCS= ruleParameterCS EOF )
            // InternalQVTimperative.g:5399:2: iv_ruleParameterCS= ruleParameterCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleParameterCS=ruleParameterCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameterCS"


    // $ANTLR start "ruleParameterCS"
    // InternalQVTimperative.g:5405:1: ruleParameterCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_3= '{' ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+ otherlv_9= '}' )? (otherlv_10= '{' otherlv_11= '}' )? ) ;
    public final EObject ruleParameterCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_qualifiers_4_0=null;
        Token lv_qualifiers_5_0=null;
        Token lv_qualifiers_6_0=null;
        Token lv_qualifiers_7_0=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedType_2_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:5411:2: ( ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_3= '{' ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+ otherlv_9= '}' )? (otherlv_10= '{' otherlv_11= '}' )? ) )
            // InternalQVTimperative.g:5412:2: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_3= '{' ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+ otherlv_9= '}' )? (otherlv_10= '{' otherlv_11= '}' )? )
            {
            // InternalQVTimperative.g:5412:2: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_3= '{' ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+ otherlv_9= '}' )? (otherlv_10= '{' otherlv_11= '}' )? )
            // InternalQVTimperative.g:5413:3: ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_3= '{' ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+ otherlv_9= '}' )? (otherlv_10= '{' otherlv_11= '}' )?
            {
            // InternalQVTimperative.g:5413:3: ( (lv_name_0_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:5414:4: (lv_name_0_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:5414:4: (lv_name_0_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:5415:5: lv_name_0_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getParameterCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_97);
            lv_name_0_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getParameterCSRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:5432:3: (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) ) )?
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( (LA130_0==24) ) {
                alt130=1;
            }
            switch (alt130) {
                case 1 :
                    // InternalQVTimperative.g:5433:4: otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) )
                    {
                    otherlv_1=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getParameterCSAccess().getColonKeyword_1_0());

                    }
                    // InternalQVTimperative.g:5437:4: ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) )
                    // InternalQVTimperative.g:5438:5: (lv_ownedType_2_0= ruleTypedMultiplicityRefCS )
                    {
                    // InternalQVTimperative.g:5438:5: (lv_ownedType_2_0= ruleTypedMultiplicityRefCS )
                    // InternalQVTimperative.g:5439:6: lv_ownedType_2_0= ruleTypedMultiplicityRefCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParameterCSAccess().getOwnedTypeTypedMultiplicityRefCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_98);
                    lv_ownedType_2_0=ruleTypedMultiplicityRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParameterCSRule());
                      						}
                      						set(
                      							current,
                      							"ownedType",
                      							lv_ownedType_2_0,
                      							"org.eclipse.qvtd.xtext.qvtbase.QVTbase.TypedMultiplicityRefCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:5457:3: (otherlv_3= '{' ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+ otherlv_9= '}' )?
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==35) ) {
                int LA134_1 = input.LA(2);

                if ( ((LA134_1>=74 && LA134_1<=75)||(LA134_1>=79 && LA134_1<=80)) ) {
                    alt134=1;
                }
            }
            switch (alt134) {
                case 1 :
                    // InternalQVTimperative.g:5458:4: otherlv_3= '{' ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+ otherlv_9= '}'
                    {
                    otherlv_3=(Token)match(input,35,FollowSets000.FOLLOW_99); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getParameterCSAccess().getLeftCurlyBracketKeyword_2_0());

                    }
                    // InternalQVTimperative.g:5462:4: ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+
                    int cnt133=0;
                    loop133:
                    do {
                        int alt133=2;
                        int LA133_0 = input.LA(1);

                        if ( ((LA133_0>=74 && LA133_0<=75)||(LA133_0>=79 && LA133_0<=80)) ) {
                            alt133=1;
                        }


                        switch (alt133) {
                    	case 1 :
                    	    // InternalQVTimperative.g:5463:5: ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )?
                    	    {
                    	    // InternalQVTimperative.g:5463:5: ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) )
                    	    int alt131=4;
                    	    switch ( input.LA(1) ) {
                    	    case 74:
                    	        {
                    	        alt131=1;
                    	        }
                    	        break;
                    	    case 75:
                    	        {
                    	        alt131=2;
                    	        }
                    	        break;
                    	    case 79:
                    	        {
                    	        alt131=3;
                    	        }
                    	        break;
                    	    case 80:
                    	        {
                    	        alt131=4;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 131, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt131) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:5464:6: ( (lv_qualifiers_4_0= 'ordered' ) )
                    	            {
                    	            // InternalQVTimperative.g:5464:6: ( (lv_qualifiers_4_0= 'ordered' ) )
                    	            // InternalQVTimperative.g:5465:7: (lv_qualifiers_4_0= 'ordered' )
                    	            {
                    	            // InternalQVTimperative.g:5465:7: (lv_qualifiers_4_0= 'ordered' )
                    	            // InternalQVTimperative.g:5466:8: lv_qualifiers_4_0= 'ordered'
                    	            {
                    	            lv_qualifiers_4_0=(Token)match(input,74,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_4_0, grammarAccess.getParameterCSAccess().getQualifiersOrderedKeyword_2_1_0_0_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getParameterCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_4_0, "ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalQVTimperative.g:5479:6: ( (lv_qualifiers_5_0= '!ordered' ) )
                    	            {
                    	            // InternalQVTimperative.g:5479:6: ( (lv_qualifiers_5_0= '!ordered' ) )
                    	            // InternalQVTimperative.g:5480:7: (lv_qualifiers_5_0= '!ordered' )
                    	            {
                    	            // InternalQVTimperative.g:5480:7: (lv_qualifiers_5_0= '!ordered' )
                    	            // InternalQVTimperative.g:5481:8: lv_qualifiers_5_0= '!ordered'
                    	            {
                    	            lv_qualifiers_5_0=(Token)match(input,75,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_5_0, grammarAccess.getParameterCSAccess().getQualifiersOrderedKeyword_2_1_0_1_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getParameterCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_5_0, "!ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 3 :
                    	            // InternalQVTimperative.g:5494:6: ( (lv_qualifiers_6_0= 'unique' ) )
                    	            {
                    	            // InternalQVTimperative.g:5494:6: ( (lv_qualifiers_6_0= 'unique' ) )
                    	            // InternalQVTimperative.g:5495:7: (lv_qualifiers_6_0= 'unique' )
                    	            {
                    	            // InternalQVTimperative.g:5495:7: (lv_qualifiers_6_0= 'unique' )
                    	            // InternalQVTimperative.g:5496:8: lv_qualifiers_6_0= 'unique'
                    	            {
                    	            lv_qualifiers_6_0=(Token)match(input,79,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_6_0, grammarAccess.getParameterCSAccess().getQualifiersUniqueKeyword_2_1_0_2_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getParameterCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_6_0, "unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 4 :
                    	            // InternalQVTimperative.g:5509:6: ( (lv_qualifiers_7_0= '!unique' ) )
                    	            {
                    	            // InternalQVTimperative.g:5509:6: ( (lv_qualifiers_7_0= '!unique' ) )
                    	            // InternalQVTimperative.g:5510:7: (lv_qualifiers_7_0= '!unique' )
                    	            {
                    	            // InternalQVTimperative.g:5510:7: (lv_qualifiers_7_0= '!unique' )
                    	            // InternalQVTimperative.g:5511:8: lv_qualifiers_7_0= '!unique'
                    	            {
                    	            lv_qualifiers_7_0=(Token)match(input,80,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_7_0, grammarAccess.getParameterCSAccess().getQualifiersUniqueKeyword_2_1_0_3_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getParameterCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_7_0, "!unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalQVTimperative.g:5524:5: (otherlv_8= ',' )?
                    	    int alt132=2;
                    	    int LA132_0 = input.LA(1);

                    	    if ( (LA132_0==18) ) {
                    	        alt132=1;
                    	    }
                    	    switch (alt132) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:5525:6: otherlv_8= ','
                    	            {
                    	            otherlv_8=(Token)match(input,18,FollowSets000.FOLLOW_101); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(otherlv_8, grammarAccess.getParameterCSAccess().getCommaKeyword_2_1_1());

                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt133 >= 1 ) break loop133;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(133, input);
                                throw eee;
                        }
                        cnt133++;
                    } while (true);

                    otherlv_9=(Token)match(input,36,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getParameterCSAccess().getRightCurlyBracketKeyword_2_2());

                    }

                    }
                    break;

            }

            // InternalQVTimperative.g:5536:3: (otherlv_10= '{' otherlv_11= '}' )?
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==35) ) {
                alt135=1;
            }
            switch (alt135) {
                case 1 :
                    // InternalQVTimperative.g:5537:4: otherlv_10= '{' otherlv_11= '}'
                    {
                    otherlv_10=(Token)match(input,35,FollowSets000.FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getParameterCSAccess().getLeftCurlyBracketKeyword_3_0());

                    }
                    otherlv_11=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getParameterCSAccess().getRightCurlyBracketKeyword_3_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterCS"


    // $ANTLR start "entryRuleReferenceCS"
    // InternalQVTimperative.g:5550:1: entryRuleReferenceCS returns [EObject current=null] : iv_ruleReferenceCS= ruleReferenceCS EOF ;
    public final EObject entryRuleReferenceCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceCS = null;


        try {
            // InternalQVTimperative.g:5550:52: (iv_ruleReferenceCS= ruleReferenceCS EOF )
            // InternalQVTimperative.g:5551:2: iv_ruleReferenceCS= ruleReferenceCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceCS=ruleReferenceCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceCS"


    // $ANTLR start "ruleReferenceCS"
    // InternalQVTimperative.g:5557:1: ruleReferenceCS returns [EObject current=null] : ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'property' ( (lv_name_5_0= ruleUnrestrictedName ) ) (otherlv_6= '#' ( ( ruleUnrestrictedName ) ) )? (otherlv_8= ':' ( (lv_ownedType_9_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_10= '=' ( (lv_default_11_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_12= '{' ( ( ( (lv_qualifiers_13_0= 'composes' ) ) | ( (lv_qualifiers_14_0= '!composes' ) ) | ( (lv_qualifiers_15_0= 'derived' ) ) | ( (lv_qualifiers_16_0= '!derived' ) ) | ( (lv_qualifiers_17_0= 'ordered' ) ) | ( (lv_qualifiers_18_0= '!ordered' ) ) | ( (lv_qualifiers_19_0= 'readonly' ) ) | ( (lv_qualifiers_20_0= '!readonly' ) ) | ( (lv_qualifiers_21_0= 'resolve' ) ) | ( (lv_qualifiers_22_0= '!resolve' ) ) | ( (lv_qualifiers_23_0= 'transient' ) ) | ( (lv_qualifiers_24_0= '!transient' ) ) | ( (lv_qualifiers_25_0= 'unique' ) ) | ( (lv_qualifiers_26_0= '!unique' ) ) | ( (lv_qualifiers_27_0= 'unsettable' ) ) | ( (lv_qualifiers_28_0= '!unsettable' ) ) | ( (lv_qualifiers_29_0= 'volatile' ) ) | ( (lv_qualifiers_30_0= '!volatile' ) ) ) (otherlv_31= ',' )? )+ otherlv_32= '}' )? ( (otherlv_33= '{' ( (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' ) | (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' ) )* otherlv_44= '}' ) | otherlv_45= ';' ) ) ;
    public final EObject ruleReferenceCS() throws RecognitionException {
        EObject current = null;

        Token lv_qualifiers_0_0=null;
        Token lv_qualifiers_1_0=null;
        Token lv_qualifiers_2_0=null;
        Token lv_qualifiers_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token lv_default_11_0=null;
        Token otherlv_12=null;
        Token lv_qualifiers_13_0=null;
        Token lv_qualifiers_14_0=null;
        Token lv_qualifiers_15_0=null;
        Token lv_qualifiers_16_0=null;
        Token lv_qualifiers_17_0=null;
        Token lv_qualifiers_18_0=null;
        Token lv_qualifiers_19_0=null;
        Token lv_qualifiers_20_0=null;
        Token lv_qualifiers_21_0=null;
        Token lv_qualifiers_22_0=null;
        Token lv_qualifiers_23_0=null;
        Token lv_qualifiers_24_0=null;
        Token lv_qualifiers_25_0=null;
        Token lv_qualifiers_26_0=null;
        Token lv_qualifiers_27_0=null;
        Token lv_qualifiers_28_0=null;
        Token lv_qualifiers_29_0=null;
        Token lv_qualifiers_30_0=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        Token otherlv_36=null;
        Token otherlv_38=null;
        Token otherlv_39=null;
        Token otherlv_41=null;
        Token otherlv_43=null;
        Token otherlv_44=null;
        Token otherlv_45=null;
        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_ownedType_9_0 = null;

        EObject lv_ownedDefaultExpressions_37_0 = null;

        EObject lv_ownedDefaultExpressions_42_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:5563:2: ( ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'property' ( (lv_name_5_0= ruleUnrestrictedName ) ) (otherlv_6= '#' ( ( ruleUnrestrictedName ) ) )? (otherlv_8= ':' ( (lv_ownedType_9_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_10= '=' ( (lv_default_11_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_12= '{' ( ( ( (lv_qualifiers_13_0= 'composes' ) ) | ( (lv_qualifiers_14_0= '!composes' ) ) | ( (lv_qualifiers_15_0= 'derived' ) ) | ( (lv_qualifiers_16_0= '!derived' ) ) | ( (lv_qualifiers_17_0= 'ordered' ) ) | ( (lv_qualifiers_18_0= '!ordered' ) ) | ( (lv_qualifiers_19_0= 'readonly' ) ) | ( (lv_qualifiers_20_0= '!readonly' ) ) | ( (lv_qualifiers_21_0= 'resolve' ) ) | ( (lv_qualifiers_22_0= '!resolve' ) ) | ( (lv_qualifiers_23_0= 'transient' ) ) | ( (lv_qualifiers_24_0= '!transient' ) ) | ( (lv_qualifiers_25_0= 'unique' ) ) | ( (lv_qualifiers_26_0= '!unique' ) ) | ( (lv_qualifiers_27_0= 'unsettable' ) ) | ( (lv_qualifiers_28_0= '!unsettable' ) ) | ( (lv_qualifiers_29_0= 'volatile' ) ) | ( (lv_qualifiers_30_0= '!volatile' ) ) ) (otherlv_31= ',' )? )+ otherlv_32= '}' )? ( (otherlv_33= '{' ( (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' ) | (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' ) )* otherlv_44= '}' ) | otherlv_45= ';' ) ) )
            // InternalQVTimperative.g:5564:2: ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'property' ( (lv_name_5_0= ruleUnrestrictedName ) ) (otherlv_6= '#' ( ( ruleUnrestrictedName ) ) )? (otherlv_8= ':' ( (lv_ownedType_9_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_10= '=' ( (lv_default_11_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_12= '{' ( ( ( (lv_qualifiers_13_0= 'composes' ) ) | ( (lv_qualifiers_14_0= '!composes' ) ) | ( (lv_qualifiers_15_0= 'derived' ) ) | ( (lv_qualifiers_16_0= '!derived' ) ) | ( (lv_qualifiers_17_0= 'ordered' ) ) | ( (lv_qualifiers_18_0= '!ordered' ) ) | ( (lv_qualifiers_19_0= 'readonly' ) ) | ( (lv_qualifiers_20_0= '!readonly' ) ) | ( (lv_qualifiers_21_0= 'resolve' ) ) | ( (lv_qualifiers_22_0= '!resolve' ) ) | ( (lv_qualifiers_23_0= 'transient' ) ) | ( (lv_qualifiers_24_0= '!transient' ) ) | ( (lv_qualifiers_25_0= 'unique' ) ) | ( (lv_qualifiers_26_0= '!unique' ) ) | ( (lv_qualifiers_27_0= 'unsettable' ) ) | ( (lv_qualifiers_28_0= '!unsettable' ) ) | ( (lv_qualifiers_29_0= 'volatile' ) ) | ( (lv_qualifiers_30_0= '!volatile' ) ) ) (otherlv_31= ',' )? )+ otherlv_32= '}' )? ( (otherlv_33= '{' ( (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' ) | (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' ) )* otherlv_44= '}' ) | otherlv_45= ';' ) )
            {
            // InternalQVTimperative.g:5564:2: ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'property' ( (lv_name_5_0= ruleUnrestrictedName ) ) (otherlv_6= '#' ( ( ruleUnrestrictedName ) ) )? (otherlv_8= ':' ( (lv_ownedType_9_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_10= '=' ( (lv_default_11_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_12= '{' ( ( ( (lv_qualifiers_13_0= 'composes' ) ) | ( (lv_qualifiers_14_0= '!composes' ) ) | ( (lv_qualifiers_15_0= 'derived' ) ) | ( (lv_qualifiers_16_0= '!derived' ) ) | ( (lv_qualifiers_17_0= 'ordered' ) ) | ( (lv_qualifiers_18_0= '!ordered' ) ) | ( (lv_qualifiers_19_0= 'readonly' ) ) | ( (lv_qualifiers_20_0= '!readonly' ) ) | ( (lv_qualifiers_21_0= 'resolve' ) ) | ( (lv_qualifiers_22_0= '!resolve' ) ) | ( (lv_qualifiers_23_0= 'transient' ) ) | ( (lv_qualifiers_24_0= '!transient' ) ) | ( (lv_qualifiers_25_0= 'unique' ) ) | ( (lv_qualifiers_26_0= '!unique' ) ) | ( (lv_qualifiers_27_0= 'unsettable' ) ) | ( (lv_qualifiers_28_0= '!unsettable' ) ) | ( (lv_qualifiers_29_0= 'volatile' ) ) | ( (lv_qualifiers_30_0= '!volatile' ) ) ) (otherlv_31= ',' )? )+ otherlv_32= '}' )? ( (otherlv_33= '{' ( (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' ) | (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' ) )* otherlv_44= '}' ) | otherlv_45= ';' ) )
            // InternalQVTimperative.g:5565:3: ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'property' ( (lv_name_5_0= ruleUnrestrictedName ) ) (otherlv_6= '#' ( ( ruleUnrestrictedName ) ) )? (otherlv_8= ':' ( (lv_ownedType_9_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_10= '=' ( (lv_default_11_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_12= '{' ( ( ( (lv_qualifiers_13_0= 'composes' ) ) | ( (lv_qualifiers_14_0= '!composes' ) ) | ( (lv_qualifiers_15_0= 'derived' ) ) | ( (lv_qualifiers_16_0= '!derived' ) ) | ( (lv_qualifiers_17_0= 'ordered' ) ) | ( (lv_qualifiers_18_0= '!ordered' ) ) | ( (lv_qualifiers_19_0= 'readonly' ) ) | ( (lv_qualifiers_20_0= '!readonly' ) ) | ( (lv_qualifiers_21_0= 'resolve' ) ) | ( (lv_qualifiers_22_0= '!resolve' ) ) | ( (lv_qualifiers_23_0= 'transient' ) ) | ( (lv_qualifiers_24_0= '!transient' ) ) | ( (lv_qualifiers_25_0= 'unique' ) ) | ( (lv_qualifiers_26_0= '!unique' ) ) | ( (lv_qualifiers_27_0= 'unsettable' ) ) | ( (lv_qualifiers_28_0= '!unsettable' ) ) | ( (lv_qualifiers_29_0= 'volatile' ) ) | ( (lv_qualifiers_30_0= '!volatile' ) ) ) (otherlv_31= ',' )? )+ otherlv_32= '}' )? ( (otherlv_33= '{' ( (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' ) | (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' ) )* otherlv_44= '}' ) | otherlv_45= ';' )
            {
            // InternalQVTimperative.g:5565:3: ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )?
            int alt138=3;
            int LA138_0 = input.LA(1);

            if ( (LA138_0==67) ) {
                alt138=1;
            }
            else if ( (LA138_0==68) ) {
                alt138=2;
            }
            switch (alt138) {
                case 1 :
                    // InternalQVTimperative.g:5566:4: ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? )
                    {
                    // InternalQVTimperative.g:5566:4: ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? )
                    // InternalQVTimperative.g:5567:5: ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )?
                    {
                    // InternalQVTimperative.g:5567:5: ( (lv_qualifiers_0_0= 'static' ) )
                    // InternalQVTimperative.g:5568:6: (lv_qualifiers_0_0= 'static' )
                    {
                    // InternalQVTimperative.g:5568:6: (lv_qualifiers_0_0= 'static' )
                    // InternalQVTimperative.g:5569:7: lv_qualifiers_0_0= 'static'
                    {
                    lv_qualifiers_0_0=(Token)match(input,67,FollowSets000.FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_qualifiers_0_0, grammarAccess.getReferenceCSAccess().getQualifiersStaticKeyword_0_0_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getReferenceCSRule());
                      							}
                      							addWithLastConsumed(current, "qualifiers", lv_qualifiers_0_0, "static");

                    }

                    }


                    }

                    // InternalQVTimperative.g:5581:5: ( (lv_qualifiers_1_0= 'definition' ) )?
                    int alt136=2;
                    int LA136_0 = input.LA(1);

                    if ( (LA136_0==68) ) {
                        alt136=1;
                    }
                    switch (alt136) {
                        case 1 :
                            // InternalQVTimperative.g:5582:6: (lv_qualifiers_1_0= 'definition' )
                            {
                            // InternalQVTimperative.g:5582:6: (lv_qualifiers_1_0= 'definition' )
                            // InternalQVTimperative.g:5583:7: lv_qualifiers_1_0= 'definition'
                            {
                            lv_qualifiers_1_0=(Token)match(input,68,FollowSets000.FOLLOW_103); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_qualifiers_1_0, grammarAccess.getReferenceCSAccess().getQualifiersDefinitionKeyword_0_0_1_0());

                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getReferenceCSRule());
                              							}
                              							addWithLastConsumed(current, "qualifiers", lv_qualifiers_1_0, "definition");

                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:5597:4: ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? )
                    {
                    // InternalQVTimperative.g:5597:4: ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? )
                    // InternalQVTimperative.g:5598:5: ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )?
                    {
                    // InternalQVTimperative.g:5598:5: ( (lv_qualifiers_2_0= 'definition' ) )
                    // InternalQVTimperative.g:5599:6: (lv_qualifiers_2_0= 'definition' )
                    {
                    // InternalQVTimperative.g:5599:6: (lv_qualifiers_2_0= 'definition' )
                    // InternalQVTimperative.g:5600:7: lv_qualifiers_2_0= 'definition'
                    {
                    lv_qualifiers_2_0=(Token)match(input,68,FollowSets000.FOLLOW_104); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_qualifiers_2_0, grammarAccess.getReferenceCSAccess().getQualifiersDefinitionKeyword_0_1_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getReferenceCSRule());
                      							}
                      							addWithLastConsumed(current, "qualifiers", lv_qualifiers_2_0, "definition");

                    }

                    }


                    }

                    // InternalQVTimperative.g:5612:5: ( (lv_qualifiers_3_0= 'static' ) )?
                    int alt137=2;
                    int LA137_0 = input.LA(1);

                    if ( (LA137_0==67) ) {
                        alt137=1;
                    }
                    switch (alt137) {
                        case 1 :
                            // InternalQVTimperative.g:5613:6: (lv_qualifiers_3_0= 'static' )
                            {
                            // InternalQVTimperative.g:5613:6: (lv_qualifiers_3_0= 'static' )
                            // InternalQVTimperative.g:5614:7: lv_qualifiers_3_0= 'static'
                            {
                            lv_qualifiers_3_0=(Token)match(input,67,FollowSets000.FOLLOW_103); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_qualifiers_3_0, grammarAccess.getReferenceCSAccess().getQualifiersStaticKeyword_0_1_1_0());

                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getReferenceCSRule());
                              							}
                              							addWithLastConsumed(current, "qualifiers", lv_qualifiers_3_0, "static");

                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,96,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getReferenceCSAccess().getPropertyKeyword_1());

            }
            // InternalQVTimperative.g:5632:3: ( (lv_name_5_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:5633:4: (lv_name_5_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:5633:4: (lv_name_5_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:5634:5: lv_name_5_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReferenceCSAccess().getNameUnrestrictedNameParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_105);
            lv_name_5_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getReferenceCSRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_5_0,
              						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:5651:3: (otherlv_6= '#' ( ( ruleUnrestrictedName ) ) )?
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==97) ) {
                alt139=1;
            }
            switch (alt139) {
                case 1 :
                    // InternalQVTimperative.g:5652:4: otherlv_6= '#' ( ( ruleUnrestrictedName ) )
                    {
                    otherlv_6=(Token)match(input,97,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getReferenceCSAccess().getNumberSignKeyword_3_0());

                    }
                    // InternalQVTimperative.g:5656:4: ( ( ruleUnrestrictedName ) )
                    // InternalQVTimperative.g:5657:5: ( ruleUnrestrictedName )
                    {
                    // InternalQVTimperative.g:5657:5: ( ruleUnrestrictedName )
                    // InternalQVTimperative.g:5658:6: ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      						/* */

                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getReferenceCSRule());
                      						}

                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getReferenceCSAccess().getReferredOppositePropertyCrossReference_3_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_49);
                    ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:5676:3: (otherlv_8= ':' ( (lv_ownedType_9_0= ruleTypedMultiplicityRefCS ) ) )?
            int alt140=2;
            int LA140_0 = input.LA(1);

            if ( (LA140_0==24) ) {
                alt140=1;
            }
            switch (alt140) {
                case 1 :
                    // InternalQVTimperative.g:5677:4: otherlv_8= ':' ( (lv_ownedType_9_0= ruleTypedMultiplicityRefCS ) )
                    {
                    otherlv_8=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getReferenceCSAccess().getColonKeyword_4_0());

                    }
                    // InternalQVTimperative.g:5681:4: ( (lv_ownedType_9_0= ruleTypedMultiplicityRefCS ) )
                    // InternalQVTimperative.g:5682:5: (lv_ownedType_9_0= ruleTypedMultiplicityRefCS )
                    {
                    // InternalQVTimperative.g:5682:5: (lv_ownedType_9_0= ruleTypedMultiplicityRefCS )
                    // InternalQVTimperative.g:5683:6: lv_ownedType_9_0= ruleTypedMultiplicityRefCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getReferenceCSAccess().getOwnedTypeTypedMultiplicityRefCSParserRuleCall_4_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_50);
                    lv_ownedType_9_0=ruleTypedMultiplicityRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getReferenceCSRule());
                      						}
                      						set(
                      							current,
                      							"ownedType",
                      							lv_ownedType_9_0,
                      							"org.eclipse.qvtd.xtext.qvtbase.QVTbase.TypedMultiplicityRefCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:5701:3: (otherlv_10= '=' ( (lv_default_11_0= RULE_SINGLE_QUOTED_STRING ) ) )?
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==53) ) {
                alt141=1;
            }
            switch (alt141) {
                case 1 :
                    // InternalQVTimperative.g:5702:4: otherlv_10= '=' ( (lv_default_11_0= RULE_SINGLE_QUOTED_STRING ) )
                    {
                    otherlv_10=(Token)match(input,53,FollowSets000.FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getReferenceCSAccess().getEqualsSignKeyword_5_0());

                    }
                    // InternalQVTimperative.g:5706:4: ( (lv_default_11_0= RULE_SINGLE_QUOTED_STRING ) )
                    // InternalQVTimperative.g:5707:5: (lv_default_11_0= RULE_SINGLE_QUOTED_STRING )
                    {
                    // InternalQVTimperative.g:5707:5: (lv_default_11_0= RULE_SINGLE_QUOTED_STRING )
                    // InternalQVTimperative.g:5708:6: lv_default_11_0= RULE_SINGLE_QUOTED_STRING
                    {
                    lv_default_11_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_default_11_0, grammarAccess.getReferenceCSAccess().getDefaultSINGLE_QUOTED_STRINGTerminalRuleCall_5_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getReferenceCSRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"default",
                      							lv_default_11_0,
                      							"org.eclipse.ocl.xtext.base.Base.SINGLE_QUOTED_STRING");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:5725:3: (otherlv_12= '{' ( ( ( (lv_qualifiers_13_0= 'composes' ) ) | ( (lv_qualifiers_14_0= '!composes' ) ) | ( (lv_qualifiers_15_0= 'derived' ) ) | ( (lv_qualifiers_16_0= '!derived' ) ) | ( (lv_qualifiers_17_0= 'ordered' ) ) | ( (lv_qualifiers_18_0= '!ordered' ) ) | ( (lv_qualifiers_19_0= 'readonly' ) ) | ( (lv_qualifiers_20_0= '!readonly' ) ) | ( (lv_qualifiers_21_0= 'resolve' ) ) | ( (lv_qualifiers_22_0= '!resolve' ) ) | ( (lv_qualifiers_23_0= 'transient' ) ) | ( (lv_qualifiers_24_0= '!transient' ) ) | ( (lv_qualifiers_25_0= 'unique' ) ) | ( (lv_qualifiers_26_0= '!unique' ) ) | ( (lv_qualifiers_27_0= 'unsettable' ) ) | ( (lv_qualifiers_28_0= '!unsettable' ) ) | ( (lv_qualifiers_29_0= 'volatile' ) ) | ( (lv_qualifiers_30_0= '!volatile' ) ) ) (otherlv_31= ',' )? )+ otherlv_32= '}' )?
            int alt145=2;
            int LA145_0 = input.LA(1);

            if ( (LA145_0==35) ) {
                int LA145_1 = input.LA(2);

                if ( (LA145_1==54||(LA145_1>=70 && LA145_1<=71)||(LA145_1>=74 && LA145_1<=84)||(LA145_1>=98 && LA145_1<=101)) ) {
                    alt145=1;
                }
            }
            switch (alt145) {
                case 1 :
                    // InternalQVTimperative.g:5726:4: otherlv_12= '{' ( ( ( (lv_qualifiers_13_0= 'composes' ) ) | ( (lv_qualifiers_14_0= '!composes' ) ) | ( (lv_qualifiers_15_0= 'derived' ) ) | ( (lv_qualifiers_16_0= '!derived' ) ) | ( (lv_qualifiers_17_0= 'ordered' ) ) | ( (lv_qualifiers_18_0= '!ordered' ) ) | ( (lv_qualifiers_19_0= 'readonly' ) ) | ( (lv_qualifiers_20_0= '!readonly' ) ) | ( (lv_qualifiers_21_0= 'resolve' ) ) | ( (lv_qualifiers_22_0= '!resolve' ) ) | ( (lv_qualifiers_23_0= 'transient' ) ) | ( (lv_qualifiers_24_0= '!transient' ) ) | ( (lv_qualifiers_25_0= 'unique' ) ) | ( (lv_qualifiers_26_0= '!unique' ) ) | ( (lv_qualifiers_27_0= 'unsettable' ) ) | ( (lv_qualifiers_28_0= '!unsettable' ) ) | ( (lv_qualifiers_29_0= 'volatile' ) ) | ( (lv_qualifiers_30_0= '!volatile' ) ) ) (otherlv_31= ',' )? )+ otherlv_32= '}'
                    {
                    otherlv_12=(Token)match(input,35,FollowSets000.FOLLOW_106); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getReferenceCSAccess().getLeftCurlyBracketKeyword_6_0());

                    }
                    // InternalQVTimperative.g:5730:4: ( ( ( (lv_qualifiers_13_0= 'composes' ) ) | ( (lv_qualifiers_14_0= '!composes' ) ) | ( (lv_qualifiers_15_0= 'derived' ) ) | ( (lv_qualifiers_16_0= '!derived' ) ) | ( (lv_qualifiers_17_0= 'ordered' ) ) | ( (lv_qualifiers_18_0= '!ordered' ) ) | ( (lv_qualifiers_19_0= 'readonly' ) ) | ( (lv_qualifiers_20_0= '!readonly' ) ) | ( (lv_qualifiers_21_0= 'resolve' ) ) | ( (lv_qualifiers_22_0= '!resolve' ) ) | ( (lv_qualifiers_23_0= 'transient' ) ) | ( (lv_qualifiers_24_0= '!transient' ) ) | ( (lv_qualifiers_25_0= 'unique' ) ) | ( (lv_qualifiers_26_0= '!unique' ) ) | ( (lv_qualifiers_27_0= 'unsettable' ) ) | ( (lv_qualifiers_28_0= '!unsettable' ) ) | ( (lv_qualifiers_29_0= 'volatile' ) ) | ( (lv_qualifiers_30_0= '!volatile' ) ) ) (otherlv_31= ',' )? )+
                    int cnt144=0;
                    loop144:
                    do {
                        int alt144=2;
                        int LA144_0 = input.LA(1);

                        if ( (LA144_0==54||(LA144_0>=70 && LA144_0<=71)||(LA144_0>=74 && LA144_0<=84)||(LA144_0>=98 && LA144_0<=101)) ) {
                            alt144=1;
                        }


                        switch (alt144) {
                    	case 1 :
                    	    // InternalQVTimperative.g:5731:5: ( ( (lv_qualifiers_13_0= 'composes' ) ) | ( (lv_qualifiers_14_0= '!composes' ) ) | ( (lv_qualifiers_15_0= 'derived' ) ) | ( (lv_qualifiers_16_0= '!derived' ) ) | ( (lv_qualifiers_17_0= 'ordered' ) ) | ( (lv_qualifiers_18_0= '!ordered' ) ) | ( (lv_qualifiers_19_0= 'readonly' ) ) | ( (lv_qualifiers_20_0= '!readonly' ) ) | ( (lv_qualifiers_21_0= 'resolve' ) ) | ( (lv_qualifiers_22_0= '!resolve' ) ) | ( (lv_qualifiers_23_0= 'transient' ) ) | ( (lv_qualifiers_24_0= '!transient' ) ) | ( (lv_qualifiers_25_0= 'unique' ) ) | ( (lv_qualifiers_26_0= '!unique' ) ) | ( (lv_qualifiers_27_0= 'unsettable' ) ) | ( (lv_qualifiers_28_0= '!unsettable' ) ) | ( (lv_qualifiers_29_0= 'volatile' ) ) | ( (lv_qualifiers_30_0= '!volatile' ) ) ) (otherlv_31= ',' )?
                    	    {
                    	    // InternalQVTimperative.g:5731:5: ( ( (lv_qualifiers_13_0= 'composes' ) ) | ( (lv_qualifiers_14_0= '!composes' ) ) | ( (lv_qualifiers_15_0= 'derived' ) ) | ( (lv_qualifiers_16_0= '!derived' ) ) | ( (lv_qualifiers_17_0= 'ordered' ) ) | ( (lv_qualifiers_18_0= '!ordered' ) ) | ( (lv_qualifiers_19_0= 'readonly' ) ) | ( (lv_qualifiers_20_0= '!readonly' ) ) | ( (lv_qualifiers_21_0= 'resolve' ) ) | ( (lv_qualifiers_22_0= '!resolve' ) ) | ( (lv_qualifiers_23_0= 'transient' ) ) | ( (lv_qualifiers_24_0= '!transient' ) ) | ( (lv_qualifiers_25_0= 'unique' ) ) | ( (lv_qualifiers_26_0= '!unique' ) ) | ( (lv_qualifiers_27_0= 'unsettable' ) ) | ( (lv_qualifiers_28_0= '!unsettable' ) ) | ( (lv_qualifiers_29_0= 'volatile' ) ) | ( (lv_qualifiers_30_0= '!volatile' ) ) )
                    	    int alt142=18;
                    	    switch ( input.LA(1) ) {
                    	    case 98:
                    	        {
                    	        alt142=1;
                    	        }
                    	        break;
                    	    case 99:
                    	        {
                    	        alt142=2;
                    	        }
                    	        break;
                    	    case 70:
                    	        {
                    	        alt142=3;
                    	        }
                    	        break;
                    	    case 71:
                    	        {
                    	        alt142=4;
                    	        }
                    	        break;
                    	    case 74:
                    	        {
                    	        alt142=5;
                    	        }
                    	        break;
                    	    case 75:
                    	        {
                    	        alt142=6;
                    	        }
                    	        break;
                    	    case 76:
                    	        {
                    	        alt142=7;
                    	        }
                    	        break;
                    	    case 77:
                    	        {
                    	        alt142=8;
                    	        }
                    	        break;
                    	    case 100:
                    	        {
                    	        alt142=9;
                    	        }
                    	        break;
                    	    case 101:
                    	        {
                    	        alt142=10;
                    	        }
                    	        break;
                    	    case 54:
                    	        {
                    	        alt142=11;
                    	        }
                    	        break;
                    	    case 78:
                    	        {
                    	        alt142=12;
                    	        }
                    	        break;
                    	    case 79:
                    	        {
                    	        alt142=13;
                    	        }
                    	        break;
                    	    case 80:
                    	        {
                    	        alt142=14;
                    	        }
                    	        break;
                    	    case 81:
                    	        {
                    	        alt142=15;
                    	        }
                    	        break;
                    	    case 82:
                    	        {
                    	        alt142=16;
                    	        }
                    	        break;
                    	    case 83:
                    	        {
                    	        alt142=17;
                    	        }
                    	        break;
                    	    case 84:
                    	        {
                    	        alt142=18;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 142, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt142) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:5732:6: ( (lv_qualifiers_13_0= 'composes' ) )
                    	            {
                    	            // InternalQVTimperative.g:5732:6: ( (lv_qualifiers_13_0= 'composes' ) )
                    	            // InternalQVTimperative.g:5733:7: (lv_qualifiers_13_0= 'composes' )
                    	            {
                    	            // InternalQVTimperative.g:5733:7: (lv_qualifiers_13_0= 'composes' )
                    	            // InternalQVTimperative.g:5734:8: lv_qualifiers_13_0= 'composes'
                    	            {
                    	            lv_qualifiers_13_0=(Token)match(input,98,FollowSets000.FOLLOW_107); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_13_0, grammarAccess.getReferenceCSAccess().getQualifiersComposesKeyword_6_1_0_0_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_13_0, "composes");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalQVTimperative.g:5747:6: ( (lv_qualifiers_14_0= '!composes' ) )
                    	            {
                    	            // InternalQVTimperative.g:5747:6: ( (lv_qualifiers_14_0= '!composes' ) )
                    	            // InternalQVTimperative.g:5748:7: (lv_qualifiers_14_0= '!composes' )
                    	            {
                    	            // InternalQVTimperative.g:5748:7: (lv_qualifiers_14_0= '!composes' )
                    	            // InternalQVTimperative.g:5749:8: lv_qualifiers_14_0= '!composes'
                    	            {
                    	            lv_qualifiers_14_0=(Token)match(input,99,FollowSets000.FOLLOW_107); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_14_0, grammarAccess.getReferenceCSAccess().getQualifiersComposesKeyword_6_1_0_1_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_14_0, "!composes");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 3 :
                    	            // InternalQVTimperative.g:5762:6: ( (lv_qualifiers_15_0= 'derived' ) )
                    	            {
                    	            // InternalQVTimperative.g:5762:6: ( (lv_qualifiers_15_0= 'derived' ) )
                    	            // InternalQVTimperative.g:5763:7: (lv_qualifiers_15_0= 'derived' )
                    	            {
                    	            // InternalQVTimperative.g:5763:7: (lv_qualifiers_15_0= 'derived' )
                    	            // InternalQVTimperative.g:5764:8: lv_qualifiers_15_0= 'derived'
                    	            {
                    	            lv_qualifiers_15_0=(Token)match(input,70,FollowSets000.FOLLOW_107); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_15_0, grammarAccess.getReferenceCSAccess().getQualifiersDerivedKeyword_6_1_0_2_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_15_0, "derived");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 4 :
                    	            // InternalQVTimperative.g:5777:6: ( (lv_qualifiers_16_0= '!derived' ) )
                    	            {
                    	            // InternalQVTimperative.g:5777:6: ( (lv_qualifiers_16_0= '!derived' ) )
                    	            // InternalQVTimperative.g:5778:7: (lv_qualifiers_16_0= '!derived' )
                    	            {
                    	            // InternalQVTimperative.g:5778:7: (lv_qualifiers_16_0= '!derived' )
                    	            // InternalQVTimperative.g:5779:8: lv_qualifiers_16_0= '!derived'
                    	            {
                    	            lv_qualifiers_16_0=(Token)match(input,71,FollowSets000.FOLLOW_107); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_16_0, grammarAccess.getReferenceCSAccess().getQualifiersDerivedKeyword_6_1_0_3_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_16_0, "!derived");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 5 :
                    	            // InternalQVTimperative.g:5792:6: ( (lv_qualifiers_17_0= 'ordered' ) )
                    	            {
                    	            // InternalQVTimperative.g:5792:6: ( (lv_qualifiers_17_0= 'ordered' ) )
                    	            // InternalQVTimperative.g:5793:7: (lv_qualifiers_17_0= 'ordered' )
                    	            {
                    	            // InternalQVTimperative.g:5793:7: (lv_qualifiers_17_0= 'ordered' )
                    	            // InternalQVTimperative.g:5794:8: lv_qualifiers_17_0= 'ordered'
                    	            {
                    	            lv_qualifiers_17_0=(Token)match(input,74,FollowSets000.FOLLOW_107); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_17_0, grammarAccess.getReferenceCSAccess().getQualifiersOrderedKeyword_6_1_0_4_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_17_0, "ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 6 :
                    	            // InternalQVTimperative.g:5807:6: ( (lv_qualifiers_18_0= '!ordered' ) )
                    	            {
                    	            // InternalQVTimperative.g:5807:6: ( (lv_qualifiers_18_0= '!ordered' ) )
                    	            // InternalQVTimperative.g:5808:7: (lv_qualifiers_18_0= '!ordered' )
                    	            {
                    	            // InternalQVTimperative.g:5808:7: (lv_qualifiers_18_0= '!ordered' )
                    	            // InternalQVTimperative.g:5809:8: lv_qualifiers_18_0= '!ordered'
                    	            {
                    	            lv_qualifiers_18_0=(Token)match(input,75,FollowSets000.FOLLOW_107); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_18_0, grammarAccess.getReferenceCSAccess().getQualifiersOrderedKeyword_6_1_0_5_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_18_0, "!ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 7 :
                    	            // InternalQVTimperative.g:5822:6: ( (lv_qualifiers_19_0= 'readonly' ) )
                    	            {
                    	            // InternalQVTimperative.g:5822:6: ( (lv_qualifiers_19_0= 'readonly' ) )
                    	            // InternalQVTimperative.g:5823:7: (lv_qualifiers_19_0= 'readonly' )
                    	            {
                    	            // InternalQVTimperative.g:5823:7: (lv_qualifiers_19_0= 'readonly' )
                    	            // InternalQVTimperative.g:5824:8: lv_qualifiers_19_0= 'readonly'
                    	            {
                    	            lv_qualifiers_19_0=(Token)match(input,76,FollowSets000.FOLLOW_107); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_19_0, grammarAccess.getReferenceCSAccess().getQualifiersReadonlyKeyword_6_1_0_6_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_19_0, "readonly");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 8 :
                    	            // InternalQVTimperative.g:5837:6: ( (lv_qualifiers_20_0= '!readonly' ) )
                    	            {
                    	            // InternalQVTimperative.g:5837:6: ( (lv_qualifiers_20_0= '!readonly' ) )
                    	            // InternalQVTimperative.g:5838:7: (lv_qualifiers_20_0= '!readonly' )
                    	            {
                    	            // InternalQVTimperative.g:5838:7: (lv_qualifiers_20_0= '!readonly' )
                    	            // InternalQVTimperative.g:5839:8: lv_qualifiers_20_0= '!readonly'
                    	            {
                    	            lv_qualifiers_20_0=(Token)match(input,77,FollowSets000.FOLLOW_107); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_20_0, grammarAccess.getReferenceCSAccess().getQualifiersReadonlyKeyword_6_1_0_7_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_20_0, "!readonly");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 9 :
                    	            // InternalQVTimperative.g:5852:6: ( (lv_qualifiers_21_0= 'resolve' ) )
                    	            {
                    	            // InternalQVTimperative.g:5852:6: ( (lv_qualifiers_21_0= 'resolve' ) )
                    	            // InternalQVTimperative.g:5853:7: (lv_qualifiers_21_0= 'resolve' )
                    	            {
                    	            // InternalQVTimperative.g:5853:7: (lv_qualifiers_21_0= 'resolve' )
                    	            // InternalQVTimperative.g:5854:8: lv_qualifiers_21_0= 'resolve'
                    	            {
                    	            lv_qualifiers_21_0=(Token)match(input,100,FollowSets000.FOLLOW_107); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_21_0, grammarAccess.getReferenceCSAccess().getQualifiersResolveKeyword_6_1_0_8_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_21_0, "resolve");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 10 :
                    	            // InternalQVTimperative.g:5867:6: ( (lv_qualifiers_22_0= '!resolve' ) )
                    	            {
                    	            // InternalQVTimperative.g:5867:6: ( (lv_qualifiers_22_0= '!resolve' ) )
                    	            // InternalQVTimperative.g:5868:7: (lv_qualifiers_22_0= '!resolve' )
                    	            {
                    	            // InternalQVTimperative.g:5868:7: (lv_qualifiers_22_0= '!resolve' )
                    	            // InternalQVTimperative.g:5869:8: lv_qualifiers_22_0= '!resolve'
                    	            {
                    	            lv_qualifiers_22_0=(Token)match(input,101,FollowSets000.FOLLOW_107); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_22_0, grammarAccess.getReferenceCSAccess().getQualifiersResolveKeyword_6_1_0_9_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_22_0, "!resolve");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 11 :
                    	            // InternalQVTimperative.g:5882:6: ( (lv_qualifiers_23_0= 'transient' ) )
                    	            {
                    	            // InternalQVTimperative.g:5882:6: ( (lv_qualifiers_23_0= 'transient' ) )
                    	            // InternalQVTimperative.g:5883:7: (lv_qualifiers_23_0= 'transient' )
                    	            {
                    	            // InternalQVTimperative.g:5883:7: (lv_qualifiers_23_0= 'transient' )
                    	            // InternalQVTimperative.g:5884:8: lv_qualifiers_23_0= 'transient'
                    	            {
                    	            lv_qualifiers_23_0=(Token)match(input,54,FollowSets000.FOLLOW_107); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_23_0, grammarAccess.getReferenceCSAccess().getQualifiersTransientKeyword_6_1_0_10_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_23_0, "transient");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 12 :
                    	            // InternalQVTimperative.g:5897:6: ( (lv_qualifiers_24_0= '!transient' ) )
                    	            {
                    	            // InternalQVTimperative.g:5897:6: ( (lv_qualifiers_24_0= '!transient' ) )
                    	            // InternalQVTimperative.g:5898:7: (lv_qualifiers_24_0= '!transient' )
                    	            {
                    	            // InternalQVTimperative.g:5898:7: (lv_qualifiers_24_0= '!transient' )
                    	            // InternalQVTimperative.g:5899:8: lv_qualifiers_24_0= '!transient'
                    	            {
                    	            lv_qualifiers_24_0=(Token)match(input,78,FollowSets000.FOLLOW_107); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_24_0, grammarAccess.getReferenceCSAccess().getQualifiersTransientKeyword_6_1_0_11_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_24_0, "!transient");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 13 :
                    	            // InternalQVTimperative.g:5912:6: ( (lv_qualifiers_25_0= 'unique' ) )
                    	            {
                    	            // InternalQVTimperative.g:5912:6: ( (lv_qualifiers_25_0= 'unique' ) )
                    	            // InternalQVTimperative.g:5913:7: (lv_qualifiers_25_0= 'unique' )
                    	            {
                    	            // InternalQVTimperative.g:5913:7: (lv_qualifiers_25_0= 'unique' )
                    	            // InternalQVTimperative.g:5914:8: lv_qualifiers_25_0= 'unique'
                    	            {
                    	            lv_qualifiers_25_0=(Token)match(input,79,FollowSets000.FOLLOW_107); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_25_0, grammarAccess.getReferenceCSAccess().getQualifiersUniqueKeyword_6_1_0_12_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_25_0, "unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 14 :
                    	            // InternalQVTimperative.g:5927:6: ( (lv_qualifiers_26_0= '!unique' ) )
                    	            {
                    	            // InternalQVTimperative.g:5927:6: ( (lv_qualifiers_26_0= '!unique' ) )
                    	            // InternalQVTimperative.g:5928:7: (lv_qualifiers_26_0= '!unique' )
                    	            {
                    	            // InternalQVTimperative.g:5928:7: (lv_qualifiers_26_0= '!unique' )
                    	            // InternalQVTimperative.g:5929:8: lv_qualifiers_26_0= '!unique'
                    	            {
                    	            lv_qualifiers_26_0=(Token)match(input,80,FollowSets000.FOLLOW_107); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_26_0, grammarAccess.getReferenceCSAccess().getQualifiersUniqueKeyword_6_1_0_13_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_26_0, "!unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 15 :
                    	            // InternalQVTimperative.g:5942:6: ( (lv_qualifiers_27_0= 'unsettable' ) )
                    	            {
                    	            // InternalQVTimperative.g:5942:6: ( (lv_qualifiers_27_0= 'unsettable' ) )
                    	            // InternalQVTimperative.g:5943:7: (lv_qualifiers_27_0= 'unsettable' )
                    	            {
                    	            // InternalQVTimperative.g:5943:7: (lv_qualifiers_27_0= 'unsettable' )
                    	            // InternalQVTimperative.g:5944:8: lv_qualifiers_27_0= 'unsettable'
                    	            {
                    	            lv_qualifiers_27_0=(Token)match(input,81,FollowSets000.FOLLOW_107); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_27_0, grammarAccess.getReferenceCSAccess().getQualifiersUnsettableKeyword_6_1_0_14_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_27_0, "unsettable");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 16 :
                    	            // InternalQVTimperative.g:5957:6: ( (lv_qualifiers_28_0= '!unsettable' ) )
                    	            {
                    	            // InternalQVTimperative.g:5957:6: ( (lv_qualifiers_28_0= '!unsettable' ) )
                    	            // InternalQVTimperative.g:5958:7: (lv_qualifiers_28_0= '!unsettable' )
                    	            {
                    	            // InternalQVTimperative.g:5958:7: (lv_qualifiers_28_0= '!unsettable' )
                    	            // InternalQVTimperative.g:5959:8: lv_qualifiers_28_0= '!unsettable'
                    	            {
                    	            lv_qualifiers_28_0=(Token)match(input,82,FollowSets000.FOLLOW_107); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_28_0, grammarAccess.getReferenceCSAccess().getQualifiersUnsettableKeyword_6_1_0_15_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_28_0, "!unsettable");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 17 :
                    	            // InternalQVTimperative.g:5972:6: ( (lv_qualifiers_29_0= 'volatile' ) )
                    	            {
                    	            // InternalQVTimperative.g:5972:6: ( (lv_qualifiers_29_0= 'volatile' ) )
                    	            // InternalQVTimperative.g:5973:7: (lv_qualifiers_29_0= 'volatile' )
                    	            {
                    	            // InternalQVTimperative.g:5973:7: (lv_qualifiers_29_0= 'volatile' )
                    	            // InternalQVTimperative.g:5974:8: lv_qualifiers_29_0= 'volatile'
                    	            {
                    	            lv_qualifiers_29_0=(Token)match(input,83,FollowSets000.FOLLOW_107); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_29_0, grammarAccess.getReferenceCSAccess().getQualifiersVolatileKeyword_6_1_0_16_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_29_0, "volatile");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 18 :
                    	            // InternalQVTimperative.g:5987:6: ( (lv_qualifiers_30_0= '!volatile' ) )
                    	            {
                    	            // InternalQVTimperative.g:5987:6: ( (lv_qualifiers_30_0= '!volatile' ) )
                    	            // InternalQVTimperative.g:5988:7: (lv_qualifiers_30_0= '!volatile' )
                    	            {
                    	            // InternalQVTimperative.g:5988:7: (lv_qualifiers_30_0= '!volatile' )
                    	            // InternalQVTimperative.g:5989:8: lv_qualifiers_30_0= '!volatile'
                    	            {
                    	            lv_qualifiers_30_0=(Token)match(input,84,FollowSets000.FOLLOW_107); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_qualifiers_30_0, grammarAccess.getReferenceCSAccess().getQualifiersVolatileKeyword_6_1_0_17_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              								}
                    	              								addWithLastConsumed(current, "qualifiers", lv_qualifiers_30_0, "!volatile");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalQVTimperative.g:6002:5: (otherlv_31= ',' )?
                    	    int alt143=2;
                    	    int LA143_0 = input.LA(1);

                    	    if ( (LA143_0==18) ) {
                    	        alt143=1;
                    	    }
                    	    switch (alt143) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:6003:6: otherlv_31= ','
                    	            {
                    	            otherlv_31=(Token)match(input,18,FollowSets000.FOLLOW_108); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(otherlv_31, grammarAccess.getReferenceCSAccess().getCommaKeyword_6_1_1());

                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt144 >= 1 ) break loop144;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(144, input);
                                throw eee;
                        }
                        cnt144++;
                    } while (true);

                    otherlv_32=(Token)match(input,36,FollowSets000.FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_32, grammarAccess.getReferenceCSAccess().getRightCurlyBracketKeyword_6_2());

                    }

                    }
                    break;

            }

            // InternalQVTimperative.g:6014:3: ( (otherlv_33= '{' ( (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' ) | (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' ) )* otherlv_44= '}' ) | otherlv_45= ';' )
            int alt151=2;
            int LA151_0 = input.LA(1);

            if ( (LA151_0==35) ) {
                alt151=1;
            }
            else if ( (LA151_0==21) ) {
                alt151=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 151, 0, input);

                throw nvae;
            }
            switch (alt151) {
                case 1 :
                    // InternalQVTimperative.g:6015:4: (otherlv_33= '{' ( (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' ) | (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' ) )* otherlv_44= '}' )
                    {
                    // InternalQVTimperative.g:6015:4: (otherlv_33= '{' ( (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' ) | (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' ) )* otherlv_44= '}' )
                    // InternalQVTimperative.g:6016:5: otherlv_33= '{' ( (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' ) | (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' ) )* otherlv_44= '}'
                    {
                    otherlv_33=(Token)match(input,35,FollowSets000.FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_33, grammarAccess.getReferenceCSAccess().getLeftCurlyBracketKeyword_7_0_0());

                    }
                    // InternalQVTimperative.g:6020:5: ( (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' ) | (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' ) )*
                    loop150:
                    do {
                        int alt150=3;
                        int LA150_0 = input.LA(1);

                        if ( (LA150_0==85) ) {
                            alt150=1;
                        }
                        else if ( (LA150_0==86) ) {
                            alt150=2;
                        }


                        switch (alt150) {
                    	case 1 :
                    	    // InternalQVTimperative.g:6021:6: (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' )
                    	    {
                    	    // InternalQVTimperative.g:6021:6: (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' )
                    	    // InternalQVTimperative.g:6022:7: otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';'
                    	    {
                    	    otherlv_34=(Token)match(input,85,FollowSets000.FOLLOW_14); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_34, grammarAccess.getReferenceCSAccess().getInitialKeyword_7_0_1_0_0());

                    	    }
                    	    // InternalQVTimperative.g:6026:7: ( ruleUnrestrictedName )?
                    	    int alt146=2;
                    	    int LA146_0 = input.LA(1);

                    	    if ( ((LA146_0>=RULE_SIMPLE_ID && LA146_0<=RULE_ESCAPED_ID)||LA146_0==17||LA146_0==19||(LA146_0>=22 && LA146_0<=23)||(LA146_0>=25 && LA146_0<=26)||(LA146_0>=29 && LA146_0<=34)||LA146_0==39||(LA146_0>=43 && LA146_0<=48)||(LA146_0>=50 && LA146_0<=52)||(LA146_0>=54 && LA146_0<=55)||(LA146_0>=58 && LA146_0<=60)||(LA146_0>=62 && LA146_0<=70)||LA146_0==72||LA146_0==74||LA146_0==76||LA146_0==79||LA146_0==81||LA146_0==83||(LA146_0>=85 && LA146_0<=89)||(LA146_0>=91 && LA146_0<=96)||LA146_0==98||LA146_0==100||(LA146_0>=102 && LA146_0<=105)) ) {
                    	        alt146=1;
                    	    }
                    	    switch (alt146) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:6027:8: ruleUnrestrictedName
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              								/* */

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								newCompositeNode(grammarAccess.getReferenceCSAccess().getUnrestrictedNameParserRuleCall_7_0_1_0_1());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_11);
                    	            ruleUnrestrictedName();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;

                    	    }

                    	    otherlv_36=(Token)match(input,24,FollowSets000.FOLLOW_77); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_36, grammarAccess.getReferenceCSAccess().getColonKeyword_7_0_1_0_2());

                    	    }
                    	    // InternalQVTimperative.g:6042:7: ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )?
                    	    int alt147=2;
                    	    int LA147_0 = input.LA(1);

                    	    if ( ((LA147_0>=RULE_SINGLE_QUOTED_STRING && LA147_0<=RULE_ESCAPED_ID)||LA147_0==17||LA147_0==19||(LA147_0>=22 && LA147_0<=23)||(LA147_0>=25 && LA147_0<=26)||(LA147_0>=29 && LA147_0<=34)||LA147_0==39||(LA147_0>=42 && LA147_0<=48)||(LA147_0>=50 && LA147_0<=52)||(LA147_0>=54 && LA147_0<=56)||(LA147_0>=58 && LA147_0<=60)||(LA147_0>=62 && LA147_0<=70)||LA147_0==72||LA147_0==74||LA147_0==76||LA147_0==79||LA147_0==81||LA147_0==83||(LA147_0>=85 && LA147_0<=89)||(LA147_0>=91 && LA147_0<=96)||LA147_0==98||LA147_0==100||(LA147_0>=102 && LA147_0<=108)||(LA147_0>=127 && LA147_0<=141)||LA147_0==143||(LA147_0>=146 && LA147_0<=149)||LA147_0==155||(LA147_0>=160 && LA147_0<=161)) ) {
                    	        alt147=1;
                    	    }
                    	    switch (alt147) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:6043:8: (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS )
                    	            {
                    	            // InternalQVTimperative.g:6043:8: (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS )
                    	            // InternalQVTimperative.g:6044:9: lv_ownedDefaultExpressions_37_0= ruleSpecificationCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              									newCompositeNode(grammarAccess.getReferenceCSAccess().getOwnedDefaultExpressionsSpecificationCSParserRuleCall_7_0_1_0_3_0());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_9);
                    	            lv_ownedDefaultExpressions_37_0=ruleSpecificationCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              									if (current==null) {
                    	              										current = createModelElementForParent(grammarAccess.getReferenceCSRule());
                    	              									}
                    	              									add(
                    	              										current,
                    	              										"ownedDefaultExpressions",
                    	              										lv_ownedDefaultExpressions_37_0,
                    	              										"org.eclipse.qvtd.xtext.qvtbase.QVTbase.SpecificationCS");
                    	              									afterParserOrEnumRuleCall();

                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    otherlv_38=(Token)match(input,21,FollowSets000.FOLLOW_76); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_38, grammarAccess.getReferenceCSAccess().getSemicolonKeyword_7_0_1_0_4());

                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQVTimperative.g:6067:6: (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' )
                    	    {
                    	    // InternalQVTimperative.g:6067:6: (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' )
                    	    // InternalQVTimperative.g:6068:7: otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';'
                    	    {
                    	    otherlv_39=(Token)match(input,86,FollowSets000.FOLLOW_14); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_39, grammarAccess.getReferenceCSAccess().getDerivationKeyword_7_0_1_1_0());

                    	    }
                    	    // InternalQVTimperative.g:6072:7: ( ruleUnrestrictedName )?
                    	    int alt148=2;
                    	    int LA148_0 = input.LA(1);

                    	    if ( ((LA148_0>=RULE_SIMPLE_ID && LA148_0<=RULE_ESCAPED_ID)||LA148_0==17||LA148_0==19||(LA148_0>=22 && LA148_0<=23)||(LA148_0>=25 && LA148_0<=26)||(LA148_0>=29 && LA148_0<=34)||LA148_0==39||(LA148_0>=43 && LA148_0<=48)||(LA148_0>=50 && LA148_0<=52)||(LA148_0>=54 && LA148_0<=55)||(LA148_0>=58 && LA148_0<=60)||(LA148_0>=62 && LA148_0<=70)||LA148_0==72||LA148_0==74||LA148_0==76||LA148_0==79||LA148_0==81||LA148_0==83||(LA148_0>=85 && LA148_0<=89)||(LA148_0>=91 && LA148_0<=96)||LA148_0==98||LA148_0==100||(LA148_0>=102 && LA148_0<=105)) ) {
                    	        alt148=1;
                    	    }
                    	    switch (alt148) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:6073:8: ruleUnrestrictedName
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              								/* */

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								newCompositeNode(grammarAccess.getReferenceCSAccess().getUnrestrictedNameParserRuleCall_7_0_1_1_1());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_11);
                    	            ruleUnrestrictedName();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;

                    	    }

                    	    otherlv_41=(Token)match(input,24,FollowSets000.FOLLOW_77); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_41, grammarAccess.getReferenceCSAccess().getColonKeyword_7_0_1_1_2());

                    	    }
                    	    // InternalQVTimperative.g:6088:7: ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )?
                    	    int alt149=2;
                    	    int LA149_0 = input.LA(1);

                    	    if ( ((LA149_0>=RULE_SINGLE_QUOTED_STRING && LA149_0<=RULE_ESCAPED_ID)||LA149_0==17||LA149_0==19||(LA149_0>=22 && LA149_0<=23)||(LA149_0>=25 && LA149_0<=26)||(LA149_0>=29 && LA149_0<=34)||LA149_0==39||(LA149_0>=42 && LA149_0<=48)||(LA149_0>=50 && LA149_0<=52)||(LA149_0>=54 && LA149_0<=56)||(LA149_0>=58 && LA149_0<=60)||(LA149_0>=62 && LA149_0<=70)||LA149_0==72||LA149_0==74||LA149_0==76||LA149_0==79||LA149_0==81||LA149_0==83||(LA149_0>=85 && LA149_0<=89)||(LA149_0>=91 && LA149_0<=96)||LA149_0==98||LA149_0==100||(LA149_0>=102 && LA149_0<=108)||(LA149_0>=127 && LA149_0<=141)||LA149_0==143||(LA149_0>=146 && LA149_0<=149)||LA149_0==155||(LA149_0>=160 && LA149_0<=161)) ) {
                    	        alt149=1;
                    	    }
                    	    switch (alt149) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:6089:8: (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS )
                    	            {
                    	            // InternalQVTimperative.g:6089:8: (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS )
                    	            // InternalQVTimperative.g:6090:9: lv_ownedDefaultExpressions_42_0= ruleSpecificationCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              									newCompositeNode(grammarAccess.getReferenceCSAccess().getOwnedDefaultExpressionsSpecificationCSParserRuleCall_7_0_1_1_3_0());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_9);
                    	            lv_ownedDefaultExpressions_42_0=ruleSpecificationCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              									if (current==null) {
                    	              										current = createModelElementForParent(grammarAccess.getReferenceCSRule());
                    	              									}
                    	              									add(
                    	              										current,
                    	              										"ownedDefaultExpressions",
                    	              										lv_ownedDefaultExpressions_42_0,
                    	              										"org.eclipse.qvtd.xtext.qvtbase.QVTbase.SpecificationCS");
                    	              									afterParserOrEnumRuleCall();

                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    otherlv_43=(Token)match(input,21,FollowSets000.FOLLOW_76); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_43, grammarAccess.getReferenceCSAccess().getSemicolonKeyword_7_0_1_1_4());

                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop150;
                        }
                    } while (true);

                    otherlv_44=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_44, grammarAccess.getReferenceCSAccess().getRightCurlyBracketKeyword_7_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:6119:4: otherlv_45= ';'
                    {
                    otherlv_45=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_45, grammarAccess.getReferenceCSAccess().getSemicolonKeyword_7_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceCS"


    // $ANTLR start "entryRuleSimpleTargetElementCS"
    // InternalQVTimperative.g:6128:1: entryRuleSimpleTargetElementCS returns [EObject current=null] : iv_ruleSimpleTargetElementCS= ruleSimpleTargetElementCS EOF ;
    public final EObject entryRuleSimpleTargetElementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleTargetElementCS = null;


        try {
            // InternalQVTimperative.g:6128:62: (iv_ruleSimpleTargetElementCS= ruleSimpleTargetElementCS EOF )
            // InternalQVTimperative.g:6129:2: iv_ruleSimpleTargetElementCS= ruleSimpleTargetElementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleTargetElementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSimpleTargetElementCS=ruleSimpleTargetElementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleTargetElementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleTargetElementCS"


    // $ANTLR start "ruleSimpleTargetElementCS"
    // InternalQVTimperative.g:6135:1: ruleSimpleTargetElementCS returns [EObject current=null] : ( ( ( (lv_input_0_0= 'input' ) ) | ( (lv_output_1_0= 'output' ) ) | ( (lv_via_2_0= 'via' ) ) ) ( ( ruleUnrestrictedName ) ) (otherlv_4= 'iterates' ( ( ( ruleUnrestrictedName ) ) | (otherlv_6= '{' ( ( ( ruleUnrestrictedName ) ) (otherlv_8= ',' ( ( ruleUnrestrictedName ) ) )* )? otherlv_10= '}' ) ) )? otherlv_11= ';' ) ;
    public final EObject ruleSimpleTargetElementCS() throws RecognitionException {
        EObject current = null;

        Token lv_input_0_0=null;
        Token lv_output_1_0=null;
        Token lv_via_2_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;


        	enterRule();

        try {
            // InternalQVTimperative.g:6141:2: ( ( ( ( (lv_input_0_0= 'input' ) ) | ( (lv_output_1_0= 'output' ) ) | ( (lv_via_2_0= 'via' ) ) ) ( ( ruleUnrestrictedName ) ) (otherlv_4= 'iterates' ( ( ( ruleUnrestrictedName ) ) | (otherlv_6= '{' ( ( ( ruleUnrestrictedName ) ) (otherlv_8= ',' ( ( ruleUnrestrictedName ) ) )* )? otherlv_10= '}' ) ) )? otherlv_11= ';' ) )
            // InternalQVTimperative.g:6142:2: ( ( ( (lv_input_0_0= 'input' ) ) | ( (lv_output_1_0= 'output' ) ) | ( (lv_via_2_0= 'via' ) ) ) ( ( ruleUnrestrictedName ) ) (otherlv_4= 'iterates' ( ( ( ruleUnrestrictedName ) ) | (otherlv_6= '{' ( ( ( ruleUnrestrictedName ) ) (otherlv_8= ',' ( ( ruleUnrestrictedName ) ) )* )? otherlv_10= '}' ) ) )? otherlv_11= ';' )
            {
            // InternalQVTimperative.g:6142:2: ( ( ( (lv_input_0_0= 'input' ) ) | ( (lv_output_1_0= 'output' ) ) | ( (lv_via_2_0= 'via' ) ) ) ( ( ruleUnrestrictedName ) ) (otherlv_4= 'iterates' ( ( ( ruleUnrestrictedName ) ) | (otherlv_6= '{' ( ( ( ruleUnrestrictedName ) ) (otherlv_8= ',' ( ( ruleUnrestrictedName ) ) )* )? otherlv_10= '}' ) ) )? otherlv_11= ';' )
            // InternalQVTimperative.g:6143:3: ( ( (lv_input_0_0= 'input' ) ) | ( (lv_output_1_0= 'output' ) ) | ( (lv_via_2_0= 'via' ) ) ) ( ( ruleUnrestrictedName ) ) (otherlv_4= 'iterates' ( ( ( ruleUnrestrictedName ) ) | (otherlv_6= '{' ( ( ( ruleUnrestrictedName ) ) (otherlv_8= ',' ( ( ruleUnrestrictedName ) ) )* )? otherlv_10= '}' ) ) )? otherlv_11= ';'
            {
            // InternalQVTimperative.g:6143:3: ( ( (lv_input_0_0= 'input' ) ) | ( (lv_output_1_0= 'output' ) ) | ( (lv_via_2_0= 'via' ) ) )
            int alt152=3;
            switch ( input.LA(1) ) {
            case 33:
                {
                alt152=1;
                }
                break;
            case 34:
                {
                alt152=2;
                }
                break;
            case 66:
                {
                alt152=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 152, 0, input);

                throw nvae;
            }

            switch (alt152) {
                case 1 :
                    // InternalQVTimperative.g:6144:4: ( (lv_input_0_0= 'input' ) )
                    {
                    // InternalQVTimperative.g:6144:4: ( (lv_input_0_0= 'input' ) )
                    // InternalQVTimperative.g:6145:5: (lv_input_0_0= 'input' )
                    {
                    // InternalQVTimperative.g:6145:5: (lv_input_0_0= 'input' )
                    // InternalQVTimperative.g:6146:6: lv_input_0_0= 'input'
                    {
                    lv_input_0_0=(Token)match(input,33,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_input_0_0, grammarAccess.getSimpleTargetElementCSAccess().getInputInputKeyword_0_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSimpleTargetElementCSRule());
                      						}
                      						setWithLastConsumed(current, "input", lv_input_0_0 != null, "input");

                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:6159:4: ( (lv_output_1_0= 'output' ) )
                    {
                    // InternalQVTimperative.g:6159:4: ( (lv_output_1_0= 'output' ) )
                    // InternalQVTimperative.g:6160:5: (lv_output_1_0= 'output' )
                    {
                    // InternalQVTimperative.g:6160:5: (lv_output_1_0= 'output' )
                    // InternalQVTimperative.g:6161:6: lv_output_1_0= 'output'
                    {
                    lv_output_1_0=(Token)match(input,34,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_output_1_0, grammarAccess.getSimpleTargetElementCSAccess().getOutputOutputKeyword_0_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSimpleTargetElementCSRule());
                      						}
                      						setWithLastConsumed(current, "output", lv_output_1_0 != null, "output");

                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:6174:4: ( (lv_via_2_0= 'via' ) )
                    {
                    // InternalQVTimperative.g:6174:4: ( (lv_via_2_0= 'via' ) )
                    // InternalQVTimperative.g:6175:5: (lv_via_2_0= 'via' )
                    {
                    // InternalQVTimperative.g:6175:5: (lv_via_2_0= 'via' )
                    // InternalQVTimperative.g:6176:6: lv_via_2_0= 'via'
                    {
                    lv_via_2_0=(Token)match(input,66,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_via_2_0, grammarAccess.getSimpleTargetElementCSAccess().getViaViaKeyword_0_2_0());

                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSimpleTargetElementCSRule());
                      						}
                      						setWithLastConsumed(current, "via", lv_via_2_0 != null, "via");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:6189:3: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:6190:4: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:6190:4: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:6191:5: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					/* */

            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSimpleTargetElementCSRule());
              					}

            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSimpleTargetElementCSAccess().getTypedModelTypedModelCrossReference_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_109);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:6208:3: (otherlv_4= 'iterates' ( ( ( ruleUnrestrictedName ) ) | (otherlv_6= '{' ( ( ( ruleUnrestrictedName ) ) (otherlv_8= ',' ( ( ruleUnrestrictedName ) ) )* )? otherlv_10= '}' ) ) )?
            int alt156=2;
            int LA156_0 = input.LA(1);

            if ( (LA156_0==43) ) {
                alt156=1;
            }
            switch (alt156) {
                case 1 :
                    // InternalQVTimperative.g:6209:4: otherlv_4= 'iterates' ( ( ( ruleUnrestrictedName ) ) | (otherlv_6= '{' ( ( ( ruleUnrestrictedName ) ) (otherlv_8= ',' ( ( ruleUnrestrictedName ) ) )* )? otherlv_10= '}' ) )
                    {
                    otherlv_4=(Token)match(input,43,FollowSets000.FOLLOW_110); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getSimpleTargetElementCSAccess().getIteratesKeyword_2_0());

                    }
                    // InternalQVTimperative.g:6213:4: ( ( ( ruleUnrestrictedName ) ) | (otherlv_6= '{' ( ( ( ruleUnrestrictedName ) ) (otherlv_8= ',' ( ( ruleUnrestrictedName ) ) )* )? otherlv_10= '}' ) )
                    int alt155=2;
                    int LA155_0 = input.LA(1);

                    if ( ((LA155_0>=RULE_SIMPLE_ID && LA155_0<=RULE_ESCAPED_ID)||LA155_0==17||LA155_0==19||(LA155_0>=22 && LA155_0<=23)||(LA155_0>=25 && LA155_0<=26)||(LA155_0>=29 && LA155_0<=34)||LA155_0==39||(LA155_0>=43 && LA155_0<=48)||(LA155_0>=50 && LA155_0<=52)||(LA155_0>=54 && LA155_0<=55)||(LA155_0>=58 && LA155_0<=60)||(LA155_0>=62 && LA155_0<=70)||LA155_0==72||LA155_0==74||LA155_0==76||LA155_0==79||LA155_0==81||LA155_0==83||(LA155_0>=85 && LA155_0<=89)||(LA155_0>=91 && LA155_0<=96)||LA155_0==98||LA155_0==100||(LA155_0>=102 && LA155_0<=105)) ) {
                        alt155=1;
                    }
                    else if ( (LA155_0==35) ) {
                        alt155=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 155, 0, input);

                        throw nvae;
                    }
                    switch (alt155) {
                        case 1 :
                            // InternalQVTimperative.g:6214:5: ( ( ruleUnrestrictedName ) )
                            {
                            // InternalQVTimperative.g:6214:5: ( ( ruleUnrestrictedName ) )
                            // InternalQVTimperative.g:6215:6: ( ruleUnrestrictedName )
                            {
                            // InternalQVTimperative.g:6215:6: ( ruleUnrestrictedName )
                            // InternalQVTimperative.g:6216:7: ruleUnrestrictedName
                            {
                            if ( state.backtracking==0 ) {

                              							/* */

                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSimpleTargetElementCSRule());
                              							}

                            }
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getSimpleTargetElementCSAccess().getIteratesTypedModelCrossReference_2_1_0_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_9);
                            ruleUnrestrictedName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalQVTimperative.g:6234:5: (otherlv_6= '{' ( ( ( ruleUnrestrictedName ) ) (otherlv_8= ',' ( ( ruleUnrestrictedName ) ) )* )? otherlv_10= '}' )
                            {
                            // InternalQVTimperative.g:6234:5: (otherlv_6= '{' ( ( ( ruleUnrestrictedName ) ) (otherlv_8= ',' ( ( ruleUnrestrictedName ) ) )* )? otherlv_10= '}' )
                            // InternalQVTimperative.g:6235:6: otherlv_6= '{' ( ( ( ruleUnrestrictedName ) ) (otherlv_8= ',' ( ( ruleUnrestrictedName ) ) )* )? otherlv_10= '}'
                            {
                            otherlv_6=(Token)match(input,35,FollowSets000.FOLLOW_42); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_6, grammarAccess.getSimpleTargetElementCSAccess().getLeftCurlyBracketKeyword_2_1_1_0());

                            }
                            // InternalQVTimperative.g:6239:6: ( ( ( ruleUnrestrictedName ) ) (otherlv_8= ',' ( ( ruleUnrestrictedName ) ) )* )?
                            int alt154=2;
                            int LA154_0 = input.LA(1);

                            if ( ((LA154_0>=RULE_SIMPLE_ID && LA154_0<=RULE_ESCAPED_ID)||LA154_0==17||LA154_0==19||(LA154_0>=22 && LA154_0<=23)||(LA154_0>=25 && LA154_0<=26)||(LA154_0>=29 && LA154_0<=34)||LA154_0==39||(LA154_0>=43 && LA154_0<=48)||(LA154_0>=50 && LA154_0<=52)||(LA154_0>=54 && LA154_0<=55)||(LA154_0>=58 && LA154_0<=60)||(LA154_0>=62 && LA154_0<=70)||LA154_0==72||LA154_0==74||LA154_0==76||LA154_0==79||LA154_0==81||LA154_0==83||(LA154_0>=85 && LA154_0<=89)||(LA154_0>=91 && LA154_0<=96)||LA154_0==98||LA154_0==100||(LA154_0>=102 && LA154_0<=105)) ) {
                                alt154=1;
                            }
                            switch (alt154) {
                                case 1 :
                                    // InternalQVTimperative.g:6240:7: ( ( ruleUnrestrictedName ) ) (otherlv_8= ',' ( ( ruleUnrestrictedName ) ) )*
                                    {
                                    // InternalQVTimperative.g:6240:7: ( ( ruleUnrestrictedName ) )
                                    // InternalQVTimperative.g:6241:8: ( ruleUnrestrictedName )
                                    {
                                    // InternalQVTimperative.g:6241:8: ( ruleUnrestrictedName )
                                    // InternalQVTimperative.g:6242:9: ruleUnrestrictedName
                                    {
                                    if ( state.backtracking==0 ) {

                                      									/* */

                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getSimpleTargetElementCSRule());
                                      									}

                                    }
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getSimpleTargetElementCSAccess().getIteratesTypedModelCrossReference_2_1_1_1_0_0());

                                    }
                                    pushFollow(FollowSets000.FOLLOW_111);
                                    ruleUnrestrictedName();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									afterParserOrEnumRuleCall();

                                    }

                                    }


                                    }

                                    // InternalQVTimperative.g:6259:7: (otherlv_8= ',' ( ( ruleUnrestrictedName ) ) )*
                                    loop153:
                                    do {
                                        int alt153=2;
                                        int LA153_0 = input.LA(1);

                                        if ( (LA153_0==18) ) {
                                            alt153=1;
                                        }


                                        switch (alt153) {
                                    	case 1 :
                                    	    // InternalQVTimperative.g:6260:8: otherlv_8= ',' ( ( ruleUnrestrictedName ) )
                                    	    {
                                    	    otherlv_8=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                                    	    if ( state.backtracking==0 ) {

                                    	      								newLeafNode(otherlv_8, grammarAccess.getSimpleTargetElementCSAccess().getCommaKeyword_2_1_1_1_1_0());

                                    	    }
                                    	    // InternalQVTimperative.g:6264:8: ( ( ruleUnrestrictedName ) )
                                    	    // InternalQVTimperative.g:6265:9: ( ruleUnrestrictedName )
                                    	    {
                                    	    // InternalQVTimperative.g:6265:9: ( ruleUnrestrictedName )
                                    	    // InternalQVTimperative.g:6266:10: ruleUnrestrictedName
                                    	    {
                                    	    if ( state.backtracking==0 ) {

                                    	      										/* */

                                    	    }
                                    	    if ( state.backtracking==0 ) {

                                    	      										if (current==null) {
                                    	      											current = createModelElement(grammarAccess.getSimpleTargetElementCSRule());
                                    	      										}

                                    	    }
                                    	    if ( state.backtracking==0 ) {

                                    	      										newCompositeNode(grammarAccess.getSimpleTargetElementCSAccess().getIteratesTypedModelCrossReference_2_1_1_1_1_1_0());

                                    	    }
                                    	    pushFollow(FollowSets000.FOLLOW_111);
                                    	    ruleUnrestrictedName();

                                    	    state._fsp--;
                                    	    if (state.failed) return current;
                                    	    if ( state.backtracking==0 ) {

                                    	      										afterParserOrEnumRuleCall();

                                    	    }

                                    	    }


                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    break loop153;
                                        }
                                    } while (true);


                                    }
                                    break;

                            }

                            otherlv_10=(Token)match(input,36,FollowSets000.FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getSimpleTargetElementCSAccess().getRightCurlyBracketKeyword_2_1_1_2());

                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_11=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getSimpleTargetElementCSAccess().getSemicolonKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleTargetElementCS"


    // $ANTLR start "entryRuleSpecificationCS"
    // InternalQVTimperative.g:6300:1: entryRuleSpecificationCS returns [EObject current=null] : iv_ruleSpecificationCS= ruleSpecificationCS EOF ;
    public final EObject entryRuleSpecificationCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSpecificationCS = null;


        try {
            // InternalQVTimperative.g:6300:56: (iv_ruleSpecificationCS= ruleSpecificationCS EOF )
            // InternalQVTimperative.g:6301:2: iv_ruleSpecificationCS= ruleSpecificationCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSpecificationCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSpecificationCS=ruleSpecificationCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSpecificationCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSpecificationCS"


    // $ANTLR start "ruleSpecificationCS"
    // InternalQVTimperative.g:6307:1: ruleSpecificationCS returns [EObject current=null] : ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) | ( (lv_exprString_1_0= RULE_UNQUOTED_STRING ) ) ) ;
    public final EObject ruleSpecificationCS() throws RecognitionException {
        EObject current = null;

        Token lv_exprString_1_0=null;
        EObject lv_ownedExpression_0_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:6313:2: ( ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) | ( (lv_exprString_1_0= RULE_UNQUOTED_STRING ) ) ) )
            // InternalQVTimperative.g:6314:2: ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) | ( (lv_exprString_1_0= RULE_UNQUOTED_STRING ) ) )
            {
            // InternalQVTimperative.g:6314:2: ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) | ( (lv_exprString_1_0= RULE_UNQUOTED_STRING ) ) )
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( (LA157_0==RULE_SINGLE_QUOTED_STRING||(LA157_0>=RULE_INT && LA157_0<=RULE_ESCAPED_ID)||LA157_0==17||LA157_0==19||(LA157_0>=22 && LA157_0<=23)||(LA157_0>=25 && LA157_0<=26)||(LA157_0>=29 && LA157_0<=34)||LA157_0==39||(LA157_0>=42 && LA157_0<=48)||(LA157_0>=50 && LA157_0<=52)||(LA157_0>=54 && LA157_0<=56)||(LA157_0>=58 && LA157_0<=60)||(LA157_0>=62 && LA157_0<=70)||LA157_0==72||LA157_0==74||LA157_0==76||LA157_0==79||LA157_0==81||LA157_0==83||(LA157_0>=85 && LA157_0<=89)||(LA157_0>=91 && LA157_0<=96)||LA157_0==98||LA157_0==100||(LA157_0>=102 && LA157_0<=108)||(LA157_0>=127 && LA157_0<=141)||LA157_0==143||(LA157_0>=146 && LA157_0<=149)||LA157_0==155||(LA157_0>=160 && LA157_0<=161)) ) {
                alt157=1;
            }
            else if ( (LA157_0==RULE_UNQUOTED_STRING) ) {
                alt157=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 157, 0, input);

                throw nvae;
            }
            switch (alt157) {
                case 1 :
                    // InternalQVTimperative.g:6315:3: ( (lv_ownedExpression_0_0= ruleExpCS ) )
                    {
                    // InternalQVTimperative.g:6315:3: ( (lv_ownedExpression_0_0= ruleExpCS ) )
                    // InternalQVTimperative.g:6316:4: (lv_ownedExpression_0_0= ruleExpCS )
                    {
                    // InternalQVTimperative.g:6316:4: (lv_ownedExpression_0_0= ruleExpCS )
                    // InternalQVTimperative.g:6317:5: lv_ownedExpression_0_0= ruleExpCS
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSpecificationCSAccess().getOwnedExpressionExpCSParserRuleCall_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedExpression_0_0=ruleExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSpecificationCSRule());
                      					}
                      					set(
                      						current,
                      						"ownedExpression",
                      						lv_ownedExpression_0_0,
                      						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                      					afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:6335:3: ( (lv_exprString_1_0= RULE_UNQUOTED_STRING ) )
                    {
                    // InternalQVTimperative.g:6335:3: ( (lv_exprString_1_0= RULE_UNQUOTED_STRING ) )
                    // InternalQVTimperative.g:6336:4: (lv_exprString_1_0= RULE_UNQUOTED_STRING )
                    {
                    // InternalQVTimperative.g:6336:4: (lv_exprString_1_0= RULE_UNQUOTED_STRING )
                    // InternalQVTimperative.g:6337:5: lv_exprString_1_0= RULE_UNQUOTED_STRING
                    {
                    lv_exprString_1_0=(Token)match(input,RULE_UNQUOTED_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_exprString_1_0, grammarAccess.getSpecificationCSAccess().getExprStringUNQUOTED_STRINGTerminalRuleCall_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSpecificationCSRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"exprString",
                      						lv_exprString_1_0,
                      						"org.eclipse.qvtd.xtext.qvtbase.QVTbase.UNQUOTED_STRING");

                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSpecificationCS"


    // $ANTLR start "entryRuleStructuredClassCS"
    // InternalQVTimperative.g:6357:1: entryRuleStructuredClassCS returns [EObject current=null] : iv_ruleStructuredClassCS= ruleStructuredClassCS EOF ;
    public final EObject entryRuleStructuredClassCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStructuredClassCS = null;


        try {
            // InternalQVTimperative.g:6357:58: (iv_ruleStructuredClassCS= ruleStructuredClassCS EOF )
            // InternalQVTimperative.g:6358:2: iv_ruleStructuredClassCS= ruleStructuredClassCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructuredClassCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStructuredClassCS=ruleStructuredClassCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructuredClassCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStructuredClassCS"


    // $ANTLR start "ruleStructuredClassCS"
    // InternalQVTimperative.g:6364:1: ruleStructuredClassCS returns [EObject current=null] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= 'extends' ( (lv_ownedSuperTypes_5_0= ruleTypedRefCS ) ) (otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) ) )* )? (otherlv_8= ':' ( (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_10= '{' ( (lv_isInterface_11_0= 'interface' ) )? otherlv_12= '}' )? ( (otherlv_13= '{' ( ( (lv_ownedOperations_14_0= ruleOperationCS ) ) | ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) ) )* otherlv_16= '}' ) | otherlv_17= ';' ) ) ;
    public final EObject ruleStructuredClassCS() throws RecognitionException {
        EObject current = null;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_instanceClassName_9_0=null;
        Token otherlv_10=null;
        Token lv_isInterface_11_0=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_ownedSignature_3_0 = null;

        EObject lv_ownedSuperTypes_5_0 = null;

        EObject lv_ownedSuperTypes_7_0 = null;

        EObject lv_ownedOperations_14_0 = null;

        EObject lv_ownedProperties_15_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:6370:2: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= 'extends' ( (lv_ownedSuperTypes_5_0= ruleTypedRefCS ) ) (otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) ) )* )? (otherlv_8= ':' ( (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_10= '{' ( (lv_isInterface_11_0= 'interface' ) )? otherlv_12= '}' )? ( (otherlv_13= '{' ( ( (lv_ownedOperations_14_0= ruleOperationCS ) ) | ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) ) )* otherlv_16= '}' ) | otherlv_17= ';' ) ) )
            // InternalQVTimperative.g:6371:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= 'extends' ( (lv_ownedSuperTypes_5_0= ruleTypedRefCS ) ) (otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) ) )* )? (otherlv_8= ':' ( (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_10= '{' ( (lv_isInterface_11_0= 'interface' ) )? otherlv_12= '}' )? ( (otherlv_13= '{' ( ( (lv_ownedOperations_14_0= ruleOperationCS ) ) | ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) ) )* otherlv_16= '}' ) | otherlv_17= ';' ) )
            {
            // InternalQVTimperative.g:6371:2: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= 'extends' ( (lv_ownedSuperTypes_5_0= ruleTypedRefCS ) ) (otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) ) )* )? (otherlv_8= ':' ( (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_10= '{' ( (lv_isInterface_11_0= 'interface' ) )? otherlv_12= '}' )? ( (otherlv_13= '{' ( ( (lv_ownedOperations_14_0= ruleOperationCS ) ) | ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) ) )* otherlv_16= '}' ) | otherlv_17= ';' ) )
            // InternalQVTimperative.g:6372:3: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= 'extends' ( (lv_ownedSuperTypes_5_0= ruleTypedRefCS ) ) (otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) ) )* )? (otherlv_8= ':' ( (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_10= '{' ( (lv_isInterface_11_0= 'interface' ) )? otherlv_12= '}' )? ( (otherlv_13= '{' ( ( (lv_ownedOperations_14_0= ruleOperationCS ) ) | ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) ) )* otherlv_16= '}' ) | otherlv_17= ';' )
            {
            // InternalQVTimperative.g:6372:3: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt158=2;
            int LA158_0 = input.LA(1);

            if ( (LA158_0==102) ) {
                alt158=1;
            }
            switch (alt158) {
                case 1 :
                    // InternalQVTimperative.g:6373:4: (lv_isAbstract_0_0= 'abstract' )
                    {
                    // InternalQVTimperative.g:6373:4: (lv_isAbstract_0_0= 'abstract' )
                    // InternalQVTimperative.g:6374:5: lv_isAbstract_0_0= 'abstract'
                    {
                    lv_isAbstract_0_0=(Token)match(input,102,FollowSets000.FOLLOW_112); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isAbstract_0_0, grammarAccess.getStructuredClassCSAccess().getIsAbstractAbstractKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructuredClassCSRule());
                      					}
                      					setWithLastConsumed(current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");

                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,103,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getStructuredClassCSAccess().getClassKeyword_1());

            }
            // InternalQVTimperative.g:6390:3: ( (lv_name_2_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:6391:4: (lv_name_2_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:6391:4: (lv_name_2_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:6392:5: lv_name_2_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStructuredClassCSAccess().getNameUnrestrictedNameParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_113);
            lv_name_2_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStructuredClassCSRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:6409:3: ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )?
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( (LA159_0==56) ) {
                alt159=1;
            }
            switch (alt159) {
                case 1 :
                    // InternalQVTimperative.g:6410:4: (lv_ownedSignature_3_0= ruleTemplateSignatureCS )
                    {
                    // InternalQVTimperative.g:6410:4: (lv_ownedSignature_3_0= ruleTemplateSignatureCS )
                    // InternalQVTimperative.g:6411:5: lv_ownedSignature_3_0= ruleTemplateSignatureCS
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStructuredClassCSAccess().getOwnedSignatureTemplateSignatureCSParserRuleCall_3_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_114);
                    lv_ownedSignature_3_0=ruleTemplateSignatureCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStructuredClassCSRule());
                      					}
                      					set(
                      						current,
                      						"ownedSignature",
                      						lv_ownedSignature_3_0,
                      						"org.eclipse.ocl.xtext.base.Base.TemplateSignatureCS");
                      					afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:6428:3: (otherlv_4= 'extends' ( (lv_ownedSuperTypes_5_0= ruleTypedRefCS ) ) (otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) ) )* )?
            int alt161=2;
            int LA161_0 = input.LA(1);

            if ( (LA161_0==104) ) {
                alt161=1;
            }
            switch (alt161) {
                case 1 :
                    // InternalQVTimperative.g:6429:4: otherlv_4= 'extends' ( (lv_ownedSuperTypes_5_0= ruleTypedRefCS ) ) (otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) ) )*
                    {
                    otherlv_4=(Token)match(input,104,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getStructuredClassCSAccess().getExtendsKeyword_4_0());

                    }
                    // InternalQVTimperative.g:6433:4: ( (lv_ownedSuperTypes_5_0= ruleTypedRefCS ) )
                    // InternalQVTimperative.g:6434:5: (lv_ownedSuperTypes_5_0= ruleTypedRefCS )
                    {
                    // InternalQVTimperative.g:6434:5: (lv_ownedSuperTypes_5_0= ruleTypedRefCS )
                    // InternalQVTimperative.g:6435:6: lv_ownedSuperTypes_5_0= ruleTypedRefCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStructuredClassCSAccess().getOwnedSuperTypesTypedRefCSParserRuleCall_4_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_115);
                    lv_ownedSuperTypes_5_0=ruleTypedRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStructuredClassCSRule());
                      						}
                      						add(
                      							current,
                      							"ownedSuperTypes",
                      							lv_ownedSuperTypes_5_0,
                      							"org.eclipse.qvtd.xtext.qvtbase.QVTbase.TypedRefCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:6452:4: (otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) ) )*
                    loop160:
                    do {
                        int alt160=2;
                        int LA160_0 = input.LA(1);

                        if ( (LA160_0==18) ) {
                            alt160=1;
                        }


                        switch (alt160) {
                    	case 1 :
                    	    // InternalQVTimperative.g:6453:5: otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) )
                    	    {
                    	    otherlv_6=(Token)match(input,18,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_6, grammarAccess.getStructuredClassCSAccess().getCommaKeyword_4_2_0());

                    	    }
                    	    // InternalQVTimperative.g:6457:5: ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) )
                    	    // InternalQVTimperative.g:6458:6: (lv_ownedSuperTypes_7_0= ruleTypedRefCS )
                    	    {
                    	    // InternalQVTimperative.g:6458:6: (lv_ownedSuperTypes_7_0= ruleTypedRefCS )
                    	    // InternalQVTimperative.g:6459:7: lv_ownedSuperTypes_7_0= ruleTypedRefCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getStructuredClassCSAccess().getOwnedSuperTypesTypedRefCSParserRuleCall_4_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_115);
                    	    lv_ownedSuperTypes_7_0=ruleTypedRefCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getStructuredClassCSRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedSuperTypes",
                    	      								lv_ownedSuperTypes_7_0,
                    	      								"org.eclipse.qvtd.xtext.qvtbase.QVTbase.TypedRefCS");
                    	      							afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop160;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalQVTimperative.g:6478:3: (otherlv_8= ':' ( (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING ) ) )?
            int alt162=2;
            int LA162_0 = input.LA(1);

            if ( (LA162_0==24) ) {
                alt162=1;
            }
            switch (alt162) {
                case 1 :
                    // InternalQVTimperative.g:6479:4: otherlv_8= ':' ( (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING ) )
                    {
                    otherlv_8=(Token)match(input,24,FollowSets000.FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getStructuredClassCSAccess().getColonKeyword_5_0());

                    }
                    // InternalQVTimperative.g:6483:4: ( (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING ) )
                    // InternalQVTimperative.g:6484:5: (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING )
                    {
                    // InternalQVTimperative.g:6484:5: (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING )
                    // InternalQVTimperative.g:6485:6: lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING
                    {
                    lv_instanceClassName_9_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_instanceClassName_9_0, grammarAccess.getStructuredClassCSAccess().getInstanceClassNameSINGLE_QUOTED_STRINGTerminalRuleCall_5_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getStructuredClassCSRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"instanceClassName",
                      							lv_instanceClassName_9_0,
                      							"org.eclipse.ocl.xtext.base.Base.SINGLE_QUOTED_STRING");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:6502:3: (otherlv_10= '{' ( (lv_isInterface_11_0= 'interface' ) )? otherlv_12= '}' )?
            int alt164=2;
            int LA164_0 = input.LA(1);

            if ( (LA164_0==35) ) {
                int LA164_1 = input.LA(2);

                if ( (LA164_1==36) ) {
                    int LA164_3 = input.LA(3);

                    if ( (LA164_3==21||LA164_3==35) ) {
                        alt164=1;
                    }
                }
                else if ( (LA164_1==105) ) {
                    alt164=1;
                }
            }
            switch (alt164) {
                case 1 :
                    // InternalQVTimperative.g:6503:4: otherlv_10= '{' ( (lv_isInterface_11_0= 'interface' ) )? otherlv_12= '}'
                    {
                    otherlv_10=(Token)match(input,35,FollowSets000.FOLLOW_116); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getStructuredClassCSAccess().getLeftCurlyBracketKeyword_6_0());

                    }
                    // InternalQVTimperative.g:6507:4: ( (lv_isInterface_11_0= 'interface' ) )?
                    int alt163=2;
                    int LA163_0 = input.LA(1);

                    if ( (LA163_0==105) ) {
                        alt163=1;
                    }
                    switch (alt163) {
                        case 1 :
                            // InternalQVTimperative.g:6508:5: (lv_isInterface_11_0= 'interface' )
                            {
                            // InternalQVTimperative.g:6508:5: (lv_isInterface_11_0= 'interface' )
                            // InternalQVTimperative.g:6509:6: lv_isInterface_11_0= 'interface'
                            {
                            lv_isInterface_11_0=(Token)match(input,105,FollowSets000.FOLLOW_58); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_isInterface_11_0, grammarAccess.getStructuredClassCSAccess().getIsInterfaceInterfaceKeyword_6_1_0());

                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getStructuredClassCSRule());
                              						}
                              						setWithLastConsumed(current, "isInterface", lv_isInterface_11_0 != null, "interface");

                            }

                            }


                            }
                            break;

                    }

                    otherlv_12=(Token)match(input,36,FollowSets000.FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getStructuredClassCSAccess().getRightCurlyBracketKeyword_6_2());

                    }

                    }
                    break;

            }

            // InternalQVTimperative.g:6526:3: ( (otherlv_13= '{' ( ( (lv_ownedOperations_14_0= ruleOperationCS ) ) | ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) ) )* otherlv_16= '}' ) | otherlv_17= ';' )
            int alt166=2;
            int LA166_0 = input.LA(1);

            if ( (LA166_0==35) ) {
                alt166=1;
            }
            else if ( (LA166_0==21) ) {
                alt166=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 166, 0, input);

                throw nvae;
            }
            switch (alt166) {
                case 1 :
                    // InternalQVTimperative.g:6527:4: (otherlv_13= '{' ( ( (lv_ownedOperations_14_0= ruleOperationCS ) ) | ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) ) )* otherlv_16= '}' )
                    {
                    // InternalQVTimperative.g:6527:4: (otherlv_13= '{' ( ( (lv_ownedOperations_14_0= ruleOperationCS ) ) | ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) ) )* otherlv_16= '}' )
                    // InternalQVTimperative.g:6528:5: otherlv_13= '{' ( ( (lv_ownedOperations_14_0= ruleOperationCS ) ) | ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) ) )* otherlv_16= '}'
                    {
                    otherlv_13=(Token)match(input,35,FollowSets000.FOLLOW_117); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_13, grammarAccess.getStructuredClassCSAccess().getLeftCurlyBracketKeyword_7_0_0());

                    }
                    // InternalQVTimperative.g:6532:5: ( ( (lv_ownedOperations_14_0= ruleOperationCS ) ) | ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) ) )*
                    loop165:
                    do {
                        int alt165=3;
                        switch ( input.LA(1) ) {
                        case 67:
                            {
                            switch ( input.LA(2) ) {
                            case 68:
                                {
                                int LA165_6 = input.LA(3);

                                if ( (LA165_6==69||LA165_6==96) ) {
                                    alt165=2;
                                }
                                else if ( (LA165_6==93) ) {
                                    alt165=1;
                                }


                                }
                                break;
                            case 93:
                                {
                                alt165=1;
                                }
                                break;
                            case 69:
                            case 96:
                                {
                                alt165=2;
                                }
                                break;

                            }

                            }
                            break;
                        case 68:
                            {
                            switch ( input.LA(2) ) {
                            case 67:
                                {
                                int LA165_7 = input.LA(3);

                                if ( (LA165_7==93) ) {
                                    alt165=1;
                                }
                                else if ( (LA165_7==69||LA165_7==96) ) {
                                    alt165=2;
                                }


                                }
                                break;
                            case 93:
                                {
                                alt165=1;
                                }
                                break;
                            case 69:
                            case 96:
                                {
                                alt165=2;
                                }
                                break;

                            }

                            }
                            break;
                        case 93:
                            {
                            alt165=1;
                            }
                            break;
                        case 69:
                        case 96:
                            {
                            alt165=2;
                            }
                            break;

                        }

                        switch (alt165) {
                    	case 1 :
                    	    // InternalQVTimperative.g:6533:6: ( (lv_ownedOperations_14_0= ruleOperationCS ) )
                    	    {
                    	    // InternalQVTimperative.g:6533:6: ( (lv_ownedOperations_14_0= ruleOperationCS ) )
                    	    // InternalQVTimperative.g:6534:7: (lv_ownedOperations_14_0= ruleOperationCS )
                    	    {
                    	    // InternalQVTimperative.g:6534:7: (lv_ownedOperations_14_0= ruleOperationCS )
                    	    // InternalQVTimperative.g:6535:8: lv_ownedOperations_14_0= ruleOperationCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getStructuredClassCSAccess().getOwnedOperationsOperationCSParserRuleCall_7_0_1_0_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_117);
                    	    lv_ownedOperations_14_0=ruleOperationCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getStructuredClassCSRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"ownedOperations",
                    	      									lv_ownedOperations_14_0,
                    	      									"org.eclipse.qvtd.xtext.qvtbase.QVTbase.OperationCS");
                    	      								afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQVTimperative.g:6553:6: ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) )
                    	    {
                    	    // InternalQVTimperative.g:6553:6: ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) )
                    	    // InternalQVTimperative.g:6554:7: (lv_ownedProperties_15_0= ruleStructuralFeatureCS )
                    	    {
                    	    // InternalQVTimperative.g:6554:7: (lv_ownedProperties_15_0= ruleStructuralFeatureCS )
                    	    // InternalQVTimperative.g:6555:8: lv_ownedProperties_15_0= ruleStructuralFeatureCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getStructuredClassCSAccess().getOwnedPropertiesStructuralFeatureCSParserRuleCall_7_0_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_117);
                    	    lv_ownedProperties_15_0=ruleStructuralFeatureCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getStructuredClassCSRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"ownedProperties",
                    	      									lv_ownedProperties_15_0,
                    	      									"org.eclipse.qvtd.xtext.qvtbase.QVTbase.StructuralFeatureCS");
                    	      								afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop165;
                        }
                    } while (true);

                    otherlv_16=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_16, grammarAccess.getStructuredClassCSAccess().getRightCurlyBracketKeyword_7_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:6579:4: otherlv_17= ';'
                    {
                    otherlv_17=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getStructuredClassCSAccess().getSemicolonKeyword_7_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructuredClassCS"


    // $ANTLR start "entryRuleTypedMultiplicityRefCS"
    // InternalQVTimperative.g:6588:1: entryRuleTypedMultiplicityRefCS returns [EObject current=null] : iv_ruleTypedMultiplicityRefCS= ruleTypedMultiplicityRefCS EOF ;
    public final EObject entryRuleTypedMultiplicityRefCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypedMultiplicityRefCS = null;


        try {
            // InternalQVTimperative.g:6588:63: (iv_ruleTypedMultiplicityRefCS= ruleTypedMultiplicityRefCS EOF )
            // InternalQVTimperative.g:6589:2: iv_ruleTypedMultiplicityRefCS= ruleTypedMultiplicityRefCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypedMultiplicityRefCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypedMultiplicityRefCS=ruleTypedMultiplicityRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypedMultiplicityRefCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypedMultiplicityRefCS"


    // $ANTLR start "ruleTypedMultiplicityRefCS"
    // InternalQVTimperative.g:6595:1: ruleTypedMultiplicityRefCS returns [EObject current=null] : (this_TypedRefCS_0= ruleTypedRefCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? ) ;
    public final EObject ruleTypedMultiplicityRefCS() throws RecognitionException {
        EObject current = null;

        EObject this_TypedRefCS_0 = null;

        EObject lv_ownedMultiplicity_1_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:6601:2: ( (this_TypedRefCS_0= ruleTypedRefCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? ) )
            // InternalQVTimperative.g:6602:2: (this_TypedRefCS_0= ruleTypedRefCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? )
            {
            // InternalQVTimperative.g:6602:2: (this_TypedRefCS_0= ruleTypedRefCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? )
            // InternalQVTimperative.g:6603:3: this_TypedRefCS_0= ruleTypedRefCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )?
            {
            if ( state.backtracking==0 ) {

              			/* */

            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getTypedMultiplicityRefCSAccess().getTypedRefCSParserRuleCall_0());

            }
            pushFollow(FollowSets000.FOLLOW_118);
            this_TypedRefCS_0=ruleTypedRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypedRefCS_0;
              			afterParserOrEnumRuleCall();

            }
            // InternalQVTimperative.g:6614:3: ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )?
            int alt167=2;
            int LA167_0 = input.LA(1);

            if ( (LA167_0==152) ) {
                alt167=1;
            }
            switch (alt167) {
                case 1 :
                    // InternalQVTimperative.g:6615:4: (lv_ownedMultiplicity_1_0= ruleMultiplicityCS )
                    {
                    // InternalQVTimperative.g:6615:4: (lv_ownedMultiplicity_1_0= ruleMultiplicityCS )
                    // InternalQVTimperative.g:6616:5: lv_ownedMultiplicity_1_0= ruleMultiplicityCS
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypedMultiplicityRefCSAccess().getOwnedMultiplicityMultiplicityCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedMultiplicity_1_0=ruleMultiplicityCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypedMultiplicityRefCSRule());
                      					}
                      					set(
                      						current,
                      						"ownedMultiplicity",
                      						lv_ownedMultiplicity_1_0,
                      						"org.eclipse.ocl.xtext.base.Base.MultiplicityCS");
                      					afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypedMultiplicityRefCS"


    // $ANTLR start "entryRuleTypedRefCS"
    // InternalQVTimperative.g:6637:1: entryRuleTypedRefCS returns [EObject current=null] : iv_ruleTypedRefCS= ruleTypedRefCS EOF ;
    public final EObject entryRuleTypedRefCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypedRefCS = null;


        try {
            // InternalQVTimperative.g:6637:51: (iv_ruleTypedRefCS= ruleTypedRefCS EOF )
            // InternalQVTimperative.g:6638:2: iv_ruleTypedRefCS= ruleTypedRefCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypedRefCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypedRefCS=ruleTypedRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypedRefCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypedRefCS"


    // $ANTLR start "ruleTypedRefCS"
    // InternalQVTimperative.g:6644:1: ruleTypedRefCS returns [EObject current=null] : (this_TypeLiteralCS_0= ruleTypeLiteralCS | this_TypedTypeRefCS_1= ruleTypedTypeRefCS ) ;
    public final EObject ruleTypedRefCS() throws RecognitionException {
        EObject current = null;

        EObject this_TypeLiteralCS_0 = null;

        EObject this_TypedTypeRefCS_1 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:6650:2: ( (this_TypeLiteralCS_0= ruleTypeLiteralCS | this_TypedTypeRefCS_1= ruleTypedTypeRefCS ) )
            // InternalQVTimperative.g:6651:2: (this_TypeLiteralCS_0= ruleTypeLiteralCS | this_TypedTypeRefCS_1= ruleTypedTypeRefCS )
            {
            // InternalQVTimperative.g:6651:2: (this_TypeLiteralCS_0= ruleTypeLiteralCS | this_TypedTypeRefCS_1= ruleTypedTypeRefCS )
            int alt168=2;
            int LA168_0 = input.LA(1);

            if ( ((LA168_0>=127 && LA168_0<=141)) ) {
                alt168=1;
            }
            else if ( ((LA168_0>=RULE_SIMPLE_ID && LA168_0<=RULE_ESCAPED_ID)||LA168_0==17||LA168_0==19||(LA168_0>=22 && LA168_0<=23)||(LA168_0>=25 && LA168_0<=26)||(LA168_0>=29 && LA168_0<=34)||LA168_0==39||(LA168_0>=43 && LA168_0<=48)||(LA168_0>=50 && LA168_0<=52)||(LA168_0>=54 && LA168_0<=55)||(LA168_0>=58 && LA168_0<=60)||(LA168_0>=62 && LA168_0<=70)||LA168_0==72||LA168_0==74||LA168_0==76||LA168_0==79||LA168_0==81||LA168_0==83||(LA168_0>=85 && LA168_0<=89)||(LA168_0>=91 && LA168_0<=96)||LA168_0==98||LA168_0==100||(LA168_0>=102 && LA168_0<=105)) ) {
                alt168=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 168, 0, input);

                throw nvae;
            }
            switch (alt168) {
                case 1 :
                    // InternalQVTimperative.g:6652:3: this_TypeLiteralCS_0= ruleTypeLiteralCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypedRefCSAccess().getTypeLiteralCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypeLiteralCS_0=ruleTypeLiteralCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypeLiteralCS_0;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:6664:3: this_TypedTypeRefCS_1= ruleTypedTypeRefCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypedRefCSAccess().getTypedTypeRefCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypedTypeRefCS_1=ruleTypedTypeRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypedTypeRefCS_1;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypedRefCS"


    // $ANTLR start "entryRuleStructuralFeatureCS"
    // InternalQVTimperative.g:6679:1: entryRuleStructuralFeatureCS returns [EObject current=null] : iv_ruleStructuralFeatureCS= ruleStructuralFeatureCS EOF ;
    public final EObject entryRuleStructuralFeatureCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStructuralFeatureCS = null;


        try {
            // InternalQVTimperative.g:6679:60: (iv_ruleStructuralFeatureCS= ruleStructuralFeatureCS EOF )
            // InternalQVTimperative.g:6680:2: iv_ruleStructuralFeatureCS= ruleStructuralFeatureCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructuralFeatureCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStructuralFeatureCS=ruleStructuralFeatureCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructuralFeatureCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStructuralFeatureCS"


    // $ANTLR start "ruleStructuralFeatureCS"
    // InternalQVTimperative.g:6686:1: ruleStructuralFeatureCS returns [EObject current=null] : (this_AttributeCS_0= ruleAttributeCS | this_ReferenceCS_1= ruleReferenceCS ) ;
    public final EObject ruleStructuralFeatureCS() throws RecognitionException {
        EObject current = null;

        EObject this_AttributeCS_0 = null;

        EObject this_ReferenceCS_1 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:6692:2: ( (this_AttributeCS_0= ruleAttributeCS | this_ReferenceCS_1= ruleReferenceCS ) )
            // InternalQVTimperative.g:6693:2: (this_AttributeCS_0= ruleAttributeCS | this_ReferenceCS_1= ruleReferenceCS )
            {
            // InternalQVTimperative.g:6693:2: (this_AttributeCS_0= ruleAttributeCS | this_ReferenceCS_1= ruleReferenceCS )
            int alt169=2;
            switch ( input.LA(1) ) {
            case 67:
                {
                switch ( input.LA(2) ) {
                case 68:
                    {
                    int LA169_5 = input.LA(3);

                    if ( (LA169_5==69) ) {
                        alt169=1;
                    }
                    else if ( (LA169_5==96) ) {
                        alt169=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 169, 5, input);

                        throw nvae;
                    }
                    }
                    break;
                case 96:
                    {
                    alt169=2;
                    }
                    break;
                case 69:
                    {
                    alt169=1;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 169, 1, input);

                    throw nvae;
                }

                }
                break;
            case 68:
                {
                switch ( input.LA(2) ) {
                case 67:
                    {
                    int LA169_6 = input.LA(3);

                    if ( (LA169_6==69) ) {
                        alt169=1;
                    }
                    else if ( (LA169_6==96) ) {
                        alt169=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 169, 6, input);

                        throw nvae;
                    }
                    }
                    break;
                case 69:
                    {
                    alt169=1;
                    }
                    break;
                case 96:
                    {
                    alt169=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 169, 2, input);

                    throw nvae;
                }

                }
                break;
            case 69:
                {
                alt169=1;
                }
                break;
            case 96:
                {
                alt169=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 169, 0, input);

                throw nvae;
            }

            switch (alt169) {
                case 1 :
                    // InternalQVTimperative.g:6694:3: this_AttributeCS_0= ruleAttributeCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStructuralFeatureCSAccess().getAttributeCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AttributeCS_0=ruleAttributeCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AttributeCS_0;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:6706:3: this_ReferenceCS_1= ruleReferenceCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStructuralFeatureCSAccess().getReferenceCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceCS_1=ruleReferenceCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReferenceCS_1;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructuralFeatureCS"


    // $ANTLR start "entryRuleEnumerationLiteralName"
    // InternalQVTimperative.g:6721:1: entryRuleEnumerationLiteralName returns [String current=null] : iv_ruleEnumerationLiteralName= ruleEnumerationLiteralName EOF ;
    public final String entryRuleEnumerationLiteralName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEnumerationLiteralName = null;


        try {
            // InternalQVTimperative.g:6721:62: (iv_ruleEnumerationLiteralName= ruleEnumerationLiteralName EOF )
            // InternalQVTimperative.g:6722:2: iv_ruleEnumerationLiteralName= ruleEnumerationLiteralName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumerationLiteralNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEnumerationLiteralName=ruleEnumerationLiteralName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumerationLiteralName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumerationLiteralName"


    // $ANTLR start "ruleEnumerationLiteralName"
    // InternalQVTimperative.g:6728:1: ruleEnumerationLiteralName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_EssentialOCLUnrestrictedName_0= ruleEssentialOCLUnrestrictedName ;
    public final AntlrDatatypeRuleToken ruleEnumerationLiteralName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_EssentialOCLUnrestrictedName_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:6734:2: (this_EssentialOCLUnrestrictedName_0= ruleEssentialOCLUnrestrictedName )
            // InternalQVTimperative.g:6735:2: this_EssentialOCLUnrestrictedName_0= ruleEssentialOCLUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getEnumerationLiteralNameAccess().getEssentialOCLUnrestrictedNameParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_EssentialOCLUnrestrictedName_0=ruleEssentialOCLUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_EssentialOCLUnrestrictedName_0);

            }
            if ( state.backtracking==0 ) {

              		afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumerationLiteralName"


    // $ANTLR start "entryRuleQVTbaseUnrestrictedName"
    // InternalQVTimperative.g:6748:1: entryRuleQVTbaseUnrestrictedName returns [String current=null] : iv_ruleQVTbaseUnrestrictedName= ruleQVTbaseUnrestrictedName EOF ;
    public final String entryRuleQVTbaseUnrestrictedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQVTbaseUnrestrictedName = null;


        try {
            // InternalQVTimperative.g:6748:63: (iv_ruleQVTbaseUnrestrictedName= ruleQVTbaseUnrestrictedName EOF )
            // InternalQVTimperative.g:6749:2: iv_ruleQVTbaseUnrestrictedName= ruleQVTbaseUnrestrictedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQVTbaseUnrestrictedNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQVTbaseUnrestrictedName=ruleQVTbaseUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQVTbaseUnrestrictedName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQVTbaseUnrestrictedName"


    // $ANTLR start "ruleQVTbaseUnrestrictedName"
    // InternalQVTimperative.g:6755:1: ruleQVTbaseUnrestrictedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'abstract' | kw= 'attribute' | kw= 'body' | kw= 'class' | kw= 'composes' | kw= 'datatype' | kw= 'definition' | kw= 'derived' | kw= 'derivation' | kw= 'enum' | kw= 'extends' | kw= 'id' | kw= 'initial' | kw= 'interface' | kw= 'literal' | kw= 'operation' | kw= 'ordered' | kw= 'primitive' | kw= 'property' | kw= 'readonly' | kw= 'resolve' | kw= 'serializable' | kw= 'static' | kw= 'throws' | kw= 'transient' | kw= 'unique' | kw= 'unsettable' | kw= 'volatile' ) ;
    public final AntlrDatatypeRuleToken ruleQVTbaseUnrestrictedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalQVTimperative.g:6761:2: ( (kw= 'abstract' | kw= 'attribute' | kw= 'body' | kw= 'class' | kw= 'composes' | kw= 'datatype' | kw= 'definition' | kw= 'derived' | kw= 'derivation' | kw= 'enum' | kw= 'extends' | kw= 'id' | kw= 'initial' | kw= 'interface' | kw= 'literal' | kw= 'operation' | kw= 'ordered' | kw= 'primitive' | kw= 'property' | kw= 'readonly' | kw= 'resolve' | kw= 'serializable' | kw= 'static' | kw= 'throws' | kw= 'transient' | kw= 'unique' | kw= 'unsettable' | kw= 'volatile' ) )
            // InternalQVTimperative.g:6762:2: (kw= 'abstract' | kw= 'attribute' | kw= 'body' | kw= 'class' | kw= 'composes' | kw= 'datatype' | kw= 'definition' | kw= 'derived' | kw= 'derivation' | kw= 'enum' | kw= 'extends' | kw= 'id' | kw= 'initial' | kw= 'interface' | kw= 'literal' | kw= 'operation' | kw= 'ordered' | kw= 'primitive' | kw= 'property' | kw= 'readonly' | kw= 'resolve' | kw= 'serializable' | kw= 'static' | kw= 'throws' | kw= 'transient' | kw= 'unique' | kw= 'unsettable' | kw= 'volatile' )
            {
            // InternalQVTimperative.g:6762:2: (kw= 'abstract' | kw= 'attribute' | kw= 'body' | kw= 'class' | kw= 'composes' | kw= 'datatype' | kw= 'definition' | kw= 'derived' | kw= 'derivation' | kw= 'enum' | kw= 'extends' | kw= 'id' | kw= 'initial' | kw= 'interface' | kw= 'literal' | kw= 'operation' | kw= 'ordered' | kw= 'primitive' | kw= 'property' | kw= 'readonly' | kw= 'resolve' | kw= 'serializable' | kw= 'static' | kw= 'throws' | kw= 'transient' | kw= 'unique' | kw= 'unsettable' | kw= 'volatile' )
            int alt170=28;
            switch ( input.LA(1) ) {
            case 102:
                {
                alt170=1;
                }
                break;
            case 69:
                {
                alt170=2;
                }
                break;
            case 95:
                {
                alt170=3;
                }
                break;
            case 103:
                {
                alt170=4;
                }
                break;
            case 98:
                {
                alt170=5;
                }
                break;
            case 88:
                {
                alt170=6;
                }
                break;
            case 68:
                {
                alt170=7;
                }
                break;
            case 70:
                {
                alt170=8;
                }
                break;
            case 86:
                {
                alt170=9;
                }
                break;
            case 91:
                {
                alt170=10;
                }
                break;
            case 104:
                {
                alt170=11;
                }
                break;
            case 72:
                {
                alt170=12;
                }
                break;
            case 85:
                {
                alt170=13;
                }
                break;
            case 105:
                {
                alt170=14;
                }
                break;
            case 92:
                {
                alt170=15;
                }
                break;
            case 93:
                {
                alt170=16;
                }
                break;
            case 74:
                {
                alt170=17;
                }
                break;
            case 87:
                {
                alt170=18;
                }
                break;
            case 96:
                {
                alt170=19;
                }
                break;
            case 76:
                {
                alt170=20;
                }
                break;
            case 100:
                {
                alt170=21;
                }
                break;
            case 89:
                {
                alt170=22;
                }
                break;
            case 67:
                {
                alt170=23;
                }
                break;
            case 94:
                {
                alt170=24;
                }
                break;
            case 54:
                {
                alt170=25;
                }
                break;
            case 79:
                {
                alt170=26;
                }
                break;
            case 81:
                {
                alt170=27;
                }
                break;
            case 83:
                {
                alt170=28;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 170, 0, input);

                throw nvae;
            }

            switch (alt170) {
                case 1 :
                    // InternalQVTimperative.g:6763:3: kw= 'abstract'
                    {
                    kw=(Token)match(input,102,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getAbstractKeyword_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:6769:3: kw= 'attribute'
                    {
                    kw=(Token)match(input,69,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getAttributeKeyword_1());

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:6775:3: kw= 'body'
                    {
                    kw=(Token)match(input,95,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getBodyKeyword_2());

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:6781:3: kw= 'class'
                    {
                    kw=(Token)match(input,103,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getClassKeyword_3());

                    }

                    }
                    break;
                case 5 :
                    // InternalQVTimperative.g:6787:3: kw= 'composes'
                    {
                    kw=(Token)match(input,98,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getComposesKeyword_4());

                    }

                    }
                    break;
                case 6 :
                    // InternalQVTimperative.g:6793:3: kw= 'datatype'
                    {
                    kw=(Token)match(input,88,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getDatatypeKeyword_5());

                    }

                    }
                    break;
                case 7 :
                    // InternalQVTimperative.g:6799:3: kw= 'definition'
                    {
                    kw=(Token)match(input,68,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getDefinitionKeyword_6());

                    }

                    }
                    break;
                case 8 :
                    // InternalQVTimperative.g:6805:3: kw= 'derived'
                    {
                    kw=(Token)match(input,70,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getDerivedKeyword_7());

                    }

                    }
                    break;
                case 9 :
                    // InternalQVTimperative.g:6811:3: kw= 'derivation'
                    {
                    kw=(Token)match(input,86,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getDerivationKeyword_8());

                    }

                    }
                    break;
                case 10 :
                    // InternalQVTimperative.g:6817:3: kw= 'enum'
                    {
                    kw=(Token)match(input,91,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getEnumKeyword_9());

                    }

                    }
                    break;
                case 11 :
                    // InternalQVTimperative.g:6823:3: kw= 'extends'
                    {
                    kw=(Token)match(input,104,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getExtendsKeyword_10());

                    }

                    }
                    break;
                case 12 :
                    // InternalQVTimperative.g:6829:3: kw= 'id'
                    {
                    kw=(Token)match(input,72,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getIdKeyword_11());

                    }

                    }
                    break;
                case 13 :
                    // InternalQVTimperative.g:6835:3: kw= 'initial'
                    {
                    kw=(Token)match(input,85,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getInitialKeyword_12());

                    }

                    }
                    break;
                case 14 :
                    // InternalQVTimperative.g:6841:3: kw= 'interface'
                    {
                    kw=(Token)match(input,105,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getInterfaceKeyword_13());

                    }

                    }
                    break;
                case 15 :
                    // InternalQVTimperative.g:6847:3: kw= 'literal'
                    {
                    kw=(Token)match(input,92,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getLiteralKeyword_14());

                    }

                    }
                    break;
                case 16 :
                    // InternalQVTimperative.g:6853:3: kw= 'operation'
                    {
                    kw=(Token)match(input,93,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getOperationKeyword_15());

                    }

                    }
                    break;
                case 17 :
                    // InternalQVTimperative.g:6859:3: kw= 'ordered'
                    {
                    kw=(Token)match(input,74,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getOrderedKeyword_16());

                    }

                    }
                    break;
                case 18 :
                    // InternalQVTimperative.g:6865:3: kw= 'primitive'
                    {
                    kw=(Token)match(input,87,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getPrimitiveKeyword_17());

                    }

                    }
                    break;
                case 19 :
                    // InternalQVTimperative.g:6871:3: kw= 'property'
                    {
                    kw=(Token)match(input,96,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getPropertyKeyword_18());

                    }

                    }
                    break;
                case 20 :
                    // InternalQVTimperative.g:6877:3: kw= 'readonly'
                    {
                    kw=(Token)match(input,76,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getReadonlyKeyword_19());

                    }

                    }
                    break;
                case 21 :
                    // InternalQVTimperative.g:6883:3: kw= 'resolve'
                    {
                    kw=(Token)match(input,100,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getResolveKeyword_20());

                    }

                    }
                    break;
                case 22 :
                    // InternalQVTimperative.g:6889:3: kw= 'serializable'
                    {
                    kw=(Token)match(input,89,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getSerializableKeyword_21());

                    }

                    }
                    break;
                case 23 :
                    // InternalQVTimperative.g:6895:3: kw= 'static'
                    {
                    kw=(Token)match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getStaticKeyword_22());

                    }

                    }
                    break;
                case 24 :
                    // InternalQVTimperative.g:6901:3: kw= 'throws'
                    {
                    kw=(Token)match(input,94,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getThrowsKeyword_23());

                    }

                    }
                    break;
                case 25 :
                    // InternalQVTimperative.g:6907:3: kw= 'transient'
                    {
                    kw=(Token)match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getTransientKeyword_24());

                    }

                    }
                    break;
                case 26 :
                    // InternalQVTimperative.g:6913:3: kw= 'unique'
                    {
                    kw=(Token)match(input,79,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getUniqueKeyword_25());

                    }

                    }
                    break;
                case 27 :
                    // InternalQVTimperative.g:6919:3: kw= 'unsettable'
                    {
                    kw=(Token)match(input,81,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getUnsettableKeyword_26());

                    }

                    }
                    break;
                case 28 :
                    // InternalQVTimperative.g:6925:3: kw= 'volatile'
                    {
                    kw=(Token)match(input,83,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getVolatileKeyword_27());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQVTbaseUnrestrictedName"


    // $ANTLR start "entryRuleSIGNED"
    // InternalQVTimperative.g:6934:1: entryRuleSIGNED returns [String current=null] : iv_ruleSIGNED= ruleSIGNED EOF ;
    public final String entryRuleSIGNED() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleSIGNED = null;


        try {
            // InternalQVTimperative.g:6934:46: (iv_ruleSIGNED= ruleSIGNED EOF )
            // InternalQVTimperative.g:6935:2: iv_ruleSIGNED= ruleSIGNED EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSIGNEDRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSIGNED=ruleSIGNED();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSIGNED.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSIGNED"


    // $ANTLR start "ruleSIGNED"
    // InternalQVTimperative.g:6941:1: ruleSIGNED returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '-' )? this_INT_1= RULE_INT ) ;
    public final AntlrDatatypeRuleToken ruleSIGNED() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_1=null;


        	enterRule();

        try {
            // InternalQVTimperative.g:6947:2: ( ( (kw= '-' )? this_INT_1= RULE_INT ) )
            // InternalQVTimperative.g:6948:2: ( (kw= '-' )? this_INT_1= RULE_INT )
            {
            // InternalQVTimperative.g:6948:2: ( (kw= '-' )? this_INT_1= RULE_INT )
            // InternalQVTimperative.g:6949:3: (kw= '-' )? this_INT_1= RULE_INT
            {
            // InternalQVTimperative.g:6949:3: (kw= '-' )?
            int alt171=2;
            int LA171_0 = input.LA(1);

            if ( (LA171_0==106) ) {
                alt171=1;
            }
            switch (alt171) {
                case 1 :
                    // InternalQVTimperative.g:6950:4: kw= '-'
                    {
                    kw=(Token)match(input,106,FollowSets000.FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getSIGNEDAccess().getHyphenMinusKeyword_0());

                    }

                    }
                    break;

            }

            this_INT_1=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_INT_1);

            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_INT_1, grammarAccess.getSIGNEDAccess().getINTTerminalRuleCall_1());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSIGNED"


    // $ANTLR start "entryRuleEssentialOCLUnaryOperatorName"
    // InternalQVTimperative.g:6967:1: entryRuleEssentialOCLUnaryOperatorName returns [String current=null] : iv_ruleEssentialOCLUnaryOperatorName= ruleEssentialOCLUnaryOperatorName EOF ;
    public final String entryRuleEssentialOCLUnaryOperatorName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEssentialOCLUnaryOperatorName = null;


        try {
            // InternalQVTimperative.g:6967:69: (iv_ruleEssentialOCLUnaryOperatorName= ruleEssentialOCLUnaryOperatorName EOF )
            // InternalQVTimperative.g:6968:2: iv_ruleEssentialOCLUnaryOperatorName= ruleEssentialOCLUnaryOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEssentialOCLUnaryOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEssentialOCLUnaryOperatorName=ruleEssentialOCLUnaryOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEssentialOCLUnaryOperatorName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEssentialOCLUnaryOperatorName"


    // $ANTLR start "ruleEssentialOCLUnaryOperatorName"
    // InternalQVTimperative.g:6974:1: ruleEssentialOCLUnaryOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '-' | kw= 'not' | kw= 'not2' ) ;
    public final AntlrDatatypeRuleToken ruleEssentialOCLUnaryOperatorName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalQVTimperative.g:6980:2: ( (kw= '-' | kw= 'not' | kw= 'not2' ) )
            // InternalQVTimperative.g:6981:2: (kw= '-' | kw= 'not' | kw= 'not2' )
            {
            // InternalQVTimperative.g:6981:2: (kw= '-' | kw= 'not' | kw= 'not2' )
            int alt172=3;
            switch ( input.LA(1) ) {
            case 106:
                {
                alt172=1;
                }
                break;
            case 107:
                {
                alt172=2;
                }
                break;
            case 108:
                {
                alt172=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 172, 0, input);

                throw nvae;
            }

            switch (alt172) {
                case 1 :
                    // InternalQVTimperative.g:6982:3: kw= '-'
                    {
                    kw=(Token)match(input,106,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEssentialOCLUnaryOperatorNameAccess().getHyphenMinusKeyword_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:6988:3: kw= 'not'
                    {
                    kw=(Token)match(input,107,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEssentialOCLUnaryOperatorNameAccess().getNotKeyword_1());

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:6994:3: kw= 'not2'
                    {
                    kw=(Token)match(input,108,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEssentialOCLUnaryOperatorNameAccess().getNot2Keyword_2());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEssentialOCLUnaryOperatorName"


    // $ANTLR start "entryRuleEssentialOCLInfixOperatorName"
    // InternalQVTimperative.g:7003:1: entryRuleEssentialOCLInfixOperatorName returns [String current=null] : iv_ruleEssentialOCLInfixOperatorName= ruleEssentialOCLInfixOperatorName EOF ;
    public final String entryRuleEssentialOCLInfixOperatorName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEssentialOCLInfixOperatorName = null;


        try {
            // InternalQVTimperative.g:7003:69: (iv_ruleEssentialOCLInfixOperatorName= ruleEssentialOCLInfixOperatorName EOF )
            // InternalQVTimperative.g:7004:2: iv_ruleEssentialOCLInfixOperatorName= ruleEssentialOCLInfixOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEssentialOCLInfixOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEssentialOCLInfixOperatorName=ruleEssentialOCLInfixOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEssentialOCLInfixOperatorName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEssentialOCLInfixOperatorName"


    // $ANTLR start "ruleEssentialOCLInfixOperatorName"
    // InternalQVTimperative.g:7010:1: ruleEssentialOCLInfixOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '*' | kw= '/' | kw= '+' | kw= '-' | kw= '>' | kw= '<' | kw= '>=' | kw= '<=' | kw= '=' | kw= '<>' | kw= 'and' | kw= 'and2' | kw= 'implies' | kw= 'implies2' | kw= 'or' | kw= 'or2' | kw= 'xor' | kw= 'xor2' ) ;
    public final AntlrDatatypeRuleToken ruleEssentialOCLInfixOperatorName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalQVTimperative.g:7016:2: ( (kw= '*' | kw= '/' | kw= '+' | kw= '-' | kw= '>' | kw= '<' | kw= '>=' | kw= '<=' | kw= '=' | kw= '<>' | kw= 'and' | kw= 'and2' | kw= 'implies' | kw= 'implies2' | kw= 'or' | kw= 'or2' | kw= 'xor' | kw= 'xor2' ) )
            // InternalQVTimperative.g:7017:2: (kw= '*' | kw= '/' | kw= '+' | kw= '-' | kw= '>' | kw= '<' | kw= '>=' | kw= '<=' | kw= '=' | kw= '<>' | kw= 'and' | kw= 'and2' | kw= 'implies' | kw= 'implies2' | kw= 'or' | kw= 'or2' | kw= 'xor' | kw= 'xor2' )
            {
            // InternalQVTimperative.g:7017:2: (kw= '*' | kw= '/' | kw= '+' | kw= '-' | kw= '>' | kw= '<' | kw= '>=' | kw= '<=' | kw= '=' | kw= '<>' | kw= 'and' | kw= 'and2' | kw= 'implies' | kw= 'implies2' | kw= 'or' | kw= 'or2' | kw= 'xor' | kw= 'xor2' )
            int alt173=18;
            switch ( input.LA(1) ) {
            case 42:
                {
                alt173=1;
                }
                break;
            case 109:
                {
                alt173=2;
                }
                break;
            case 110:
                {
                alt173=3;
                }
                break;
            case 106:
                {
                alt173=4;
                }
                break;
            case 111:
                {
                alt173=5;
                }
                break;
            case 112:
                {
                alt173=6;
                }
                break;
            case 113:
                {
                alt173=7;
                }
                break;
            case 114:
                {
                alt173=8;
                }
                break;
            case 53:
                {
                alt173=9;
                }
                break;
            case 115:
                {
                alt173=10;
                }
                break;
            case 116:
                {
                alt173=11;
                }
                break;
            case 117:
                {
                alt173=12;
                }
                break;
            case 118:
                {
                alt173=13;
                }
                break;
            case 119:
                {
                alt173=14;
                }
                break;
            case 120:
                {
                alt173=15;
                }
                break;
            case 121:
                {
                alt173=16;
                }
                break;
            case 122:
                {
                alt173=17;
                }
                break;
            case 123:
                {
                alt173=18;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 173, 0, input);

                throw nvae;
            }

            switch (alt173) {
                case 1 :
                    // InternalQVTimperative.g:7018:3: kw= '*'
                    {
                    kw=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getAsteriskKeyword_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:7024:3: kw= '/'
                    {
                    kw=(Token)match(input,109,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getSolidusKeyword_1());

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:7030:3: kw= '+'
                    {
                    kw=(Token)match(input,110,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getPlusSignKeyword_2());

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:7036:3: kw= '-'
                    {
                    kw=(Token)match(input,106,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getHyphenMinusKeyword_3());

                    }

                    }
                    break;
                case 5 :
                    // InternalQVTimperative.g:7042:3: kw= '>'
                    {
                    kw=(Token)match(input,111,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getGreaterThanSignKeyword_4());

                    }

                    }
                    break;
                case 6 :
                    // InternalQVTimperative.g:7048:3: kw= '<'
                    {
                    kw=(Token)match(input,112,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getLessThanSignKeyword_5());

                    }

                    }
                    break;
                case 7 :
                    // InternalQVTimperative.g:7054:3: kw= '>='
                    {
                    kw=(Token)match(input,113,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getGreaterThanSignEqualsSignKeyword_6());

                    }

                    }
                    break;
                case 8 :
                    // InternalQVTimperative.g:7060:3: kw= '<='
                    {
                    kw=(Token)match(input,114,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getLessThanSignEqualsSignKeyword_7());

                    }

                    }
                    break;
                case 9 :
                    // InternalQVTimperative.g:7066:3: kw= '='
                    {
                    kw=(Token)match(input,53,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getEqualsSignKeyword_8());

                    }

                    }
                    break;
                case 10 :
                    // InternalQVTimperative.g:7072:3: kw= '<>'
                    {
                    kw=(Token)match(input,115,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getLessThanSignGreaterThanSignKeyword_9());

                    }

                    }
                    break;
                case 11 :
                    // InternalQVTimperative.g:7078:3: kw= 'and'
                    {
                    kw=(Token)match(input,116,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getAndKeyword_10());

                    }

                    }
                    break;
                case 12 :
                    // InternalQVTimperative.g:7084:3: kw= 'and2'
                    {
                    kw=(Token)match(input,117,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getAnd2Keyword_11());

                    }

                    }
                    break;
                case 13 :
                    // InternalQVTimperative.g:7090:3: kw= 'implies'
                    {
                    kw=(Token)match(input,118,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getImpliesKeyword_12());

                    }

                    }
                    break;
                case 14 :
                    // InternalQVTimperative.g:7096:3: kw= 'implies2'
                    {
                    kw=(Token)match(input,119,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getImplies2Keyword_13());

                    }

                    }
                    break;
                case 15 :
                    // InternalQVTimperative.g:7102:3: kw= 'or'
                    {
                    kw=(Token)match(input,120,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getOrKeyword_14());

                    }

                    }
                    break;
                case 16 :
                    // InternalQVTimperative.g:7108:3: kw= 'or2'
                    {
                    kw=(Token)match(input,121,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getOr2Keyword_15());

                    }

                    }
                    break;
                case 17 :
                    // InternalQVTimperative.g:7114:3: kw= 'xor'
                    {
                    kw=(Token)match(input,122,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getXorKeyword_16());

                    }

                    }
                    break;
                case 18 :
                    // InternalQVTimperative.g:7120:3: kw= 'xor2'
                    {
                    kw=(Token)match(input,123,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getXor2Keyword_17());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEssentialOCLInfixOperatorName"


    // $ANTLR start "entryRuleEssentialOCLNavigationOperatorName"
    // InternalQVTimperative.g:7129:1: entryRuleEssentialOCLNavigationOperatorName returns [String current=null] : iv_ruleEssentialOCLNavigationOperatorName= ruleEssentialOCLNavigationOperatorName EOF ;
    public final String entryRuleEssentialOCLNavigationOperatorName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEssentialOCLNavigationOperatorName = null;


        try {
            // InternalQVTimperative.g:7129:74: (iv_ruleEssentialOCLNavigationOperatorName= ruleEssentialOCLNavigationOperatorName EOF )
            // InternalQVTimperative.g:7130:2: iv_ruleEssentialOCLNavigationOperatorName= ruleEssentialOCLNavigationOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEssentialOCLNavigationOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEssentialOCLNavigationOperatorName=ruleEssentialOCLNavigationOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEssentialOCLNavigationOperatorName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEssentialOCLNavigationOperatorName"


    // $ANTLR start "ruleEssentialOCLNavigationOperatorName"
    // InternalQVTimperative.g:7136:1: ruleEssentialOCLNavigationOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '.' | kw= '->' | kw= '?.' | kw= '?->' ) ;
    public final AntlrDatatypeRuleToken ruleEssentialOCLNavigationOperatorName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalQVTimperative.g:7142:2: ( (kw= '.' | kw= '->' | kw= '?.' | kw= '?->' ) )
            // InternalQVTimperative.g:7143:2: (kw= '.' | kw= '->' | kw= '?.' | kw= '?->' )
            {
            // InternalQVTimperative.g:7143:2: (kw= '.' | kw= '->' | kw= '?.' | kw= '?->' )
            int alt174=4;
            switch ( input.LA(1) ) {
            case 61:
                {
                alt174=1;
                }
                break;
            case 124:
                {
                alt174=2;
                }
                break;
            case 125:
                {
                alt174=3;
                }
                break;
            case 126:
                {
                alt174=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 174, 0, input);

                throw nvae;
            }

            switch (alt174) {
                case 1 :
                    // InternalQVTimperative.g:7144:3: kw= '.'
                    {
                    kw=(Token)match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getFullStopKeyword_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:7150:3: kw= '->'
                    {
                    kw=(Token)match(input,124,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getHyphenMinusGreaterThanSignKeyword_1());

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:7156:3: kw= '?.'
                    {
                    kw=(Token)match(input,125,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getQuestionMarkFullStopKeyword_2());

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:7162:3: kw= '?->'
                    {
                    kw=(Token)match(input,126,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getQuestionMarkHyphenMinusGreaterThanSignKeyword_3());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEssentialOCLNavigationOperatorName"


    // $ANTLR start "entryRuleBinaryOperatorName"
    // InternalQVTimperative.g:7171:1: entryRuleBinaryOperatorName returns [String current=null] : iv_ruleBinaryOperatorName= ruleBinaryOperatorName EOF ;
    public final String entryRuleBinaryOperatorName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBinaryOperatorName = null;


        try {
            // InternalQVTimperative.g:7171:58: (iv_ruleBinaryOperatorName= ruleBinaryOperatorName EOF )
            // InternalQVTimperative.g:7172:2: iv_ruleBinaryOperatorName= ruleBinaryOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBinaryOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBinaryOperatorName=ruleBinaryOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBinaryOperatorName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBinaryOperatorName"


    // $ANTLR start "ruleBinaryOperatorName"
    // InternalQVTimperative.g:7178:1: ruleBinaryOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_InfixOperatorName_0= ruleInfixOperatorName | this_NavigationOperatorName_1= ruleNavigationOperatorName ) ;
    public final AntlrDatatypeRuleToken ruleBinaryOperatorName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_InfixOperatorName_0 = null;

        AntlrDatatypeRuleToken this_NavigationOperatorName_1 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:7184:2: ( (this_InfixOperatorName_0= ruleInfixOperatorName | this_NavigationOperatorName_1= ruleNavigationOperatorName ) )
            // InternalQVTimperative.g:7185:2: (this_InfixOperatorName_0= ruleInfixOperatorName | this_NavigationOperatorName_1= ruleNavigationOperatorName )
            {
            // InternalQVTimperative.g:7185:2: (this_InfixOperatorName_0= ruleInfixOperatorName | this_NavigationOperatorName_1= ruleNavigationOperatorName )
            int alt175=2;
            int LA175_0 = input.LA(1);

            if ( (LA175_0==42||LA175_0==53||LA175_0==106||(LA175_0>=109 && LA175_0<=123)) ) {
                alt175=1;
            }
            else if ( (LA175_0==61||(LA175_0>=124 && LA175_0<=126)) ) {
                alt175=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 175, 0, input);

                throw nvae;
            }
            switch (alt175) {
                case 1 :
                    // InternalQVTimperative.g:7186:3: this_InfixOperatorName_0= ruleInfixOperatorName
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBinaryOperatorNameAccess().getInfixOperatorNameParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_InfixOperatorName_0=ruleInfixOperatorName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_InfixOperatorName_0);

                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:7197:3: this_NavigationOperatorName_1= ruleNavigationOperatorName
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBinaryOperatorNameAccess().getNavigationOperatorNameParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NavigationOperatorName_1=ruleNavigationOperatorName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_NavigationOperatorName_1);

                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBinaryOperatorName"


    // $ANTLR start "entryRuleInfixOperatorName"
    // InternalQVTimperative.g:7211:1: entryRuleInfixOperatorName returns [String current=null] : iv_ruleInfixOperatorName= ruleInfixOperatorName EOF ;
    public final String entryRuleInfixOperatorName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleInfixOperatorName = null;


        try {
            // InternalQVTimperative.g:7211:57: (iv_ruleInfixOperatorName= ruleInfixOperatorName EOF )
            // InternalQVTimperative.g:7212:2: iv_ruleInfixOperatorName= ruleInfixOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInfixOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleInfixOperatorName=ruleInfixOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInfixOperatorName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInfixOperatorName"


    // $ANTLR start "ruleInfixOperatorName"
    // InternalQVTimperative.g:7218:1: ruleInfixOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_EssentialOCLInfixOperatorName_0= ruleEssentialOCLInfixOperatorName ;
    public final AntlrDatatypeRuleToken ruleInfixOperatorName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_EssentialOCLInfixOperatorName_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:7224:2: (this_EssentialOCLInfixOperatorName_0= ruleEssentialOCLInfixOperatorName )
            // InternalQVTimperative.g:7225:2: this_EssentialOCLInfixOperatorName_0= ruleEssentialOCLInfixOperatorName
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getInfixOperatorNameAccess().getEssentialOCLInfixOperatorNameParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_EssentialOCLInfixOperatorName_0=ruleEssentialOCLInfixOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_EssentialOCLInfixOperatorName_0);

            }
            if ( state.backtracking==0 ) {

              		afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInfixOperatorName"


    // $ANTLR start "entryRuleNavigationOperatorName"
    // InternalQVTimperative.g:7238:1: entryRuleNavigationOperatorName returns [String current=null] : iv_ruleNavigationOperatorName= ruleNavigationOperatorName EOF ;
    public final String entryRuleNavigationOperatorName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNavigationOperatorName = null;


        try {
            // InternalQVTimperative.g:7238:62: (iv_ruleNavigationOperatorName= ruleNavigationOperatorName EOF )
            // InternalQVTimperative.g:7239:2: iv_ruleNavigationOperatorName= ruleNavigationOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNavigationOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNavigationOperatorName=ruleNavigationOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNavigationOperatorName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNavigationOperatorName"


    // $ANTLR start "ruleNavigationOperatorName"
    // InternalQVTimperative.g:7245:1: ruleNavigationOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_EssentialOCLNavigationOperatorName_0= ruleEssentialOCLNavigationOperatorName ;
    public final AntlrDatatypeRuleToken ruleNavigationOperatorName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_EssentialOCLNavigationOperatorName_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:7251:2: (this_EssentialOCLNavigationOperatorName_0= ruleEssentialOCLNavigationOperatorName )
            // InternalQVTimperative.g:7252:2: this_EssentialOCLNavigationOperatorName_0= ruleEssentialOCLNavigationOperatorName
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getNavigationOperatorNameAccess().getEssentialOCLNavigationOperatorNameParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_EssentialOCLNavigationOperatorName_0=ruleEssentialOCLNavigationOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_EssentialOCLNavigationOperatorName_0);

            }
            if ( state.backtracking==0 ) {

              		afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNavigationOperatorName"


    // $ANTLR start "entryRuleUnaryOperatorName"
    // InternalQVTimperative.g:7265:1: entryRuleUnaryOperatorName returns [String current=null] : iv_ruleUnaryOperatorName= ruleUnaryOperatorName EOF ;
    public final String entryRuleUnaryOperatorName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUnaryOperatorName = null;


        try {
            // InternalQVTimperative.g:7265:57: (iv_ruleUnaryOperatorName= ruleUnaryOperatorName EOF )
            // InternalQVTimperative.g:7266:2: iv_ruleUnaryOperatorName= ruleUnaryOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleUnaryOperatorName=ruleUnaryOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnaryOperatorName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnaryOperatorName"


    // $ANTLR start "ruleUnaryOperatorName"
    // InternalQVTimperative.g:7272:1: ruleUnaryOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_EssentialOCLUnaryOperatorName_0= ruleEssentialOCLUnaryOperatorName ;
    public final AntlrDatatypeRuleToken ruleUnaryOperatorName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_EssentialOCLUnaryOperatorName_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:7278:2: (this_EssentialOCLUnaryOperatorName_0= ruleEssentialOCLUnaryOperatorName )
            // InternalQVTimperative.g:7279:2: this_EssentialOCLUnaryOperatorName_0= ruleEssentialOCLUnaryOperatorName
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getUnaryOperatorNameAccess().getEssentialOCLUnaryOperatorNameParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_EssentialOCLUnaryOperatorName_0=ruleEssentialOCLUnaryOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_EssentialOCLUnaryOperatorName_0);

            }
            if ( state.backtracking==0 ) {

              		afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnaryOperatorName"


    // $ANTLR start "entryRuleEssentialOCLUnrestrictedName"
    // InternalQVTimperative.g:7292:1: entryRuleEssentialOCLUnrestrictedName returns [String current=null] : iv_ruleEssentialOCLUnrestrictedName= ruleEssentialOCLUnrestrictedName EOF ;
    public final String entryRuleEssentialOCLUnrestrictedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEssentialOCLUnrestrictedName = null;


        try {
            // InternalQVTimperative.g:7292:68: (iv_ruleEssentialOCLUnrestrictedName= ruleEssentialOCLUnrestrictedName EOF )
            // InternalQVTimperative.g:7293:2: iv_ruleEssentialOCLUnrestrictedName= ruleEssentialOCLUnrestrictedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEssentialOCLUnrestrictedNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEssentialOCLUnrestrictedName=ruleEssentialOCLUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEssentialOCLUnrestrictedName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEssentialOCLUnrestrictedName"


    // $ANTLR start "ruleEssentialOCLUnrestrictedName"
    // InternalQVTimperative.g:7299:1: ruleEssentialOCLUnrestrictedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_Identifier_0= ruleIdentifier ;
    public final AntlrDatatypeRuleToken ruleEssentialOCLUnrestrictedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_Identifier_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:7305:2: (this_Identifier_0= ruleIdentifier )
            // InternalQVTimperative.g:7306:2: this_Identifier_0= ruleIdentifier
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getEssentialOCLUnrestrictedNameAccess().getIdentifierParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_Identifier_0=ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_Identifier_0);

            }
            if ( state.backtracking==0 ) {

              		afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEssentialOCLUnrestrictedName"


    // $ANTLR start "entryRuleEssentialOCLUnreservedName"
    // InternalQVTimperative.g:7319:1: entryRuleEssentialOCLUnreservedName returns [String current=null] : iv_ruleEssentialOCLUnreservedName= ruleEssentialOCLUnreservedName EOF ;
    public final String entryRuleEssentialOCLUnreservedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEssentialOCLUnreservedName = null;


        try {
            // InternalQVTimperative.g:7319:66: (iv_ruleEssentialOCLUnreservedName= ruleEssentialOCLUnreservedName EOF )
            // InternalQVTimperative.g:7320:2: iv_ruleEssentialOCLUnreservedName= ruleEssentialOCLUnreservedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEssentialOCLUnreservedNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEssentialOCLUnreservedName=ruleEssentialOCLUnreservedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEssentialOCLUnreservedName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEssentialOCLUnreservedName"


    // $ANTLR start "ruleEssentialOCLUnreservedName"
    // InternalQVTimperative.g:7326:1: ruleEssentialOCLUnreservedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_UnrestrictedName_0= ruleUnrestrictedName | this_CollectionTypeIdentifier_1= ruleCollectionTypeIdentifier | this_PrimitiveTypeIdentifier_2= rulePrimitiveTypeIdentifier | kw= 'Map' | kw= 'Tuple' ) ;
    public final AntlrDatatypeRuleToken ruleEssentialOCLUnreservedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_UnrestrictedName_0 = null;

        AntlrDatatypeRuleToken this_CollectionTypeIdentifier_1 = null;

        AntlrDatatypeRuleToken this_PrimitiveTypeIdentifier_2 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:7332:2: ( (this_UnrestrictedName_0= ruleUnrestrictedName | this_CollectionTypeIdentifier_1= ruleCollectionTypeIdentifier | this_PrimitiveTypeIdentifier_2= rulePrimitiveTypeIdentifier | kw= 'Map' | kw= 'Tuple' ) )
            // InternalQVTimperative.g:7333:2: (this_UnrestrictedName_0= ruleUnrestrictedName | this_CollectionTypeIdentifier_1= ruleCollectionTypeIdentifier | this_PrimitiveTypeIdentifier_2= rulePrimitiveTypeIdentifier | kw= 'Map' | kw= 'Tuple' )
            {
            // InternalQVTimperative.g:7333:2: (this_UnrestrictedName_0= ruleUnrestrictedName | this_CollectionTypeIdentifier_1= ruleCollectionTypeIdentifier | this_PrimitiveTypeIdentifier_2= rulePrimitiveTypeIdentifier | kw= 'Map' | kw= 'Tuple' )
            int alt176=5;
            switch ( input.LA(1) ) {
            case RULE_SIMPLE_ID:
            case RULE_ESCAPED_ID:
            case 17:
            case 19:
            case 22:
            case 23:
            case 25:
            case 26:
            case 29:
            case 30:
            case 31:
            case 32:
            case 33:
            case 34:
            case 39:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 48:
            case 50:
            case 51:
            case 52:
            case 54:
            case 55:
            case 58:
            case 59:
            case 60:
            case 62:
            case 63:
            case 64:
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
            case 70:
            case 72:
            case 74:
            case 76:
            case 79:
            case 81:
            case 83:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 91:
            case 92:
            case 93:
            case 94:
            case 95:
            case 96:
            case 98:
            case 100:
            case 102:
            case 103:
            case 104:
            case 105:
                {
                alt176=1;
                }
                break;
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
                {
                alt176=2;
                }
                break;
            case 129:
            case 130:
            case 131:
            case 132:
            case 133:
            case 134:
            case 135:
            case 136:
                {
                alt176=3;
                }
                break;
            case 127:
                {
                alt176=4;
                }
                break;
            case 128:
                {
                alt176=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 176, 0, input);

                throw nvae;
            }

            switch (alt176) {
                case 1 :
                    // InternalQVTimperative.g:7334:3: this_UnrestrictedName_0= ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEssentialOCLUnreservedNameAccess().getUnrestrictedNameParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_UnrestrictedName_0=ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_UnrestrictedName_0);

                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:7345:3: this_CollectionTypeIdentifier_1= ruleCollectionTypeIdentifier
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEssentialOCLUnreservedNameAccess().getCollectionTypeIdentifierParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CollectionTypeIdentifier_1=ruleCollectionTypeIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_CollectionTypeIdentifier_1);

                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:7356:3: this_PrimitiveTypeIdentifier_2= rulePrimitiveTypeIdentifier
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEssentialOCLUnreservedNameAccess().getPrimitiveTypeIdentifierParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrimitiveTypeIdentifier_2=rulePrimitiveTypeIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_PrimitiveTypeIdentifier_2);

                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:7367:3: kw= 'Map'
                    {
                    kw=(Token)match(input,127,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEssentialOCLUnreservedNameAccess().getMapKeyword_3());

                    }

                    }
                    break;
                case 5 :
                    // InternalQVTimperative.g:7373:3: kw= 'Tuple'
                    {
                    kw=(Token)match(input,128,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEssentialOCLUnreservedNameAccess().getTupleKeyword_4());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEssentialOCLUnreservedName"


    // $ANTLR start "entryRuleUnreservedName"
    // InternalQVTimperative.g:7382:1: entryRuleUnreservedName returns [String current=null] : iv_ruleUnreservedName= ruleUnreservedName EOF ;
    public final String entryRuleUnreservedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUnreservedName = null;


        try {
            // InternalQVTimperative.g:7382:54: (iv_ruleUnreservedName= ruleUnreservedName EOF )
            // InternalQVTimperative.g:7383:2: iv_ruleUnreservedName= ruleUnreservedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnreservedNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleUnreservedName=ruleUnreservedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnreservedName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnreservedName"


    // $ANTLR start "ruleUnreservedName"
    // InternalQVTimperative.g:7389:1: ruleUnreservedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_EssentialOCLUnreservedName_0= ruleEssentialOCLUnreservedName ;
    public final AntlrDatatypeRuleToken ruleUnreservedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_EssentialOCLUnreservedName_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:7395:2: (this_EssentialOCLUnreservedName_0= ruleEssentialOCLUnreservedName )
            // InternalQVTimperative.g:7396:2: this_EssentialOCLUnreservedName_0= ruleEssentialOCLUnreservedName
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getUnreservedNameAccess().getEssentialOCLUnreservedNameParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_EssentialOCLUnreservedName_0=ruleEssentialOCLUnreservedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_EssentialOCLUnreservedName_0);

            }
            if ( state.backtracking==0 ) {

              		afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnreservedName"


    // $ANTLR start "entryRuleURIPathNameCS"
    // InternalQVTimperative.g:7409:1: entryRuleURIPathNameCS returns [EObject current=null] : iv_ruleURIPathNameCS= ruleURIPathNameCS EOF ;
    public final EObject entryRuleURIPathNameCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleURIPathNameCS = null;


        try {
            // InternalQVTimperative.g:7409:54: (iv_ruleURIPathNameCS= ruleURIPathNameCS EOF )
            // InternalQVTimperative.g:7410:2: iv_ruleURIPathNameCS= ruleURIPathNameCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getURIPathNameCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleURIPathNameCS=ruleURIPathNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleURIPathNameCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleURIPathNameCS"


    // $ANTLR start "ruleURIPathNameCS"
    // InternalQVTimperative.g:7416:1: ruleURIPathNameCS returns [EObject current=null] : ( ( (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* ) ;
    public final EObject ruleURIPathNameCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedPathElements_0_0 = null;

        EObject lv_ownedPathElements_2_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:7422:2: ( ( ( (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* ) )
            // InternalQVTimperative.g:7423:2: ( ( (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* )
            {
            // InternalQVTimperative.g:7423:2: ( ( (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* )
            // InternalQVTimperative.g:7424:3: ( (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )*
            {
            // InternalQVTimperative.g:7424:3: ( (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS ) )
            // InternalQVTimperative.g:7425:4: (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS )
            {
            // InternalQVTimperative.g:7425:4: (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS )
            // InternalQVTimperative.g:7426:5: lv_ownedPathElements_0_0= ruleURIFirstPathElementCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getURIPathNameCSAccess().getOwnedPathElementsURIFirstPathElementCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_119);
            lv_ownedPathElements_0_0=ruleURIFirstPathElementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getURIPathNameCSRule());
              					}
              					add(
              						current,
              						"ownedPathElements",
              						lv_ownedPathElements_0_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.URIFirstPathElementCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:7443:3: (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )*
            loop177:
            do {
                int alt177=2;
                int LA177_0 = input.LA(1);

                if ( (LA177_0==41) ) {
                    int LA177_1 = input.LA(2);

                    if ( ((LA177_1>=RULE_SIMPLE_ID && LA177_1<=RULE_ESCAPED_ID)||LA177_1==17||LA177_1==19||(LA177_1>=22 && LA177_1<=23)||(LA177_1>=25 && LA177_1<=26)||(LA177_1>=29 && LA177_1<=34)||LA177_1==39||(LA177_1>=43 && LA177_1<=48)||(LA177_1>=50 && LA177_1<=52)||(LA177_1>=54 && LA177_1<=55)||(LA177_1>=58 && LA177_1<=60)||(LA177_1>=62 && LA177_1<=70)||LA177_1==72||LA177_1==74||LA177_1==76||LA177_1==79||LA177_1==81||LA177_1==83||(LA177_1>=85 && LA177_1<=89)||(LA177_1>=91 && LA177_1<=96)||LA177_1==98||LA177_1==100||(LA177_1>=102 && LA177_1<=105)||(LA177_1>=127 && LA177_1<=141)) ) {
                        alt177=1;
                    }


                }


                switch (alt177) {
            	case 1 :
            	    // InternalQVTimperative.g:7444:4: otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) )
            	    {
            	    otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_12); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getURIPathNameCSAccess().getColonColonKeyword_1_0());

            	    }
            	    // InternalQVTimperative.g:7448:4: ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) )
            	    // InternalQVTimperative.g:7449:5: (lv_ownedPathElements_2_0= ruleNextPathElementCS )
            	    {
            	    // InternalQVTimperative.g:7449:5: (lv_ownedPathElements_2_0= ruleNextPathElementCS )
            	    // InternalQVTimperative.g:7450:6: lv_ownedPathElements_2_0= ruleNextPathElementCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getURIPathNameCSAccess().getOwnedPathElementsNextPathElementCSParserRuleCall_1_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_119);
            	    lv_ownedPathElements_2_0=ruleNextPathElementCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getURIPathNameCSRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedPathElements",
            	      							lv_ownedPathElements_2_0,
            	      							"org.eclipse.ocl.xtext.base.Base.NextPathElementCS");
            	      						afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop177;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleURIPathNameCS"


    // $ANTLR start "entryRuleURIFirstPathElementCS"
    // InternalQVTimperative.g:7472:1: entryRuleURIFirstPathElementCS returns [EObject current=null] : iv_ruleURIFirstPathElementCS= ruleURIFirstPathElementCS EOF ;
    public final EObject entryRuleURIFirstPathElementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleURIFirstPathElementCS = null;


        try {
            // InternalQVTimperative.g:7472:62: (iv_ruleURIFirstPathElementCS= ruleURIFirstPathElementCS EOF )
            // InternalQVTimperative.g:7473:2: iv_ruleURIFirstPathElementCS= ruleURIFirstPathElementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getURIFirstPathElementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleURIFirstPathElementCS=ruleURIFirstPathElementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleURIFirstPathElementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleURIFirstPathElementCS"


    // $ANTLR start "ruleURIFirstPathElementCS"
    // InternalQVTimperative.g:7479:1: ruleURIFirstPathElementCS returns [EObject current=null] : ( ( ( ruleUnrestrictedName ) ) | ( () ( ( ruleURI ) ) ) ) ;
    public final EObject ruleURIFirstPathElementCS() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalQVTimperative.g:7485:2: ( ( ( ( ruleUnrestrictedName ) ) | ( () ( ( ruleURI ) ) ) ) )
            // InternalQVTimperative.g:7486:2: ( ( ( ruleUnrestrictedName ) ) | ( () ( ( ruleURI ) ) ) )
            {
            // InternalQVTimperative.g:7486:2: ( ( ( ruleUnrestrictedName ) ) | ( () ( ( ruleURI ) ) ) )
            int alt178=2;
            int LA178_0 = input.LA(1);

            if ( ((LA178_0>=RULE_SIMPLE_ID && LA178_0<=RULE_ESCAPED_ID)||LA178_0==17||LA178_0==19||(LA178_0>=22 && LA178_0<=23)||(LA178_0>=25 && LA178_0<=26)||(LA178_0>=29 && LA178_0<=34)||LA178_0==39||(LA178_0>=43 && LA178_0<=48)||(LA178_0>=50 && LA178_0<=52)||(LA178_0>=54 && LA178_0<=55)||(LA178_0>=58 && LA178_0<=60)||(LA178_0>=62 && LA178_0<=70)||LA178_0==72||LA178_0==74||LA178_0==76||LA178_0==79||LA178_0==81||LA178_0==83||(LA178_0>=85 && LA178_0<=89)||(LA178_0>=91 && LA178_0<=96)||LA178_0==98||LA178_0==100||(LA178_0>=102 && LA178_0<=105)) ) {
                alt178=1;
            }
            else if ( (LA178_0==RULE_SINGLE_QUOTED_STRING) ) {
                alt178=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 178, 0, input);

                throw nvae;
            }
            switch (alt178) {
                case 1 :
                    // InternalQVTimperative.g:7487:3: ( ( ruleUnrestrictedName ) )
                    {
                    // InternalQVTimperative.g:7487:3: ( ( ruleUnrestrictedName ) )
                    // InternalQVTimperative.g:7488:4: ( ruleUnrestrictedName )
                    {
                    // InternalQVTimperative.g:7488:4: ( ruleUnrestrictedName )
                    // InternalQVTimperative.g:7489:5: ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      					/* */

                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getURIFirstPathElementCSRule());
                      					}

                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getURIFirstPathElementCSAccess().getReferredElementNamedElementCrossReference_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:7507:3: ( () ( ( ruleURI ) ) )
                    {
                    // InternalQVTimperative.g:7507:3: ( () ( ( ruleURI ) ) )
                    // InternalQVTimperative.g:7508:4: () ( ( ruleURI ) )
                    {
                    // InternalQVTimperative.g:7508:4: ()
                    // InternalQVTimperative.g:7509:5:
                    {
                    if ( state.backtracking==0 ) {

                      					/* */

                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getURIFirstPathElementCSAccess().getPathElementWithURICSAction_1_0(),
                      						current);

                    }

                    }

                    // InternalQVTimperative.g:7518:4: ( ( ruleURI ) )
                    // InternalQVTimperative.g:7519:5: ( ruleURI )
                    {
                    // InternalQVTimperative.g:7519:5: ( ruleURI )
                    // InternalQVTimperative.g:7520:6: ruleURI
                    {
                    if ( state.backtracking==0 ) {

                      						/* */

                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getURIFirstPathElementCSRule());
                      						}

                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getURIFirstPathElementCSAccess().getReferredElementNamespaceCrossReference_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleURI();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleURIFirstPathElementCS"


    // $ANTLR start "entryRulePrimitiveTypeIdentifier"
    // InternalQVTimperative.g:7542:1: entryRulePrimitiveTypeIdentifier returns [String current=null] : iv_rulePrimitiveTypeIdentifier= rulePrimitiveTypeIdentifier EOF ;
    public final String entryRulePrimitiveTypeIdentifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePrimitiveTypeIdentifier = null;


        try {
            // InternalQVTimperative.g:7542:63: (iv_rulePrimitiveTypeIdentifier= rulePrimitiveTypeIdentifier EOF )
            // InternalQVTimperative.g:7543:2: iv_rulePrimitiveTypeIdentifier= rulePrimitiveTypeIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimitiveTypeIdentifierRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrimitiveTypeIdentifier=rulePrimitiveTypeIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimitiveTypeIdentifier.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimitiveTypeIdentifier"


    // $ANTLR start "rulePrimitiveTypeIdentifier"
    // InternalQVTimperative.g:7549:1: rulePrimitiveTypeIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'Boolean' | kw= 'Integer' | kw= 'Real' | kw= 'String' | kw= 'UnlimitedNatural' | kw= 'OclAny' | kw= 'OclInvalid' | kw= 'OclVoid' ) ;
    public final AntlrDatatypeRuleToken rulePrimitiveTypeIdentifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalQVTimperative.g:7555:2: ( (kw= 'Boolean' | kw= 'Integer' | kw= 'Real' | kw= 'String' | kw= 'UnlimitedNatural' | kw= 'OclAny' | kw= 'OclInvalid' | kw= 'OclVoid' ) )
            // InternalQVTimperative.g:7556:2: (kw= 'Boolean' | kw= 'Integer' | kw= 'Real' | kw= 'String' | kw= 'UnlimitedNatural' | kw= 'OclAny' | kw= 'OclInvalid' | kw= 'OclVoid' )
            {
            // InternalQVTimperative.g:7556:2: (kw= 'Boolean' | kw= 'Integer' | kw= 'Real' | kw= 'String' | kw= 'UnlimitedNatural' | kw= 'OclAny' | kw= 'OclInvalid' | kw= 'OclVoid' )
            int alt179=8;
            switch ( input.LA(1) ) {
            case 129:
                {
                alt179=1;
                }
                break;
            case 130:
                {
                alt179=2;
                }
                break;
            case 131:
                {
                alt179=3;
                }
                break;
            case 132:
                {
                alt179=4;
                }
                break;
            case 133:
                {
                alt179=5;
                }
                break;
            case 134:
                {
                alt179=6;
                }
                break;
            case 135:
                {
                alt179=7;
                }
                break;
            case 136:
                {
                alt179=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 179, 0, input);

                throw nvae;
            }

            switch (alt179) {
                case 1 :
                    // InternalQVTimperative.g:7557:3: kw= 'Boolean'
                    {
                    kw=(Token)match(input,129,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getBooleanKeyword_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:7563:3: kw= 'Integer'
                    {
                    kw=(Token)match(input,130,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getIntegerKeyword_1());

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:7569:3: kw= 'Real'
                    {
                    kw=(Token)match(input,131,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getRealKeyword_2());

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:7575:3: kw= 'String'
                    {
                    kw=(Token)match(input,132,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getStringKeyword_3());

                    }

                    }
                    break;
                case 5 :
                    // InternalQVTimperative.g:7581:3: kw= 'UnlimitedNatural'
                    {
                    kw=(Token)match(input,133,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getUnlimitedNaturalKeyword_4());

                    }

                    }
                    break;
                case 6 :
                    // InternalQVTimperative.g:7587:3: kw= 'OclAny'
                    {
                    kw=(Token)match(input,134,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getOclAnyKeyword_5());

                    }

                    }
                    break;
                case 7 :
                    // InternalQVTimperative.g:7593:3: kw= 'OclInvalid'
                    {
                    kw=(Token)match(input,135,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getOclInvalidKeyword_6());

                    }

                    }
                    break;
                case 8 :
                    // InternalQVTimperative.g:7599:3: kw= 'OclVoid'
                    {
                    kw=(Token)match(input,136,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getOclVoidKeyword_7());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimitiveTypeIdentifier"


    // $ANTLR start "entryRulePrimitiveTypeCS"
    // InternalQVTimperative.g:7608:1: entryRulePrimitiveTypeCS returns [EObject current=null] : iv_rulePrimitiveTypeCS= rulePrimitiveTypeCS EOF ;
    public final EObject entryRulePrimitiveTypeCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimitiveTypeCS = null;


        try {
            // InternalQVTimperative.g:7608:56: (iv_rulePrimitiveTypeCS= rulePrimitiveTypeCS EOF )
            // InternalQVTimperative.g:7609:2: iv_rulePrimitiveTypeCS= rulePrimitiveTypeCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimitiveTypeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrimitiveTypeCS=rulePrimitiveTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimitiveTypeCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimitiveTypeCS"


    // $ANTLR start "rulePrimitiveTypeCS"
    // InternalQVTimperative.g:7615:1: rulePrimitiveTypeCS returns [EObject current=null] : ( (lv_name_0_0= rulePrimitiveTypeIdentifier ) ) ;
    public final EObject rulePrimitiveTypeCS() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:7621:2: ( ( (lv_name_0_0= rulePrimitiveTypeIdentifier ) ) )
            // InternalQVTimperative.g:7622:2: ( (lv_name_0_0= rulePrimitiveTypeIdentifier ) )
            {
            // InternalQVTimperative.g:7622:2: ( (lv_name_0_0= rulePrimitiveTypeIdentifier ) )
            // InternalQVTimperative.g:7623:3: (lv_name_0_0= rulePrimitiveTypeIdentifier )
            {
            // InternalQVTimperative.g:7623:3: (lv_name_0_0= rulePrimitiveTypeIdentifier )
            // InternalQVTimperative.g:7624:4: lv_name_0_0= rulePrimitiveTypeIdentifier
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getPrimitiveTypeCSAccess().getNamePrimitiveTypeIdentifierParserRuleCall_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_0_0=rulePrimitiveTypeIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getPrimitiveTypeCSRule());
              				}
              				set(
              					current,
              					"name",
              					lv_name_0_0,
              					"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PrimitiveTypeIdentifier");
              				afterParserOrEnumRuleCall();

            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimitiveTypeCS"


    // $ANTLR start "entryRuleCollectionTypeIdentifier"
    // InternalQVTimperative.g:7644:1: entryRuleCollectionTypeIdentifier returns [String current=null] : iv_ruleCollectionTypeIdentifier= ruleCollectionTypeIdentifier EOF ;
    public final String entryRuleCollectionTypeIdentifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleCollectionTypeIdentifier = null;


        try {
            // InternalQVTimperative.g:7644:64: (iv_ruleCollectionTypeIdentifier= ruleCollectionTypeIdentifier EOF )
            // InternalQVTimperative.g:7645:2: iv_ruleCollectionTypeIdentifier= ruleCollectionTypeIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCollectionTypeIdentifierRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCollectionTypeIdentifier=ruleCollectionTypeIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCollectionTypeIdentifier.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCollectionTypeIdentifier"


    // $ANTLR start "ruleCollectionTypeIdentifier"
    // InternalQVTimperative.g:7651:1: ruleCollectionTypeIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'Set' | kw= 'Bag' | kw= 'Sequence' | kw= 'Collection' | kw= 'OrderedSet' ) ;
    public final AntlrDatatypeRuleToken ruleCollectionTypeIdentifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalQVTimperative.g:7657:2: ( (kw= 'Set' | kw= 'Bag' | kw= 'Sequence' | kw= 'Collection' | kw= 'OrderedSet' ) )
            // InternalQVTimperative.g:7658:2: (kw= 'Set' | kw= 'Bag' | kw= 'Sequence' | kw= 'Collection' | kw= 'OrderedSet' )
            {
            // InternalQVTimperative.g:7658:2: (kw= 'Set' | kw= 'Bag' | kw= 'Sequence' | kw= 'Collection' | kw= 'OrderedSet' )
            int alt180=5;
            switch ( input.LA(1) ) {
            case 137:
                {
                alt180=1;
                }
                break;
            case 138:
                {
                alt180=2;
                }
                break;
            case 139:
                {
                alt180=3;
                }
                break;
            case 140:
                {
                alt180=4;
                }
                break;
            case 141:
                {
                alt180=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 180, 0, input);

                throw nvae;
            }

            switch (alt180) {
                case 1 :
                    // InternalQVTimperative.g:7659:3: kw= 'Set'
                    {
                    kw=(Token)match(input,137,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCollectionTypeIdentifierAccess().getSetKeyword_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:7665:3: kw= 'Bag'
                    {
                    kw=(Token)match(input,138,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCollectionTypeIdentifierAccess().getBagKeyword_1());

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:7671:3: kw= 'Sequence'
                    {
                    kw=(Token)match(input,139,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCollectionTypeIdentifierAccess().getSequenceKeyword_2());

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:7677:3: kw= 'Collection'
                    {
                    kw=(Token)match(input,140,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCollectionTypeIdentifierAccess().getCollectionKeyword_3());

                    }

                    }
                    break;
                case 5 :
                    // InternalQVTimperative.g:7683:3: kw= 'OrderedSet'
                    {
                    kw=(Token)match(input,141,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCollectionTypeIdentifierAccess().getOrderedSetKeyword_4());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCollectionTypeIdentifier"


    // $ANTLR start "entryRuleCollectionTypeCS"
    // InternalQVTimperative.g:7692:1: entryRuleCollectionTypeCS returns [EObject current=null] : iv_ruleCollectionTypeCS= ruleCollectionTypeCS EOF ;
    public final EObject entryRuleCollectionTypeCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCollectionTypeCS = null;


        try {
            // InternalQVTimperative.g:7692:57: (iv_ruleCollectionTypeCS= ruleCollectionTypeCS EOF )
            // InternalQVTimperative.g:7693:2: iv_ruleCollectionTypeCS= ruleCollectionTypeCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCollectionTypeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCollectionTypeCS=ruleCollectionTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCollectionTypeCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCollectionTypeCS"


    // $ANTLR start "ruleCollectionTypeCS"
    // InternalQVTimperative.g:7699:1: ruleCollectionTypeCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleCollectionTypeIdentifier ) ) (otherlv_1= '(' ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) ) ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )? otherlv_4= ')' )? ) ;
    public final EObject ruleCollectionTypeCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedType_2_0 = null;

        EObject lv_ownedCollectionMultiplicity_3_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:7705:2: ( ( ( (lv_name_0_0= ruleCollectionTypeIdentifier ) ) (otherlv_1= '(' ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) ) ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )? otherlv_4= ')' )? ) )
            // InternalQVTimperative.g:7706:2: ( ( (lv_name_0_0= ruleCollectionTypeIdentifier ) ) (otherlv_1= '(' ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) ) ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )? otherlv_4= ')' )? )
            {
            // InternalQVTimperative.g:7706:2: ( ( (lv_name_0_0= ruleCollectionTypeIdentifier ) ) (otherlv_1= '(' ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) ) ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )? otherlv_4= ')' )? )
            // InternalQVTimperative.g:7707:3: ( (lv_name_0_0= ruleCollectionTypeIdentifier ) ) (otherlv_1= '(' ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) ) ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )? otherlv_4= ')' )?
            {
            // InternalQVTimperative.g:7707:3: ( (lv_name_0_0= ruleCollectionTypeIdentifier ) )
            // InternalQVTimperative.g:7708:4: (lv_name_0_0= ruleCollectionTypeIdentifier )
            {
            // InternalQVTimperative.g:7708:4: (lv_name_0_0= ruleCollectionTypeIdentifier )
            // InternalQVTimperative.g:7709:5: lv_name_0_0= ruleCollectionTypeIdentifier
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCollectionTypeCSAccess().getNameCollectionTypeIdentifierParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_120);
            lv_name_0_0=ruleCollectionTypeIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCollectionTypeCSRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CollectionTypeIdentifier");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:7726:3: (otherlv_1= '(' ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) ) ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )? otherlv_4= ')' )?
            int alt182=2;
            int LA182_0 = input.LA(1);

            if ( (LA182_0==56) ) {
                alt182=1;
            }
            switch (alt182) {
                case 1 :
                    // InternalQVTimperative.g:7727:4: otherlv_1= '(' ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) ) ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )? otherlv_4= ')'
                    {
                    otherlv_1=(Token)match(input,56,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getCollectionTypeCSAccess().getLeftParenthesisKeyword_1_0());

                    }
                    // InternalQVTimperative.g:7731:4: ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) )
                    // InternalQVTimperative.g:7732:5: (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS )
                    {
                    // InternalQVTimperative.g:7732:5: (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS )
                    // InternalQVTimperative.g:7733:6: lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCollectionTypeCSAccess().getOwnedTypeTypeExpWithoutMultiplicityCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_121);
                    lv_ownedType_2_0=ruleTypeExpWithoutMultiplicityCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCollectionTypeCSRule());
                      						}
                      						set(
                      							current,
                      							"ownedType",
                      							lv_ownedType_2_0,
                      							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpWithoutMultiplicityCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:7750:4: ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )?
                    int alt181=2;
                    int LA181_0 = input.LA(1);

                    if ( (LA181_0==152) ) {
                        alt181=1;
                    }
                    switch (alt181) {
                        case 1 :
                            // InternalQVTimperative.g:7751:5: (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS )
                            {
                            // InternalQVTimperative.g:7751:5: (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS )
                            // InternalQVTimperative.g:7752:6: lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getCollectionTypeCSAccess().getOwnedCollectionMultiplicityMultiplicityCSParserRuleCall_1_2_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_122);
                            lv_ownedCollectionMultiplicity_3_0=ruleMultiplicityCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getCollectionTypeCSRule());
                              						}
                              						set(
                              							current,
                              							"ownedCollectionMultiplicity",
                              							lv_ownedCollectionMultiplicity_3_0,
                              							"org.eclipse.ocl.xtext.base.Base.MultiplicityCS");
                              						afterParserOrEnumRuleCall();

                            }

                            }


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getCollectionTypeCSAccess().getRightParenthesisKeyword_1_3());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCollectionTypeCS"


    // $ANTLR start "entryRuleMapTypeCS"
    // InternalQVTimperative.g:7778:1: entryRuleMapTypeCS returns [EObject current=null] : iv_ruleMapTypeCS= ruleMapTypeCS EOF ;
    public final EObject entryRuleMapTypeCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapTypeCS = null;


        try {
            // InternalQVTimperative.g:7778:50: (iv_ruleMapTypeCS= ruleMapTypeCS EOF )
            // InternalQVTimperative.g:7779:2: iv_ruleMapTypeCS= ruleMapTypeCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapTypeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMapTypeCS=ruleMapTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapTypeCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapTypeCS"


    // $ANTLR start "ruleMapTypeCS"
    // InternalQVTimperative.g:7785:1: ruleMapTypeCS returns [EObject current=null] : ( ( (lv_name_0_0= 'Map' ) ) (otherlv_1= '(' ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) ) otherlv_3= ',' ( (lv_ownedValueType_4_0= ruleTypeExpCS ) ) otherlv_5= ')' )? ) ;
    public final EObject ruleMapTypeCS() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_ownedKeyType_2_0 = null;

        EObject lv_ownedValueType_4_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:7791:2: ( ( ( (lv_name_0_0= 'Map' ) ) (otherlv_1= '(' ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) ) otherlv_3= ',' ( (lv_ownedValueType_4_0= ruleTypeExpCS ) ) otherlv_5= ')' )? ) )
            // InternalQVTimperative.g:7792:2: ( ( (lv_name_0_0= 'Map' ) ) (otherlv_1= '(' ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) ) otherlv_3= ',' ( (lv_ownedValueType_4_0= ruleTypeExpCS ) ) otherlv_5= ')' )? )
            {
            // InternalQVTimperative.g:7792:2: ( ( (lv_name_0_0= 'Map' ) ) (otherlv_1= '(' ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) ) otherlv_3= ',' ( (lv_ownedValueType_4_0= ruleTypeExpCS ) ) otherlv_5= ')' )? )
            // InternalQVTimperative.g:7793:3: ( (lv_name_0_0= 'Map' ) ) (otherlv_1= '(' ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) ) otherlv_3= ',' ( (lv_ownedValueType_4_0= ruleTypeExpCS ) ) otherlv_5= ')' )?
            {
            // InternalQVTimperative.g:7793:3: ( (lv_name_0_0= 'Map' ) )
            // InternalQVTimperative.g:7794:4: (lv_name_0_0= 'Map' )
            {
            // InternalQVTimperative.g:7794:4: (lv_name_0_0= 'Map' )
            // InternalQVTimperative.g:7795:5: lv_name_0_0= 'Map'
            {
            lv_name_0_0=(Token)match(input,127,FollowSets000.FOLLOW_120); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getMapTypeCSAccess().getNameMapKeyword_0_0());

            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getMapTypeCSRule());
              					}
              					setWithLastConsumed(current, "name", lv_name_0_0, "Map");

            }

            }


            }

            // InternalQVTimperative.g:7807:3: (otherlv_1= '(' ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) ) otherlv_3= ',' ( (lv_ownedValueType_4_0= ruleTypeExpCS ) ) otherlv_5= ')' )?
            int alt183=2;
            int LA183_0 = input.LA(1);

            if ( (LA183_0==56) ) {
                alt183=1;
            }
            switch (alt183) {
                case 1 :
                    // InternalQVTimperative.g:7808:4: otherlv_1= '(' ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) ) otherlv_3= ',' ( (lv_ownedValueType_4_0= ruleTypeExpCS ) ) otherlv_5= ')'
                    {
                    otherlv_1=(Token)match(input,56,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getMapTypeCSAccess().getLeftParenthesisKeyword_1_0());

                    }
                    // InternalQVTimperative.g:7812:4: ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:7813:5: (lv_ownedKeyType_2_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:7813:5: (lv_ownedKeyType_2_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:7814:6: lv_ownedKeyType_2_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMapTypeCSAccess().getOwnedKeyTypeTypeExpCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_123);
                    lv_ownedKeyType_2_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMapTypeCSRule());
                      						}
                      						set(
                      							current,
                      							"ownedKeyType",
                      							lv_ownedKeyType_2_0,
                      							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getMapTypeCSAccess().getCommaKeyword_1_2());

                    }
                    // InternalQVTimperative.g:7835:4: ( (lv_ownedValueType_4_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:7836:5: (lv_ownedValueType_4_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:7836:5: (lv_ownedValueType_4_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:7837:6: lv_ownedValueType_4_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMapTypeCSAccess().getOwnedValueTypeTypeExpCSParserRuleCall_1_3_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_122);
                    lv_ownedValueType_4_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMapTypeCSRule());
                      						}
                      						set(
                      							current,
                      							"ownedValueType",
                      							lv_ownedValueType_4_0,
                      							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    otherlv_5=(Token)match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getMapTypeCSAccess().getRightParenthesisKeyword_1_4());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapTypeCS"


    // $ANTLR start "entryRuleTupleTypeCS"
    // InternalQVTimperative.g:7863:1: entryRuleTupleTypeCS returns [EObject current=null] : iv_ruleTupleTypeCS= ruleTupleTypeCS EOF ;
    public final EObject entryRuleTupleTypeCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTupleTypeCS = null;


        try {
            // InternalQVTimperative.g:7863:52: (iv_ruleTupleTypeCS= ruleTupleTypeCS EOF )
            // InternalQVTimperative.g:7864:2: iv_ruleTupleTypeCS= ruleTupleTypeCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTupleTypeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTupleTypeCS=ruleTupleTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTupleTypeCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTupleTypeCS"


    // $ANTLR start "ruleTupleTypeCS"
    // InternalQVTimperative.g:7870:1: ruleTupleTypeCS returns [EObject current=null] : ( ( (lv_name_0_0= 'Tuple' ) ) (otherlv_1= '(' ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )? otherlv_5= ')' )? ) ;
    public final EObject ruleTupleTypeCS() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_ownedParts_2_0 = null;

        EObject lv_ownedParts_4_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:7876:2: ( ( ( (lv_name_0_0= 'Tuple' ) ) (otherlv_1= '(' ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )? otherlv_5= ')' )? ) )
            // InternalQVTimperative.g:7877:2: ( ( (lv_name_0_0= 'Tuple' ) ) (otherlv_1= '(' ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )? otherlv_5= ')' )? )
            {
            // InternalQVTimperative.g:7877:2: ( ( (lv_name_0_0= 'Tuple' ) ) (otherlv_1= '(' ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )? otherlv_5= ')' )? )
            // InternalQVTimperative.g:7878:3: ( (lv_name_0_0= 'Tuple' ) ) (otherlv_1= '(' ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )? otherlv_5= ')' )?
            {
            // InternalQVTimperative.g:7878:3: ( (lv_name_0_0= 'Tuple' ) )
            // InternalQVTimperative.g:7879:4: (lv_name_0_0= 'Tuple' )
            {
            // InternalQVTimperative.g:7879:4: (lv_name_0_0= 'Tuple' )
            // InternalQVTimperative.g:7880:5: lv_name_0_0= 'Tuple'
            {
            lv_name_0_0=(Token)match(input,128,FollowSets000.FOLLOW_120); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getTupleTypeCSAccess().getNameTupleKeyword_0_0());

            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTupleTypeCSRule());
              					}
              					setWithLastConsumed(current, "name", lv_name_0_0, "Tuple");

            }

            }


            }

            // InternalQVTimperative.g:7892:3: (otherlv_1= '(' ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )? otherlv_5= ')' )?
            int alt186=2;
            int LA186_0 = input.LA(1);

            if ( (LA186_0==56) ) {
                alt186=1;
            }
            switch (alt186) {
                case 1 :
                    // InternalQVTimperative.g:7893:4: otherlv_1= '(' ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )? otherlv_5= ')'
                    {
                    otherlv_1=(Token)match(input,56,FollowSets000.FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getTupleTypeCSAccess().getLeftParenthesisKeyword_1_0());

                    }
                    // InternalQVTimperative.g:7897:4: ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )?
                    int alt185=2;
                    int LA185_0 = input.LA(1);

                    if ( ((LA185_0>=RULE_SIMPLE_ID && LA185_0<=RULE_ESCAPED_ID)||LA185_0==17||LA185_0==19||(LA185_0>=22 && LA185_0<=23)||(LA185_0>=25 && LA185_0<=26)||(LA185_0>=29 && LA185_0<=34)||LA185_0==39||(LA185_0>=43 && LA185_0<=48)||(LA185_0>=50 && LA185_0<=52)||(LA185_0>=54 && LA185_0<=55)||(LA185_0>=58 && LA185_0<=60)||(LA185_0>=62 && LA185_0<=70)||LA185_0==72||LA185_0==74||LA185_0==76||LA185_0==79||LA185_0==81||LA185_0==83||(LA185_0>=85 && LA185_0<=89)||(LA185_0>=91 && LA185_0<=96)||LA185_0==98||LA185_0==100||(LA185_0>=102 && LA185_0<=105)) ) {
                        alt185=1;
                    }
                    switch (alt185) {
                        case 1 :
                            // InternalQVTimperative.g:7898:5: ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )*
                            {
                            // InternalQVTimperative.g:7898:5: ( (lv_ownedParts_2_0= ruleTuplePartCS ) )
                            // InternalQVTimperative.g:7899:6: (lv_ownedParts_2_0= ruleTuplePartCS )
                            {
                            // InternalQVTimperative.g:7899:6: (lv_ownedParts_2_0= ruleTuplePartCS )
                            // InternalQVTimperative.g:7900:7: lv_ownedParts_2_0= ruleTuplePartCS
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getTupleTypeCSAccess().getOwnedPartsTuplePartCSParserRuleCall_1_1_0_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_56);
                            lv_ownedParts_2_0=ruleTuplePartCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getTupleTypeCSRule());
                              							}
                              							add(
                              								current,
                              								"ownedParts",
                              								lv_ownedParts_2_0,
                              								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TuplePartCS");
                              							afterParserOrEnumRuleCall();

                            }

                            }


                            }

                            // InternalQVTimperative.g:7917:5: (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )*
                            loop184:
                            do {
                                int alt184=2;
                                int LA184_0 = input.LA(1);

                                if ( (LA184_0==18) ) {
                                    alt184=1;
                                }


                                switch (alt184) {
                            	case 1 :
                            	    // InternalQVTimperative.g:7918:6: otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) )
                            	    {
                            	    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_3, grammarAccess.getTupleTypeCSAccess().getCommaKeyword_1_1_1_0());

                            	    }
                            	    // InternalQVTimperative.g:7922:6: ( (lv_ownedParts_4_0= ruleTuplePartCS ) )
                            	    // InternalQVTimperative.g:7923:7: (lv_ownedParts_4_0= ruleTuplePartCS )
                            	    {
                            	    // InternalQVTimperative.g:7923:7: (lv_ownedParts_4_0= ruleTuplePartCS )
                            	    // InternalQVTimperative.g:7924:8: lv_ownedParts_4_0= ruleTuplePartCS
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getTupleTypeCSAccess().getOwnedPartsTuplePartCSParserRuleCall_1_1_1_1_0());

                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_56);
                            	    lv_ownedParts_4_0=ruleTuplePartCS();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getTupleTypeCSRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"ownedParts",
                            	      									lv_ownedParts_4_0,
                            	      									"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TuplePartCS");
                            	      								afterParserOrEnumRuleCall();

                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop184;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_5=(Token)match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getTupleTypeCSAccess().getRightParenthesisKeyword_1_2());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTupleTypeCS"


    // $ANTLR start "entryRuleTuplePartCS"
    // InternalQVTimperative.g:7952:1: entryRuleTuplePartCS returns [EObject current=null] : iv_ruleTuplePartCS= ruleTuplePartCS EOF ;
    public final EObject entryRuleTuplePartCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTuplePartCS = null;


        try {
            // InternalQVTimperative.g:7952:52: (iv_ruleTuplePartCS= ruleTuplePartCS EOF )
            // InternalQVTimperative.g:7953:2: iv_ruleTuplePartCS= ruleTuplePartCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTuplePartCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTuplePartCS=ruleTuplePartCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTuplePartCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTuplePartCS"


    // $ANTLR start "ruleTuplePartCS"
    // InternalQVTimperative.g:7959:1: ruleTuplePartCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) ) ;
    public final EObject ruleTuplePartCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedType_2_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:7965:2: ( ( ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) ) )
            // InternalQVTimperative.g:7966:2: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )
            {
            // InternalQVTimperative.g:7966:2: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )
            // InternalQVTimperative.g:7967:3: ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) )
            {
            // InternalQVTimperative.g:7967:3: ( (lv_name_0_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:7968:4: (lv_name_0_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:7968:4: (lv_name_0_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:7969:5: lv_name_0_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTuplePartCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_11);
            lv_name_0_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTuplePartCSRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_1=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTuplePartCSAccess().getColonKeyword_1());

            }
            // InternalQVTimperative.g:7990:3: ( (lv_ownedType_2_0= ruleTypeExpCS ) )
            // InternalQVTimperative.g:7991:4: (lv_ownedType_2_0= ruleTypeExpCS )
            {
            // InternalQVTimperative.g:7991:4: (lv_ownedType_2_0= ruleTypeExpCS )
            // InternalQVTimperative.g:7992:5: lv_ownedType_2_0= ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTuplePartCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedType_2_0=ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTuplePartCSRule());
              					}
              					set(
              						current,
              						"ownedType",
              						lv_ownedType_2_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTuplePartCS"


    // $ANTLR start "entryRuleCollectionLiteralExpCS"
    // InternalQVTimperative.g:8013:1: entryRuleCollectionLiteralExpCS returns [EObject current=null] : iv_ruleCollectionLiteralExpCS= ruleCollectionLiteralExpCS EOF ;
    public final EObject entryRuleCollectionLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCollectionLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:8013:63: (iv_ruleCollectionLiteralExpCS= ruleCollectionLiteralExpCS EOF )
            // InternalQVTimperative.g:8014:2: iv_ruleCollectionLiteralExpCS= ruleCollectionLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCollectionLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCollectionLiteralExpCS=ruleCollectionLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCollectionLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCollectionLiteralExpCS"


    // $ANTLR start "ruleCollectionLiteralExpCS"
    // InternalQVTimperative.g:8020:1: ruleCollectionLiteralExpCS returns [EObject current=null] : ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleCollectionLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_ownedType_0_0 = null;

        EObject lv_ownedParts_2_0 = null;

        EObject lv_ownedParts_4_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:8026:2: ( ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )* )? otherlv_5= '}' ) )
            // InternalQVTimperative.g:8027:2: ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )* )? otherlv_5= '}' )
            {
            // InternalQVTimperative.g:8027:2: ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )* )? otherlv_5= '}' )
            // InternalQVTimperative.g:8028:3: ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )* )? otherlv_5= '}'
            {
            // InternalQVTimperative.g:8028:3: ( (lv_ownedType_0_0= ruleCollectionTypeCS ) )
            // InternalQVTimperative.g:8029:4: (lv_ownedType_0_0= ruleCollectionTypeCS )
            {
            // InternalQVTimperative.g:8029:4: (lv_ownedType_0_0= ruleCollectionTypeCS )
            // InternalQVTimperative.g:8030:5: lv_ownedType_0_0= ruleCollectionTypeCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedTypeCollectionTypeCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_41);
            lv_ownedType_0_0=ruleCollectionTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCollectionLiteralExpCSRule());
              					}
              					set(
              						current,
              						"ownedType",
              						lv_ownedType_0_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CollectionTypeCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_1=(Token)match(input,35,FollowSets000.FOLLOW_124); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getCollectionLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());

            }
            // InternalQVTimperative.g:8051:3: ( ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )* )?
            int alt188=2;
            int LA188_0 = input.LA(1);

            if ( (LA188_0==RULE_SINGLE_QUOTED_STRING||(LA188_0>=RULE_INT && LA188_0<=RULE_ESCAPED_ID)||LA188_0==17||LA188_0==19||(LA188_0>=22 && LA188_0<=26)||(LA188_0>=29 && LA188_0<=34)||LA188_0==39||(LA188_0>=42 && LA188_0<=48)||(LA188_0>=50 && LA188_0<=52)||(LA188_0>=54 && LA188_0<=56)||(LA188_0>=58 && LA188_0<=60)||(LA188_0>=62 && LA188_0<=70)||LA188_0==72||LA188_0==74||LA188_0==76||LA188_0==79||LA188_0==81||LA188_0==83||(LA188_0>=85 && LA188_0<=89)||(LA188_0>=91 && LA188_0<=96)||LA188_0==98||LA188_0==100||(LA188_0>=102 && LA188_0<=108)||(LA188_0>=127 && LA188_0<=141)||LA188_0==143||(LA188_0>=146 && LA188_0<=149)||LA188_0==155||(LA188_0>=160 && LA188_0<=161)) ) {
                alt188=1;
            }
            switch (alt188) {
                case 1 :
                    // InternalQVTimperative.g:8052:4: ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )*
                    {
                    // InternalQVTimperative.g:8052:4: ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) )
                    // InternalQVTimperative.g:8053:5: (lv_ownedParts_2_0= ruleCollectionLiteralPartCS )
                    {
                    // InternalQVTimperative.g:8053:5: (lv_ownedParts_2_0= ruleCollectionLiteralPartCS )
                    // InternalQVTimperative.g:8054:6: lv_ownedParts_2_0= ruleCollectionLiteralPartCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedPartsCollectionLiteralPartCSParserRuleCall_2_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_111);
                    lv_ownedParts_2_0=ruleCollectionLiteralPartCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCollectionLiteralExpCSRule());
                      						}
                      						add(
                      							current,
                      							"ownedParts",
                      							lv_ownedParts_2_0,
                      							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CollectionLiteralPartCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:8071:4: (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )*
                    loop187:
                    do {
                        int alt187=2;
                        int LA187_0 = input.LA(1);

                        if ( (LA187_0==18) ) {
                            alt187=1;
                        }


                        switch (alt187) {
                    	case 1 :
                    	    // InternalQVTimperative.g:8072:5: otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) )
                    	    {
                    	    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_125); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getCollectionLiteralExpCSAccess().getCommaKeyword_2_1_0());

                    	    }
                    	    // InternalQVTimperative.g:8076:5: ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) )
                    	    // InternalQVTimperative.g:8077:6: (lv_ownedParts_4_0= ruleCollectionLiteralPartCS )
                    	    {
                    	    // InternalQVTimperative.g:8077:6: (lv_ownedParts_4_0= ruleCollectionLiteralPartCS )
                    	    // InternalQVTimperative.g:8078:7: lv_ownedParts_4_0= ruleCollectionLiteralPartCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedPartsCollectionLiteralPartCSParserRuleCall_2_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_111);
                    	    lv_ownedParts_4_0=ruleCollectionLiteralPartCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getCollectionLiteralExpCSRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedParts",
                    	      								lv_ownedParts_4_0,
                    	      								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CollectionLiteralPartCS");
                    	      							afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop187;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getCollectionLiteralExpCSAccess().getRightCurlyBracketKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCollectionLiteralExpCS"


    // $ANTLR start "entryRuleCollectionLiteralPartCS"
    // InternalQVTimperative.g:8105:1: entryRuleCollectionLiteralPartCS returns [EObject current=null] : iv_ruleCollectionLiteralPartCS= ruleCollectionLiteralPartCS EOF ;
    public final EObject entryRuleCollectionLiteralPartCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCollectionLiteralPartCS = null;


        try {
            // InternalQVTimperative.g:8105:64: (iv_ruleCollectionLiteralPartCS= ruleCollectionLiteralPartCS EOF )
            // InternalQVTimperative.g:8106:2: iv_ruleCollectionLiteralPartCS= ruleCollectionLiteralPartCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCollectionLiteralPartCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCollectionLiteralPartCS=ruleCollectionLiteralPartCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCollectionLiteralPartCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCollectionLiteralPartCS"


    // $ANTLR start "ruleCollectionLiteralPartCS"
    // InternalQVTimperative.g:8112:1: ruleCollectionLiteralPartCS returns [EObject current=null] : ( ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )? ) | ( (lv_ownedExpression_3_0= rulePatternExpCS ) ) ) ;
    public final EObject ruleCollectionLiteralPartCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedExpression_0_0 = null;

        EObject lv_ownedLastExpression_2_0 = null;

        EObject lv_ownedExpression_3_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:8118:2: ( ( ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )? ) | ( (lv_ownedExpression_3_0= rulePatternExpCS ) ) ) )
            // InternalQVTimperative.g:8119:2: ( ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )? ) | ( (lv_ownedExpression_3_0= rulePatternExpCS ) ) )
            {
            // InternalQVTimperative.g:8119:2: ( ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )? ) | ( (lv_ownedExpression_3_0= rulePatternExpCS ) ) )
            int alt190=2;
            alt190 = dfa190.predict(input);
            switch (alt190) {
                case 1 :
                    // InternalQVTimperative.g:8120:3: ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )? )
                    {
                    // InternalQVTimperative.g:8120:3: ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )? )
                    // InternalQVTimperative.g:8121:4: ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )?
                    {
                    // InternalQVTimperative.g:8121:4: ( (lv_ownedExpression_0_0= ruleExpCS ) )
                    // InternalQVTimperative.g:8122:5: (lv_ownedExpression_0_0= ruleExpCS )
                    {
                    // InternalQVTimperative.g:8122:5: (lv_ownedExpression_0_0= ruleExpCS )
                    // InternalQVTimperative.g:8123:6: lv_ownedExpression_0_0= ruleExpCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedExpressionExpCSParserRuleCall_0_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_126);
                    lv_ownedExpression_0_0=ruleExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCollectionLiteralPartCSRule());
                      						}
                      						set(
                      							current,
                      							"ownedExpression",
                      							lv_ownedExpression_0_0,
                      							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:8140:4: (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )?
                    int alt189=2;
                    int LA189_0 = input.LA(1);

                    if ( (LA189_0==27) ) {
                        alt189=1;
                    }
                    switch (alt189) {
                        case 1 :
                            // InternalQVTimperative.g:8141:5: otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) )
                            {
                            otherlv_1=(Token)match(input,27,FollowSets000.FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_1, grammarAccess.getCollectionLiteralPartCSAccess().getFullStopFullStopKeyword_0_1_0());

                            }
                            // InternalQVTimperative.g:8145:5: ( (lv_ownedLastExpression_2_0= ruleExpCS ) )
                            // InternalQVTimperative.g:8146:6: (lv_ownedLastExpression_2_0= ruleExpCS )
                            {
                            // InternalQVTimperative.g:8146:6: (lv_ownedLastExpression_2_0= ruleExpCS )
                            // InternalQVTimperative.g:8147:7: lv_ownedLastExpression_2_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedLastExpressionExpCSParserRuleCall_0_1_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedLastExpression_2_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getCollectionLiteralPartCSRule());
                              							}
                              							set(
                              								current,
                              								"ownedLastExpression",
                              								lv_ownedLastExpression_2_0,
                              								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              							afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:8167:3: ( (lv_ownedExpression_3_0= rulePatternExpCS ) )
                    {
                    // InternalQVTimperative.g:8167:3: ( (lv_ownedExpression_3_0= rulePatternExpCS ) )
                    // InternalQVTimperative.g:8168:4: (lv_ownedExpression_3_0= rulePatternExpCS )
                    {
                    // InternalQVTimperative.g:8168:4: (lv_ownedExpression_3_0= rulePatternExpCS )
                    // InternalQVTimperative.g:8169:5: lv_ownedExpression_3_0= rulePatternExpCS
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedExpressionPatternExpCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedExpression_3_0=rulePatternExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getCollectionLiteralPartCSRule());
                      					}
                      					set(
                      						current,
                      						"ownedExpression",
                      						lv_ownedExpression_3_0,
                      						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PatternExpCS");
                      					afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCollectionLiteralPartCS"


    // $ANTLR start "entryRuleCollectionPatternCS"
    // InternalQVTimperative.g:8190:1: entryRuleCollectionPatternCS returns [EObject current=null] : iv_ruleCollectionPatternCS= ruleCollectionPatternCS EOF ;
    public final EObject entryRuleCollectionPatternCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCollectionPatternCS = null;


        try {
            // InternalQVTimperative.g:8190:60: (iv_ruleCollectionPatternCS= ruleCollectionPatternCS EOF )
            // InternalQVTimperative.g:8191:2: iv_ruleCollectionPatternCS= ruleCollectionPatternCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCollectionPatternCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCollectionPatternCS=ruleCollectionPatternCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCollectionPatternCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCollectionPatternCS"


    // $ANTLR start "ruleCollectionPatternCS"
    // InternalQVTimperative.g:8197:1: ruleCollectionPatternCS returns [EObject current=null] : ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= rulePatternExpCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )* (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) ) )? otherlv_7= '}' ) ;
    public final EObject ruleCollectionPatternCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_ownedType_0_0 = null;

        EObject lv_ownedParts_2_0 = null;

        EObject lv_ownedParts_4_0 = null;

        AntlrDatatypeRuleToken lv_restVariableName_6_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:8203:2: ( ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= rulePatternExpCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )* (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) ) )? otherlv_7= '}' ) )
            // InternalQVTimperative.g:8204:2: ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= rulePatternExpCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )* (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) ) )? otherlv_7= '}' )
            {
            // InternalQVTimperative.g:8204:2: ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= rulePatternExpCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )* (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) ) )? otherlv_7= '}' )
            // InternalQVTimperative.g:8205:3: ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= rulePatternExpCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )* (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) ) )? otherlv_7= '}'
            {
            // InternalQVTimperative.g:8205:3: ( (lv_ownedType_0_0= ruleCollectionTypeCS ) )
            // InternalQVTimperative.g:8206:4: (lv_ownedType_0_0= ruleCollectionTypeCS )
            {
            // InternalQVTimperative.g:8206:4: (lv_ownedType_0_0= ruleCollectionTypeCS )
            // InternalQVTimperative.g:8207:5: lv_ownedType_0_0= ruleCollectionTypeCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCollectionPatternCSAccess().getOwnedTypeCollectionTypeCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_41);
            lv_ownedType_0_0=ruleCollectionTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCollectionPatternCSRule());
              					}
              					set(
              						current,
              						"ownedType",
              						lv_ownedType_0_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CollectionTypeCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_1=(Token)match(input,35,FollowSets000.FOLLOW_124); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getCollectionPatternCSAccess().getLeftCurlyBracketKeyword_1());

            }
            // InternalQVTimperative.g:8228:3: ( ( (lv_ownedParts_2_0= rulePatternExpCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )* (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) ) )?
            int alt192=2;
            int LA192_0 = input.LA(1);

            if ( ((LA192_0>=RULE_SIMPLE_ID && LA192_0<=RULE_ESCAPED_ID)||LA192_0==17||LA192_0==19||(LA192_0>=22 && LA192_0<=26)||(LA192_0>=29 && LA192_0<=34)||LA192_0==39||(LA192_0>=43 && LA192_0<=48)||(LA192_0>=50 && LA192_0<=52)||(LA192_0>=54 && LA192_0<=55)||(LA192_0>=58 && LA192_0<=60)||(LA192_0>=62 && LA192_0<=70)||LA192_0==72||LA192_0==74||LA192_0==76||LA192_0==79||LA192_0==81||LA192_0==83||(LA192_0>=85 && LA192_0<=89)||(LA192_0>=91 && LA192_0<=96)||LA192_0==98||LA192_0==100||(LA192_0>=102 && LA192_0<=105)) ) {
                alt192=1;
            }
            switch (alt192) {
                case 1 :
                    // InternalQVTimperative.g:8229:4: ( (lv_ownedParts_2_0= rulePatternExpCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )* (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) )
                    {
                    // InternalQVTimperative.g:8229:4: ( (lv_ownedParts_2_0= rulePatternExpCS ) )
                    // InternalQVTimperative.g:8230:5: (lv_ownedParts_2_0= rulePatternExpCS )
                    {
                    // InternalQVTimperative.g:8230:5: (lv_ownedParts_2_0= rulePatternExpCS )
                    // InternalQVTimperative.g:8231:6: lv_ownedParts_2_0= rulePatternExpCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCollectionPatternCSAccess().getOwnedPartsPatternExpCSParserRuleCall_2_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_127);
                    lv_ownedParts_2_0=rulePatternExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCollectionPatternCSRule());
                      						}
                      						add(
                      							current,
                      							"ownedParts",
                      							lv_ownedParts_2_0,
                      							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PatternExpCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:8248:4: (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )*
                    loop191:
                    do {
                        int alt191=2;
                        int LA191_0 = input.LA(1);

                        if ( (LA191_0==18) ) {
                            alt191=1;
                        }


                        switch (alt191) {
                    	case 1 :
                    	    // InternalQVTimperative.g:8249:5: otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) )
                    	    {
                    	    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_125); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getCollectionPatternCSAccess().getCommaKeyword_2_1_0());

                    	    }
                    	    // InternalQVTimperative.g:8253:5: ( (lv_ownedParts_4_0= rulePatternExpCS ) )
                    	    // InternalQVTimperative.g:8254:6: (lv_ownedParts_4_0= rulePatternExpCS )
                    	    {
                    	    // InternalQVTimperative.g:8254:6: (lv_ownedParts_4_0= rulePatternExpCS )
                    	    // InternalQVTimperative.g:8255:7: lv_ownedParts_4_0= rulePatternExpCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getCollectionPatternCSAccess().getOwnedPartsPatternExpCSParserRuleCall_2_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_127);
                    	    lv_ownedParts_4_0=rulePatternExpCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getCollectionPatternCSRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedParts",
                    	      								lv_ownedParts_4_0,
                    	      								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PatternExpCS");
                    	      							afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop191;
                        }
                    } while (true);

                    // InternalQVTimperative.g:8273:4: (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) )
                    // InternalQVTimperative.g:8274:5: otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) )
                    {
                    otherlv_5=(Token)match(input,142,FollowSets000.FOLLOW_128); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getCollectionPatternCSAccess().getPlusSignPlusSignKeyword_2_2_0());

                    }
                    // InternalQVTimperative.g:8278:5: ( (lv_restVariableName_6_0= ruleIdentifier ) )
                    // InternalQVTimperative.g:8279:6: (lv_restVariableName_6_0= ruleIdentifier )
                    {
                    // InternalQVTimperative.g:8279:6: (lv_restVariableName_6_0= ruleIdentifier )
                    // InternalQVTimperative.g:8280:7: lv_restVariableName_6_0= ruleIdentifier
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getCollectionPatternCSAccess().getRestVariableNameIdentifierParserRuleCall_2_2_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_58);
                    lv_restVariableName_6_0=ruleIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getCollectionPatternCSRule());
                      							}
                      							set(
                      								current,
                      								"restVariableName",
                      								lv_restVariableName_6_0,
                      								"org.eclipse.ocl.xtext.base.Base.Identifier");
                      							afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getCollectionPatternCSAccess().getRightCurlyBracketKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCollectionPatternCS"


    // $ANTLR start "entryRuleShadowPartCS"
    // InternalQVTimperative.g:8307:1: entryRuleShadowPartCS returns [EObject current=null] : iv_ruleShadowPartCS= ruleShadowPartCS EOF ;
    public final EObject entryRuleShadowPartCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShadowPartCS = null;


        try {
            // InternalQVTimperative.g:8307:53: (iv_ruleShadowPartCS= ruleShadowPartCS EOF )
            // InternalQVTimperative.g:8308:2: iv_ruleShadowPartCS= ruleShadowPartCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShadowPartCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleShadowPartCS=ruleShadowPartCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShadowPartCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShadowPartCS"


    // $ANTLR start "ruleShadowPartCS"
    // InternalQVTimperative.g:8314:1: ruleShadowPartCS returns [EObject current=null] : ( ( ( ( ruleUnrestrictedName ) ) otherlv_1= '=' ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) ) ) | ( (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS ) ) ) ;
    public final EObject ruleShadowPartCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedInitExpression_2_1 = null;

        EObject lv_ownedInitExpression_2_2 = null;

        EObject lv_ownedInitExpression_3_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:8320:2: ( ( ( ( ( ruleUnrestrictedName ) ) otherlv_1= '=' ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) ) ) | ( (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS ) ) ) )
            // InternalQVTimperative.g:8321:2: ( ( ( ( ruleUnrestrictedName ) ) otherlv_1= '=' ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) ) ) | ( (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS ) ) )
            {
            // InternalQVTimperative.g:8321:2: ( ( ( ( ruleUnrestrictedName ) ) otherlv_1= '=' ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) ) ) | ( (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS ) ) )
            int alt194=2;
            int LA194_0 = input.LA(1);

            if ( ((LA194_0>=RULE_SIMPLE_ID && LA194_0<=RULE_ESCAPED_ID)||LA194_0==17||LA194_0==19||(LA194_0>=22 && LA194_0<=23)||(LA194_0>=25 && LA194_0<=26)||(LA194_0>=29 && LA194_0<=34)||LA194_0==39||(LA194_0>=43 && LA194_0<=48)||(LA194_0>=50 && LA194_0<=52)||(LA194_0>=54 && LA194_0<=55)||(LA194_0>=58 && LA194_0<=60)||(LA194_0>=62 && LA194_0<=70)||LA194_0==72||LA194_0==74||LA194_0==76||LA194_0==79||LA194_0==81||LA194_0==83||(LA194_0>=85 && LA194_0<=89)||(LA194_0>=91 && LA194_0<=96)||LA194_0==98||LA194_0==100||(LA194_0>=102 && LA194_0<=105)) ) {
                alt194=1;
            }
            else if ( (LA194_0==RULE_SINGLE_QUOTED_STRING) ) {
                alt194=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 194, 0, input);

                throw nvae;
            }
            switch (alt194) {
                case 1 :
                    // InternalQVTimperative.g:8322:3: ( ( ( ruleUnrestrictedName ) ) otherlv_1= '=' ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) ) )
                    {
                    // InternalQVTimperative.g:8322:3: ( ( ( ruleUnrestrictedName ) ) otherlv_1= '=' ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) ) )
                    // InternalQVTimperative.g:8323:4: ( ( ruleUnrestrictedName ) ) otherlv_1= '=' ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) )
                    {
                    // InternalQVTimperative.g:8323:4: ( ( ruleUnrestrictedName ) )
                    // InternalQVTimperative.g:8324:5: ( ruleUnrestrictedName )
                    {
                    // InternalQVTimperative.g:8324:5: ( ruleUnrestrictedName )
                    // InternalQVTimperative.g:8325:6: ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      						/* */

                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getShadowPartCSRule());
                      						}

                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getShadowPartCSAccess().getReferredPropertyPropertyCrossReference_0_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_129);
                    ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    otherlv_1=(Token)match(input,53,FollowSets000.FOLLOW_125); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getShadowPartCSAccess().getEqualsSignKeyword_0_1());

                    }
                    // InternalQVTimperative.g:8346:4: ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) )
                    // InternalQVTimperative.g:8347:5: ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) )
                    {
                    // InternalQVTimperative.g:8347:5: ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) )
                    // InternalQVTimperative.g:8348:6: (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS )
                    {
                    // InternalQVTimperative.g:8348:6: (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS )
                    int alt193=2;
                    alt193 = dfa193.predict(input);
                    switch (alt193) {
                        case 1 :
                            // InternalQVTimperative.g:8349:7: lv_ownedInitExpression_2_1= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getShadowPartCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_2_0_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedInitExpression_2_1=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getShadowPartCSRule());
                              							}
                              							set(
                              								current,
                              								"ownedInitExpression",
                              								lv_ownedInitExpression_2_1,
                              								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              							afterParserOrEnumRuleCall();

                            }

                            }
                            break;
                        case 2 :
                            // InternalQVTimperative.g:8365:7: lv_ownedInitExpression_2_2= rulePatternExpCS
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getShadowPartCSAccess().getOwnedInitExpressionPatternExpCSParserRuleCall_0_2_0_1());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedInitExpression_2_2=rulePatternExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getShadowPartCSRule());
                              							}
                              							set(
                              								current,
                              								"ownedInitExpression",
                              								lv_ownedInitExpression_2_2,
                              								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PatternExpCS");
                              							afterParserOrEnumRuleCall();

                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:8385:3: ( (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS ) )
                    {
                    // InternalQVTimperative.g:8385:3: ( (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS ) )
                    // InternalQVTimperative.g:8386:4: (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS )
                    {
                    // InternalQVTimperative.g:8386:4: (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS )
                    // InternalQVTimperative.g:8387:5: lv_ownedInitExpression_3_0= ruleStringLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getShadowPartCSAccess().getOwnedInitExpressionStringLiteralExpCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedInitExpression_3_0=ruleStringLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getShadowPartCSRule());
                      					}
                      					set(
                      						current,
                      						"ownedInitExpression",
                      						lv_ownedInitExpression_3_0,
                      						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.StringLiteralExpCS");
                      					afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShadowPartCS"


    // $ANTLR start "entryRulePatternExpCS"
    // InternalQVTimperative.g:8408:1: entryRulePatternExpCS returns [EObject current=null] : iv_rulePatternExpCS= rulePatternExpCS EOF ;
    public final EObject entryRulePatternExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePatternExpCS = null;


        try {
            // InternalQVTimperative.g:8408:53: (iv_rulePatternExpCS= rulePatternExpCS EOF )
            // InternalQVTimperative.g:8409:2: iv_rulePatternExpCS= rulePatternExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPatternExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePatternExpCS=rulePatternExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePatternExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePatternExpCS"


    // $ANTLR start "rulePatternExpCS"
    // InternalQVTimperative.g:8415:1: rulePatternExpCS returns [EObject current=null] : ( ( (lv_patternVariableName_0_0= ruleUnrestrictedName ) )? otherlv_1= ':' ( (lv_ownedPatternType_2_0= ruleTypeExpCS ) ) ) ;
    public final EObject rulePatternExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_patternVariableName_0_0 = null;

        EObject lv_ownedPatternType_2_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:8421:2: ( ( ( (lv_patternVariableName_0_0= ruleUnrestrictedName ) )? otherlv_1= ':' ( (lv_ownedPatternType_2_0= ruleTypeExpCS ) ) ) )
            // InternalQVTimperative.g:8422:2: ( ( (lv_patternVariableName_0_0= ruleUnrestrictedName ) )? otherlv_1= ':' ( (lv_ownedPatternType_2_0= ruleTypeExpCS ) ) )
            {
            // InternalQVTimperative.g:8422:2: ( ( (lv_patternVariableName_0_0= ruleUnrestrictedName ) )? otherlv_1= ':' ( (lv_ownedPatternType_2_0= ruleTypeExpCS ) ) )
            // InternalQVTimperative.g:8423:3: ( (lv_patternVariableName_0_0= ruleUnrestrictedName ) )? otherlv_1= ':' ( (lv_ownedPatternType_2_0= ruleTypeExpCS ) )
            {
            // InternalQVTimperative.g:8423:3: ( (lv_patternVariableName_0_0= ruleUnrestrictedName ) )?
            int alt195=2;
            int LA195_0 = input.LA(1);

            if ( ((LA195_0>=RULE_SIMPLE_ID && LA195_0<=RULE_ESCAPED_ID)||LA195_0==17||LA195_0==19||(LA195_0>=22 && LA195_0<=23)||(LA195_0>=25 && LA195_0<=26)||(LA195_0>=29 && LA195_0<=34)||LA195_0==39||(LA195_0>=43 && LA195_0<=48)||(LA195_0>=50 && LA195_0<=52)||(LA195_0>=54 && LA195_0<=55)||(LA195_0>=58 && LA195_0<=60)||(LA195_0>=62 && LA195_0<=70)||LA195_0==72||LA195_0==74||LA195_0==76||LA195_0==79||LA195_0==81||LA195_0==83||(LA195_0>=85 && LA195_0<=89)||(LA195_0>=91 && LA195_0<=96)||LA195_0==98||LA195_0==100||(LA195_0>=102 && LA195_0<=105)) ) {
                alt195=1;
            }
            switch (alt195) {
                case 1 :
                    // InternalQVTimperative.g:8424:4: (lv_patternVariableName_0_0= ruleUnrestrictedName )
                    {
                    // InternalQVTimperative.g:8424:4: (lv_patternVariableName_0_0= ruleUnrestrictedName )
                    // InternalQVTimperative.g:8425:5: lv_patternVariableName_0_0= ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPatternExpCSAccess().getPatternVariableNameUnrestrictedNameParserRuleCall_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_patternVariableName_0_0=ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPatternExpCSRule());
                      					}
                      					set(
                      						current,
                      						"patternVariableName",
                      						lv_patternVariableName_0_0,
                      						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
                      					afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getPatternExpCSAccess().getColonKeyword_1());

            }
            // InternalQVTimperative.g:8446:3: ( (lv_ownedPatternType_2_0= ruleTypeExpCS ) )
            // InternalQVTimperative.g:8447:4: (lv_ownedPatternType_2_0= ruleTypeExpCS )
            {
            // InternalQVTimperative.g:8447:4: (lv_ownedPatternType_2_0= ruleTypeExpCS )
            // InternalQVTimperative.g:8448:5: lv_ownedPatternType_2_0= ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPatternExpCSAccess().getOwnedPatternTypeTypeExpCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedPatternType_2_0=ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPatternExpCSRule());
              					}
              					set(
              						current,
              						"ownedPatternType",
              						lv_ownedPatternType_2_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePatternExpCS"


    // $ANTLR start "entryRuleLambdaLiteralExpCS"
    // InternalQVTimperative.g:8469:1: entryRuleLambdaLiteralExpCS returns [EObject current=null] : iv_ruleLambdaLiteralExpCS= ruleLambdaLiteralExpCS EOF ;
    public final EObject entryRuleLambdaLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLambdaLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:8469:59: (iv_ruleLambdaLiteralExpCS= ruleLambdaLiteralExpCS EOF )
            // InternalQVTimperative.g:8470:2: iv_ruleLambdaLiteralExpCS= ruleLambdaLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLambdaLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLambdaLiteralExpCS=ruleLambdaLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLambdaLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLambdaLiteralExpCS"


    // $ANTLR start "ruleLambdaLiteralExpCS"
    // InternalQVTimperative.g:8476:1: ruleLambdaLiteralExpCS returns [EObject current=null] : (otherlv_0= 'Lambda' otherlv_1= '{' ( (lv_ownedExpressionCS_2_0= ruleExpCS ) ) otherlv_3= '}' ) ;
    public final EObject ruleLambdaLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_ownedExpressionCS_2_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:8482:2: ( (otherlv_0= 'Lambda' otherlv_1= '{' ( (lv_ownedExpressionCS_2_0= ruleExpCS ) ) otherlv_3= '}' ) )
            // InternalQVTimperative.g:8483:2: (otherlv_0= 'Lambda' otherlv_1= '{' ( (lv_ownedExpressionCS_2_0= ruleExpCS ) ) otherlv_3= '}' )
            {
            // InternalQVTimperative.g:8483:2: (otherlv_0= 'Lambda' otherlv_1= '{' ( (lv_ownedExpressionCS_2_0= ruleExpCS ) ) otherlv_3= '}' )
            // InternalQVTimperative.g:8484:3: otherlv_0= 'Lambda' otherlv_1= '{' ( (lv_ownedExpressionCS_2_0= ruleExpCS ) ) otherlv_3= '}'
            {
            otherlv_0=(Token)match(input,143,FollowSets000.FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getLambdaLiteralExpCSAccess().getLambdaKeyword_0());

            }
            otherlv_1=(Token)match(input,35,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLambdaLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());

            }
            // InternalQVTimperative.g:8492:3: ( (lv_ownedExpressionCS_2_0= ruleExpCS ) )
            // InternalQVTimperative.g:8493:4: (lv_ownedExpressionCS_2_0= ruleExpCS )
            {
            // InternalQVTimperative.g:8493:4: (lv_ownedExpressionCS_2_0= ruleExpCS )
            // InternalQVTimperative.g:8494:5: lv_ownedExpressionCS_2_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLambdaLiteralExpCSAccess().getOwnedExpressionCSExpCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_58);
            lv_ownedExpressionCS_2_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLambdaLiteralExpCSRule());
              					}
              					set(
              						current,
              						"ownedExpressionCS",
              						lv_ownedExpressionCS_2_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_3=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getLambdaLiteralExpCSAccess().getRightCurlyBracketKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLambdaLiteralExpCS"


    // $ANTLR start "entryRuleMapLiteralExpCS"
    // InternalQVTimperative.g:8519:1: entryRuleMapLiteralExpCS returns [EObject current=null] : iv_ruleMapLiteralExpCS= ruleMapLiteralExpCS EOF ;
    public final EObject entryRuleMapLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:8519:56: (iv_ruleMapLiteralExpCS= ruleMapLiteralExpCS EOF )
            // InternalQVTimperative.g:8520:2: iv_ruleMapLiteralExpCS= ruleMapLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMapLiteralExpCS=ruleMapLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapLiteralExpCS"


    // $ANTLR start "ruleMapLiteralExpCS"
    // InternalQVTimperative.g:8526:1: ruleMapLiteralExpCS returns [EObject current=null] : ( ( (lv_ownedType_0_0= ruleMapTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleMapLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_ownedType_0_0 = null;

        EObject lv_ownedParts_2_0 = null;

        EObject lv_ownedParts_4_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:8532:2: ( ( ( (lv_ownedType_0_0= ruleMapTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )* )? otherlv_5= '}' ) )
            // InternalQVTimperative.g:8533:2: ( ( (lv_ownedType_0_0= ruleMapTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )* )? otherlv_5= '}' )
            {
            // InternalQVTimperative.g:8533:2: ( ( (lv_ownedType_0_0= ruleMapTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )* )? otherlv_5= '}' )
            // InternalQVTimperative.g:8534:3: ( (lv_ownedType_0_0= ruleMapTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )* )? otherlv_5= '}'
            {
            // InternalQVTimperative.g:8534:3: ( (lv_ownedType_0_0= ruleMapTypeCS ) )
            // InternalQVTimperative.g:8535:4: (lv_ownedType_0_0= ruleMapTypeCS )
            {
            // InternalQVTimperative.g:8535:4: (lv_ownedType_0_0= ruleMapTypeCS )
            // InternalQVTimperative.g:8536:5: lv_ownedType_0_0= ruleMapTypeCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapLiteralExpCSAccess().getOwnedTypeMapTypeCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_41);
            lv_ownedType_0_0=ruleMapTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapLiteralExpCSRule());
              					}
              					set(
              						current,
              						"ownedType",
              						lv_ownedType_0_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.MapTypeCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_1=(Token)match(input,35,FollowSets000.FOLLOW_130); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMapLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());

            }
            // InternalQVTimperative.g:8557:3: ( ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )* )?
            int alt197=2;
            int LA197_0 = input.LA(1);

            if ( (LA197_0==RULE_SINGLE_QUOTED_STRING||(LA197_0>=RULE_INT && LA197_0<=RULE_ESCAPED_ID)||LA197_0==17||LA197_0==19||(LA197_0>=22 && LA197_0<=23)||(LA197_0>=25 && LA197_0<=26)||(LA197_0>=29 && LA197_0<=34)||LA197_0==39||(LA197_0>=42 && LA197_0<=48)||(LA197_0>=50 && LA197_0<=52)||(LA197_0>=54 && LA197_0<=56)||(LA197_0>=58 && LA197_0<=60)||(LA197_0>=62 && LA197_0<=70)||LA197_0==72||LA197_0==74||LA197_0==76||LA197_0==79||LA197_0==81||LA197_0==83||(LA197_0>=85 && LA197_0<=89)||(LA197_0>=91 && LA197_0<=96)||LA197_0==98||LA197_0==100||(LA197_0>=102 && LA197_0<=108)||(LA197_0>=127 && LA197_0<=141)||LA197_0==143||(LA197_0>=146 && LA197_0<=149)||LA197_0==155||(LA197_0>=160 && LA197_0<=161)) ) {
                alt197=1;
            }
            switch (alt197) {
                case 1 :
                    // InternalQVTimperative.g:8558:4: ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )*
                    {
                    // InternalQVTimperative.g:8558:4: ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) )
                    // InternalQVTimperative.g:8559:5: (lv_ownedParts_2_0= ruleMapLiteralPartCS )
                    {
                    // InternalQVTimperative.g:8559:5: (lv_ownedParts_2_0= ruleMapLiteralPartCS )
                    // InternalQVTimperative.g:8560:6: lv_ownedParts_2_0= ruleMapLiteralPartCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMapLiteralExpCSAccess().getOwnedPartsMapLiteralPartCSParserRuleCall_2_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_111);
                    lv_ownedParts_2_0=ruleMapLiteralPartCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMapLiteralExpCSRule());
                      						}
                      						add(
                      							current,
                      							"ownedParts",
                      							lv_ownedParts_2_0,
                      							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.MapLiteralPartCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:8577:4: (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )*
                    loop196:
                    do {
                        int alt196=2;
                        int LA196_0 = input.LA(1);

                        if ( (LA196_0==18) ) {
                            alt196=1;
                        }


                        switch (alt196) {
                    	case 1 :
                    	    // InternalQVTimperative.g:8578:5: otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) )
                    	    {
                    	    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getMapLiteralExpCSAccess().getCommaKeyword_2_1_0());

                    	    }
                    	    // InternalQVTimperative.g:8582:5: ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) )
                    	    // InternalQVTimperative.g:8583:6: (lv_ownedParts_4_0= ruleMapLiteralPartCS )
                    	    {
                    	    // InternalQVTimperative.g:8583:6: (lv_ownedParts_4_0= ruleMapLiteralPartCS )
                    	    // InternalQVTimperative.g:8584:7: lv_ownedParts_4_0= ruleMapLiteralPartCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMapLiteralExpCSAccess().getOwnedPartsMapLiteralPartCSParserRuleCall_2_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_111);
                    	    lv_ownedParts_4_0=ruleMapLiteralPartCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMapLiteralExpCSRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedParts",
                    	      								lv_ownedParts_4_0,
                    	      								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.MapLiteralPartCS");
                    	      							afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop196;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getMapLiteralExpCSAccess().getRightCurlyBracketKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapLiteralExpCS"


    // $ANTLR start "entryRuleMapLiteralPartCS"
    // InternalQVTimperative.g:8611:1: entryRuleMapLiteralPartCS returns [EObject current=null] : iv_ruleMapLiteralPartCS= ruleMapLiteralPartCS EOF ;
    public final EObject entryRuleMapLiteralPartCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapLiteralPartCS = null;


        try {
            // InternalQVTimperative.g:8611:57: (iv_ruleMapLiteralPartCS= ruleMapLiteralPartCS EOF )
            // InternalQVTimperative.g:8612:2: iv_ruleMapLiteralPartCS= ruleMapLiteralPartCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapLiteralPartCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMapLiteralPartCS=ruleMapLiteralPartCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapLiteralPartCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapLiteralPartCS"


    // $ANTLR start "ruleMapLiteralPartCS"
    // InternalQVTimperative.g:8618:1: ruleMapLiteralPartCS returns [EObject current=null] : ( ( (lv_ownedKey_0_0= ruleExpCS ) ) (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedValue_3_0= ruleExpCS ) ) ) ;
    public final EObject ruleMapLiteralPartCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_ownedKey_0_0 = null;

        EObject lv_ownedValue_3_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:8624:2: ( ( ( (lv_ownedKey_0_0= ruleExpCS ) ) (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedValue_3_0= ruleExpCS ) ) ) )
            // InternalQVTimperative.g:8625:2: ( ( (lv_ownedKey_0_0= ruleExpCS ) ) (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedValue_3_0= ruleExpCS ) ) )
            {
            // InternalQVTimperative.g:8625:2: ( ( (lv_ownedKey_0_0= ruleExpCS ) ) (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedValue_3_0= ruleExpCS ) ) )
            // InternalQVTimperative.g:8626:3: ( (lv_ownedKey_0_0= ruleExpCS ) ) (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedValue_3_0= ruleExpCS ) )
            {
            // InternalQVTimperative.g:8626:3: ( (lv_ownedKey_0_0= ruleExpCS ) )
            // InternalQVTimperative.g:8627:4: (lv_ownedKey_0_0= ruleExpCS )
            {
            // InternalQVTimperative.g:8627:4: (lv_ownedKey_0_0= ruleExpCS )
            // InternalQVTimperative.g:8628:5: lv_ownedKey_0_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapLiteralPartCSAccess().getOwnedKeyExpCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_131);
            lv_ownedKey_0_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapLiteralPartCSRule());
              					}
              					set(
              						current,
              						"ownedKey",
              						lv_ownedKey_0_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:8645:3: (otherlv_1= 'with' | otherlv_2= '<-' )
            int alt198=2;
            int LA198_0 = input.LA(1);

            if ( (LA198_0==144) ) {
                alt198=1;
            }
            else if ( (LA198_0==145) ) {
                alt198=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 198, 0, input);

                throw nvae;
            }
            switch (alt198) {
                case 1 :
                    // InternalQVTimperative.g:8646:4: otherlv_1= 'with'
                    {
                    otherlv_1=(Token)match(input,144,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getMapLiteralPartCSAccess().getWithKeyword_1_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:8651:4: otherlv_2= '<-'
                    {
                    otherlv_2=(Token)match(input,145,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getMapLiteralPartCSAccess().getLessThanSignHyphenMinusKeyword_1_1());

                    }

                    }
                    break;

            }

            // InternalQVTimperative.g:8656:3: ( (lv_ownedValue_3_0= ruleExpCS ) )
            // InternalQVTimperative.g:8657:4: (lv_ownedValue_3_0= ruleExpCS )
            {
            // InternalQVTimperative.g:8657:4: (lv_ownedValue_3_0= ruleExpCS )
            // InternalQVTimperative.g:8658:5: lv_ownedValue_3_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapLiteralPartCSAccess().getOwnedValueExpCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedValue_3_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapLiteralPartCSRule());
              					}
              					set(
              						current,
              						"ownedValue",
              						lv_ownedValue_3_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapLiteralPartCS"


    // $ANTLR start "entryRulePrimitiveLiteralExpCS"
    // InternalQVTimperative.g:8679:1: entryRulePrimitiveLiteralExpCS returns [EObject current=null] : iv_rulePrimitiveLiteralExpCS= rulePrimitiveLiteralExpCS EOF ;
    public final EObject entryRulePrimitiveLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimitiveLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:8679:62: (iv_rulePrimitiveLiteralExpCS= rulePrimitiveLiteralExpCS EOF )
            // InternalQVTimperative.g:8680:2: iv_rulePrimitiveLiteralExpCS= rulePrimitiveLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrimitiveLiteralExpCS=rulePrimitiveLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimitiveLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimitiveLiteralExpCS"


    // $ANTLR start "rulePrimitiveLiteralExpCS"
    // InternalQVTimperative.g:8686:1: rulePrimitiveLiteralExpCS returns [EObject current=null] : (this_NumberLiteralExpCS_0= ruleNumberLiteralExpCS | this_StringLiteralExpCS_1= ruleStringLiteralExpCS | this_BooleanLiteralExpCS_2= ruleBooleanLiteralExpCS | this_UnlimitedNaturalLiteralExpCS_3= ruleUnlimitedNaturalLiteralExpCS | this_InvalidLiteralExpCS_4= ruleInvalidLiteralExpCS | this_NullLiteralExpCS_5= ruleNullLiteralExpCS ) ;
    public final EObject rulePrimitiveLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject this_NumberLiteralExpCS_0 = null;

        EObject this_StringLiteralExpCS_1 = null;

        EObject this_BooleanLiteralExpCS_2 = null;

        EObject this_UnlimitedNaturalLiteralExpCS_3 = null;

        EObject this_InvalidLiteralExpCS_4 = null;

        EObject this_NullLiteralExpCS_5 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:8692:2: ( (this_NumberLiteralExpCS_0= ruleNumberLiteralExpCS | this_StringLiteralExpCS_1= ruleStringLiteralExpCS | this_BooleanLiteralExpCS_2= ruleBooleanLiteralExpCS | this_UnlimitedNaturalLiteralExpCS_3= ruleUnlimitedNaturalLiteralExpCS | this_InvalidLiteralExpCS_4= ruleInvalidLiteralExpCS | this_NullLiteralExpCS_5= ruleNullLiteralExpCS ) )
            // InternalQVTimperative.g:8693:2: (this_NumberLiteralExpCS_0= ruleNumberLiteralExpCS | this_StringLiteralExpCS_1= ruleStringLiteralExpCS | this_BooleanLiteralExpCS_2= ruleBooleanLiteralExpCS | this_UnlimitedNaturalLiteralExpCS_3= ruleUnlimitedNaturalLiteralExpCS | this_InvalidLiteralExpCS_4= ruleInvalidLiteralExpCS | this_NullLiteralExpCS_5= ruleNullLiteralExpCS )
            {
            // InternalQVTimperative.g:8693:2: (this_NumberLiteralExpCS_0= ruleNumberLiteralExpCS | this_StringLiteralExpCS_1= ruleStringLiteralExpCS | this_BooleanLiteralExpCS_2= ruleBooleanLiteralExpCS | this_UnlimitedNaturalLiteralExpCS_3= ruleUnlimitedNaturalLiteralExpCS | this_InvalidLiteralExpCS_4= ruleInvalidLiteralExpCS | this_NullLiteralExpCS_5= ruleNullLiteralExpCS )
            int alt199=6;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt199=1;
                }
                break;
            case RULE_SINGLE_QUOTED_STRING:
                {
                alt199=2;
                }
                break;
            case 146:
            case 147:
                {
                alt199=3;
                }
                break;
            case 42:
                {
                alt199=4;
                }
                break;
            case 148:
                {
                alt199=5;
                }
                break;
            case 149:
                {
                alt199=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 199, 0, input);

                throw nvae;
            }

            switch (alt199) {
                case 1 :
                    // InternalQVTimperative.g:8694:3: this_NumberLiteralExpCS_0= ruleNumberLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getNumberLiteralExpCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NumberLiteralExpCS_0=ruleNumberLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NumberLiteralExpCS_0;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:8706:3: this_StringLiteralExpCS_1= ruleStringLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getStringLiteralExpCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StringLiteralExpCS_1=ruleStringLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StringLiteralExpCS_1;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:8718:3: this_BooleanLiteralExpCS_2= ruleBooleanLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getBooleanLiteralExpCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BooleanLiteralExpCS_2=ruleBooleanLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BooleanLiteralExpCS_2;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:8730:3: this_UnlimitedNaturalLiteralExpCS_3= ruleUnlimitedNaturalLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getUnlimitedNaturalLiteralExpCSParserRuleCall_3());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_UnlimitedNaturalLiteralExpCS_3=ruleUnlimitedNaturalLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_UnlimitedNaturalLiteralExpCS_3;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 5 :
                    // InternalQVTimperative.g:8742:3: this_InvalidLiteralExpCS_4= ruleInvalidLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getInvalidLiteralExpCSParserRuleCall_4());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_InvalidLiteralExpCS_4=ruleInvalidLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_InvalidLiteralExpCS_4;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 6 :
                    // InternalQVTimperative.g:8754:3: this_NullLiteralExpCS_5= ruleNullLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getNullLiteralExpCSParserRuleCall_5());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NullLiteralExpCS_5=ruleNullLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NullLiteralExpCS_5;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimitiveLiteralExpCS"


    // $ANTLR start "entryRuleTupleLiteralExpCS"
    // InternalQVTimperative.g:8769:1: entryRuleTupleLiteralExpCS returns [EObject current=null] : iv_ruleTupleLiteralExpCS= ruleTupleLiteralExpCS EOF ;
    public final EObject entryRuleTupleLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTupleLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:8769:58: (iv_ruleTupleLiteralExpCS= ruleTupleLiteralExpCS EOF )
            // InternalQVTimperative.g:8770:2: iv_ruleTupleLiteralExpCS= ruleTupleLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTupleLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTupleLiteralExpCS=ruleTupleLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTupleLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTupleLiteralExpCS"


    // $ANTLR start "ruleTupleLiteralExpCS"
    // InternalQVTimperative.g:8776:1: ruleTupleLiteralExpCS returns [EObject current=null] : (otherlv_0= 'Tuple' otherlv_1= '{' ( (lv_ownedParts_2_0= ruleTupleLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) ) )* otherlv_5= '}' ) ;
    public final EObject ruleTupleLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_ownedParts_2_0 = null;

        EObject lv_ownedParts_4_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:8782:2: ( (otherlv_0= 'Tuple' otherlv_1= '{' ( (lv_ownedParts_2_0= ruleTupleLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) ) )* otherlv_5= '}' ) )
            // InternalQVTimperative.g:8783:2: (otherlv_0= 'Tuple' otherlv_1= '{' ( (lv_ownedParts_2_0= ruleTupleLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) ) )* otherlv_5= '}' )
            {
            // InternalQVTimperative.g:8783:2: (otherlv_0= 'Tuple' otherlv_1= '{' ( (lv_ownedParts_2_0= ruleTupleLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) ) )* otherlv_5= '}' )
            // InternalQVTimperative.g:8784:3: otherlv_0= 'Tuple' otherlv_1= '{' ( (lv_ownedParts_2_0= ruleTupleLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) ) )* otherlv_5= '}'
            {
            otherlv_0=(Token)match(input,128,FollowSets000.FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTupleLiteralExpCSAccess().getTupleKeyword_0());

            }
            otherlv_1=(Token)match(input,35,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTupleLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());

            }
            // InternalQVTimperative.g:8792:3: ( (lv_ownedParts_2_0= ruleTupleLiteralPartCS ) )
            // InternalQVTimperative.g:8793:4: (lv_ownedParts_2_0= ruleTupleLiteralPartCS )
            {
            // InternalQVTimperative.g:8793:4: (lv_ownedParts_2_0= ruleTupleLiteralPartCS )
            // InternalQVTimperative.g:8794:5: lv_ownedParts_2_0= ruleTupleLiteralPartCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsTupleLiteralPartCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_111);
            lv_ownedParts_2_0=ruleTupleLiteralPartCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTupleLiteralExpCSRule());
              					}
              					add(
              						current,
              						"ownedParts",
              						lv_ownedParts_2_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TupleLiteralPartCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:8811:3: (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) ) )*
            loop200:
            do {
                int alt200=2;
                int LA200_0 = input.LA(1);

                if ( (LA200_0==18) ) {
                    alt200=1;
                }


                switch (alt200) {
            	case 1 :
            	    // InternalQVTimperative.g:8812:4: otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) )
            	    {
            	    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getTupleLiteralExpCSAccess().getCommaKeyword_3_0());

            	    }
            	    // InternalQVTimperative.g:8816:4: ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) )
            	    // InternalQVTimperative.g:8817:5: (lv_ownedParts_4_0= ruleTupleLiteralPartCS )
            	    {
            	    // InternalQVTimperative.g:8817:5: (lv_ownedParts_4_0= ruleTupleLiteralPartCS )
            	    // InternalQVTimperative.g:8818:6: lv_ownedParts_4_0= ruleTupleLiteralPartCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsTupleLiteralPartCSParserRuleCall_3_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_111);
            	    lv_ownedParts_4_0=ruleTupleLiteralPartCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTupleLiteralExpCSRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedParts",
            	      							lv_ownedParts_4_0,
            	      							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TupleLiteralPartCS");
            	      						afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop200;
                }
            } while (true);

            otherlv_5=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getTupleLiteralExpCSAccess().getRightCurlyBracketKeyword_4());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTupleLiteralExpCS"


    // $ANTLR start "entryRuleTupleLiteralPartCS"
    // InternalQVTimperative.g:8844:1: entryRuleTupleLiteralPartCS returns [EObject current=null] : iv_ruleTupleLiteralPartCS= ruleTupleLiteralPartCS EOF ;
    public final EObject entryRuleTupleLiteralPartCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTupleLiteralPartCS = null;


        try {
            // InternalQVTimperative.g:8844:59: (iv_ruleTupleLiteralPartCS= ruleTupleLiteralPartCS EOF )
            // InternalQVTimperative.g:8845:2: iv_ruleTupleLiteralPartCS= ruleTupleLiteralPartCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTupleLiteralPartCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTupleLiteralPartCS=ruleTupleLiteralPartCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTupleLiteralPartCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTupleLiteralPartCS"


    // $ANTLR start "ruleTupleLiteralPartCS"
    // InternalQVTimperative.g:8851:1: ruleTupleLiteralPartCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) ) ;
    public final EObject ruleTupleLiteralPartCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedType_2_0 = null;

        EObject lv_ownedInitExpression_4_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:8857:2: ( ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) ) )
            // InternalQVTimperative.g:8858:2: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )
            {
            // InternalQVTimperative.g:8858:2: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )
            // InternalQVTimperative.g:8859:3: ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) )
            {
            // InternalQVTimperative.g:8859:3: ( (lv_name_0_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:8860:4: (lv_name_0_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:8860:4: (lv_name_0_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:8861:5: lv_name_0_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTupleLiteralPartCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_132);
            lv_name_0_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTupleLiteralPartCSRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:8878:3: (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )?
            int alt201=2;
            int LA201_0 = input.LA(1);

            if ( (LA201_0==24) ) {
                alt201=1;
            }
            switch (alt201) {
                case 1 :
                    // InternalQVTimperative.g:8879:4: otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) )
                    {
                    otherlv_1=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getTupleLiteralPartCSAccess().getColonKeyword_1_0());

                    }
                    // InternalQVTimperative.g:8883:4: ( (lv_ownedType_2_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:8884:5: (lv_ownedType_2_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:8884:5: (lv_ownedType_2_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:8885:6: lv_ownedType_2_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTupleLiteralPartCSAccess().getOwnedTypeTypeExpCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_129);
                    lv_ownedType_2_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTupleLiteralPartCSRule());
                      						}
                      						set(
                      							current,
                      							"ownedType",
                      							lv_ownedType_2_0,
                      							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,53,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getTupleLiteralPartCSAccess().getEqualsSignKeyword_2());

            }
            // InternalQVTimperative.g:8907:3: ( (lv_ownedInitExpression_4_0= ruleExpCS ) )
            // InternalQVTimperative.g:8908:4: (lv_ownedInitExpression_4_0= ruleExpCS )
            {
            // InternalQVTimperative.g:8908:4: (lv_ownedInitExpression_4_0= ruleExpCS )
            // InternalQVTimperative.g:8909:5: lv_ownedInitExpression_4_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTupleLiteralPartCSAccess().getOwnedInitExpressionExpCSParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedInitExpression_4_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTupleLiteralPartCSRule());
              					}
              					set(
              						current,
              						"ownedInitExpression",
              						lv_ownedInitExpression_4_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTupleLiteralPartCS"


    // $ANTLR start "entryRuleNumberLiteralExpCS"
    // InternalQVTimperative.g:8930:1: entryRuleNumberLiteralExpCS returns [EObject current=null] : iv_ruleNumberLiteralExpCS= ruleNumberLiteralExpCS EOF ;
    public final EObject entryRuleNumberLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNumberLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:8930:59: (iv_ruleNumberLiteralExpCS= ruleNumberLiteralExpCS EOF )
            // InternalQVTimperative.g:8931:2: iv_ruleNumberLiteralExpCS= ruleNumberLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNumberLiteralExpCS=ruleNumberLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumberLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNumberLiteralExpCS"


    // $ANTLR start "ruleNumberLiteralExpCS"
    // InternalQVTimperative.g:8937:1: ruleNumberLiteralExpCS returns [EObject current=null] : ( (lv_symbol_0_0= ruleNUMBER_LITERAL ) ) ;
    public final EObject ruleNumberLiteralExpCS() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_symbol_0_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:8943:2: ( ( (lv_symbol_0_0= ruleNUMBER_LITERAL ) ) )
            // InternalQVTimperative.g:8944:2: ( (lv_symbol_0_0= ruleNUMBER_LITERAL ) )
            {
            // InternalQVTimperative.g:8944:2: ( (lv_symbol_0_0= ruleNUMBER_LITERAL ) )
            // InternalQVTimperative.g:8945:3: (lv_symbol_0_0= ruleNUMBER_LITERAL )
            {
            // InternalQVTimperative.g:8945:3: (lv_symbol_0_0= ruleNUMBER_LITERAL )
            // InternalQVTimperative.g:8946:4: lv_symbol_0_0= ruleNUMBER_LITERAL
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getNumberLiteralExpCSAccess().getSymbolNUMBER_LITERALParserRuleCall_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_symbol_0_0=ruleNUMBER_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getNumberLiteralExpCSRule());
              				}
              				set(
              					current,
              					"symbol",
              					lv_symbol_0_0,
              					"org.eclipse.ocl.xtext.base.Base.NUMBER_LITERAL");
              				afterParserOrEnumRuleCall();

            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNumberLiteralExpCS"


    // $ANTLR start "entryRuleStringLiteralExpCS"
    // InternalQVTimperative.g:8966:1: entryRuleStringLiteralExpCS returns [EObject current=null] : iv_ruleStringLiteralExpCS= ruleStringLiteralExpCS EOF ;
    public final EObject entryRuleStringLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:8966:59: (iv_ruleStringLiteralExpCS= ruleStringLiteralExpCS EOF )
            // InternalQVTimperative.g:8967:2: iv_ruleStringLiteralExpCS= ruleStringLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStringLiteralExpCS=ruleStringLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringLiteralExpCS"


    // $ANTLR start "ruleStringLiteralExpCS"
    // InternalQVTimperative.g:8973:1: ruleStringLiteralExpCS returns [EObject current=null] : ( (lv_segments_0_0= ruleStringLiteral ) )+ ;
    public final EObject ruleStringLiteralExpCS() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_segments_0_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:8979:2: ( ( (lv_segments_0_0= ruleStringLiteral ) )+ )
            // InternalQVTimperative.g:8980:2: ( (lv_segments_0_0= ruleStringLiteral ) )+
            {
            // InternalQVTimperative.g:8980:2: ( (lv_segments_0_0= ruleStringLiteral ) )+
            int cnt202=0;
            loop202:
            do {
                int alt202=2;
                int LA202_0 = input.LA(1);

                if ( (LA202_0==RULE_SINGLE_QUOTED_STRING) ) {
                    alt202=1;
                }


                switch (alt202) {
            	case 1 :
            	    // InternalQVTimperative.g:8981:3: (lv_segments_0_0= ruleStringLiteral )
            	    {
            	    // InternalQVTimperative.g:8981:3: (lv_segments_0_0= ruleStringLiteral )
            	    // InternalQVTimperative.g:8982:4: lv_segments_0_0= ruleStringLiteral
            	    {
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getStringLiteralExpCSAccess().getSegmentsStringLiteralParserRuleCall_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_133);
            	    lv_segments_0_0=ruleStringLiteral();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElementForParent(grammarAccess.getStringLiteralExpCSRule());
            	      				}
            	      				add(
            	      					current,
            	      					"segments",
            	      					lv_segments_0_0,
            	      					"org.eclipse.ocl.xtext.base.Base.StringLiteral");
            	      				afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt202 >= 1 ) break loop202;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(202, input);
                        throw eee;
                }
                cnt202++;
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringLiteralExpCS"


    // $ANTLR start "entryRuleBooleanLiteralExpCS"
    // InternalQVTimperative.g:9002:1: entryRuleBooleanLiteralExpCS returns [EObject current=null] : iv_ruleBooleanLiteralExpCS= ruleBooleanLiteralExpCS EOF ;
    public final EObject entryRuleBooleanLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBooleanLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:9002:60: (iv_ruleBooleanLiteralExpCS= ruleBooleanLiteralExpCS EOF )
            // InternalQVTimperative.g:9003:2: iv_ruleBooleanLiteralExpCS= ruleBooleanLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBooleanLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBooleanLiteralExpCS=ruleBooleanLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBooleanLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBooleanLiteralExpCS"


    // $ANTLR start "ruleBooleanLiteralExpCS"
    // InternalQVTimperative.g:9009:1: ruleBooleanLiteralExpCS returns [EObject current=null] : ( ( (lv_symbol_0_0= 'true' ) ) | ( (lv_symbol_1_0= 'false' ) ) ) ;
    public final EObject ruleBooleanLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token lv_symbol_0_0=null;
        Token lv_symbol_1_0=null;


        	enterRule();

        try {
            // InternalQVTimperative.g:9015:2: ( ( ( (lv_symbol_0_0= 'true' ) ) | ( (lv_symbol_1_0= 'false' ) ) ) )
            // InternalQVTimperative.g:9016:2: ( ( (lv_symbol_0_0= 'true' ) ) | ( (lv_symbol_1_0= 'false' ) ) )
            {
            // InternalQVTimperative.g:9016:2: ( ( (lv_symbol_0_0= 'true' ) ) | ( (lv_symbol_1_0= 'false' ) ) )
            int alt203=2;
            int LA203_0 = input.LA(1);

            if ( (LA203_0==146) ) {
                alt203=1;
            }
            else if ( (LA203_0==147) ) {
                alt203=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 203, 0, input);

                throw nvae;
            }
            switch (alt203) {
                case 1 :
                    // InternalQVTimperative.g:9017:3: ( (lv_symbol_0_0= 'true' ) )
                    {
                    // InternalQVTimperative.g:9017:3: ( (lv_symbol_0_0= 'true' ) )
                    // InternalQVTimperative.g:9018:4: (lv_symbol_0_0= 'true' )
                    {
                    // InternalQVTimperative.g:9018:4: (lv_symbol_0_0= 'true' )
                    // InternalQVTimperative.g:9019:5: lv_symbol_0_0= 'true'
                    {
                    lv_symbol_0_0=(Token)match(input,146,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_symbol_0_0, grammarAccess.getBooleanLiteralExpCSAccess().getSymbolTrueKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getBooleanLiteralExpCSRule());
                      					}
                      					setWithLastConsumed(current, "symbol", lv_symbol_0_0, "true");

                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:9032:3: ( (lv_symbol_1_0= 'false' ) )
                    {
                    // InternalQVTimperative.g:9032:3: ( (lv_symbol_1_0= 'false' ) )
                    // InternalQVTimperative.g:9033:4: (lv_symbol_1_0= 'false' )
                    {
                    // InternalQVTimperative.g:9033:4: (lv_symbol_1_0= 'false' )
                    // InternalQVTimperative.g:9034:5: lv_symbol_1_0= 'false'
                    {
                    lv_symbol_1_0=(Token)match(input,147,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_symbol_1_0, grammarAccess.getBooleanLiteralExpCSAccess().getSymbolFalseKeyword_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getBooleanLiteralExpCSRule());
                      					}
                      					setWithLastConsumed(current, "symbol", lv_symbol_1_0, "false");

                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBooleanLiteralExpCS"


    // $ANTLR start "entryRuleUnlimitedNaturalLiteralExpCS"
    // InternalQVTimperative.g:9050:1: entryRuleUnlimitedNaturalLiteralExpCS returns [EObject current=null] : iv_ruleUnlimitedNaturalLiteralExpCS= ruleUnlimitedNaturalLiteralExpCS EOF ;
    public final EObject entryRuleUnlimitedNaturalLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnlimitedNaturalLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:9050:69: (iv_ruleUnlimitedNaturalLiteralExpCS= ruleUnlimitedNaturalLiteralExpCS EOF )
            // InternalQVTimperative.g:9051:2: iv_ruleUnlimitedNaturalLiteralExpCS= ruleUnlimitedNaturalLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnlimitedNaturalLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleUnlimitedNaturalLiteralExpCS=ruleUnlimitedNaturalLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnlimitedNaturalLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnlimitedNaturalLiteralExpCS"


    // $ANTLR start "ruleUnlimitedNaturalLiteralExpCS"
    // InternalQVTimperative.g:9057:1: ruleUnlimitedNaturalLiteralExpCS returns [EObject current=null] : ( () otherlv_1= '*' ) ;
    public final EObject ruleUnlimitedNaturalLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalQVTimperative.g:9063:2: ( ( () otherlv_1= '*' ) )
            // InternalQVTimperative.g:9064:2: ( () otherlv_1= '*' )
            {
            // InternalQVTimperative.g:9064:2: ( () otherlv_1= '*' )
            // InternalQVTimperative.g:9065:3: () otherlv_1= '*'
            {
            // InternalQVTimperative.g:9065:3: ()
            // InternalQVTimperative.g:9066:4:
            {
            if ( state.backtracking==0 ) {

              				/* */

            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getUnlimitedNaturalLiteralExpCSAccess().getUnlimitedNaturalLiteralExpCSAction_0(),
              					current);

            }

            }

            otherlv_1=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getUnlimitedNaturalLiteralExpCSAccess().getAsteriskKeyword_1());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnlimitedNaturalLiteralExpCS"


    // $ANTLR start "entryRuleInvalidLiteralExpCS"
    // InternalQVTimperative.g:9083:1: entryRuleInvalidLiteralExpCS returns [EObject current=null] : iv_ruleInvalidLiteralExpCS= ruleInvalidLiteralExpCS EOF ;
    public final EObject entryRuleInvalidLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInvalidLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:9083:60: (iv_ruleInvalidLiteralExpCS= ruleInvalidLiteralExpCS EOF )
            // InternalQVTimperative.g:9084:2: iv_ruleInvalidLiteralExpCS= ruleInvalidLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInvalidLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleInvalidLiteralExpCS=ruleInvalidLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInvalidLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInvalidLiteralExpCS"


    // $ANTLR start "ruleInvalidLiteralExpCS"
    // InternalQVTimperative.g:9090:1: ruleInvalidLiteralExpCS returns [EObject current=null] : ( () otherlv_1= 'invalid' ) ;
    public final EObject ruleInvalidLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalQVTimperative.g:9096:2: ( ( () otherlv_1= 'invalid' ) )
            // InternalQVTimperative.g:9097:2: ( () otherlv_1= 'invalid' )
            {
            // InternalQVTimperative.g:9097:2: ( () otherlv_1= 'invalid' )
            // InternalQVTimperative.g:9098:3: () otherlv_1= 'invalid'
            {
            // InternalQVTimperative.g:9098:3: ()
            // InternalQVTimperative.g:9099:4:
            {
            if ( state.backtracking==0 ) {

              				/* */

            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getInvalidLiteralExpCSAccess().getInvalidLiteralExpCSAction_0(),
              					current);

            }

            }

            otherlv_1=(Token)match(input,148,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getInvalidLiteralExpCSAccess().getInvalidKeyword_1());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInvalidLiteralExpCS"


    // $ANTLR start "entryRuleNullLiteralExpCS"
    // InternalQVTimperative.g:9116:1: entryRuleNullLiteralExpCS returns [EObject current=null] : iv_ruleNullLiteralExpCS= ruleNullLiteralExpCS EOF ;
    public final EObject entryRuleNullLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNullLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:9116:57: (iv_ruleNullLiteralExpCS= ruleNullLiteralExpCS EOF )
            // InternalQVTimperative.g:9117:2: iv_ruleNullLiteralExpCS= ruleNullLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNullLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNullLiteralExpCS=ruleNullLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNullLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNullLiteralExpCS"


    // $ANTLR start "ruleNullLiteralExpCS"
    // InternalQVTimperative.g:9123:1: ruleNullLiteralExpCS returns [EObject current=null] : ( () otherlv_1= 'null' ) ;
    public final EObject ruleNullLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalQVTimperative.g:9129:2: ( ( () otherlv_1= 'null' ) )
            // InternalQVTimperative.g:9130:2: ( () otherlv_1= 'null' )
            {
            // InternalQVTimperative.g:9130:2: ( () otherlv_1= 'null' )
            // InternalQVTimperative.g:9131:3: () otherlv_1= 'null'
            {
            // InternalQVTimperative.g:9131:3: ()
            // InternalQVTimperative.g:9132:4:
            {
            if ( state.backtracking==0 ) {

              				/* */

            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getNullLiteralExpCSAccess().getNullLiteralExpCSAction_0(),
              					current);

            }

            }

            otherlv_1=(Token)match(input,149,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getNullLiteralExpCSAccess().getNullKeyword_1());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNullLiteralExpCS"


    // $ANTLR start "entryRuleTypeLiteralCS"
    // InternalQVTimperative.g:9149:1: entryRuleTypeLiteralCS returns [EObject current=null] : iv_ruleTypeLiteralCS= ruleTypeLiteralCS EOF ;
    public final EObject entryRuleTypeLiteralCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeLiteralCS = null;


        try {
            // InternalQVTimperative.g:9149:54: (iv_ruleTypeLiteralCS= ruleTypeLiteralCS EOF )
            // InternalQVTimperative.g:9150:2: iv_ruleTypeLiteralCS= ruleTypeLiteralCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeLiteralCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeLiteralCS=ruleTypeLiteralCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeLiteralCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeLiteralCS"


    // $ANTLR start "ruleTypeLiteralCS"
    // InternalQVTimperative.g:9156:1: ruleTypeLiteralCS returns [EObject current=null] : (this_PrimitiveTypeCS_0= rulePrimitiveTypeCS | this_CollectionTypeCS_1= ruleCollectionTypeCS | this_MapTypeCS_2= ruleMapTypeCS | this_TupleTypeCS_3= ruleTupleTypeCS ) ;
    public final EObject ruleTypeLiteralCS() throws RecognitionException {
        EObject current = null;

        EObject this_PrimitiveTypeCS_0 = null;

        EObject this_CollectionTypeCS_1 = null;

        EObject this_MapTypeCS_2 = null;

        EObject this_TupleTypeCS_3 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:9162:2: ( (this_PrimitiveTypeCS_0= rulePrimitiveTypeCS | this_CollectionTypeCS_1= ruleCollectionTypeCS | this_MapTypeCS_2= ruleMapTypeCS | this_TupleTypeCS_3= ruleTupleTypeCS ) )
            // InternalQVTimperative.g:9163:2: (this_PrimitiveTypeCS_0= rulePrimitiveTypeCS | this_CollectionTypeCS_1= ruleCollectionTypeCS | this_MapTypeCS_2= ruleMapTypeCS | this_TupleTypeCS_3= ruleTupleTypeCS )
            {
            // InternalQVTimperative.g:9163:2: (this_PrimitiveTypeCS_0= rulePrimitiveTypeCS | this_CollectionTypeCS_1= ruleCollectionTypeCS | this_MapTypeCS_2= ruleMapTypeCS | this_TupleTypeCS_3= ruleTupleTypeCS )
            int alt204=4;
            switch ( input.LA(1) ) {
            case 129:
            case 130:
            case 131:
            case 132:
            case 133:
            case 134:
            case 135:
            case 136:
                {
                alt204=1;
                }
                break;
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
                {
                alt204=2;
                }
                break;
            case 127:
                {
                alt204=3;
                }
                break;
            case 128:
                {
                alt204=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 204, 0, input);

                throw nvae;
            }

            switch (alt204) {
                case 1 :
                    // InternalQVTimperative.g:9164:3: this_PrimitiveTypeCS_0= rulePrimitiveTypeCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLiteralCSAccess().getPrimitiveTypeCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrimitiveTypeCS_0=rulePrimitiveTypeCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrimitiveTypeCS_0;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:9176:3: this_CollectionTypeCS_1= ruleCollectionTypeCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLiteralCSAccess().getCollectionTypeCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CollectionTypeCS_1=ruleCollectionTypeCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CollectionTypeCS_1;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:9188:3: this_MapTypeCS_2= ruleMapTypeCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLiteralCSAccess().getMapTypeCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_MapTypeCS_2=ruleMapTypeCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MapTypeCS_2;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:9200:3: this_TupleTypeCS_3= ruleTupleTypeCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeLiteralCSAccess().getTupleTypeCSParserRuleCall_3());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TupleTypeCS_3=ruleTupleTypeCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TupleTypeCS_3;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeLiteralCS"


    // $ANTLR start "entryRuleTypeLiteralWithMultiplicityCS"
    // InternalQVTimperative.g:9215:1: entryRuleTypeLiteralWithMultiplicityCS returns [EObject current=null] : iv_ruleTypeLiteralWithMultiplicityCS= ruleTypeLiteralWithMultiplicityCS EOF ;
    public final EObject entryRuleTypeLiteralWithMultiplicityCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeLiteralWithMultiplicityCS = null;


        try {
            // InternalQVTimperative.g:9215:70: (iv_ruleTypeLiteralWithMultiplicityCS= ruleTypeLiteralWithMultiplicityCS EOF )
            // InternalQVTimperative.g:9216:2: iv_ruleTypeLiteralWithMultiplicityCS= ruleTypeLiteralWithMultiplicityCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeLiteralWithMultiplicityCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeLiteralWithMultiplicityCS=ruleTypeLiteralWithMultiplicityCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeLiteralWithMultiplicityCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeLiteralWithMultiplicityCS"


    // $ANTLR start "ruleTypeLiteralWithMultiplicityCS"
    // InternalQVTimperative.g:9222:1: ruleTypeLiteralWithMultiplicityCS returns [EObject current=null] : (this_TypeLiteralCS_0= ruleTypeLiteralCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? ) ;
    public final EObject ruleTypeLiteralWithMultiplicityCS() throws RecognitionException {
        EObject current = null;

        EObject this_TypeLiteralCS_0 = null;

        EObject lv_ownedMultiplicity_1_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:9228:2: ( (this_TypeLiteralCS_0= ruleTypeLiteralCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? ) )
            // InternalQVTimperative.g:9229:2: (this_TypeLiteralCS_0= ruleTypeLiteralCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? )
            {
            // InternalQVTimperative.g:9229:2: (this_TypeLiteralCS_0= ruleTypeLiteralCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? )
            // InternalQVTimperative.g:9230:3: this_TypeLiteralCS_0= ruleTypeLiteralCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )?
            {
            if ( state.backtracking==0 ) {

              			/* */

            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getTypeLiteralWithMultiplicityCSAccess().getTypeLiteralCSParserRuleCall_0());

            }
            pushFollow(FollowSets000.FOLLOW_118);
            this_TypeLiteralCS_0=ruleTypeLiteralCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeLiteralCS_0;
              			afterParserOrEnumRuleCall();

            }
            // InternalQVTimperative.g:9241:3: ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )?
            int alt205=2;
            int LA205_0 = input.LA(1);

            if ( (LA205_0==152) ) {
                alt205=1;
            }
            switch (alt205) {
                case 1 :
                    // InternalQVTimperative.g:9242:4: (lv_ownedMultiplicity_1_0= ruleMultiplicityCS )
                    {
                    // InternalQVTimperative.g:9242:4: (lv_ownedMultiplicity_1_0= ruleMultiplicityCS )
                    // InternalQVTimperative.g:9243:5: lv_ownedMultiplicity_1_0= ruleMultiplicityCS
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeLiteralWithMultiplicityCSAccess().getOwnedMultiplicityMultiplicityCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedMultiplicity_1_0=ruleMultiplicityCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeLiteralWithMultiplicityCSRule());
                      					}
                      					set(
                      						current,
                      						"ownedMultiplicity",
                      						lv_ownedMultiplicity_1_0,
                      						"org.eclipse.ocl.xtext.base.Base.MultiplicityCS");
                      					afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeLiteralWithMultiplicityCS"


    // $ANTLR start "entryRuleTypeLiteralExpCS"
    // InternalQVTimperative.g:9264:1: entryRuleTypeLiteralExpCS returns [EObject current=null] : iv_ruleTypeLiteralExpCS= ruleTypeLiteralExpCS EOF ;
    public final EObject entryRuleTypeLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:9264:57: (iv_ruleTypeLiteralExpCS= ruleTypeLiteralExpCS EOF )
            // InternalQVTimperative.g:9265:2: iv_ruleTypeLiteralExpCS= ruleTypeLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeLiteralExpCS=ruleTypeLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeLiteralExpCS"


    // $ANTLR start "ruleTypeLiteralExpCS"
    // InternalQVTimperative.g:9271:1: ruleTypeLiteralExpCS returns [EObject current=null] : ( (lv_ownedType_0_0= ruleTypeLiteralWithMultiplicityCS ) ) ;
    public final EObject ruleTypeLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedType_0_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:9277:2: ( ( (lv_ownedType_0_0= ruleTypeLiteralWithMultiplicityCS ) ) )
            // InternalQVTimperative.g:9278:2: ( (lv_ownedType_0_0= ruleTypeLiteralWithMultiplicityCS ) )
            {
            // InternalQVTimperative.g:9278:2: ( (lv_ownedType_0_0= ruleTypeLiteralWithMultiplicityCS ) )
            // InternalQVTimperative.g:9279:3: (lv_ownedType_0_0= ruleTypeLiteralWithMultiplicityCS )
            {
            // InternalQVTimperative.g:9279:3: (lv_ownedType_0_0= ruleTypeLiteralWithMultiplicityCS )
            // InternalQVTimperative.g:9280:4: lv_ownedType_0_0= ruleTypeLiteralWithMultiplicityCS
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getTypeLiteralExpCSAccess().getOwnedTypeTypeLiteralWithMultiplicityCSParserRuleCall_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedType_0_0=ruleTypeLiteralWithMultiplicityCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getTypeLiteralExpCSRule());
              				}
              				set(
              					current,
              					"ownedType",
              					lv_ownedType_0_0,
              					"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeLiteralWithMultiplicityCS");
              				afterParserOrEnumRuleCall();

            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeLiteralExpCS"


    // $ANTLR start "entryRuleTypeNameExpCS"
    // InternalQVTimperative.g:9300:1: entryRuleTypeNameExpCS returns [EObject current=null] : iv_ruleTypeNameExpCS= ruleTypeNameExpCS EOF ;
    public final EObject entryRuleTypeNameExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeNameExpCS = null;


        try {
            // InternalQVTimperative.g:9300:54: (iv_ruleTypeNameExpCS= ruleTypeNameExpCS EOF )
            // InternalQVTimperative.g:9301:2: iv_ruleTypeNameExpCS= ruleTypeNameExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeNameExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeNameExpCS=ruleTypeNameExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeNameExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeNameExpCS"


    // $ANTLR start "ruleTypeNameExpCS"
    // InternalQVTimperative.g:9307:1: ruleTypeNameExpCS returns [EObject current=null] : ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )? ) ;
    public final EObject ruleTypeNameExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedPathName_0_0 = null;

        EObject lv_ownedCurlyBracketedClause_1_0 = null;

        EObject lv_ownedPatternGuard_3_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:9313:2: ( ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )? ) )
            // InternalQVTimperative.g:9314:2: ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )? )
            {
            // InternalQVTimperative.g:9314:2: ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )? )
            // InternalQVTimperative.g:9315:3: ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )?
            {
            // InternalQVTimperative.g:9315:3: ( (lv_ownedPathName_0_0= rulePathNameCS ) )
            // InternalQVTimperative.g:9316:4: (lv_ownedPathName_0_0= rulePathNameCS )
            {
            // InternalQVTimperative.g:9316:4: (lv_ownedPathName_0_0= rulePathNameCS )
            // InternalQVTimperative.g:9317:5: lv_ownedPathName_0_0= rulePathNameCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeNameExpCSAccess().getOwnedPathNamePathNameCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_98);
            lv_ownedPathName_0_0=rulePathNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeNameExpCSRule());
              					}
              					set(
              						current,
              						"ownedPathName",
              						lv_ownedPathName_0_0,
              						"org.eclipse.ocl.xtext.base.Base.PathNameCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:9334:3: ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )?
            int alt207=2;
            alt207 = dfa207.predict(input);
            switch (alt207) {
                case 1 :
                    // InternalQVTimperative.g:9335:4: ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )?
                    {
                    // InternalQVTimperative.g:9335:4: ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) )
                    // InternalQVTimperative.g:9336:5: (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS )
                    {
                    // InternalQVTimperative.g:9336:5: (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS )
                    // InternalQVTimperative.g:9337:6: lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeNameExpCSAccess().getOwnedCurlyBracketedClauseCurlyBracketedClauseCSParserRuleCall_1_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_98);
                    lv_ownedCurlyBracketedClause_1_0=ruleCurlyBracketedClauseCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeNameExpCSRule());
                      						}
                      						set(
                      							current,
                      							"ownedCurlyBracketedClause",
                      							lv_ownedCurlyBracketedClause_1_0,
                      							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CurlyBracketedClauseCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:9354:4: (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )?
                    int alt206=2;
                    alt206 = dfa206.predict(input);
                    switch (alt206) {
                        case 1 :
                            // InternalQVTimperative.g:9355:5: otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}'
                            {
                            otherlv_2=(Token)match(input,35,FollowSets000.FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getTypeNameExpCSAccess().getLeftCurlyBracketKeyword_1_1_0());

                            }
                            // InternalQVTimperative.g:9359:5: ( (lv_ownedPatternGuard_3_0= ruleExpCS ) )
                            // InternalQVTimperative.g:9360:6: (lv_ownedPatternGuard_3_0= ruleExpCS )
                            {
                            // InternalQVTimperative.g:9360:6: (lv_ownedPatternGuard_3_0= ruleExpCS )
                            // InternalQVTimperative.g:9361:7: lv_ownedPatternGuard_3_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getTypeNameExpCSAccess().getOwnedPatternGuardExpCSParserRuleCall_1_1_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_58);
                            lv_ownedPatternGuard_3_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getTypeNameExpCSRule());
                              							}
                              							set(
                              								current,
                              								"ownedPatternGuard",
                              								lv_ownedPatternGuard_3_0,
                              								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              							afterParserOrEnumRuleCall();

                            }

                            }


                            }

                            otherlv_4=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getTypeNameExpCSAccess().getRightCurlyBracketKeyword_1_1_2());

                            }

                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeNameExpCS"


    // $ANTLR start "entryRuleTypeExpWithoutMultiplicityCS"
    // InternalQVTimperative.g:9388:1: entryRuleTypeExpWithoutMultiplicityCS returns [EObject current=null] : iv_ruleTypeExpWithoutMultiplicityCS= ruleTypeExpWithoutMultiplicityCS EOF ;
    public final EObject entryRuleTypeExpWithoutMultiplicityCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeExpWithoutMultiplicityCS = null;


        try {
            // InternalQVTimperative.g:9388:69: (iv_ruleTypeExpWithoutMultiplicityCS= ruleTypeExpWithoutMultiplicityCS EOF )
            // InternalQVTimperative.g:9389:2: iv_ruleTypeExpWithoutMultiplicityCS= ruleTypeExpWithoutMultiplicityCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeExpWithoutMultiplicityCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeExpWithoutMultiplicityCS=ruleTypeExpWithoutMultiplicityCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeExpWithoutMultiplicityCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeExpWithoutMultiplicityCS"


    // $ANTLR start "ruleTypeExpWithoutMultiplicityCS"
    // InternalQVTimperative.g:9395:1: ruleTypeExpWithoutMultiplicityCS returns [EObject current=null] : (this_TypeNameExpCS_0= ruleTypeNameExpCS | this_TypeLiteralCS_1= ruleTypeLiteralCS | this_CollectionPatternCS_2= ruleCollectionPatternCS ) ;
    public final EObject ruleTypeExpWithoutMultiplicityCS() throws RecognitionException {
        EObject current = null;

        EObject this_TypeNameExpCS_0 = null;

        EObject this_TypeLiteralCS_1 = null;

        EObject this_CollectionPatternCS_2 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:9401:2: ( (this_TypeNameExpCS_0= ruleTypeNameExpCS | this_TypeLiteralCS_1= ruleTypeLiteralCS | this_CollectionPatternCS_2= ruleCollectionPatternCS ) )
            // InternalQVTimperative.g:9402:2: (this_TypeNameExpCS_0= ruleTypeNameExpCS | this_TypeLiteralCS_1= ruleTypeLiteralCS | this_CollectionPatternCS_2= ruleCollectionPatternCS )
            {
            // InternalQVTimperative.g:9402:2: (this_TypeNameExpCS_0= ruleTypeNameExpCS | this_TypeLiteralCS_1= ruleTypeLiteralCS | this_CollectionPatternCS_2= ruleCollectionPatternCS )
            int alt208=3;
            alt208 = dfa208.predict(input);
            switch (alt208) {
                case 1 :
                    // InternalQVTimperative.g:9403:3: this_TypeNameExpCS_0= ruleTypeNameExpCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeExpWithoutMultiplicityCSAccess().getTypeNameExpCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypeNameExpCS_0=ruleTypeNameExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypeNameExpCS_0;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:9415:3: this_TypeLiteralCS_1= ruleTypeLiteralCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeExpWithoutMultiplicityCSAccess().getTypeLiteralCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypeLiteralCS_1=ruleTypeLiteralCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypeLiteralCS_1;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:9427:3: this_CollectionPatternCS_2= ruleCollectionPatternCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeExpWithoutMultiplicityCSAccess().getCollectionPatternCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CollectionPatternCS_2=ruleCollectionPatternCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CollectionPatternCS_2;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeExpWithoutMultiplicityCS"


    // $ANTLR start "entryRuleTypeExpCS"
    // InternalQVTimperative.g:9442:1: entryRuleTypeExpCS returns [EObject current=null] : iv_ruleTypeExpCS= ruleTypeExpCS EOF ;
    public final EObject entryRuleTypeExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeExpCS = null;


        try {
            // InternalQVTimperative.g:9442:50: (iv_ruleTypeExpCS= ruleTypeExpCS EOF )
            // InternalQVTimperative.g:9443:2: iv_ruleTypeExpCS= ruleTypeExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeExpCS=ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeExpCS"


    // $ANTLR start "ruleTypeExpCS"
    // InternalQVTimperative.g:9449:1: ruleTypeExpCS returns [EObject current=null] : (this_TypeExpWithoutMultiplicityCS_0= ruleTypeExpWithoutMultiplicityCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? ) ;
    public final EObject ruleTypeExpCS() throws RecognitionException {
        EObject current = null;

        EObject this_TypeExpWithoutMultiplicityCS_0 = null;

        EObject lv_ownedMultiplicity_1_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:9455:2: ( (this_TypeExpWithoutMultiplicityCS_0= ruleTypeExpWithoutMultiplicityCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? ) )
            // InternalQVTimperative.g:9456:2: (this_TypeExpWithoutMultiplicityCS_0= ruleTypeExpWithoutMultiplicityCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? )
            {
            // InternalQVTimperative.g:9456:2: (this_TypeExpWithoutMultiplicityCS_0= ruleTypeExpWithoutMultiplicityCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? )
            // InternalQVTimperative.g:9457:3: this_TypeExpWithoutMultiplicityCS_0= ruleTypeExpWithoutMultiplicityCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )?
            {
            if ( state.backtracking==0 ) {

              			/* */

            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getTypeExpCSAccess().getTypeExpWithoutMultiplicityCSParserRuleCall_0());

            }
            pushFollow(FollowSets000.FOLLOW_118);
            this_TypeExpWithoutMultiplicityCS_0=ruleTypeExpWithoutMultiplicityCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TypeExpWithoutMultiplicityCS_0;
              			afterParserOrEnumRuleCall();

            }
            // InternalQVTimperative.g:9468:3: ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )?
            int alt209=2;
            int LA209_0 = input.LA(1);

            if ( (LA209_0==152) ) {
                alt209=1;
            }
            switch (alt209) {
                case 1 :
                    // InternalQVTimperative.g:9469:4: (lv_ownedMultiplicity_1_0= ruleMultiplicityCS )
                    {
                    // InternalQVTimperative.g:9469:4: (lv_ownedMultiplicity_1_0= ruleMultiplicityCS )
                    // InternalQVTimperative.g:9470:5: lv_ownedMultiplicity_1_0= ruleMultiplicityCS
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeExpCSAccess().getOwnedMultiplicityMultiplicityCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedMultiplicity_1_0=ruleMultiplicityCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeExpCSRule());
                      					}
                      					set(
                      						current,
                      						"ownedMultiplicity",
                      						lv_ownedMultiplicity_1_0,
                      						"org.eclipse.ocl.xtext.base.Base.MultiplicityCS");
                      					afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeExpCS"


    // $ANTLR start "entryRuleExpCS"
    // InternalQVTimperative.g:9491:1: entryRuleExpCS returns [EObject current=null] : iv_ruleExpCS= ruleExpCS EOF ;
    public final EObject entryRuleExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpCS = null;


        try {
            // InternalQVTimperative.g:9491:46: (iv_ruleExpCS= ruleExpCS EOF )
            // InternalQVTimperative.g:9492:2: iv_ruleExpCS= ruleExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExpCS=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpCS"


    // $ANTLR start "ruleExpCS"
    // InternalQVTimperative.g:9498:1: ruleExpCS returns [EObject current=null] : ( (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? ) | this_PrefixedLetExpCS_4= rulePrefixedLetExpCS ) ;
    public final EObject ruleExpCS() throws RecognitionException {
        EObject current = null;

        EObject this_PrefixedPrimaryExpCS_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_ownedRight_3_0 = null;

        EObject this_PrefixedLetExpCS_4 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:9504:2: ( ( (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? ) | this_PrefixedLetExpCS_4= rulePrefixedLetExpCS ) )
            // InternalQVTimperative.g:9505:2: ( (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? ) | this_PrefixedLetExpCS_4= rulePrefixedLetExpCS )
            {
            // InternalQVTimperative.g:9505:2: ( (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? ) | this_PrefixedLetExpCS_4= rulePrefixedLetExpCS )
            int alt211=2;
            alt211 = dfa211.predict(input);
            switch (alt211) {
                case 1 :
                    // InternalQVTimperative.g:9506:3: (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? )
                    {
                    // InternalQVTimperative.g:9506:3: (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? )
                    // InternalQVTimperative.g:9507:4: this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )?
                    {
                    if ( state.backtracking==0 ) {

                      				/* */

                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getExpCSAccess().getPrefixedPrimaryExpCSParserRuleCall_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_134);
                    this_PrefixedPrimaryExpCS_0=rulePrefixedPrimaryExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_PrefixedPrimaryExpCS_0;
                      				afterParserOrEnumRuleCall();

                    }
                    // InternalQVTimperative.g:9518:4: ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )?
                    int alt210=2;
                    int LA210_0 = input.LA(1);

                    if ( (LA210_0==42||LA210_0==53||LA210_0==61||LA210_0==106||(LA210_0>=109 && LA210_0<=126)) ) {
                        alt210=1;
                    }
                    switch (alt210) {
                        case 1 :
                            // InternalQVTimperative.g:9519:5: () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) )
                            {
                            // InternalQVTimperative.g:9519:5: ()
                            // InternalQVTimperative.g:9520:6:
                            {
                            if ( state.backtracking==0 ) {

                              						/* */

                            }
                            if ( state.backtracking==0 ) {

                              						current = forceCreateModelElementAndSet(
                              							grammarAccess.getExpCSAccess().getInfixExpCSOwnedLeftAction_0_1_0(),
                              							current);

                            }

                            }

                            // InternalQVTimperative.g:9529:5: ( (lv_name_2_0= ruleBinaryOperatorName ) )
                            // InternalQVTimperative.g:9530:6: (lv_name_2_0= ruleBinaryOperatorName )
                            {
                            // InternalQVTimperative.g:9530:6: (lv_name_2_0= ruleBinaryOperatorName )
                            // InternalQVTimperative.g:9531:7: lv_name_2_0= ruleBinaryOperatorName
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getExpCSAccess().getNameBinaryOperatorNameParserRuleCall_0_1_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_8);
                            lv_name_2_0=ruleBinaryOperatorName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getExpCSRule());
                              							}
                              							set(
                              								current,
                              								"name",
                              								lv_name_2_0,
                              								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.BinaryOperatorName");
                              							afterParserOrEnumRuleCall();

                            }

                            }


                            }

                            // InternalQVTimperative.g:9548:5: ( (lv_ownedRight_3_0= ruleExpCS ) )
                            // InternalQVTimperative.g:9549:6: (lv_ownedRight_3_0= ruleExpCS )
                            {
                            // InternalQVTimperative.g:9549:6: (lv_ownedRight_3_0= ruleExpCS )
                            // InternalQVTimperative.g:9550:7: lv_ownedRight_3_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getExpCSAccess().getOwnedRightExpCSParserRuleCall_0_1_2_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedRight_3_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getExpCSRule());
                              							}
                              							set(
                              								current,
                              								"ownedRight",
                              								lv_ownedRight_3_0,
                              								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              							afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:9570:3: this_PrefixedLetExpCS_4= rulePrefixedLetExpCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExpCSAccess().getPrefixedLetExpCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrefixedLetExpCS_4=rulePrefixedLetExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrefixedLetExpCS_4;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpCS"


    // $ANTLR start "entryRulePrefixedLetExpCS"
    // InternalQVTimperative.g:9585:1: entryRulePrefixedLetExpCS returns [EObject current=null] : iv_rulePrefixedLetExpCS= rulePrefixedLetExpCS EOF ;
    public final EObject entryRulePrefixedLetExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrefixedLetExpCS = null;


        try {
            // InternalQVTimperative.g:9585:57: (iv_rulePrefixedLetExpCS= rulePrefixedLetExpCS EOF )
            // InternalQVTimperative.g:9586:2: iv_rulePrefixedLetExpCS= rulePrefixedLetExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrefixedLetExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrefixedLetExpCS=rulePrefixedLetExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrefixedLetExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrefixedLetExpCS"


    // $ANTLR start "rulePrefixedLetExpCS"
    // InternalQVTimperative.g:9592:1: rulePrefixedLetExpCS returns [EObject current=null] : ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) ) ) | this_LetExpCS_3= ruleLetExpCS ) ;
    public final EObject rulePrefixedLetExpCS() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_ownedRight_2_0 = null;

        EObject this_LetExpCS_3 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:9598:2: ( ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) ) ) | this_LetExpCS_3= ruleLetExpCS ) )
            // InternalQVTimperative.g:9599:2: ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) ) ) | this_LetExpCS_3= ruleLetExpCS )
            {
            // InternalQVTimperative.g:9599:2: ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) ) ) | this_LetExpCS_3= ruleLetExpCS )
            int alt212=2;
            int LA212_0 = input.LA(1);

            if ( ((LA212_0>=106 && LA212_0<=108)) ) {
                alt212=1;
            }
            else if ( (LA212_0==160) ) {
                alt212=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 212, 0, input);

                throw nvae;
            }
            switch (alt212) {
                case 1 :
                    // InternalQVTimperative.g:9600:3: ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) ) )
                    {
                    // InternalQVTimperative.g:9600:3: ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) ) )
                    // InternalQVTimperative.g:9601:4: () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) )
                    {
                    // InternalQVTimperative.g:9601:4: ()
                    // InternalQVTimperative.g:9602:5:
                    {
                    if ( state.backtracking==0 ) {

                      					/* */

                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrefixedLetExpCSAccess().getPrefixExpCSAction_0_0(),
                      						current);

                    }

                    }

                    // InternalQVTimperative.g:9611:4: ( (lv_name_1_0= ruleUnaryOperatorName ) )
                    // InternalQVTimperative.g:9612:5: (lv_name_1_0= ruleUnaryOperatorName )
                    {
                    // InternalQVTimperative.g:9612:5: (lv_name_1_0= ruleUnaryOperatorName )
                    // InternalQVTimperative.g:9613:6: lv_name_1_0= ruleUnaryOperatorName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrefixedLetExpCSAccess().getNameUnaryOperatorNameParserRuleCall_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_8);
                    lv_name_1_0=ruleUnaryOperatorName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrefixedLetExpCSRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.UnaryOperatorName");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:9630:4: ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) )
                    // InternalQVTimperative.g:9631:5: (lv_ownedRight_2_0= rulePrefixedLetExpCS )
                    {
                    // InternalQVTimperative.g:9631:5: (lv_ownedRight_2_0= rulePrefixedLetExpCS )
                    // InternalQVTimperative.g:9632:6: lv_ownedRight_2_0= rulePrefixedLetExpCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrefixedLetExpCSAccess().getOwnedRightPrefixedLetExpCSParserRuleCall_0_2_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedRight_2_0=rulePrefixedLetExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrefixedLetExpCSRule());
                      						}
                      						set(
                      							current,
                      							"ownedRight",
                      							lv_ownedRight_2_0,
                      							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PrefixedLetExpCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:9651:3: this_LetExpCS_3= ruleLetExpCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrefixedLetExpCSAccess().getLetExpCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_LetExpCS_3=ruleLetExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LetExpCS_3;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrefixedLetExpCS"


    // $ANTLR start "entryRulePrefixedPrimaryExpCS"
    // InternalQVTimperative.g:9666:1: entryRulePrefixedPrimaryExpCS returns [EObject current=null] : iv_rulePrefixedPrimaryExpCS= rulePrefixedPrimaryExpCS EOF ;
    public final EObject entryRulePrefixedPrimaryExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrefixedPrimaryExpCS = null;


        try {
            // InternalQVTimperative.g:9666:61: (iv_rulePrefixedPrimaryExpCS= rulePrefixedPrimaryExpCS EOF )
            // InternalQVTimperative.g:9667:2: iv_rulePrefixedPrimaryExpCS= rulePrefixedPrimaryExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrefixedPrimaryExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrefixedPrimaryExpCS=rulePrefixedPrimaryExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrefixedPrimaryExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrefixedPrimaryExpCS"


    // $ANTLR start "rulePrefixedPrimaryExpCS"
    // InternalQVTimperative.g:9673:1: rulePrefixedPrimaryExpCS returns [EObject current=null] : ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) ) ) | this_PrimaryExpCS_3= rulePrimaryExpCS ) ;
    public final EObject rulePrefixedPrimaryExpCS() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_ownedRight_2_0 = null;

        EObject this_PrimaryExpCS_3 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:9679:2: ( ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) ) ) | this_PrimaryExpCS_3= rulePrimaryExpCS ) )
            // InternalQVTimperative.g:9680:2: ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) ) ) | this_PrimaryExpCS_3= rulePrimaryExpCS )
            {
            // InternalQVTimperative.g:9680:2: ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) ) ) | this_PrimaryExpCS_3= rulePrimaryExpCS )
            int alt213=2;
            int LA213_0 = input.LA(1);

            if ( ((LA213_0>=106 && LA213_0<=108)) ) {
                alt213=1;
            }
            else if ( (LA213_0==RULE_SINGLE_QUOTED_STRING||(LA213_0>=RULE_INT && LA213_0<=RULE_ESCAPED_ID)||LA213_0==17||LA213_0==19||(LA213_0>=22 && LA213_0<=23)||(LA213_0>=25 && LA213_0<=26)||(LA213_0>=29 && LA213_0<=34)||LA213_0==39||(LA213_0>=42 && LA213_0<=48)||(LA213_0>=50 && LA213_0<=52)||(LA213_0>=54 && LA213_0<=56)||(LA213_0>=58 && LA213_0<=60)||(LA213_0>=62 && LA213_0<=70)||LA213_0==72||LA213_0==74||LA213_0==76||LA213_0==79||LA213_0==81||LA213_0==83||(LA213_0>=85 && LA213_0<=89)||(LA213_0>=91 && LA213_0<=96)||LA213_0==98||LA213_0==100||(LA213_0>=102 && LA213_0<=105)||(LA213_0>=127 && LA213_0<=141)||LA213_0==143||(LA213_0>=146 && LA213_0<=149)||LA213_0==155||LA213_0==161) ) {
                alt213=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 213, 0, input);

                throw nvae;
            }
            switch (alt213) {
                case 1 :
                    // InternalQVTimperative.g:9681:3: ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) ) )
                    {
                    // InternalQVTimperative.g:9681:3: ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) ) )
                    // InternalQVTimperative.g:9682:4: () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) )
                    {
                    // InternalQVTimperative.g:9682:4: ()
                    // InternalQVTimperative.g:9683:5:
                    {
                    if ( state.backtracking==0 ) {

                      					/* */

                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrefixedPrimaryExpCSAccess().getPrefixExpCSAction_0_0(),
                      						current);

                    }

                    }

                    // InternalQVTimperative.g:9692:4: ( (lv_name_1_0= ruleUnaryOperatorName ) )
                    // InternalQVTimperative.g:9693:5: (lv_name_1_0= ruleUnaryOperatorName )
                    {
                    // InternalQVTimperative.g:9693:5: (lv_name_1_0= ruleUnaryOperatorName )
                    // InternalQVTimperative.g:9694:6: lv_name_1_0= ruleUnaryOperatorName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrefixedPrimaryExpCSAccess().getNameUnaryOperatorNameParserRuleCall_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_135);
                    lv_name_1_0=ruleUnaryOperatorName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrefixedPrimaryExpCSRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.UnaryOperatorName");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:9711:4: ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) )
                    // InternalQVTimperative.g:9712:5: (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS )
                    {
                    // InternalQVTimperative.g:9712:5: (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS )
                    // InternalQVTimperative.g:9713:6: lv_ownedRight_2_0= rulePrefixedPrimaryExpCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrefixedPrimaryExpCSAccess().getOwnedRightPrefixedPrimaryExpCSParserRuleCall_0_2_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedRight_2_0=rulePrefixedPrimaryExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrefixedPrimaryExpCSRule());
                      						}
                      						set(
                      							current,
                      							"ownedRight",
                      							lv_ownedRight_2_0,
                      							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PrefixedPrimaryExpCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:9732:3: this_PrimaryExpCS_3= rulePrimaryExpCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrefixedPrimaryExpCSAccess().getPrimaryExpCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrimaryExpCS_3=rulePrimaryExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrimaryExpCS_3;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrefixedPrimaryExpCS"


    // $ANTLR start "entryRulePrimaryExpCS"
    // InternalQVTimperative.g:9747:1: entryRulePrimaryExpCS returns [EObject current=null] : iv_rulePrimaryExpCS= rulePrimaryExpCS EOF ;
    public final EObject entryRulePrimaryExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryExpCS = null;


        try {
            // InternalQVTimperative.g:9747:53: (iv_rulePrimaryExpCS= rulePrimaryExpCS EOF )
            // InternalQVTimperative.g:9748:2: iv_rulePrimaryExpCS= rulePrimaryExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrimaryExpCS=rulePrimaryExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimaryExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimaryExpCS"


    // $ANTLR start "rulePrimaryExpCS"
    // InternalQVTimperative.g:9754:1: rulePrimaryExpCS returns [EObject current=null] : (this_NestedExpCS_0= ruleNestedExpCS | this_IfExpCS_1= ruleIfExpCS | this_SelfExpCS_2= ruleSelfExpCS | this_PrimitiveLiteralExpCS_3= rulePrimitiveLiteralExpCS | this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS | this_MapLiteralExpCS_5= ruleMapLiteralExpCS | this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS | this_LambdaLiteralExpCS_7= ruleLambdaLiteralExpCS | this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS | this_NameExpCS_9= ruleNameExpCS ) ;
    public final EObject rulePrimaryExpCS() throws RecognitionException {
        EObject current = null;

        EObject this_NestedExpCS_0 = null;

        EObject this_IfExpCS_1 = null;

        EObject this_SelfExpCS_2 = null;

        EObject this_PrimitiveLiteralExpCS_3 = null;

        EObject this_TupleLiteralExpCS_4 = null;

        EObject this_MapLiteralExpCS_5 = null;

        EObject this_CollectionLiteralExpCS_6 = null;

        EObject this_LambdaLiteralExpCS_7 = null;

        EObject this_TypeLiteralExpCS_8 = null;

        EObject this_NameExpCS_9 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:9760:2: ( (this_NestedExpCS_0= ruleNestedExpCS | this_IfExpCS_1= ruleIfExpCS | this_SelfExpCS_2= ruleSelfExpCS | this_PrimitiveLiteralExpCS_3= rulePrimitiveLiteralExpCS | this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS | this_MapLiteralExpCS_5= ruleMapLiteralExpCS | this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS | this_LambdaLiteralExpCS_7= ruleLambdaLiteralExpCS | this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS | this_NameExpCS_9= ruleNameExpCS ) )
            // InternalQVTimperative.g:9761:2: (this_NestedExpCS_0= ruleNestedExpCS | this_IfExpCS_1= ruleIfExpCS | this_SelfExpCS_2= ruleSelfExpCS | this_PrimitiveLiteralExpCS_3= rulePrimitiveLiteralExpCS | this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS | this_MapLiteralExpCS_5= ruleMapLiteralExpCS | this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS | this_LambdaLiteralExpCS_7= ruleLambdaLiteralExpCS | this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS | this_NameExpCS_9= ruleNameExpCS )
            {
            // InternalQVTimperative.g:9761:2: (this_NestedExpCS_0= ruleNestedExpCS | this_IfExpCS_1= ruleIfExpCS | this_SelfExpCS_2= ruleSelfExpCS | this_PrimitiveLiteralExpCS_3= rulePrimitiveLiteralExpCS | this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS | this_MapLiteralExpCS_5= ruleMapLiteralExpCS | this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS | this_LambdaLiteralExpCS_7= ruleLambdaLiteralExpCS | this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS | this_NameExpCS_9= ruleNameExpCS )
            int alt214=10;
            alt214 = dfa214.predict(input);
            switch (alt214) {
                case 1 :
                    // InternalQVTimperative.g:9762:3: this_NestedExpCS_0= ruleNestedExpCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getNestedExpCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NestedExpCS_0=ruleNestedExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NestedExpCS_0;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:9774:3: this_IfExpCS_1= ruleIfExpCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getIfExpCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IfExpCS_1=ruleIfExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IfExpCS_1;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:9786:3: this_SelfExpCS_2= ruleSelfExpCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getSelfExpCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SelfExpCS_2=ruleSelfExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SelfExpCS_2;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:9798:3: this_PrimitiveLiteralExpCS_3= rulePrimitiveLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getPrimitiveLiteralExpCSParserRuleCall_3());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrimitiveLiteralExpCS_3=rulePrimitiveLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrimitiveLiteralExpCS_3;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 5 :
                    // InternalQVTimperative.g:9810:3: this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getTupleLiteralExpCSParserRuleCall_4());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TupleLiteralExpCS_4=ruleTupleLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TupleLiteralExpCS_4;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 6 :
                    // InternalQVTimperative.g:9822:3: this_MapLiteralExpCS_5= ruleMapLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getMapLiteralExpCSParserRuleCall_5());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_MapLiteralExpCS_5=ruleMapLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MapLiteralExpCS_5;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 7 :
                    // InternalQVTimperative.g:9834:3: this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getCollectionLiteralExpCSParserRuleCall_6());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CollectionLiteralExpCS_6=ruleCollectionLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CollectionLiteralExpCS_6;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 8 :
                    // InternalQVTimperative.g:9846:3: this_LambdaLiteralExpCS_7= ruleLambdaLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getLambdaLiteralExpCSParserRuleCall_7());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_LambdaLiteralExpCS_7=ruleLambdaLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LambdaLiteralExpCS_7;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 9 :
                    // InternalQVTimperative.g:9858:3: this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getTypeLiteralExpCSParserRuleCall_8());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypeLiteralExpCS_8=ruleTypeLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypeLiteralExpCS_8;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 10 :
                    // InternalQVTimperative.g:9870:3: this_NameExpCS_9= ruleNameExpCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getNameExpCSParserRuleCall_9());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NameExpCS_9=ruleNameExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NameExpCS_9;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimaryExpCS"


    // $ANTLR start "entryRuleNameExpCS"
    // InternalQVTimperative.g:9885:1: entryRuleNameExpCS returns [EObject current=null] : iv_ruleNameExpCS= ruleNameExpCS EOF ;
    public final EObject entryRuleNameExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNameExpCS = null;


        try {
            // InternalQVTimperative.g:9885:50: (iv_ruleNameExpCS= ruleNameExpCS EOF )
            // InternalQVTimperative.g:9886:2: iv_ruleNameExpCS= ruleNameExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNameExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNameExpCS=ruleNameExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNameExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNameExpCS"


    // $ANTLR start "ruleNameExpCS"
    // InternalQVTimperative.g:9892:1: ruleNameExpCS returns [EObject current=null] : ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS ) )* ( (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS ) )? ( (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS ) )? ( ( (lv_isPre_4_0= '@' ) ) otherlv_5= 'pre' )? ) ;
    public final EObject ruleNameExpCS() throws RecognitionException {
        EObject current = null;

        Token lv_isPre_4_0=null;
        Token otherlv_5=null;
        EObject lv_ownedPathName_0_0 = null;

        EObject lv_ownedSquareBracketedClauses_1_0 = null;

        EObject lv_ownedRoundBracketedClause_2_0 = null;

        EObject lv_ownedCurlyBracketedClause_3_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:9898:2: ( ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS ) )* ( (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS ) )? ( (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS ) )? ( ( (lv_isPre_4_0= '@' ) ) otherlv_5= 'pre' )? ) )
            // InternalQVTimperative.g:9899:2: ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS ) )* ( (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS ) )? ( (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS ) )? ( ( (lv_isPre_4_0= '@' ) ) otherlv_5= 'pre' )? )
            {
            // InternalQVTimperative.g:9899:2: ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS ) )* ( (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS ) )? ( (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS ) )? ( ( (lv_isPre_4_0= '@' ) ) otherlv_5= 'pre' )? )
            // InternalQVTimperative.g:9900:3: ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS ) )* ( (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS ) )? ( (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS ) )? ( ( (lv_isPre_4_0= '@' ) ) otherlv_5= 'pre' )?
            {
            // InternalQVTimperative.g:9900:3: ( (lv_ownedPathName_0_0= rulePathNameCS ) )
            // InternalQVTimperative.g:9901:4: (lv_ownedPathName_0_0= rulePathNameCS )
            {
            // InternalQVTimperative.g:9901:4: (lv_ownedPathName_0_0= rulePathNameCS )
            // InternalQVTimperative.g:9902:5: lv_ownedPathName_0_0= rulePathNameCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNameExpCSAccess().getOwnedPathNamePathNameCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_136);
            lv_ownedPathName_0_0=rulePathNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNameExpCSRule());
              					}
              					set(
              						current,
              						"ownedPathName",
              						lv_ownedPathName_0_0,
              						"org.eclipse.ocl.xtext.base.Base.PathNameCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:9919:3: ( (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS ) )*
            loop215:
            do {
                int alt215=2;
                int LA215_0 = input.LA(1);

                if ( (LA215_0==152) ) {
                    alt215=1;
                }


                switch (alt215) {
            	case 1 :
            	    // InternalQVTimperative.g:9920:4: (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS )
            	    {
            	    // InternalQVTimperative.g:9920:4: (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS )
            	    // InternalQVTimperative.g:9921:5: lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getNameExpCSAccess().getOwnedSquareBracketedClausesSquareBracketedClauseCSParserRuleCall_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_136);
            	    lv_ownedSquareBracketedClauses_1_0=ruleSquareBracketedClauseCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getNameExpCSRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ownedSquareBracketedClauses",
            	      						lv_ownedSquareBracketedClauses_1_0,
            	      						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.SquareBracketedClauseCS");
            	      					afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop215;
                }
            } while (true);

            // InternalQVTimperative.g:9938:3: ( (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS ) )?
            int alt216=2;
            int LA216_0 = input.LA(1);

            if ( (LA216_0==56) ) {
                alt216=1;
            }
            switch (alt216) {
                case 1 :
                    // InternalQVTimperative.g:9939:4: (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS )
                    {
                    // InternalQVTimperative.g:9939:4: (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS )
                    // InternalQVTimperative.g:9940:5: lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getNameExpCSAccess().getOwnedRoundBracketedClauseRoundBracketedClauseCSParserRuleCall_2_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_137);
                    lv_ownedRoundBracketedClause_2_0=ruleRoundBracketedClauseCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getNameExpCSRule());
                      					}
                      					set(
                      						current,
                      						"ownedRoundBracketedClause",
                      						lv_ownedRoundBracketedClause_2_0,
                      						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.RoundBracketedClauseCS");
                      					afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:9957:3: ( (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS ) )?
            int alt217=2;
            alt217 = dfa217.predict(input);
            switch (alt217) {
                case 1 :
                    // InternalQVTimperative.g:9958:4: (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS )
                    {
                    // InternalQVTimperative.g:9958:4: (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS )
                    // InternalQVTimperative.g:9959:5: lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getNameExpCSAccess().getOwnedCurlyBracketedClauseCurlyBracketedClauseCSParserRuleCall_3_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_138);
                    lv_ownedCurlyBracketedClause_3_0=ruleCurlyBracketedClauseCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getNameExpCSRule());
                      					}
                      					set(
                      						current,
                      						"ownedCurlyBracketedClause",
                      						lv_ownedCurlyBracketedClause_3_0,
                      						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CurlyBracketedClauseCS");
                      					afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:9976:3: ( ( (lv_isPre_4_0= '@' ) ) otherlv_5= 'pre' )?
            int alt218=2;
            int LA218_0 = input.LA(1);

            if ( (LA218_0==150) ) {
                alt218=1;
            }
            switch (alt218) {
                case 1 :
                    // InternalQVTimperative.g:9977:4: ( (lv_isPre_4_0= '@' ) ) otherlv_5= 'pre'
                    {
                    // InternalQVTimperative.g:9977:4: ( (lv_isPre_4_0= '@' ) )
                    // InternalQVTimperative.g:9978:5: (lv_isPre_4_0= '@' )
                    {
                    // InternalQVTimperative.g:9978:5: (lv_isPre_4_0= '@' )
                    // InternalQVTimperative.g:9979:6: lv_isPre_4_0= '@'
                    {
                    lv_isPre_4_0=(Token)match(input,150,FollowSets000.FOLLOW_139); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_isPre_4_0, grammarAccess.getNameExpCSAccess().getIsPreCommercialAtKeyword_4_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNameExpCSRule());
                      						}
                      						setWithLastConsumed(current, "isPre", lv_isPre_4_0 != null, "@");

                    }

                    }


                    }

                    otherlv_5=(Token)match(input,151,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getNameExpCSAccess().getPreKeyword_4_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNameExpCS"


    // $ANTLR start "entryRuleCurlyBracketedClauseCS"
    // InternalQVTimperative.g:10000:1: entryRuleCurlyBracketedClauseCS returns [EObject current=null] : iv_ruleCurlyBracketedClauseCS= ruleCurlyBracketedClauseCS EOF ;
    public final EObject entryRuleCurlyBracketedClauseCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCurlyBracketedClauseCS = null;


        try {
            // InternalQVTimperative.g:10000:63: (iv_ruleCurlyBracketedClauseCS= ruleCurlyBracketedClauseCS EOF )
            // InternalQVTimperative.g:10001:2: iv_ruleCurlyBracketedClauseCS= ruleCurlyBracketedClauseCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCurlyBracketedClauseCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCurlyBracketedClauseCS=ruleCurlyBracketedClauseCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCurlyBracketedClauseCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCurlyBracketedClauseCS"


    // $ANTLR start "ruleCurlyBracketedClauseCS"
    // InternalQVTimperative.g:10007:1: ruleCurlyBracketedClauseCS returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleShadowPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleCurlyBracketedClauseCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_ownedParts_2_0 = null;

        EObject lv_ownedParts_4_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:10013:2: ( ( () otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleShadowPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )* )? otherlv_5= '}' ) )
            // InternalQVTimperative.g:10014:2: ( () otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleShadowPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )* )? otherlv_5= '}' )
            {
            // InternalQVTimperative.g:10014:2: ( () otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleShadowPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )* )? otherlv_5= '}' )
            // InternalQVTimperative.g:10015:3: () otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleShadowPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )* )? otherlv_5= '}'
            {
            // InternalQVTimperative.g:10015:3: ()
            // InternalQVTimperative.g:10016:4:
            {
            if ( state.backtracking==0 ) {

              				/* */

            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getCurlyBracketedClauseCSAccess().getCurlyBracketedClauseCSAction_0(),
              					current);

            }

            }

            otherlv_1=(Token)match(input,35,FollowSets000.FOLLOW_140); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getCurlyBracketedClauseCSAccess().getLeftCurlyBracketKeyword_1());

            }
            // InternalQVTimperative.g:10029:3: ( ( (lv_ownedParts_2_0= ruleShadowPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )* )?
            int alt220=2;
            int LA220_0 = input.LA(1);

            if ( (LA220_0==RULE_SINGLE_QUOTED_STRING||(LA220_0>=RULE_SIMPLE_ID && LA220_0<=RULE_ESCAPED_ID)||LA220_0==17||LA220_0==19||(LA220_0>=22 && LA220_0<=23)||(LA220_0>=25 && LA220_0<=26)||(LA220_0>=29 && LA220_0<=34)||LA220_0==39||(LA220_0>=43 && LA220_0<=48)||(LA220_0>=50 && LA220_0<=52)||(LA220_0>=54 && LA220_0<=55)||(LA220_0>=58 && LA220_0<=60)||(LA220_0>=62 && LA220_0<=70)||LA220_0==72||LA220_0==74||LA220_0==76||LA220_0==79||LA220_0==81||LA220_0==83||(LA220_0>=85 && LA220_0<=89)||(LA220_0>=91 && LA220_0<=96)||LA220_0==98||LA220_0==100||(LA220_0>=102 && LA220_0<=105)) ) {
                alt220=1;
            }
            switch (alt220) {
                case 1 :
                    // InternalQVTimperative.g:10030:4: ( (lv_ownedParts_2_0= ruleShadowPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )*
                    {
                    // InternalQVTimperative.g:10030:4: ( (lv_ownedParts_2_0= ruleShadowPartCS ) )
                    // InternalQVTimperative.g:10031:5: (lv_ownedParts_2_0= ruleShadowPartCS )
                    {
                    // InternalQVTimperative.g:10031:5: (lv_ownedParts_2_0= ruleShadowPartCS )
                    // InternalQVTimperative.g:10032:6: lv_ownedParts_2_0= ruleShadowPartCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCurlyBracketedClauseCSAccess().getOwnedPartsShadowPartCSParserRuleCall_2_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_111);
                    lv_ownedParts_2_0=ruleShadowPartCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCurlyBracketedClauseCSRule());
                      						}
                      						add(
                      							current,
                      							"ownedParts",
                      							lv_ownedParts_2_0,
                      							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ShadowPartCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:10049:4: (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )*
                    loop219:
                    do {
                        int alt219=2;
                        int LA219_0 = input.LA(1);

                        if ( (LA219_0==18) ) {
                            alt219=1;
                        }


                        switch (alt219) {
                    	case 1 :
                    	    // InternalQVTimperative.g:10050:5: otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) )
                    	    {
                    	    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getCurlyBracketedClauseCSAccess().getCommaKeyword_2_1_0());

                    	    }
                    	    // InternalQVTimperative.g:10054:5: ( (lv_ownedParts_4_0= ruleShadowPartCS ) )
                    	    // InternalQVTimperative.g:10055:6: (lv_ownedParts_4_0= ruleShadowPartCS )
                    	    {
                    	    // InternalQVTimperative.g:10055:6: (lv_ownedParts_4_0= ruleShadowPartCS )
                    	    // InternalQVTimperative.g:10056:7: lv_ownedParts_4_0= ruleShadowPartCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getCurlyBracketedClauseCSAccess().getOwnedPartsShadowPartCSParserRuleCall_2_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_111);
                    	    lv_ownedParts_4_0=ruleShadowPartCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getCurlyBracketedClauseCSRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedParts",
                    	      								lv_ownedParts_4_0,
                    	      								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ShadowPartCS");
                    	      							afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop219;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getCurlyBracketedClauseCSAccess().getRightCurlyBracketKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCurlyBracketedClauseCS"


    // $ANTLR start "entryRuleRoundBracketedClauseCS"
    // InternalQVTimperative.g:10083:1: entryRuleRoundBracketedClauseCS returns [EObject current=null] : iv_ruleRoundBracketedClauseCS= ruleRoundBracketedClauseCS EOF ;
    public final EObject entryRuleRoundBracketedClauseCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRoundBracketedClauseCS = null;


        try {
            // InternalQVTimperative.g:10083:63: (iv_ruleRoundBracketedClauseCS= ruleRoundBracketedClauseCS EOF )
            // InternalQVTimperative.g:10084:2: iv_ruleRoundBracketedClauseCS= ruleRoundBracketedClauseCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRoundBracketedClauseCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRoundBracketedClauseCS=ruleRoundBracketedClauseCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRoundBracketedClauseCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRoundBracketedClauseCS"


    // $ANTLR start "ruleRoundBracketedClauseCS"
    // InternalQVTimperative.g:10090:1: ruleRoundBracketedClauseCS returns [EObject current=null] : ( () otherlv_1= '(' ( ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) ) ( ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) ) )* )? otherlv_4= ')' ) ;
    public final EObject ruleRoundBracketedClauseCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject lv_ownedArguments_2_0 = null;

        EObject lv_ownedArguments_3_1 = null;

        EObject lv_ownedArguments_3_2 = null;

        EObject lv_ownedArguments_3_3 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:10096:2: ( ( () otherlv_1= '(' ( ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) ) ( ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) ) )* )? otherlv_4= ')' ) )
            // InternalQVTimperative.g:10097:2: ( () otherlv_1= '(' ( ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) ) ( ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) ) )* )? otherlv_4= ')' )
            {
            // InternalQVTimperative.g:10097:2: ( () otherlv_1= '(' ( ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) ) ( ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) ) )* )? otherlv_4= ')' )
            // InternalQVTimperative.g:10098:3: () otherlv_1= '(' ( ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) ) ( ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) ) )* )? otherlv_4= ')'
            {
            // InternalQVTimperative.g:10098:3: ()
            // InternalQVTimperative.g:10099:4:
            {
            if ( state.backtracking==0 ) {

              				/* */

            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRoundBracketedClauseCSAccess().getRoundBracketedClauseCSAction_0(),
              					current);

            }

            }

            otherlv_1=(Token)match(input,56,FollowSets000.FOLLOW_141); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getRoundBracketedClauseCSAccess().getLeftParenthesisKeyword_1());

            }
            // InternalQVTimperative.g:10112:3: ( ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) ) ( ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) ) )* )?
            int alt223=2;
            int LA223_0 = input.LA(1);

            if ( (LA223_0==RULE_SINGLE_QUOTED_STRING||(LA223_0>=RULE_INT && LA223_0<=RULE_ESCAPED_ID)||LA223_0==17||LA223_0==19||(LA223_0>=22 && LA223_0<=26)||(LA223_0>=29 && LA223_0<=34)||LA223_0==39||(LA223_0>=42 && LA223_0<=48)||(LA223_0>=50 && LA223_0<=52)||(LA223_0>=54 && LA223_0<=56)||(LA223_0>=58 && LA223_0<=60)||(LA223_0>=62 && LA223_0<=70)||LA223_0==72||LA223_0==74||LA223_0==76||LA223_0==79||LA223_0==81||LA223_0==83||(LA223_0>=85 && LA223_0<=89)||(LA223_0>=91 && LA223_0<=96)||LA223_0==98||LA223_0==100||(LA223_0>=102 && LA223_0<=108)||(LA223_0>=127 && LA223_0<=141)||LA223_0==143||(LA223_0>=146 && LA223_0<=149)||LA223_0==155||(LA223_0>=160 && LA223_0<=161)) ) {
                alt223=1;
            }
            switch (alt223) {
                case 1 :
                    // InternalQVTimperative.g:10113:4: ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) ) ( ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) ) )*
                    {
                    // InternalQVTimperative.g:10113:4: ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) )
                    // InternalQVTimperative.g:10114:5: (lv_ownedArguments_2_0= ruleNavigatingArgCS )
                    {
                    // InternalQVTimperative.g:10114:5: (lv_ownedArguments_2_0= ruleNavigatingArgCS )
                    // InternalQVTimperative.g:10115:6: lv_ownedArguments_2_0= ruleNavigatingArgCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingArgCSParserRuleCall_2_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_142);
                    lv_ownedArguments_2_0=ruleNavigatingArgCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRoundBracketedClauseCSRule());
                      						}
                      						add(
                      							current,
                      							"ownedArguments",
                      							lv_ownedArguments_2_0,
                      							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingArgCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:10132:4: ( ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) ) )*
                    loop222:
                    do {
                        int alt222=2;
                        int LA222_0 = input.LA(1);

                        if ( (LA222_0==18||LA222_0==21||LA222_0==154) ) {
                            alt222=1;
                        }


                        switch (alt222) {
                    	case 1 :
                    	    // InternalQVTimperative.g:10133:5: ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) )
                    	    {
                    	    // InternalQVTimperative.g:10133:5: ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) )
                    	    // InternalQVTimperative.g:10134:6: (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS )
                    	    {
                    	    // InternalQVTimperative.g:10134:6: (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS )
                    	    int alt221=3;
                    	    switch ( input.LA(1) ) {
                    	    case 18:
                    	        {
                    	        alt221=1;
                    	        }
                    	        break;
                    	    case 21:
                    	        {
                    	        alt221=2;
                    	        }
                    	        break;
                    	    case 154:
                    	        {
                    	        alt221=3;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 221, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt221) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:10135:7: lv_ownedArguments_3_1= ruleNavigatingCommaArgCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              							newCompositeNode(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingCommaArgCSParserRuleCall_2_1_0_0());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_142);
                    	            lv_ownedArguments_3_1=ruleNavigatingCommaArgCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              							if (current==null) {
                    	              								current = createModelElementForParent(grammarAccess.getRoundBracketedClauseCSRule());
                    	              							}
                    	              							add(
                    	              								current,
                    	              								"ownedArguments",
                    	              								lv_ownedArguments_3_1,
                    	              								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingCommaArgCS");
                    	              							afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalQVTimperative.g:10151:7: lv_ownedArguments_3_2= ruleNavigatingSemiArgCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              							newCompositeNode(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingSemiArgCSParserRuleCall_2_1_0_1());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_142);
                    	            lv_ownedArguments_3_2=ruleNavigatingSemiArgCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              							if (current==null) {
                    	              								current = createModelElementForParent(grammarAccess.getRoundBracketedClauseCSRule());
                    	              							}
                    	              							add(
                    	              								current,
                    	              								"ownedArguments",
                    	              								lv_ownedArguments_3_2,
                    	              								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingSemiArgCS");
                    	              							afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // InternalQVTimperative.g:10167:7: lv_ownedArguments_3_3= ruleNavigatingBarArgCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              							newCompositeNode(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingBarArgCSParserRuleCall_2_1_0_2());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_142);
                    	            lv_ownedArguments_3_3=ruleNavigatingBarArgCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              							if (current==null) {
                    	              								current = createModelElementForParent(grammarAccess.getRoundBracketedClauseCSRule());
                    	              							}
                    	              							add(
                    	              								current,
                    	              								"ownedArguments",
                    	              								lv_ownedArguments_3_3,
                    	              								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingBarArgCS");
                    	              							afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop222;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_4=(Token)match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getRoundBracketedClauseCSAccess().getRightParenthesisKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRoundBracketedClauseCS"


    // $ANTLR start "entryRuleSquareBracketedClauseCS"
    // InternalQVTimperative.g:10194:1: entryRuleSquareBracketedClauseCS returns [EObject current=null] : iv_ruleSquareBracketedClauseCS= ruleSquareBracketedClauseCS EOF ;
    public final EObject entryRuleSquareBracketedClauseCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSquareBracketedClauseCS = null;


        try {
            // InternalQVTimperative.g:10194:64: (iv_ruleSquareBracketedClauseCS= ruleSquareBracketedClauseCS EOF )
            // InternalQVTimperative.g:10195:2: iv_ruleSquareBracketedClauseCS= ruleSquareBracketedClauseCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSquareBracketedClauseCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSquareBracketedClauseCS=ruleSquareBracketedClauseCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSquareBracketedClauseCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSquareBracketedClauseCS"


    // $ANTLR start "ruleSquareBracketedClauseCS"
    // InternalQVTimperative.g:10201:1: ruleSquareBracketedClauseCS returns [EObject current=null] : (otherlv_0= '[' ( (lv_ownedTerms_1_0= ruleExpCS ) ) (otherlv_2= ',' ( (lv_ownedTerms_3_0= ruleExpCS ) ) )* otherlv_4= ']' ) ;
    public final EObject ruleSquareBracketedClauseCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedTerms_1_0 = null;

        EObject lv_ownedTerms_3_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:10207:2: ( (otherlv_0= '[' ( (lv_ownedTerms_1_0= ruleExpCS ) ) (otherlv_2= ',' ( (lv_ownedTerms_3_0= ruleExpCS ) ) )* otherlv_4= ']' ) )
            // InternalQVTimperative.g:10208:2: (otherlv_0= '[' ( (lv_ownedTerms_1_0= ruleExpCS ) ) (otherlv_2= ',' ( (lv_ownedTerms_3_0= ruleExpCS ) ) )* otherlv_4= ']' )
            {
            // InternalQVTimperative.g:10208:2: (otherlv_0= '[' ( (lv_ownedTerms_1_0= ruleExpCS ) ) (otherlv_2= ',' ( (lv_ownedTerms_3_0= ruleExpCS ) ) )* otherlv_4= ']' )
            // InternalQVTimperative.g:10209:3: otherlv_0= '[' ( (lv_ownedTerms_1_0= ruleExpCS ) ) (otherlv_2= ',' ( (lv_ownedTerms_3_0= ruleExpCS ) ) )* otherlv_4= ']'
            {
            otherlv_0=(Token)match(input,152,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSquareBracketedClauseCSAccess().getLeftSquareBracketKeyword_0());

            }
            // InternalQVTimperative.g:10213:3: ( (lv_ownedTerms_1_0= ruleExpCS ) )
            // InternalQVTimperative.g:10214:4: (lv_ownedTerms_1_0= ruleExpCS )
            {
            // InternalQVTimperative.g:10214:4: (lv_ownedTerms_1_0= ruleExpCS )
            // InternalQVTimperative.g:10215:5: lv_ownedTerms_1_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSquareBracketedClauseCSAccess().getOwnedTermsExpCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_143);
            lv_ownedTerms_1_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSquareBracketedClauseCSRule());
              					}
              					add(
              						current,
              						"ownedTerms",
              						lv_ownedTerms_1_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:10232:3: (otherlv_2= ',' ( (lv_ownedTerms_3_0= ruleExpCS ) ) )*
            loop224:
            do {
                int alt224=2;
                int LA224_0 = input.LA(1);

                if ( (LA224_0==18) ) {
                    alt224=1;
                }


                switch (alt224) {
            	case 1 :
            	    // InternalQVTimperative.g:10233:4: otherlv_2= ',' ( (lv_ownedTerms_3_0= ruleExpCS ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getSquareBracketedClauseCSAccess().getCommaKeyword_2_0());

            	    }
            	    // InternalQVTimperative.g:10237:4: ( (lv_ownedTerms_3_0= ruleExpCS ) )
            	    // InternalQVTimperative.g:10238:5: (lv_ownedTerms_3_0= ruleExpCS )
            	    {
            	    // InternalQVTimperative.g:10238:5: (lv_ownedTerms_3_0= ruleExpCS )
            	    // InternalQVTimperative.g:10239:6: lv_ownedTerms_3_0= ruleExpCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSquareBracketedClauseCSAccess().getOwnedTermsExpCSParserRuleCall_2_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_143);
            	    lv_ownedTerms_3_0=ruleExpCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSquareBracketedClauseCSRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedTerms",
            	      							lv_ownedTerms_3_0,
            	      							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
            	      						afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop224;
                }
            } while (true);

            otherlv_4=(Token)match(input,153,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getSquareBracketedClauseCSAccess().getRightSquareBracketKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSquareBracketedClauseCS"


    // $ANTLR start "entryRuleNavigatingArgCS"
    // InternalQVTimperative.g:10265:1: entryRuleNavigatingArgCS returns [EObject current=null] : iv_ruleNavigatingArgCS= ruleNavigatingArgCS EOF ;
    public final EObject entryRuleNavigatingArgCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNavigatingArgCS = null;


        try {
            // InternalQVTimperative.g:10265:56: (iv_ruleNavigatingArgCS= ruleNavigatingArgCS EOF )
            // InternalQVTimperative.g:10266:2: iv_ruleNavigatingArgCS= ruleNavigatingArgCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNavigatingArgCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNavigatingArgCS=ruleNavigatingArgCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNavigatingArgCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNavigatingArgCS"


    // $ANTLR start "ruleNavigatingArgCS"
    // InternalQVTimperative.g:10272:1: ruleNavigatingArgCS returns [EObject current=null] : ( ( ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) ) ( ( (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )? (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )? ) | ( (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )? ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )? otherlv_18= 'in' ( (lv_ownedInitExpression_19_0= ruleExpCS ) ) ) )? ) | (otherlv_20= ':' ( (lv_ownedType_21_0= ruleTypeExpCS ) ) ) ) ;
    public final EObject ruleNavigatingArgCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        EObject lv_ownedNameExpression_0_0 = null;

        EObject lv_ownedCoIterator_3_0 = null;

        EObject lv_ownedInitExpression_5_0 = null;

        EObject lv_ownedType_7_0 = null;

        EObject lv_ownedCoIterator_10_0 = null;

        EObject lv_ownedInitExpression_12_0 = null;

        EObject lv_ownedType_14_0 = null;

        EObject lv_ownedCoIterator_17_0 = null;

        EObject lv_ownedInitExpression_19_0 = null;

        EObject lv_ownedType_21_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:10278:2: ( ( ( ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) ) ( ( (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )? (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )? ) | ( (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )? ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )? otherlv_18= 'in' ( (lv_ownedInitExpression_19_0= ruleExpCS ) ) ) )? ) | (otherlv_20= ':' ( (lv_ownedType_21_0= ruleTypeExpCS ) ) ) ) )
            // InternalQVTimperative.g:10279:2: ( ( ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) ) ( ( (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )? (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )? ) | ( (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )? ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )? otherlv_18= 'in' ( (lv_ownedInitExpression_19_0= ruleExpCS ) ) ) )? ) | (otherlv_20= ':' ( (lv_ownedType_21_0= ruleTypeExpCS ) ) ) )
            {
            // InternalQVTimperative.g:10279:2: ( ( ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) ) ( ( (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )? (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )? ) | ( (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )? ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )? otherlv_18= 'in' ( (lv_ownedInitExpression_19_0= ruleExpCS ) ) ) )? ) | (otherlv_20= ':' ( (lv_ownedType_21_0= ruleTypeExpCS ) ) ) )
            int alt234=2;
            int LA234_0 = input.LA(1);

            if ( (LA234_0==RULE_SINGLE_QUOTED_STRING||(LA234_0>=RULE_INT && LA234_0<=RULE_ESCAPED_ID)||LA234_0==17||LA234_0==19||(LA234_0>=22 && LA234_0<=23)||(LA234_0>=25 && LA234_0<=26)||(LA234_0>=29 && LA234_0<=34)||LA234_0==39||(LA234_0>=42 && LA234_0<=48)||(LA234_0>=50 && LA234_0<=52)||(LA234_0>=54 && LA234_0<=56)||(LA234_0>=58 && LA234_0<=60)||(LA234_0>=62 && LA234_0<=70)||LA234_0==72||LA234_0==74||LA234_0==76||LA234_0==79||LA234_0==81||LA234_0==83||(LA234_0>=85 && LA234_0<=89)||(LA234_0>=91 && LA234_0<=96)||LA234_0==98||LA234_0==100||(LA234_0>=102 && LA234_0<=108)||(LA234_0>=127 && LA234_0<=141)||LA234_0==143||(LA234_0>=146 && LA234_0<=149)||LA234_0==155||(LA234_0>=160 && LA234_0<=161)) ) {
                alt234=1;
            }
            else if ( (LA234_0==24) ) {
                alt234=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 234, 0, input);

                throw nvae;
            }
            switch (alt234) {
                case 1 :
                    // InternalQVTimperative.g:10280:3: ( ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) ) ( ( (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )? (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )? ) | ( (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )? ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )? otherlv_18= 'in' ( (lv_ownedInitExpression_19_0= ruleExpCS ) ) ) )? )
                    {
                    // InternalQVTimperative.g:10280:3: ( ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) ) ( ( (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )? (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )? ) | ( (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )? ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )? otherlv_18= 'in' ( (lv_ownedInitExpression_19_0= ruleExpCS ) ) ) )? )
                    // InternalQVTimperative.g:10281:4: ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) ) ( ( (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )? (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )? ) | ( (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )? ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )? otherlv_18= 'in' ( (lv_ownedInitExpression_19_0= ruleExpCS ) ) ) )?
                    {
                    // InternalQVTimperative.g:10281:4: ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) )
                    // InternalQVTimperative.g:10282:5: (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS )
                    {
                    // InternalQVTimperative.g:10282:5: (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS )
                    // InternalQVTimperative.g:10283:6: lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedNameExpressionNavigatingArgExpCSParserRuleCall_0_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_144);
                    lv_ownedNameExpression_0_0=ruleNavigatingArgExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                      						}
                      						set(
                      							current,
                      							"ownedNameExpression",
                      							lv_ownedNameExpression_0_0,
                      							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingArgExpCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:10300:4: ( ( (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )? (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )? ) | ( (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )? ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )? otherlv_18= 'in' ( (lv_ownedInitExpression_19_0= ruleExpCS ) ) ) )?
                    int alt233=4;
                    alt233 = dfa233.predict(input);
                    switch (alt233) {
                        case 1 :
                            // InternalQVTimperative.g:10301:5: ( (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )
                            {
                            // InternalQVTimperative.g:10301:5: ( (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )
                            // InternalQVTimperative.g:10302:6: (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
                            {
                            // InternalQVTimperative.g:10302:6: (otherlv_1= 'with' | otherlv_2= '<-' )
                            int alt225=2;
                            int LA225_0 = input.LA(1);

                            if ( (LA225_0==144) ) {
                                alt225=1;
                            }
                            else if ( (LA225_0==145) ) {
                                alt225=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 225, 0, input);

                                throw nvae;
                            }
                            switch (alt225) {
                                case 1 :
                                    // InternalQVTimperative.g:10303:7: otherlv_1= 'with'
                                    {
                                    otherlv_1=(Token)match(input,144,FollowSets000.FOLLOW_5); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_1, grammarAccess.getNavigatingArgCSAccess().getWithKeyword_0_1_0_0_0());

                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalQVTimperative.g:10308:7: otherlv_2= '<-'
                                    {
                                    otherlv_2=(Token)match(input,145,FollowSets000.FOLLOW_5); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_2, grammarAccess.getNavigatingArgCSAccess().getLessThanSignHyphenMinusKeyword_0_1_0_0_1());

                                    }

                                    }
                                    break;

                            }

                            // InternalQVTimperative.g:10313:6: ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) )
                            // InternalQVTimperative.g:10314:7: (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS )
                            {
                            // InternalQVTimperative.g:10314:7: (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS )
                            // InternalQVTimperative.g:10315:8: lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_0_1_0_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_145);
                            lv_ownedCoIterator_3_0=ruleCoIteratorVariableCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                              								}
                              								set(
                              									current,
                              									"ownedCoIterator",
                              									lv_ownedCoIterator_3_0,
                              									"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CoIteratorVariableCS");
                              								afterParserOrEnumRuleCall();

                            }

                            }


                            }

                            // InternalQVTimperative.g:10332:6: (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
                            int alt226=2;
                            int LA226_0 = input.LA(1);

                            if ( (LA226_0==53) ) {
                                alt226=1;
                            }
                            switch (alt226) {
                                case 1 :
                                    // InternalQVTimperative.g:10333:7: otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                                    {
                                    otherlv_4=(Token)match(input,53,FollowSets000.FOLLOW_8); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_4, grammarAccess.getNavigatingArgCSAccess().getEqualsSignKeyword_0_1_0_2_0());

                                    }
                                    // InternalQVTimperative.g:10337:7: ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                                    // InternalQVTimperative.g:10338:8: (lv_ownedInitExpression_5_0= ruleExpCS )
                                    {
                                    // InternalQVTimperative.g:10338:8: (lv_ownedInitExpression_5_0= ruleExpCS )
                                    // InternalQVTimperative.g:10339:9: lv_ownedInitExpression_5_0= ruleExpCS
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_1_0_2_1_0());

                                    }
                                    pushFollow(FollowSets000.FOLLOW_2);
                                    lv_ownedInitExpression_5_0=ruleExpCS();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                                      									}
                                      									set(
                                      										current,
                                      										"ownedInitExpression",
                                      										lv_ownedInitExpression_5_0,
                                      										"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                                      									afterParserOrEnumRuleCall();

                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalQVTimperative.g:10359:5: (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )? (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )? )
                            {
                            // InternalQVTimperative.g:10359:5: (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )? (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )? )
                            // InternalQVTimperative.g:10360:6: otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )? (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )?
                            {
                            otherlv_6=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_6, grammarAccess.getNavigatingArgCSAccess().getColonKeyword_0_1_1_0());

                            }
                            // InternalQVTimperative.g:10364:6: ( (lv_ownedType_7_0= ruleTypeExpCS ) )
                            // InternalQVTimperative.g:10365:7: (lv_ownedType_7_0= ruleTypeExpCS )
                            {
                            // InternalQVTimperative.g:10365:7: (lv_ownedType_7_0= ruleTypeExpCS )
                            // InternalQVTimperative.g:10366:8: lv_ownedType_7_0= ruleTypeExpCS
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_0_1_1_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_146);
                            lv_ownedType_7_0=ruleTypeExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                              								}
                              								set(
                              									current,
                              									"ownedType",
                              									lv_ownedType_7_0,
                              									"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                              								afterParserOrEnumRuleCall();

                            }

                            }


                            }

                            // InternalQVTimperative.g:10383:6: ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )?
                            int alt228=2;
                            int LA228_0 = input.LA(1);

                            if ( ((LA228_0>=144 && LA228_0<=145)) ) {
                                alt228=1;
                            }
                            switch (alt228) {
                                case 1 :
                                    // InternalQVTimperative.g:10384:7: (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) )
                                    {
                                    // InternalQVTimperative.g:10384:7: (otherlv_8= 'with' | otherlv_9= '<-' )
                                    int alt227=2;
                                    int LA227_0 = input.LA(1);

                                    if ( (LA227_0==144) ) {
                                        alt227=1;
                                    }
                                    else if ( (LA227_0==145) ) {
                                        alt227=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 227, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt227) {
                                        case 1 :
                                            // InternalQVTimperative.g:10385:8: otherlv_8= 'with'
                                            {
                                            otherlv_8=(Token)match(input,144,FollowSets000.FOLLOW_5); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              								newLeafNode(otherlv_8, grammarAccess.getNavigatingArgCSAccess().getWithKeyword_0_1_1_2_0_0());

                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalQVTimperative.g:10390:8: otherlv_9= '<-'
                                            {
                                            otherlv_9=(Token)match(input,145,FollowSets000.FOLLOW_5); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              								newLeafNode(otherlv_9, grammarAccess.getNavigatingArgCSAccess().getLessThanSignHyphenMinusKeyword_0_1_1_2_0_1());

                                            }

                                            }
                                            break;

                                    }

                                    // InternalQVTimperative.g:10395:7: ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) )
                                    // InternalQVTimperative.g:10396:8: (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS )
                                    {
                                    // InternalQVTimperative.g:10396:8: (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS )
                                    // InternalQVTimperative.g:10397:9: lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_0_1_1_2_1_0());

                                    }
                                    pushFollow(FollowSets000.FOLLOW_145);
                                    lv_ownedCoIterator_10_0=ruleCoIteratorVariableCS();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                                      									}
                                      									set(
                                      										current,
                                      										"ownedCoIterator",
                                      										lv_ownedCoIterator_10_0,
                                      										"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CoIteratorVariableCS");
                                      									afterParserOrEnumRuleCall();

                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            // InternalQVTimperative.g:10415:6: (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )?
                            int alt229=2;
                            int LA229_0 = input.LA(1);

                            if ( (LA229_0==53) ) {
                                alt229=1;
                            }
                            switch (alt229) {
                                case 1 :
                                    // InternalQVTimperative.g:10416:7: otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) )
                                    {
                                    otherlv_11=(Token)match(input,53,FollowSets000.FOLLOW_8); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_11, grammarAccess.getNavigatingArgCSAccess().getEqualsSignKeyword_0_1_1_3_0());

                                    }
                                    // InternalQVTimperative.g:10420:7: ( (lv_ownedInitExpression_12_0= ruleExpCS ) )
                                    // InternalQVTimperative.g:10421:8: (lv_ownedInitExpression_12_0= ruleExpCS )
                                    {
                                    // InternalQVTimperative.g:10421:8: (lv_ownedInitExpression_12_0= ruleExpCS )
                                    // InternalQVTimperative.g:10422:9: lv_ownedInitExpression_12_0= ruleExpCS
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_1_1_3_1_0());

                                    }
                                    pushFollow(FollowSets000.FOLLOW_2);
                                    lv_ownedInitExpression_12_0=ruleExpCS();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                                      									}
                                      									set(
                                      										current,
                                      										"ownedInitExpression",
                                      										lv_ownedInitExpression_12_0,
                                      										"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                                      									afterParserOrEnumRuleCall();

                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalQVTimperative.g:10442:5: ( (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )? ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )? otherlv_18= 'in' ( (lv_ownedInitExpression_19_0= ruleExpCS ) ) )
                            {
                            // InternalQVTimperative.g:10442:5: ( (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )? ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )? otherlv_18= 'in' ( (lv_ownedInitExpression_19_0= ruleExpCS ) ) )
                            // InternalQVTimperative.g:10443:6: (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )? ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )? otherlv_18= 'in' ( (lv_ownedInitExpression_19_0= ruleExpCS ) )
                            {
                            // InternalQVTimperative.g:10443:6: (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )?
                            int alt230=2;
                            int LA230_0 = input.LA(1);

                            if ( (LA230_0==24) ) {
                                alt230=1;
                            }
                            switch (alt230) {
                                case 1 :
                                    // InternalQVTimperative.g:10444:7: otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) )
                                    {
                                    otherlv_13=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_13, grammarAccess.getNavigatingArgCSAccess().getColonKeyword_0_1_2_0_0());

                                    }
                                    // InternalQVTimperative.g:10448:7: ( (lv_ownedType_14_0= ruleTypeExpCS ) )
                                    // InternalQVTimperative.g:10449:8: (lv_ownedType_14_0= ruleTypeExpCS )
                                    {
                                    // InternalQVTimperative.g:10449:8: (lv_ownedType_14_0= ruleTypeExpCS )
                                    // InternalQVTimperative.g:10450:9: lv_ownedType_14_0= ruleTypeExpCS
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_0_1_2_0_1_0());

                                    }
                                    pushFollow(FollowSets000.FOLLOW_147);
                                    lv_ownedType_14_0=ruleTypeExpCS();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                                      									}
                                      									set(
                                      										current,
                                      										"ownedType",
                                      										lv_ownedType_14_0,
                                      										"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                                      									afterParserOrEnumRuleCall();

                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            // InternalQVTimperative.g:10468:6: ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )?
                            int alt232=2;
                            int LA232_0 = input.LA(1);

                            if ( ((LA232_0>=144 && LA232_0<=145)) ) {
                                alt232=1;
                            }
                            switch (alt232) {
                                case 1 :
                                    // InternalQVTimperative.g:10469:7: (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) )
                                    {
                                    // InternalQVTimperative.g:10469:7: (otherlv_15= 'with' | otherlv_16= '<-' )
                                    int alt231=2;
                                    int LA231_0 = input.LA(1);

                                    if ( (LA231_0==144) ) {
                                        alt231=1;
                                    }
                                    else if ( (LA231_0==145) ) {
                                        alt231=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 231, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt231) {
                                        case 1 :
                                            // InternalQVTimperative.g:10470:8: otherlv_15= 'with'
                                            {
                                            otherlv_15=(Token)match(input,144,FollowSets000.FOLLOW_5); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              								newLeafNode(otherlv_15, grammarAccess.getNavigatingArgCSAccess().getWithKeyword_0_1_2_1_0_0());

                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalQVTimperative.g:10475:8: otherlv_16= '<-'
                                            {
                                            otherlv_16=(Token)match(input,145,FollowSets000.FOLLOW_5); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              								newLeafNode(otherlv_16, grammarAccess.getNavigatingArgCSAccess().getLessThanSignHyphenMinusKeyword_0_1_2_1_0_1());

                                            }

                                            }
                                            break;

                                    }

                                    // InternalQVTimperative.g:10480:7: ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) )
                                    // InternalQVTimperative.g:10481:8: (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS )
                                    {
                                    // InternalQVTimperative.g:10481:8: (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS )
                                    // InternalQVTimperative.g:10482:9: lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_0_1_2_1_1_0());

                                    }
                                    pushFollow(FollowSets000.FOLLOW_44);
                                    lv_ownedCoIterator_17_0=ruleCoIteratorVariableCS();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                                      									}
                                      									set(
                                      										current,
                                      										"ownedCoIterator",
                                      										lv_ownedCoIterator_17_0,
                                      										"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CoIteratorVariableCS");
                                      									afterParserOrEnumRuleCall();

                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            otherlv_18=(Token)match(input,49,FollowSets000.FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_18, grammarAccess.getNavigatingArgCSAccess().getInKeyword_0_1_2_2());

                            }
                            // InternalQVTimperative.g:10504:6: ( (lv_ownedInitExpression_19_0= ruleExpCS ) )
                            // InternalQVTimperative.g:10505:7: (lv_ownedInitExpression_19_0= ruleExpCS )
                            {
                            // InternalQVTimperative.g:10505:7: (lv_ownedInitExpression_19_0= ruleExpCS )
                            // InternalQVTimperative.g:10506:8: lv_ownedInitExpression_19_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_1_2_3_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedInitExpression_19_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                              								}
                              								set(
                              									current,
                              									"ownedInitExpression",
                              									lv_ownedInitExpression_19_0,
                              									"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              								afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:10527:3: (otherlv_20= ':' ( (lv_ownedType_21_0= ruleTypeExpCS ) ) )
                    {
                    // InternalQVTimperative.g:10527:3: (otherlv_20= ':' ( (lv_ownedType_21_0= ruleTypeExpCS ) ) )
                    // InternalQVTimperative.g:10528:4: otherlv_20= ':' ( (lv_ownedType_21_0= ruleTypeExpCS ) )
                    {
                    otherlv_20=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_20, grammarAccess.getNavigatingArgCSAccess().getColonKeyword_1_0());

                    }
                    // InternalQVTimperative.g:10532:4: ( (lv_ownedType_21_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:10533:5: (lv_ownedType_21_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:10533:5: (lv_ownedType_21_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:10534:6: lv_ownedType_21_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedType_21_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                      						}
                      						set(
                      							current,
                      							"ownedType",
                      							lv_ownedType_21_0,
                      							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNavigatingArgCS"


    // $ANTLR start "entryRuleNavigatingBarArgCS"
    // InternalQVTimperative.g:10556:1: entryRuleNavigatingBarArgCS returns [EObject current=null] : iv_ruleNavigatingBarArgCS= ruleNavigatingBarArgCS EOF ;
    public final EObject entryRuleNavigatingBarArgCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNavigatingBarArgCS = null;


        try {
            // InternalQVTimperative.g:10556:59: (iv_ruleNavigatingBarArgCS= ruleNavigatingBarArgCS EOF )
            // InternalQVTimperative.g:10557:2: iv_ruleNavigatingBarArgCS= ruleNavigatingBarArgCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNavigatingBarArgCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNavigatingBarArgCS=ruleNavigatingBarArgCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNavigatingBarArgCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNavigatingBarArgCS"


    // $ANTLR start "ruleNavigatingBarArgCS"
    // InternalQVTimperative.g:10563:1: ruleNavigatingBarArgCS returns [EObject current=null] : ( ( (lv_prefix_0_0= '|' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? ) ;
    public final EObject ruleNavigatingBarArgCS() throws RecognitionException {
        EObject current = null;

        Token lv_prefix_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedNameExpression_1_0 = null;

        EObject lv_ownedType_3_0 = null;

        EObject lv_ownedInitExpression_5_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:10569:2: ( ( ( (lv_prefix_0_0= '|' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? ) )
            // InternalQVTimperative.g:10570:2: ( ( (lv_prefix_0_0= '|' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? )
            {
            // InternalQVTimperative.g:10570:2: ( ( (lv_prefix_0_0= '|' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? )
            // InternalQVTimperative.g:10571:3: ( (lv_prefix_0_0= '|' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )?
            {
            // InternalQVTimperative.g:10571:3: ( (lv_prefix_0_0= '|' ) )
            // InternalQVTimperative.g:10572:4: (lv_prefix_0_0= '|' )
            {
            // InternalQVTimperative.g:10572:4: (lv_prefix_0_0= '|' )
            // InternalQVTimperative.g:10573:5: lv_prefix_0_0= '|'
            {
            lv_prefix_0_0=(Token)match(input,154,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_prefix_0_0, grammarAccess.getNavigatingBarArgCSAccess().getPrefixVerticalLineKeyword_0_0());

            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getNavigatingBarArgCSRule());
              					}
              					setWithLastConsumed(current, "prefix", lv_prefix_0_0, "|");

            }

            }


            }

            // InternalQVTimperative.g:10585:3: ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) )
            // InternalQVTimperative.g:10586:4: (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS )
            {
            // InternalQVTimperative.g:10586:4: (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS )
            // InternalQVTimperative.g:10587:5: lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNavigatingBarArgCSAccess().getOwnedNameExpressionNavigatingArgExpCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_46);
            lv_ownedNameExpression_1_0=ruleNavigatingArgExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNavigatingBarArgCSRule());
              					}
              					set(
              						current,
              						"ownedNameExpression",
              						lv_ownedNameExpression_1_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingArgExpCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:10604:3: (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )?
            int alt236=2;
            int LA236_0 = input.LA(1);

            if ( (LA236_0==24) ) {
                alt236=1;
            }
            switch (alt236) {
                case 1 :
                    // InternalQVTimperative.g:10605:4: otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
                    {
                    otherlv_2=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getNavigatingBarArgCSAccess().getColonKeyword_2_0());

                    }
                    // InternalQVTimperative.g:10609:4: ( (lv_ownedType_3_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:10610:5: (lv_ownedType_3_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:10610:5: (lv_ownedType_3_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:10611:6: lv_ownedType_3_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNavigatingBarArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_145);
                    lv_ownedType_3_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNavigatingBarArgCSRule());
                      						}
                      						set(
                      							current,
                      							"ownedType",
                      							lv_ownedType_3_0,
                      							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:10628:4: (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
                    int alt235=2;
                    int LA235_0 = input.LA(1);

                    if ( (LA235_0==53) ) {
                        alt235=1;
                    }
                    switch (alt235) {
                        case 1 :
                            // InternalQVTimperative.g:10629:5: otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                            {
                            otherlv_4=(Token)match(input,53,FollowSets000.FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getNavigatingBarArgCSAccess().getEqualsSignKeyword_2_2_0());

                            }
                            // InternalQVTimperative.g:10633:5: ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                            // InternalQVTimperative.g:10634:6: (lv_ownedInitExpression_5_0= ruleExpCS )
                            {
                            // InternalQVTimperative.g:10634:6: (lv_ownedInitExpression_5_0= ruleExpCS )
                            // InternalQVTimperative.g:10635:7: lv_ownedInitExpression_5_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getNavigatingBarArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_2_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedInitExpression_5_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getNavigatingBarArgCSRule());
                              							}
                              							set(
                              								current,
                              								"ownedInitExpression",
                              								lv_ownedInitExpression_5_0,
                              								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              							afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNavigatingBarArgCS"


    // $ANTLR start "entryRuleNavigatingCommaArgCS"
    // InternalQVTimperative.g:10658:1: entryRuleNavigatingCommaArgCS returns [EObject current=null] : iv_ruleNavigatingCommaArgCS= ruleNavigatingCommaArgCS EOF ;
    public final EObject entryRuleNavigatingCommaArgCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNavigatingCommaArgCS = null;


        try {
            // InternalQVTimperative.g:10658:61: (iv_ruleNavigatingCommaArgCS= ruleNavigatingCommaArgCS EOF )
            // InternalQVTimperative.g:10659:2: iv_ruleNavigatingCommaArgCS= ruleNavigatingCommaArgCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNavigatingCommaArgCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNavigatingCommaArgCS=ruleNavigatingCommaArgCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNavigatingCommaArgCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNavigatingCommaArgCS"


    // $ANTLR start "ruleNavigatingCommaArgCS"
    // InternalQVTimperative.g:10665:1: ruleNavigatingCommaArgCS returns [EObject current=null] : ( ( (lv_prefix_0_0= ',' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) ( ( (otherlv_2= 'with' | otherlv_3= '<-' ) ( (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS ) ) (otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) )? ) | (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) ( (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) ) )? (otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) ) )? ) | ( (otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) ) )? ( (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) ) )? otherlv_19= 'in' ( (lv_ownedInitExpression_20_0= ruleExpCS ) ) ) )? ) ;
    public final EObject ruleNavigatingCommaArgCS() throws RecognitionException {
        EObject current = null;

        Token lv_prefix_0_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        EObject lv_ownedNameExpression_1_0 = null;

        EObject lv_ownedCoIterator_4_0 = null;

        EObject lv_ownedInitExpression_6_0 = null;

        EObject lv_ownedType_8_0 = null;

        EObject lv_ownedCoIterator_11_0 = null;

        EObject lv_ownedInitExpression_13_0 = null;

        EObject lv_ownedType_15_0 = null;

        EObject lv_ownedCoIterator_18_0 = null;

        EObject lv_ownedInitExpression_20_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:10671:2: ( ( ( (lv_prefix_0_0= ',' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) ( ( (otherlv_2= 'with' | otherlv_3= '<-' ) ( (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS ) ) (otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) )? ) | (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) ( (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) ) )? (otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) ) )? ) | ( (otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) ) )? ( (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) ) )? otherlv_19= 'in' ( (lv_ownedInitExpression_20_0= ruleExpCS ) ) ) )? ) )
            // InternalQVTimperative.g:10672:2: ( ( (lv_prefix_0_0= ',' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) ( ( (otherlv_2= 'with' | otherlv_3= '<-' ) ( (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS ) ) (otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) )? ) | (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) ( (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) ) )? (otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) ) )? ) | ( (otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) ) )? ( (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) ) )? otherlv_19= 'in' ( (lv_ownedInitExpression_20_0= ruleExpCS ) ) ) )? )
            {
            // InternalQVTimperative.g:10672:2: ( ( (lv_prefix_0_0= ',' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) ( ( (otherlv_2= 'with' | otherlv_3= '<-' ) ( (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS ) ) (otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) )? ) | (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) ( (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) ) )? (otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) ) )? ) | ( (otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) ) )? ( (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) ) )? otherlv_19= 'in' ( (lv_ownedInitExpression_20_0= ruleExpCS ) ) ) )? )
            // InternalQVTimperative.g:10673:3: ( (lv_prefix_0_0= ',' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) ( ( (otherlv_2= 'with' | otherlv_3= '<-' ) ( (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS ) ) (otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) )? ) | (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) ( (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) ) )? (otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) ) )? ) | ( (otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) ) )? ( (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) ) )? otherlv_19= 'in' ( (lv_ownedInitExpression_20_0= ruleExpCS ) ) ) )?
            {
            // InternalQVTimperative.g:10673:3: ( (lv_prefix_0_0= ',' ) )
            // InternalQVTimperative.g:10674:4: (lv_prefix_0_0= ',' )
            {
            // InternalQVTimperative.g:10674:4: (lv_prefix_0_0= ',' )
            // InternalQVTimperative.g:10675:5: lv_prefix_0_0= ','
            {
            lv_prefix_0_0=(Token)match(input,18,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_prefix_0_0, grammarAccess.getNavigatingCommaArgCSAccess().getPrefixCommaKeyword_0_0());

            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getNavigatingCommaArgCSRule());
              					}
              					setWithLastConsumed(current, "prefix", lv_prefix_0_0, ",");

            }

            }


            }

            // InternalQVTimperative.g:10687:3: ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) )
            // InternalQVTimperative.g:10688:4: (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS )
            {
            // InternalQVTimperative.g:10688:4: (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS )
            // InternalQVTimperative.g:10689:5: lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedNameExpressionNavigatingArgExpCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_144);
            lv_ownedNameExpression_1_0=ruleNavigatingArgExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
              					}
              					set(
              						current,
              						"ownedNameExpression",
              						lv_ownedNameExpression_1_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingArgExpCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:10706:3: ( ( (otherlv_2= 'with' | otherlv_3= '<-' ) ( (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS ) ) (otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) )? ) | (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) ( (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) ) )? (otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) ) )? ) | ( (otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) ) )? ( (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) ) )? otherlv_19= 'in' ( (lv_ownedInitExpression_20_0= ruleExpCS ) ) ) )?
            int alt245=4;
            alt245 = dfa245.predict(input);
            switch (alt245) {
                case 1 :
                    // InternalQVTimperative.g:10707:4: ( (otherlv_2= 'with' | otherlv_3= '<-' ) ( (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS ) ) (otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) )? )
                    {
                    // InternalQVTimperative.g:10707:4: ( (otherlv_2= 'with' | otherlv_3= '<-' ) ( (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS ) ) (otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) )? )
                    // InternalQVTimperative.g:10708:5: (otherlv_2= 'with' | otherlv_3= '<-' ) ( (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS ) ) (otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) )?
                    {
                    // InternalQVTimperative.g:10708:5: (otherlv_2= 'with' | otherlv_3= '<-' )
                    int alt237=2;
                    int LA237_0 = input.LA(1);

                    if ( (LA237_0==144) ) {
                        alt237=1;
                    }
                    else if ( (LA237_0==145) ) {
                        alt237=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 237, 0, input);

                        throw nvae;
                    }
                    switch (alt237) {
                        case 1 :
                            // InternalQVTimperative.g:10709:6: otherlv_2= 'with'
                            {
                            otherlv_2=(Token)match(input,144,FollowSets000.FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getNavigatingCommaArgCSAccess().getWithKeyword_2_0_0_0());

                            }

                            }
                            break;
                        case 2 :
                            // InternalQVTimperative.g:10714:6: otherlv_3= '<-'
                            {
                            otherlv_3=(Token)match(input,145,FollowSets000.FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getNavigatingCommaArgCSAccess().getLessThanSignHyphenMinusKeyword_2_0_0_1());

                            }

                            }
                            break;

                    }

                    // InternalQVTimperative.g:10719:5: ( (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS ) )
                    // InternalQVTimperative.g:10720:6: (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS )
                    {
                    // InternalQVTimperative.g:10720:6: (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS )
                    // InternalQVTimperative.g:10721:7: lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_2_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_145);
                    lv_ownedCoIterator_4_0=ruleCoIteratorVariableCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
                      							}
                      							set(
                      								current,
                      								"ownedCoIterator",
                      								lv_ownedCoIterator_4_0,
                      								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CoIteratorVariableCS");
                      							afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:10738:5: (otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) )?
                    int alt238=2;
                    int LA238_0 = input.LA(1);

                    if ( (LA238_0==53) ) {
                        alt238=1;
                    }
                    switch (alt238) {
                        case 1 :
                            // InternalQVTimperative.g:10739:6: otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) )
                            {
                            otherlv_5=(Token)match(input,53,FollowSets000.FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_5, grammarAccess.getNavigatingCommaArgCSAccess().getEqualsSignKeyword_2_0_2_0());

                            }
                            // InternalQVTimperative.g:10743:6: ( (lv_ownedInitExpression_6_0= ruleExpCS ) )
                            // InternalQVTimperative.g:10744:7: (lv_ownedInitExpression_6_0= ruleExpCS )
                            {
                            // InternalQVTimperative.g:10744:7: (lv_ownedInitExpression_6_0= ruleExpCS )
                            // InternalQVTimperative.g:10745:8: lv_ownedInitExpression_6_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_0_2_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedInitExpression_6_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
                              								}
                              								set(
                              									current,
                              									"ownedInitExpression",
                              									lv_ownedInitExpression_6_0,
                              									"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              								afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:10765:4: (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) ( (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) ) )? (otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) ) )? )
                    {
                    // InternalQVTimperative.g:10765:4: (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) ( (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) ) )? (otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) ) )? )
                    // InternalQVTimperative.g:10766:5: otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) ( (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) ) )? (otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) ) )?
                    {
                    otherlv_7=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getNavigatingCommaArgCSAccess().getColonKeyword_2_1_0());

                    }
                    // InternalQVTimperative.g:10770:5: ( (lv_ownedType_8_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:10771:6: (lv_ownedType_8_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:10771:6: (lv_ownedType_8_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:10772:7: lv_ownedType_8_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_146);
                    lv_ownedType_8_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
                      							}
                      							set(
                      								current,
                      								"ownedType",
                      								lv_ownedType_8_0,
                      								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      							afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:10789:5: ( (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) ) )?
                    int alt240=2;
                    int LA240_0 = input.LA(1);

                    if ( ((LA240_0>=144 && LA240_0<=145)) ) {
                        alt240=1;
                    }
                    switch (alt240) {
                        case 1 :
                            // InternalQVTimperative.g:10790:6: (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) )
                            {
                            // InternalQVTimperative.g:10790:6: (otherlv_9= 'with' | otherlv_10= '<-' )
                            int alt239=2;
                            int LA239_0 = input.LA(1);

                            if ( (LA239_0==144) ) {
                                alt239=1;
                            }
                            else if ( (LA239_0==145) ) {
                                alt239=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 239, 0, input);

                                throw nvae;
                            }
                            switch (alt239) {
                                case 1 :
                                    // InternalQVTimperative.g:10791:7: otherlv_9= 'with'
                                    {
                                    otherlv_9=(Token)match(input,144,FollowSets000.FOLLOW_5); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_9, grammarAccess.getNavigatingCommaArgCSAccess().getWithKeyword_2_1_2_0_0());

                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalQVTimperative.g:10796:7: otherlv_10= '<-'
                                    {
                                    otherlv_10=(Token)match(input,145,FollowSets000.FOLLOW_5); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_10, grammarAccess.getNavigatingCommaArgCSAccess().getLessThanSignHyphenMinusKeyword_2_1_2_0_1());

                                    }

                                    }
                                    break;

                            }

                            // InternalQVTimperative.g:10801:6: ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) )
                            // InternalQVTimperative.g:10802:7: (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS )
                            {
                            // InternalQVTimperative.g:10802:7: (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS )
                            // InternalQVTimperative.g:10803:8: lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_2_1_2_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_145);
                            lv_ownedCoIterator_11_0=ruleCoIteratorVariableCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
                              								}
                              								set(
                              									current,
                              									"ownedCoIterator",
                              									lv_ownedCoIterator_11_0,
                              									"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CoIteratorVariableCS");
                              								afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalQVTimperative.g:10821:5: (otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) ) )?
                    int alt241=2;
                    int LA241_0 = input.LA(1);

                    if ( (LA241_0==53) ) {
                        alt241=1;
                    }
                    switch (alt241) {
                        case 1 :
                            // InternalQVTimperative.g:10822:6: otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) )
                            {
                            otherlv_12=(Token)match(input,53,FollowSets000.FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_12, grammarAccess.getNavigatingCommaArgCSAccess().getEqualsSignKeyword_2_1_3_0());

                            }
                            // InternalQVTimperative.g:10826:6: ( (lv_ownedInitExpression_13_0= ruleExpCS ) )
                            // InternalQVTimperative.g:10827:7: (lv_ownedInitExpression_13_0= ruleExpCS )
                            {
                            // InternalQVTimperative.g:10827:7: (lv_ownedInitExpression_13_0= ruleExpCS )
                            // InternalQVTimperative.g:10828:8: lv_ownedInitExpression_13_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_1_3_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedInitExpression_13_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
                              								}
                              								set(
                              									current,
                              									"ownedInitExpression",
                              									lv_ownedInitExpression_13_0,
                              									"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              								afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:10848:4: ( (otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) ) )? ( (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) ) )? otherlv_19= 'in' ( (lv_ownedInitExpression_20_0= ruleExpCS ) ) )
                    {
                    // InternalQVTimperative.g:10848:4: ( (otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) ) )? ( (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) ) )? otherlv_19= 'in' ( (lv_ownedInitExpression_20_0= ruleExpCS ) ) )
                    // InternalQVTimperative.g:10849:5: (otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) ) )? ( (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) ) )? otherlv_19= 'in' ( (lv_ownedInitExpression_20_0= ruleExpCS ) )
                    {
                    // InternalQVTimperative.g:10849:5: (otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) ) )?
                    int alt242=2;
                    int LA242_0 = input.LA(1);

                    if ( (LA242_0==24) ) {
                        alt242=1;
                    }
                    switch (alt242) {
                        case 1 :
                            // InternalQVTimperative.g:10850:6: otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) )
                            {
                            otherlv_14=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_14, grammarAccess.getNavigatingCommaArgCSAccess().getColonKeyword_2_2_0_0());

                            }
                            // InternalQVTimperative.g:10854:6: ( (lv_ownedType_15_0= ruleTypeExpCS ) )
                            // InternalQVTimperative.g:10855:7: (lv_ownedType_15_0= ruleTypeExpCS )
                            {
                            // InternalQVTimperative.g:10855:7: (lv_ownedType_15_0= ruleTypeExpCS )
                            // InternalQVTimperative.g:10856:8: lv_ownedType_15_0= ruleTypeExpCS
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_2_0_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_147);
                            lv_ownedType_15_0=ruleTypeExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
                              								}
                              								set(
                              									current,
                              									"ownedType",
                              									lv_ownedType_15_0,
                              									"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                              								afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalQVTimperative.g:10874:5: ( (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) ) )?
                    int alt244=2;
                    int LA244_0 = input.LA(1);

                    if ( ((LA244_0>=144 && LA244_0<=145)) ) {
                        alt244=1;
                    }
                    switch (alt244) {
                        case 1 :
                            // InternalQVTimperative.g:10875:6: (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) )
                            {
                            // InternalQVTimperative.g:10875:6: (otherlv_16= 'with' | otherlv_17= '<-' )
                            int alt243=2;
                            int LA243_0 = input.LA(1);

                            if ( (LA243_0==144) ) {
                                alt243=1;
                            }
                            else if ( (LA243_0==145) ) {
                                alt243=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 243, 0, input);

                                throw nvae;
                            }
                            switch (alt243) {
                                case 1 :
                                    // InternalQVTimperative.g:10876:7: otherlv_16= 'with'
                                    {
                                    otherlv_16=(Token)match(input,144,FollowSets000.FOLLOW_5); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_16, grammarAccess.getNavigatingCommaArgCSAccess().getWithKeyword_2_2_1_0_0());

                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalQVTimperative.g:10881:7: otherlv_17= '<-'
                                    {
                                    otherlv_17=(Token)match(input,145,FollowSets000.FOLLOW_5); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_17, grammarAccess.getNavigatingCommaArgCSAccess().getLessThanSignHyphenMinusKeyword_2_2_1_0_1());

                                    }

                                    }
                                    break;

                            }

                            // InternalQVTimperative.g:10886:6: ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) )
                            // InternalQVTimperative.g:10887:7: (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS )
                            {
                            // InternalQVTimperative.g:10887:7: (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS )
                            // InternalQVTimperative.g:10888:8: lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_2_2_1_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_44);
                            lv_ownedCoIterator_18_0=ruleCoIteratorVariableCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
                              								}
                              								set(
                              									current,
                              									"ownedCoIterator",
                              									lv_ownedCoIterator_18_0,
                              									"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CoIteratorVariableCS");
                              								afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_19=(Token)match(input,49,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_19, grammarAccess.getNavigatingCommaArgCSAccess().getInKeyword_2_2_2());

                    }
                    // InternalQVTimperative.g:10910:5: ( (lv_ownedInitExpression_20_0= ruleExpCS ) )
                    // InternalQVTimperative.g:10911:6: (lv_ownedInitExpression_20_0= ruleExpCS )
                    {
                    // InternalQVTimperative.g:10911:6: (lv_ownedInitExpression_20_0= ruleExpCS )
                    // InternalQVTimperative.g:10912:7: lv_ownedInitExpression_20_0= ruleExpCS
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_2_3_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedInitExpression_20_0=ruleExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
                      							}
                      							set(
                      								current,
                      								"ownedInitExpression",
                      								lv_ownedInitExpression_20_0,
                      								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                      							afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNavigatingCommaArgCS"


    // $ANTLR start "entryRuleNavigatingSemiArgCS"
    // InternalQVTimperative.g:10935:1: entryRuleNavigatingSemiArgCS returns [EObject current=null] : iv_ruleNavigatingSemiArgCS= ruleNavigatingSemiArgCS EOF ;
    public final EObject entryRuleNavigatingSemiArgCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNavigatingSemiArgCS = null;


        try {
            // InternalQVTimperative.g:10935:60: (iv_ruleNavigatingSemiArgCS= ruleNavigatingSemiArgCS EOF )
            // InternalQVTimperative.g:10936:2: iv_ruleNavigatingSemiArgCS= ruleNavigatingSemiArgCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNavigatingSemiArgCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNavigatingSemiArgCS=ruleNavigatingSemiArgCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNavigatingSemiArgCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNavigatingSemiArgCS"


    // $ANTLR start "ruleNavigatingSemiArgCS"
    // InternalQVTimperative.g:10942:1: ruleNavigatingSemiArgCS returns [EObject current=null] : ( ( (lv_prefix_0_0= ';' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? ) ;
    public final EObject ruleNavigatingSemiArgCS() throws RecognitionException {
        EObject current = null;

        Token lv_prefix_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedNameExpression_1_0 = null;

        EObject lv_ownedType_3_0 = null;

        EObject lv_ownedInitExpression_5_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:10948:2: ( ( ( (lv_prefix_0_0= ';' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? ) )
            // InternalQVTimperative.g:10949:2: ( ( (lv_prefix_0_0= ';' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? )
            {
            // InternalQVTimperative.g:10949:2: ( ( (lv_prefix_0_0= ';' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? )
            // InternalQVTimperative.g:10950:3: ( (lv_prefix_0_0= ';' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )?
            {
            // InternalQVTimperative.g:10950:3: ( (lv_prefix_0_0= ';' ) )
            // InternalQVTimperative.g:10951:4: (lv_prefix_0_0= ';' )
            {
            // InternalQVTimperative.g:10951:4: (lv_prefix_0_0= ';' )
            // InternalQVTimperative.g:10952:5: lv_prefix_0_0= ';'
            {
            lv_prefix_0_0=(Token)match(input,21,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_prefix_0_0, grammarAccess.getNavigatingSemiArgCSAccess().getPrefixSemicolonKeyword_0_0());

            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getNavigatingSemiArgCSRule());
              					}
              					setWithLastConsumed(current, "prefix", lv_prefix_0_0, ";");

            }

            }


            }

            // InternalQVTimperative.g:10964:3: ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) )
            // InternalQVTimperative.g:10965:4: (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS )
            {
            // InternalQVTimperative.g:10965:4: (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS )
            // InternalQVTimperative.g:10966:5: lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedNameExpressionNavigatingArgExpCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_46);
            lv_ownedNameExpression_1_0=ruleNavigatingArgExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNavigatingSemiArgCSRule());
              					}
              					set(
              						current,
              						"ownedNameExpression",
              						lv_ownedNameExpression_1_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingArgExpCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:10983:3: (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )?
            int alt247=2;
            int LA247_0 = input.LA(1);

            if ( (LA247_0==24) ) {
                alt247=1;
            }
            switch (alt247) {
                case 1 :
                    // InternalQVTimperative.g:10984:4: otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
                    {
                    otherlv_2=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getNavigatingSemiArgCSAccess().getColonKeyword_2_0());

                    }
                    // InternalQVTimperative.g:10988:4: ( (lv_ownedType_3_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:10989:5: (lv_ownedType_3_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:10989:5: (lv_ownedType_3_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:10990:6: lv_ownedType_3_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_145);
                    lv_ownedType_3_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNavigatingSemiArgCSRule());
                      						}
                      						set(
                      							current,
                      							"ownedType",
                      							lv_ownedType_3_0,
                      							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:11007:4: (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
                    int alt246=2;
                    int LA246_0 = input.LA(1);

                    if ( (LA246_0==53) ) {
                        alt246=1;
                    }
                    switch (alt246) {
                        case 1 :
                            // InternalQVTimperative.g:11008:5: otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                            {
                            otherlv_4=(Token)match(input,53,FollowSets000.FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getNavigatingSemiArgCSAccess().getEqualsSignKeyword_2_2_0());

                            }
                            // InternalQVTimperative.g:11012:5: ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                            // InternalQVTimperative.g:11013:6: (lv_ownedInitExpression_5_0= ruleExpCS )
                            {
                            // InternalQVTimperative.g:11013:6: (lv_ownedInitExpression_5_0= ruleExpCS )
                            // InternalQVTimperative.g:11014:7: lv_ownedInitExpression_5_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_2_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedInitExpression_5_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getNavigatingSemiArgCSRule());
                              							}
                              							set(
                              								current,
                              								"ownedInitExpression",
                              								lv_ownedInitExpression_5_0,
                              								"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              							afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNavigatingSemiArgCS"


    // $ANTLR start "entryRuleNavigatingArgExpCS"
    // InternalQVTimperative.g:11037:1: entryRuleNavigatingArgExpCS returns [EObject current=null] : iv_ruleNavigatingArgExpCS= ruleNavigatingArgExpCS EOF ;
    public final EObject entryRuleNavigatingArgExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNavigatingArgExpCS = null;


        try {
            // InternalQVTimperative.g:11037:59: (iv_ruleNavigatingArgExpCS= ruleNavigatingArgExpCS EOF )
            // InternalQVTimperative.g:11038:2: iv_ruleNavigatingArgExpCS= ruleNavigatingArgExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNavigatingArgExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNavigatingArgExpCS=ruleNavigatingArgExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNavigatingArgExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNavigatingArgExpCS"


    // $ANTLR start "ruleNavigatingArgExpCS"
    // InternalQVTimperative.g:11044:1: ruleNavigatingArgExpCS returns [EObject current=null] : this_ExpCS_0= ruleExpCS ;
    public final EObject ruleNavigatingArgExpCS() throws RecognitionException {
        EObject current = null;

        EObject this_ExpCS_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:11050:2: (this_ExpCS_0= ruleExpCS )
            // InternalQVTimperative.g:11051:2: this_ExpCS_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              		/* */

            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getNavigatingArgExpCSAccess().getExpCSParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_ExpCS_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_ExpCS_0;
              		afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNavigatingArgExpCS"


    // $ANTLR start "entryRuleCoIteratorVariableCS"
    // InternalQVTimperative.g:11065:1: entryRuleCoIteratorVariableCS returns [EObject current=null] : iv_ruleCoIteratorVariableCS= ruleCoIteratorVariableCS EOF ;
    public final EObject entryRuleCoIteratorVariableCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCoIteratorVariableCS = null;


        try {
            // InternalQVTimperative.g:11065:61: (iv_ruleCoIteratorVariableCS= ruleCoIteratorVariableCS EOF )
            // InternalQVTimperative.g:11066:2: iv_ruleCoIteratorVariableCS= ruleCoIteratorVariableCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCoIteratorVariableCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCoIteratorVariableCS=ruleCoIteratorVariableCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCoIteratorVariableCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCoIteratorVariableCS"


    // $ANTLR start "ruleCoIteratorVariableCS"
    // InternalQVTimperative.g:11072:1: ruleCoIteratorVariableCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? ) ;
    public final EObject ruleCoIteratorVariableCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedType_2_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:11078:2: ( ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? ) )
            // InternalQVTimperative.g:11079:2: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? )
            {
            // InternalQVTimperative.g:11079:2: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? )
            // InternalQVTimperative.g:11080:3: ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )?
            {
            // InternalQVTimperative.g:11080:3: ( (lv_name_0_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:11081:4: (lv_name_0_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:11081:4: (lv_name_0_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:11082:5: lv_name_0_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCoIteratorVariableCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_46);
            lv_name_0_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCoIteratorVariableCSRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:11099:3: (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )?
            int alt248=2;
            int LA248_0 = input.LA(1);

            if ( (LA248_0==24) ) {
                alt248=1;
            }
            switch (alt248) {
                case 1 :
                    // InternalQVTimperative.g:11100:4: otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) )
                    {
                    otherlv_1=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getCoIteratorVariableCSAccess().getColonKeyword_1_0());

                    }
                    // InternalQVTimperative.g:11104:4: ( (lv_ownedType_2_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:11105:5: (lv_ownedType_2_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:11105:5: (lv_ownedType_2_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:11106:6: lv_ownedType_2_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCoIteratorVariableCSAccess().getOwnedTypeTypeExpCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedType_2_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCoIteratorVariableCSRule());
                      						}
                      						set(
                      							current,
                      							"ownedType",
                      							lv_ownedType_2_0,
                      							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCoIteratorVariableCS"


    // $ANTLR start "entryRuleIfExpCS"
    // InternalQVTimperative.g:11128:1: entryRuleIfExpCS returns [EObject current=null] : iv_ruleIfExpCS= ruleIfExpCS EOF ;
    public final EObject entryRuleIfExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfExpCS = null;


        try {
            // InternalQVTimperative.g:11128:48: (iv_ruleIfExpCS= ruleIfExpCS EOF )
            // InternalQVTimperative.g:11129:2: iv_ruleIfExpCS= ruleIfExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIfExpCS=ruleIfExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIfExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIfExpCS"


    // $ANTLR start "ruleIfExpCS"
    // InternalQVTimperative.g:11135:1: ruleIfExpCS returns [EObject current=null] : (otherlv_0= 'if' ( ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) ( (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS ) )* otherlv_5= 'else' ( (lv_ownedElseExpression_6_0= ruleExpCS ) ) otherlv_7= 'endif' ) ;
    public final EObject ruleIfExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_ownedCondition_1_1 = null;

        EObject lv_ownedCondition_1_2 = null;

        EObject lv_ownedThenExpression_3_0 = null;

        EObject lv_ownedIfThenExpressions_4_0 = null;

        EObject lv_ownedElseExpression_6_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:11141:2: ( (otherlv_0= 'if' ( ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) ( (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS ) )* otherlv_5= 'else' ( (lv_ownedElseExpression_6_0= ruleExpCS ) ) otherlv_7= 'endif' ) )
            // InternalQVTimperative.g:11142:2: (otherlv_0= 'if' ( ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) ( (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS ) )* otherlv_5= 'else' ( (lv_ownedElseExpression_6_0= ruleExpCS ) ) otherlv_7= 'endif' )
            {
            // InternalQVTimperative.g:11142:2: (otherlv_0= 'if' ( ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) ( (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS ) )* otherlv_5= 'else' ( (lv_ownedElseExpression_6_0= ruleExpCS ) ) otherlv_7= 'endif' )
            // InternalQVTimperative.g:11143:3: otherlv_0= 'if' ( ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) ( (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS ) )* otherlv_5= 'else' ( (lv_ownedElseExpression_6_0= ruleExpCS ) ) otherlv_7= 'endif'
            {
            otherlv_0=(Token)match(input,155,FollowSets000.FOLLOW_125); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getIfExpCSAccess().getIfKeyword_0());

            }
            // InternalQVTimperative.g:11147:3: ( ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) ) )
            // InternalQVTimperative.g:11148:4: ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) )
            {
            // InternalQVTimperative.g:11148:4: ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) )
            // InternalQVTimperative.g:11149:5: (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS )
            {
            // InternalQVTimperative.g:11149:5: (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS )
            int alt249=2;
            alt249 = dfa249.predict(input);
            switch (alt249) {
                case 1 :
                    // InternalQVTimperative.g:11150:6: lv_ownedCondition_1_1= ruleExpCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIfExpCSAccess().getOwnedConditionExpCSParserRuleCall_1_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_148);
                    lv_ownedCondition_1_1=ruleExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIfExpCSRule());
                      						}
                      						set(
                      							current,
                      							"ownedCondition",
                      							lv_ownedCondition_1_1,
                      							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:11166:6: lv_ownedCondition_1_2= rulePatternExpCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIfExpCSAccess().getOwnedConditionPatternExpCSParserRuleCall_1_0_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_148);
                    lv_ownedCondition_1_2=rulePatternExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIfExpCSRule());
                      						}
                      						set(
                      							current,
                      							"ownedCondition",
                      							lv_ownedCondition_1_2,
                      							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PatternExpCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }


            }

            otherlv_2=(Token)match(input,156,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getIfExpCSAccess().getThenKeyword_2());

            }
            // InternalQVTimperative.g:11188:3: ( (lv_ownedThenExpression_3_0= ruleExpCS ) )
            // InternalQVTimperative.g:11189:4: (lv_ownedThenExpression_3_0= ruleExpCS )
            {
            // InternalQVTimperative.g:11189:4: (lv_ownedThenExpression_3_0= ruleExpCS )
            // InternalQVTimperative.g:11190:5: lv_ownedThenExpression_3_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIfExpCSAccess().getOwnedThenExpressionExpCSParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_149);
            lv_ownedThenExpression_3_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIfExpCSRule());
              					}
              					set(
              						current,
              						"ownedThenExpression",
              						lv_ownedThenExpression_3_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:11207:3: ( (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS ) )*
            loop250:
            do {
                int alt250=2;
                int LA250_0 = input.LA(1);

                if ( (LA250_0==159) ) {
                    alt250=1;
                }


                switch (alt250) {
            	case 1 :
            	    // InternalQVTimperative.g:11208:4: (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS )
            	    {
            	    // InternalQVTimperative.g:11208:4: (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS )
            	    // InternalQVTimperative.g:11209:5: lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getIfExpCSAccess().getOwnedIfThenExpressionsElseIfThenExpCSParserRuleCall_4_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_149);
            	    lv_ownedIfThenExpressions_4_0=ruleElseIfThenExpCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getIfExpCSRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ownedIfThenExpressions",
            	      						lv_ownedIfThenExpressions_4_0,
            	      						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ElseIfThenExpCS");
            	      					afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop250;
                }
            } while (true);

            otherlv_5=(Token)match(input,157,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getIfExpCSAccess().getElseKeyword_5());

            }
            // InternalQVTimperative.g:11230:3: ( (lv_ownedElseExpression_6_0= ruleExpCS ) )
            // InternalQVTimperative.g:11231:4: (lv_ownedElseExpression_6_0= ruleExpCS )
            {
            // InternalQVTimperative.g:11231:4: (lv_ownedElseExpression_6_0= ruleExpCS )
            // InternalQVTimperative.g:11232:5: lv_ownedElseExpression_6_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIfExpCSAccess().getOwnedElseExpressionExpCSParserRuleCall_6_0());

            }
            pushFollow(FollowSets000.FOLLOW_150);
            lv_ownedElseExpression_6_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIfExpCSRule());
              					}
              					set(
              						current,
              						"ownedElseExpression",
              						lv_ownedElseExpression_6_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_7=(Token)match(input,158,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getIfExpCSAccess().getEndifKeyword_7());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIfExpCS"


    // $ANTLR start "entryRuleElseIfThenExpCS"
    // InternalQVTimperative.g:11257:1: entryRuleElseIfThenExpCS returns [EObject current=null] : iv_ruleElseIfThenExpCS= ruleElseIfThenExpCS EOF ;
    public final EObject entryRuleElseIfThenExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElseIfThenExpCS = null;


        try {
            // InternalQVTimperative.g:11257:56: (iv_ruleElseIfThenExpCS= ruleElseIfThenExpCS EOF )
            // InternalQVTimperative.g:11258:2: iv_ruleElseIfThenExpCS= ruleElseIfThenExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElseIfThenExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleElseIfThenExpCS=ruleElseIfThenExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElseIfThenExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElseIfThenExpCS"


    // $ANTLR start "ruleElseIfThenExpCS"
    // InternalQVTimperative.g:11264:1: ruleElseIfThenExpCS returns [EObject current=null] : (otherlv_0= 'elseif' ( (lv_ownedCondition_1_0= ruleExpCS ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) ) ;
    public final EObject ruleElseIfThenExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_ownedCondition_1_0 = null;

        EObject lv_ownedThenExpression_3_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:11270:2: ( (otherlv_0= 'elseif' ( (lv_ownedCondition_1_0= ruleExpCS ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) ) )
            // InternalQVTimperative.g:11271:2: (otherlv_0= 'elseif' ( (lv_ownedCondition_1_0= ruleExpCS ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) )
            {
            // InternalQVTimperative.g:11271:2: (otherlv_0= 'elseif' ( (lv_ownedCondition_1_0= ruleExpCS ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) )
            // InternalQVTimperative.g:11272:3: otherlv_0= 'elseif' ( (lv_ownedCondition_1_0= ruleExpCS ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) )
            {
            otherlv_0=(Token)match(input,159,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getElseIfThenExpCSAccess().getElseifKeyword_0());

            }
            // InternalQVTimperative.g:11276:3: ( (lv_ownedCondition_1_0= ruleExpCS ) )
            // InternalQVTimperative.g:11277:4: (lv_ownedCondition_1_0= ruleExpCS )
            {
            // InternalQVTimperative.g:11277:4: (lv_ownedCondition_1_0= ruleExpCS )
            // InternalQVTimperative.g:11278:5: lv_ownedCondition_1_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getElseIfThenExpCSAccess().getOwnedConditionExpCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_148);
            lv_ownedCondition_1_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getElseIfThenExpCSRule());
              					}
              					set(
              						current,
              						"ownedCondition",
              						lv_ownedCondition_1_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_2=(Token)match(input,156,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getElseIfThenExpCSAccess().getThenKeyword_2());

            }
            // InternalQVTimperative.g:11299:3: ( (lv_ownedThenExpression_3_0= ruleExpCS ) )
            // InternalQVTimperative.g:11300:4: (lv_ownedThenExpression_3_0= ruleExpCS )
            {
            // InternalQVTimperative.g:11300:4: (lv_ownedThenExpression_3_0= ruleExpCS )
            // InternalQVTimperative.g:11301:5: lv_ownedThenExpression_3_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getElseIfThenExpCSAccess().getOwnedThenExpressionExpCSParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedThenExpression_3_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getElseIfThenExpCSRule());
              					}
              					set(
              						current,
              						"ownedThenExpression",
              						lv_ownedThenExpression_3_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElseIfThenExpCS"


    // $ANTLR start "entryRuleLetExpCS"
    // InternalQVTimperative.g:11322:1: entryRuleLetExpCS returns [EObject current=null] : iv_ruleLetExpCS= ruleLetExpCS EOF ;
    public final EObject entryRuleLetExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLetExpCS = null;


        try {
            // InternalQVTimperative.g:11322:49: (iv_ruleLetExpCS= ruleLetExpCS EOF )
            // InternalQVTimperative.g:11323:2: iv_ruleLetExpCS= ruleLetExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLetExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLetExpCS=ruleLetExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLetExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLetExpCS"


    // $ANTLR start "ruleLetExpCS"
    // InternalQVTimperative.g:11329:1: ruleLetExpCS returns [EObject current=null] : (otherlv_0= 'let' ( (lv_ownedVariables_1_0= ruleLetVariableCS ) ) (otherlv_2= ',' ( (lv_ownedVariables_3_0= ruleLetVariableCS ) ) )* otherlv_4= 'in' ( (lv_ownedInExpression_5_0= ruleExpCS ) ) ) ;
    public final EObject ruleLetExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedVariables_1_0 = null;

        EObject lv_ownedVariables_3_0 = null;

        EObject lv_ownedInExpression_5_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:11335:2: ( (otherlv_0= 'let' ( (lv_ownedVariables_1_0= ruleLetVariableCS ) ) (otherlv_2= ',' ( (lv_ownedVariables_3_0= ruleLetVariableCS ) ) )* otherlv_4= 'in' ( (lv_ownedInExpression_5_0= ruleExpCS ) ) ) )
            // InternalQVTimperative.g:11336:2: (otherlv_0= 'let' ( (lv_ownedVariables_1_0= ruleLetVariableCS ) ) (otherlv_2= ',' ( (lv_ownedVariables_3_0= ruleLetVariableCS ) ) )* otherlv_4= 'in' ( (lv_ownedInExpression_5_0= ruleExpCS ) ) )
            {
            // InternalQVTimperative.g:11336:2: (otherlv_0= 'let' ( (lv_ownedVariables_1_0= ruleLetVariableCS ) ) (otherlv_2= ',' ( (lv_ownedVariables_3_0= ruleLetVariableCS ) ) )* otherlv_4= 'in' ( (lv_ownedInExpression_5_0= ruleExpCS ) ) )
            // InternalQVTimperative.g:11337:3: otherlv_0= 'let' ( (lv_ownedVariables_1_0= ruleLetVariableCS ) ) (otherlv_2= ',' ( (lv_ownedVariables_3_0= ruleLetVariableCS ) ) )* otherlv_4= 'in' ( (lv_ownedInExpression_5_0= ruleExpCS ) )
            {
            otherlv_0=(Token)match(input,160,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getLetExpCSAccess().getLetKeyword_0());

            }
            // InternalQVTimperative.g:11341:3: ( (lv_ownedVariables_1_0= ruleLetVariableCS ) )
            // InternalQVTimperative.g:11342:4: (lv_ownedVariables_1_0= ruleLetVariableCS )
            {
            // InternalQVTimperative.g:11342:4: (lv_ownedVariables_1_0= ruleLetVariableCS )
            // InternalQVTimperative.g:11343:5: lv_ownedVariables_1_0= ruleLetVariableCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLetExpCSAccess().getOwnedVariablesLetVariableCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_151);
            lv_ownedVariables_1_0=ruleLetVariableCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLetExpCSRule());
              					}
              					add(
              						current,
              						"ownedVariables",
              						lv_ownedVariables_1_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.LetVariableCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:11360:3: (otherlv_2= ',' ( (lv_ownedVariables_3_0= ruleLetVariableCS ) ) )*
            loop251:
            do {
                int alt251=2;
                int LA251_0 = input.LA(1);

                if ( (LA251_0==18) ) {
                    alt251=1;
                }


                switch (alt251) {
            	case 1 :
            	    // InternalQVTimperative.g:11361:4: otherlv_2= ',' ( (lv_ownedVariables_3_0= ruleLetVariableCS ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getLetExpCSAccess().getCommaKeyword_2_0());

            	    }
            	    // InternalQVTimperative.g:11365:4: ( (lv_ownedVariables_3_0= ruleLetVariableCS ) )
            	    // InternalQVTimperative.g:11366:5: (lv_ownedVariables_3_0= ruleLetVariableCS )
            	    {
            	    // InternalQVTimperative.g:11366:5: (lv_ownedVariables_3_0= ruleLetVariableCS )
            	    // InternalQVTimperative.g:11367:6: lv_ownedVariables_3_0= ruleLetVariableCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getLetExpCSAccess().getOwnedVariablesLetVariableCSParserRuleCall_2_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_151);
            	    lv_ownedVariables_3_0=ruleLetVariableCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getLetExpCSRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedVariables",
            	      							lv_ownedVariables_3_0,
            	      							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.LetVariableCS");
            	      						afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop251;
                }
            } while (true);

            otherlv_4=(Token)match(input,49,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getLetExpCSAccess().getInKeyword_3());

            }
            // InternalQVTimperative.g:11389:3: ( (lv_ownedInExpression_5_0= ruleExpCS ) )
            // InternalQVTimperative.g:11390:4: (lv_ownedInExpression_5_0= ruleExpCS )
            {
            // InternalQVTimperative.g:11390:4: (lv_ownedInExpression_5_0= ruleExpCS )
            // InternalQVTimperative.g:11391:5: lv_ownedInExpression_5_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLetExpCSAccess().getOwnedInExpressionExpCSParserRuleCall_4_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedInExpression_5_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLetExpCSRule());
              					}
              					set(
              						current,
              						"ownedInExpression",
              						lv_ownedInExpression_5_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLetExpCS"


    // $ANTLR start "entryRuleLetVariableCS"
    // InternalQVTimperative.g:11412:1: entryRuleLetVariableCS returns [EObject current=null] : iv_ruleLetVariableCS= ruleLetVariableCS EOF ;
    public final EObject entryRuleLetVariableCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLetVariableCS = null;


        try {
            // InternalQVTimperative.g:11412:54: (iv_ruleLetVariableCS= ruleLetVariableCS EOF )
            // InternalQVTimperative.g:11413:2: iv_ruleLetVariableCS= ruleLetVariableCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLetVariableCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLetVariableCS=ruleLetVariableCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLetVariableCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLetVariableCS"


    // $ANTLR start "ruleLetVariableCS"
    // InternalQVTimperative.g:11419:1: ruleLetVariableCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleUnrestrictedName ) ) ( (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS ) )? (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) )? otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) ) ;
    public final EObject ruleLetVariableCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedRoundBracketedClause_1_0 = null;

        EObject lv_ownedType_3_0 = null;

        EObject lv_ownedInitExpression_5_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:11425:2: ( ( ( (lv_name_0_0= ruleUnrestrictedName ) ) ( (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS ) )? (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) )? otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) ) )
            // InternalQVTimperative.g:11426:2: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) ( (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS ) )? (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) )? otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )
            {
            // InternalQVTimperative.g:11426:2: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) ( (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS ) )? (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) )? otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )
            // InternalQVTimperative.g:11427:3: ( (lv_name_0_0= ruleUnrestrictedName ) ) ( (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS ) )? (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) )? otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
            {
            // InternalQVTimperative.g:11427:3: ( (lv_name_0_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:11428:4: (lv_name_0_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:11428:4: (lv_name_0_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:11429:5: lv_name_0_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLetVariableCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_152);
            lv_name_0_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLetVariableCSRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:11446:3: ( (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS ) )?
            int alt252=2;
            int LA252_0 = input.LA(1);

            if ( (LA252_0==56) ) {
                alt252=1;
            }
            switch (alt252) {
                case 1 :
                    // InternalQVTimperative.g:11447:4: (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS )
                    {
                    // InternalQVTimperative.g:11447:4: (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS )
                    // InternalQVTimperative.g:11448:5: lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLetVariableCSAccess().getOwnedRoundBracketedClauseRoundBracketedClauseCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_132);
                    lv_ownedRoundBracketedClause_1_0=ruleRoundBracketedClauseCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLetVariableCSRule());
                      					}
                      					set(
                      						current,
                      						"ownedRoundBracketedClause",
                      						lv_ownedRoundBracketedClause_1_0,
                      						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.RoundBracketedClauseCS");
                      					afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:11465:3: (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) )?
            int alt253=2;
            int LA253_0 = input.LA(1);

            if ( (LA253_0==24) ) {
                alt253=1;
            }
            switch (alt253) {
                case 1 :
                    // InternalQVTimperative.g:11466:4: otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) )
                    {
                    otherlv_2=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getLetVariableCSAccess().getColonKeyword_2_0());

                    }
                    // InternalQVTimperative.g:11470:4: ( (lv_ownedType_3_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:11471:5: (lv_ownedType_3_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:11471:5: (lv_ownedType_3_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:11472:6: lv_ownedType_3_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLetVariableCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_129);
                    lv_ownedType_3_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLetVariableCSRule());
                      						}
                      						set(
                      							current,
                      							"ownedType",
                      							lv_ownedType_3_0,
                      							"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,53,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getLetVariableCSAccess().getEqualsSignKeyword_3());

            }
            // InternalQVTimperative.g:11494:3: ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
            // InternalQVTimperative.g:11495:4: (lv_ownedInitExpression_5_0= ruleExpCS )
            {
            // InternalQVTimperative.g:11495:4: (lv_ownedInitExpression_5_0= ruleExpCS )
            // InternalQVTimperative.g:11496:5: lv_ownedInitExpression_5_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLetVariableCSAccess().getOwnedInitExpressionExpCSParserRuleCall_4_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedInitExpression_5_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLetVariableCSRule());
              					}
              					set(
              						current,
              						"ownedInitExpression",
              						lv_ownedInitExpression_5_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLetVariableCS"


    // $ANTLR start "entryRuleNestedExpCS"
    // InternalQVTimperative.g:11517:1: entryRuleNestedExpCS returns [EObject current=null] : iv_ruleNestedExpCS= ruleNestedExpCS EOF ;
    public final EObject entryRuleNestedExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNestedExpCS = null;


        try {
            // InternalQVTimperative.g:11517:52: (iv_ruleNestedExpCS= ruleNestedExpCS EOF )
            // InternalQVTimperative.g:11518:2: iv_ruleNestedExpCS= ruleNestedExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNestedExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNestedExpCS=ruleNestedExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNestedExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNestedExpCS"


    // $ANTLR start "ruleNestedExpCS"
    // InternalQVTimperative.g:11524:1: ruleNestedExpCS returns [EObject current=null] : (otherlv_0= '(' ( (lv_ownedExpression_1_0= ruleExpCS ) ) otherlv_2= ')' ) ;
    public final EObject ruleNestedExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_ownedExpression_1_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:11530:2: ( (otherlv_0= '(' ( (lv_ownedExpression_1_0= ruleExpCS ) ) otherlv_2= ')' ) )
            // InternalQVTimperative.g:11531:2: (otherlv_0= '(' ( (lv_ownedExpression_1_0= ruleExpCS ) ) otherlv_2= ')' )
            {
            // InternalQVTimperative.g:11531:2: (otherlv_0= '(' ( (lv_ownedExpression_1_0= ruleExpCS ) ) otherlv_2= ')' )
            // InternalQVTimperative.g:11532:3: otherlv_0= '(' ( (lv_ownedExpression_1_0= ruleExpCS ) ) otherlv_2= ')'
            {
            otherlv_0=(Token)match(input,56,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getNestedExpCSAccess().getLeftParenthesisKeyword_0());

            }
            // InternalQVTimperative.g:11536:3: ( (lv_ownedExpression_1_0= ruleExpCS ) )
            // InternalQVTimperative.g:11537:4: (lv_ownedExpression_1_0= ruleExpCS )
            {
            // InternalQVTimperative.g:11537:4: (lv_ownedExpression_1_0= ruleExpCS )
            // InternalQVTimperative.g:11538:5: lv_ownedExpression_1_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNestedExpCSAccess().getOwnedExpressionExpCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_122);
            lv_ownedExpression_1_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNestedExpCSRule());
              					}
              					set(
              						current,
              						"ownedExpression",
              						lv_ownedExpression_1_0,
              						"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_2=(Token)match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getNestedExpCSAccess().getRightParenthesisKeyword_2());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNestedExpCS"


    // $ANTLR start "entryRuleSelfExpCS"
    // InternalQVTimperative.g:11563:1: entryRuleSelfExpCS returns [EObject current=null] : iv_ruleSelfExpCS= ruleSelfExpCS EOF ;
    public final EObject entryRuleSelfExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSelfExpCS = null;


        try {
            // InternalQVTimperative.g:11563:50: (iv_ruleSelfExpCS= ruleSelfExpCS EOF )
            // InternalQVTimperative.g:11564:2: iv_ruleSelfExpCS= ruleSelfExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSelfExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSelfExpCS=ruleSelfExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSelfExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSelfExpCS"


    // $ANTLR start "ruleSelfExpCS"
    // InternalQVTimperative.g:11570:1: ruleSelfExpCS returns [EObject current=null] : ( () otherlv_1= 'self' ) ;
    public final EObject ruleSelfExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalQVTimperative.g:11576:2: ( ( () otherlv_1= 'self' ) )
            // InternalQVTimperative.g:11577:2: ( () otherlv_1= 'self' )
            {
            // InternalQVTimperative.g:11577:2: ( () otherlv_1= 'self' )
            // InternalQVTimperative.g:11578:3: () otherlv_1= 'self'
            {
            // InternalQVTimperative.g:11578:3: ()
            // InternalQVTimperative.g:11579:4:
            {
            if ( state.backtracking==0 ) {

              				/* */

            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSelfExpCSAccess().getSelfExpCSAction_0(),
              					current);

            }

            }

            otherlv_1=(Token)match(input,161,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSelfExpCSAccess().getSelfKeyword_1());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSelfExpCS"


    // $ANTLR start "entryRuleMultiplicityBoundsCS"
    // InternalQVTimperative.g:11596:1: entryRuleMultiplicityBoundsCS returns [EObject current=null] : iv_ruleMultiplicityBoundsCS= ruleMultiplicityBoundsCS EOF ;
    public final EObject entryRuleMultiplicityBoundsCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicityBoundsCS = null;


        try {
            // InternalQVTimperative.g:11596:61: (iv_ruleMultiplicityBoundsCS= ruleMultiplicityBoundsCS EOF )
            // InternalQVTimperative.g:11597:2: iv_ruleMultiplicityBoundsCS= ruleMultiplicityBoundsCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicityBoundsCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMultiplicityBoundsCS=ruleMultiplicityBoundsCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicityBoundsCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicityBoundsCS"


    // $ANTLR start "ruleMultiplicityBoundsCS"
    // InternalQVTimperative.g:11603:1: ruleMultiplicityBoundsCS returns [EObject current=null] : ( ( (lv_lowerBound_0_0= ruleLOWER ) ) (otherlv_1= '..' ( (lv_upperBound_2_0= ruleUPPER ) ) )? ) ;
    public final EObject ruleMultiplicityBoundsCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_lowerBound_0_0 = null;

        AntlrDatatypeRuleToken lv_upperBound_2_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:11609:2: ( ( ( (lv_lowerBound_0_0= ruleLOWER ) ) (otherlv_1= '..' ( (lv_upperBound_2_0= ruleUPPER ) ) )? ) )
            // InternalQVTimperative.g:11610:2: ( ( (lv_lowerBound_0_0= ruleLOWER ) ) (otherlv_1= '..' ( (lv_upperBound_2_0= ruleUPPER ) ) )? )
            {
            // InternalQVTimperative.g:11610:2: ( ( (lv_lowerBound_0_0= ruleLOWER ) ) (otherlv_1= '..' ( (lv_upperBound_2_0= ruleUPPER ) ) )? )
            // InternalQVTimperative.g:11611:3: ( (lv_lowerBound_0_0= ruleLOWER ) ) (otherlv_1= '..' ( (lv_upperBound_2_0= ruleUPPER ) ) )?
            {
            // InternalQVTimperative.g:11611:3: ( (lv_lowerBound_0_0= ruleLOWER ) )
            // InternalQVTimperative.g:11612:4: (lv_lowerBound_0_0= ruleLOWER )
            {
            // InternalQVTimperative.g:11612:4: (lv_lowerBound_0_0= ruleLOWER )
            // InternalQVTimperative.g:11613:5: lv_lowerBound_0_0= ruleLOWER
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMultiplicityBoundsCSAccess().getLowerBoundLOWERParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_126);
            lv_lowerBound_0_0=ruleLOWER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMultiplicityBoundsCSRule());
              					}
              					set(
              						current,
              						"lowerBound",
              						lv_lowerBound_0_0,
              						"org.eclipse.ocl.xtext.base.Base.LOWER");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:11630:3: (otherlv_1= '..' ( (lv_upperBound_2_0= ruleUPPER ) ) )?
            int alt254=2;
            int LA254_0 = input.LA(1);

            if ( (LA254_0==27) ) {
                alt254=1;
            }
            switch (alt254) {
                case 1 :
                    // InternalQVTimperative.g:11631:4: otherlv_1= '..' ( (lv_upperBound_2_0= ruleUPPER ) )
                    {
                    otherlv_1=(Token)match(input,27,FollowSets000.FOLLOW_153); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getMultiplicityBoundsCSAccess().getFullStopFullStopKeyword_1_0());

                    }
                    // InternalQVTimperative.g:11635:4: ( (lv_upperBound_2_0= ruleUPPER ) )
                    // InternalQVTimperative.g:11636:5: (lv_upperBound_2_0= ruleUPPER )
                    {
                    // InternalQVTimperative.g:11636:5: (lv_upperBound_2_0= ruleUPPER )
                    // InternalQVTimperative.g:11637:6: lv_upperBound_2_0= ruleUPPER
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMultiplicityBoundsCSAccess().getUpperBoundUPPERParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_upperBound_2_0=ruleUPPER();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMultiplicityBoundsCSRule());
                      						}
                      						set(
                      							current,
                      							"upperBound",
                      							lv_upperBound_2_0,
                      							"org.eclipse.ocl.xtext.base.Base.UPPER");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicityBoundsCS"


    // $ANTLR start "entryRuleMultiplicityCS"
    // InternalQVTimperative.g:11659:1: entryRuleMultiplicityCS returns [EObject current=null] : iv_ruleMultiplicityCS= ruleMultiplicityCS EOF ;
    public final EObject entryRuleMultiplicityCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicityCS = null;


        try {
            // InternalQVTimperative.g:11659:55: (iv_ruleMultiplicityCS= ruleMultiplicityCS EOF )
            // InternalQVTimperative.g:11660:2: iv_ruleMultiplicityCS= ruleMultiplicityCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicityCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMultiplicityCS=ruleMultiplicityCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicityCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicityCS"


    // $ANTLR start "ruleMultiplicityCS"
    // InternalQVTimperative.g:11666:1: ruleMultiplicityCS returns [EObject current=null] : (otherlv_0= '[' (this_MultiplicityBoundsCS_1= ruleMultiplicityBoundsCS | this_MultiplicityStringCS_2= ruleMultiplicityStringCS ) (otherlv_3= '|?' | ( (lv_isNullFree_4_0= '|1' ) ) )? otherlv_5= ']' ) ;
    public final EObject ruleMultiplicityCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token lv_isNullFree_4_0=null;
        Token otherlv_5=null;
        EObject this_MultiplicityBoundsCS_1 = null;

        EObject this_MultiplicityStringCS_2 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:11672:2: ( (otherlv_0= '[' (this_MultiplicityBoundsCS_1= ruleMultiplicityBoundsCS | this_MultiplicityStringCS_2= ruleMultiplicityStringCS ) (otherlv_3= '|?' | ( (lv_isNullFree_4_0= '|1' ) ) )? otherlv_5= ']' ) )
            // InternalQVTimperative.g:11673:2: (otherlv_0= '[' (this_MultiplicityBoundsCS_1= ruleMultiplicityBoundsCS | this_MultiplicityStringCS_2= ruleMultiplicityStringCS ) (otherlv_3= '|?' | ( (lv_isNullFree_4_0= '|1' ) ) )? otherlv_5= ']' )
            {
            // InternalQVTimperative.g:11673:2: (otherlv_0= '[' (this_MultiplicityBoundsCS_1= ruleMultiplicityBoundsCS | this_MultiplicityStringCS_2= ruleMultiplicityStringCS ) (otherlv_3= '|?' | ( (lv_isNullFree_4_0= '|1' ) ) )? otherlv_5= ']' )
            // InternalQVTimperative.g:11674:3: otherlv_0= '[' (this_MultiplicityBoundsCS_1= ruleMultiplicityBoundsCS | this_MultiplicityStringCS_2= ruleMultiplicityStringCS ) (otherlv_3= '|?' | ( (lv_isNullFree_4_0= '|1' ) ) )? otherlv_5= ']'
            {
            otherlv_0=(Token)match(input,152,FollowSets000.FOLLOW_154); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getMultiplicityCSAccess().getLeftSquareBracketKeyword_0());

            }
            // InternalQVTimperative.g:11678:3: (this_MultiplicityBoundsCS_1= ruleMultiplicityBoundsCS | this_MultiplicityStringCS_2= ruleMultiplicityStringCS )
            int alt255=2;
            int LA255_0 = input.LA(1);

            if ( (LA255_0==RULE_INT) ) {
                alt255=1;
            }
            else if ( (LA255_0==42||LA255_0==110||LA255_0==164) ) {
                alt255=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 255, 0, input);

                throw nvae;
            }
            switch (alt255) {
                case 1 :
                    // InternalQVTimperative.g:11679:4: this_MultiplicityBoundsCS_1= ruleMultiplicityBoundsCS
                    {
                    if ( state.backtracking==0 ) {

                      				/* */

                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getMultiplicityCSAccess().getMultiplicityBoundsCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_155);
                    this_MultiplicityBoundsCS_1=ruleMultiplicityBoundsCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_MultiplicityBoundsCS_1;
                      				afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:11691:4: this_MultiplicityStringCS_2= ruleMultiplicityStringCS
                    {
                    if ( state.backtracking==0 ) {

                      				/* */

                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getMultiplicityCSAccess().getMultiplicityStringCSParserRuleCall_1_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_155);
                    this_MultiplicityStringCS_2=ruleMultiplicityStringCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_MultiplicityStringCS_2;
                      				afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }

            // InternalQVTimperative.g:11703:3: (otherlv_3= '|?' | ( (lv_isNullFree_4_0= '|1' ) ) )?
            int alt256=3;
            int LA256_0 = input.LA(1);

            if ( (LA256_0==162) ) {
                alt256=1;
            }
            else if ( (LA256_0==163) ) {
                alt256=2;
            }
            switch (alt256) {
                case 1 :
                    // InternalQVTimperative.g:11704:4: otherlv_3= '|?'
                    {
                    otherlv_3=(Token)match(input,162,FollowSets000.FOLLOW_156); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getMultiplicityCSAccess().getVerticalLineQuestionMarkKeyword_2_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:11709:4: ( (lv_isNullFree_4_0= '|1' ) )
                    {
                    // InternalQVTimperative.g:11709:4: ( (lv_isNullFree_4_0= '|1' ) )
                    // InternalQVTimperative.g:11710:5: (lv_isNullFree_4_0= '|1' )
                    {
                    // InternalQVTimperative.g:11710:5: (lv_isNullFree_4_0= '|1' )
                    // InternalQVTimperative.g:11711:6: lv_isNullFree_4_0= '|1'
                    {
                    lv_isNullFree_4_0=(Token)match(input,163,FollowSets000.FOLLOW_156); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_isNullFree_4_0, grammarAccess.getMultiplicityCSAccess().getIsNullFree1Keyword_2_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getMultiplicityCSRule());
                      						}
                      						setWithLastConsumed(current, "isNullFree", lv_isNullFree_4_0 != null, "|1");

                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,153,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getMultiplicityCSAccess().getRightSquareBracketKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicityCS"


    // $ANTLR start "entryRuleMultiplicityStringCS"
    // InternalQVTimperative.g:11732:1: entryRuleMultiplicityStringCS returns [EObject current=null] : iv_ruleMultiplicityStringCS= ruleMultiplicityStringCS EOF ;
    public final EObject entryRuleMultiplicityStringCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicityStringCS = null;


        try {
            // InternalQVTimperative.g:11732:61: (iv_ruleMultiplicityStringCS= ruleMultiplicityStringCS EOF )
            // InternalQVTimperative.g:11733:2: iv_ruleMultiplicityStringCS= ruleMultiplicityStringCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicityStringCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMultiplicityStringCS=ruleMultiplicityStringCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicityStringCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicityStringCS"


    // $ANTLR start "ruleMultiplicityStringCS"
    // InternalQVTimperative.g:11739:1: ruleMultiplicityStringCS returns [EObject current=null] : ( ( (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' ) ) ) ;
    public final EObject ruleMultiplicityStringCS() throws RecognitionException {
        EObject current = null;

        Token lv_stringBounds_0_1=null;
        Token lv_stringBounds_0_2=null;
        Token lv_stringBounds_0_3=null;


        	enterRule();

        try {
            // InternalQVTimperative.g:11745:2: ( ( ( (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' ) ) ) )
            // InternalQVTimperative.g:11746:2: ( ( (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' ) ) )
            {
            // InternalQVTimperative.g:11746:2: ( ( (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' ) ) )
            // InternalQVTimperative.g:11747:3: ( (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' ) )
            {
            // InternalQVTimperative.g:11747:3: ( (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' ) )
            // InternalQVTimperative.g:11748:4: (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' )
            {
            // InternalQVTimperative.g:11748:4: (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' )
            int alt257=3;
            switch ( input.LA(1) ) {
            case 42:
                {
                alt257=1;
                }
                break;
            case 110:
                {
                alt257=2;
                }
                break;
            case 164:
                {
                alt257=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 257, 0, input);

                throw nvae;
            }

            switch (alt257) {
                case 1 :
                    // InternalQVTimperative.g:11749:5: lv_stringBounds_0_1= '*'
                    {
                    lv_stringBounds_0_1=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_stringBounds_0_1, grammarAccess.getMultiplicityStringCSAccess().getStringBoundsAsteriskKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getMultiplicityStringCSRule());
                      					}
                      					setWithLastConsumed(current, "stringBounds", lv_stringBounds_0_1, null);

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:11760:5: lv_stringBounds_0_2= '+'
                    {
                    lv_stringBounds_0_2=(Token)match(input,110,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_stringBounds_0_2, grammarAccess.getMultiplicityStringCSAccess().getStringBoundsPlusSignKeyword_0_1());

                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getMultiplicityStringCSRule());
                      					}
                      					setWithLastConsumed(current, "stringBounds", lv_stringBounds_0_2, null);

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:11771:5: lv_stringBounds_0_3= '?'
                    {
                    lv_stringBounds_0_3=(Token)match(input,164,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_stringBounds_0_3, grammarAccess.getMultiplicityStringCSAccess().getStringBoundsQuestionMarkKeyword_0_2());

                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getMultiplicityStringCSRule());
                      					}
                      					setWithLastConsumed(current, "stringBounds", lv_stringBounds_0_3, null);

                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicityStringCS"


    // $ANTLR start "entryRulePathNameCS"
    // InternalQVTimperative.g:11787:1: entryRulePathNameCS returns [EObject current=null] : iv_rulePathNameCS= rulePathNameCS EOF ;
    public final EObject entryRulePathNameCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePathNameCS = null;


        try {
            // InternalQVTimperative.g:11787:51: (iv_rulePathNameCS= rulePathNameCS EOF )
            // InternalQVTimperative.g:11788:2: iv_rulePathNameCS= rulePathNameCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPathNameCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePathNameCS=rulePathNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePathNameCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePathNameCS"


    // $ANTLR start "rulePathNameCS"
    // InternalQVTimperative.g:11794:1: rulePathNameCS returns [EObject current=null] : ( ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* ) ;
    public final EObject rulePathNameCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedPathElements_0_0 = null;

        EObject lv_ownedPathElements_2_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:11800:2: ( ( ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* ) )
            // InternalQVTimperative.g:11801:2: ( ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* )
            {
            // InternalQVTimperative.g:11801:2: ( ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* )
            // InternalQVTimperative.g:11802:3: ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )*
            {
            // InternalQVTimperative.g:11802:3: ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) )
            // InternalQVTimperative.g:11803:4: (lv_ownedPathElements_0_0= ruleFirstPathElementCS )
            {
            // InternalQVTimperative.g:11803:4: (lv_ownedPathElements_0_0= ruleFirstPathElementCS )
            // InternalQVTimperative.g:11804:5: lv_ownedPathElements_0_0= ruleFirstPathElementCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPathNameCSAccess().getOwnedPathElementsFirstPathElementCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_119);
            lv_ownedPathElements_0_0=ruleFirstPathElementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPathNameCSRule());
              					}
              					add(
              						current,
              						"ownedPathElements",
              						lv_ownedPathElements_0_0,
              						"org.eclipse.ocl.xtext.base.Base.FirstPathElementCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:11821:3: (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )*
            loop258:
            do {
                int alt258=2;
                int LA258_0 = input.LA(1);

                if ( (LA258_0==41) ) {
                    alt258=1;
                }


                switch (alt258) {
            	case 1 :
            	    // InternalQVTimperative.g:11822:4: otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) )
            	    {
            	    otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_12); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getPathNameCSAccess().getColonColonKeyword_1_0());

            	    }
            	    // InternalQVTimperative.g:11826:4: ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) )
            	    // InternalQVTimperative.g:11827:5: (lv_ownedPathElements_2_0= ruleNextPathElementCS )
            	    {
            	    // InternalQVTimperative.g:11827:5: (lv_ownedPathElements_2_0= ruleNextPathElementCS )
            	    // InternalQVTimperative.g:11828:6: lv_ownedPathElements_2_0= ruleNextPathElementCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getPathNameCSAccess().getOwnedPathElementsNextPathElementCSParserRuleCall_1_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_119);
            	    lv_ownedPathElements_2_0=ruleNextPathElementCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getPathNameCSRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedPathElements",
            	      							lv_ownedPathElements_2_0,
            	      							"org.eclipse.ocl.xtext.base.Base.NextPathElementCS");
            	      						afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop258;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePathNameCS"


    // $ANTLR start "entryRuleFirstPathElementCS"
    // InternalQVTimperative.g:11850:1: entryRuleFirstPathElementCS returns [EObject current=null] : iv_ruleFirstPathElementCS= ruleFirstPathElementCS EOF ;
    public final EObject entryRuleFirstPathElementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFirstPathElementCS = null;


        try {
            // InternalQVTimperative.g:11850:59: (iv_ruleFirstPathElementCS= ruleFirstPathElementCS EOF )
            // InternalQVTimperative.g:11851:2: iv_ruleFirstPathElementCS= ruleFirstPathElementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFirstPathElementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFirstPathElementCS=ruleFirstPathElementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFirstPathElementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFirstPathElementCS"


    // $ANTLR start "ruleFirstPathElementCS"
    // InternalQVTimperative.g:11857:1: ruleFirstPathElementCS returns [EObject current=null] : ( ( ruleUnrestrictedName ) ) ;
    public final EObject ruleFirstPathElementCS() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalQVTimperative.g:11863:2: ( ( ( ruleUnrestrictedName ) ) )
            // InternalQVTimperative.g:11864:2: ( ( ruleUnrestrictedName ) )
            {
            // InternalQVTimperative.g:11864:2: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:11865:3: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:11865:3: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:11866:4: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              				/* */

            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFirstPathElementCSRule());
              				}

            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getFirstPathElementCSAccess().getReferredElementNamedElementCrossReference_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();

            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFirstPathElementCS"


    // $ANTLR start "entryRuleNextPathElementCS"
    // InternalQVTimperative.g:11886:1: entryRuleNextPathElementCS returns [EObject current=null] : iv_ruleNextPathElementCS= ruleNextPathElementCS EOF ;
    public final EObject entryRuleNextPathElementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNextPathElementCS = null;


        try {
            // InternalQVTimperative.g:11886:58: (iv_ruleNextPathElementCS= ruleNextPathElementCS EOF )
            // InternalQVTimperative.g:11887:2: iv_ruleNextPathElementCS= ruleNextPathElementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNextPathElementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNextPathElementCS=ruleNextPathElementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNextPathElementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNextPathElementCS"


    // $ANTLR start "ruleNextPathElementCS"
    // InternalQVTimperative.g:11893:1: ruleNextPathElementCS returns [EObject current=null] : ( ( ruleUnreservedName ) ) ;
    public final EObject ruleNextPathElementCS() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalQVTimperative.g:11899:2: ( ( ( ruleUnreservedName ) ) )
            // InternalQVTimperative.g:11900:2: ( ( ruleUnreservedName ) )
            {
            // InternalQVTimperative.g:11900:2: ( ( ruleUnreservedName ) )
            // InternalQVTimperative.g:11901:3: ( ruleUnreservedName )
            {
            // InternalQVTimperative.g:11901:3: ( ruleUnreservedName )
            // InternalQVTimperative.g:11902:4: ruleUnreservedName
            {
            if ( state.backtracking==0 ) {

              				/* */

            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getNextPathElementCSRule());
              				}

            }
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getNextPathElementCSAccess().getReferredElementNamedElementCrossReference_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnreservedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				afterParserOrEnumRuleCall();

            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNextPathElementCS"


    // $ANTLR start "entryRuleTemplateBindingCS"
    // InternalQVTimperative.g:11922:1: entryRuleTemplateBindingCS returns [EObject current=null] : iv_ruleTemplateBindingCS= ruleTemplateBindingCS EOF ;
    public final EObject entryRuleTemplateBindingCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTemplateBindingCS = null;


        try {
            // InternalQVTimperative.g:11922:58: (iv_ruleTemplateBindingCS= ruleTemplateBindingCS EOF )
            // InternalQVTimperative.g:11923:2: iv_ruleTemplateBindingCS= ruleTemplateBindingCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateBindingCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTemplateBindingCS=ruleTemplateBindingCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateBindingCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTemplateBindingCS"


    // $ANTLR start "ruleTemplateBindingCS"
    // InternalQVTimperative.g:11929:1: ruleTemplateBindingCS returns [EObject current=null] : ( ( (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS ) ) (otherlv_1= ',' ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) ) )* ( (lv_ownedMultiplicity_3_0= ruleMultiplicityCS ) )? ) ;
    public final EObject ruleTemplateBindingCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedSubstitutions_0_0 = null;

        EObject lv_ownedSubstitutions_2_0 = null;

        EObject lv_ownedMultiplicity_3_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:11935:2: ( ( ( (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS ) ) (otherlv_1= ',' ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) ) )* ( (lv_ownedMultiplicity_3_0= ruleMultiplicityCS ) )? ) )
            // InternalQVTimperative.g:11936:2: ( ( (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS ) ) (otherlv_1= ',' ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) ) )* ( (lv_ownedMultiplicity_3_0= ruleMultiplicityCS ) )? )
            {
            // InternalQVTimperative.g:11936:2: ( ( (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS ) ) (otherlv_1= ',' ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) ) )* ( (lv_ownedMultiplicity_3_0= ruleMultiplicityCS ) )? )
            // InternalQVTimperative.g:11937:3: ( (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS ) ) (otherlv_1= ',' ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) ) )* ( (lv_ownedMultiplicity_3_0= ruleMultiplicityCS ) )?
            {
            // InternalQVTimperative.g:11937:3: ( (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS ) )
            // InternalQVTimperative.g:11938:4: (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS )
            {
            // InternalQVTimperative.g:11938:4: (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS )
            // InternalQVTimperative.g:11939:5: lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTemplateBindingCSAccess().getOwnedSubstitutionsTemplateParameterSubstitutionCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_157);
            lv_ownedSubstitutions_0_0=ruleTemplateParameterSubstitutionCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTemplateBindingCSRule());
              					}
              					add(
              						current,
              						"ownedSubstitutions",
              						lv_ownedSubstitutions_0_0,
              						"org.eclipse.ocl.xtext.base.Base.TemplateParameterSubstitutionCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:11956:3: (otherlv_1= ',' ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) ) )*
            loop259:
            do {
                int alt259=2;
                int LA259_0 = input.LA(1);

                if ( (LA259_0==18) ) {
                    alt259=1;
                }


                switch (alt259) {
            	case 1 :
            	    // InternalQVTimperative.g:11957:4: otherlv_1= ',' ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) )
            	    {
            	    otherlv_1=(Token)match(input,18,FollowSets000.FOLLOW_158); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getTemplateBindingCSAccess().getCommaKeyword_1_0());

            	    }
            	    // InternalQVTimperative.g:11961:4: ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) )
            	    // InternalQVTimperative.g:11962:5: (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS )
            	    {
            	    // InternalQVTimperative.g:11962:5: (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS )
            	    // InternalQVTimperative.g:11963:6: lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTemplateBindingCSAccess().getOwnedSubstitutionsTemplateParameterSubstitutionCSParserRuleCall_1_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_157);
            	    lv_ownedSubstitutions_2_0=ruleTemplateParameterSubstitutionCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTemplateBindingCSRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedSubstitutions",
            	      							lv_ownedSubstitutions_2_0,
            	      							"org.eclipse.ocl.xtext.base.Base.TemplateParameterSubstitutionCS");
            	      						afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop259;
                }
            } while (true);

            // InternalQVTimperative.g:11981:3: ( (lv_ownedMultiplicity_3_0= ruleMultiplicityCS ) )?
            int alt260=2;
            int LA260_0 = input.LA(1);

            if ( (LA260_0==152) ) {
                alt260=1;
            }
            switch (alt260) {
                case 1 :
                    // InternalQVTimperative.g:11982:4: (lv_ownedMultiplicity_3_0= ruleMultiplicityCS )
                    {
                    // InternalQVTimperative.g:11982:4: (lv_ownedMultiplicity_3_0= ruleMultiplicityCS )
                    // InternalQVTimperative.g:11983:5: lv_ownedMultiplicity_3_0= ruleMultiplicityCS
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTemplateBindingCSAccess().getOwnedMultiplicityMultiplicityCSParserRuleCall_2_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedMultiplicity_3_0=ruleMultiplicityCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTemplateBindingCSRule());
                      					}
                      					set(
                      						current,
                      						"ownedMultiplicity",
                      						lv_ownedMultiplicity_3_0,
                      						"org.eclipse.ocl.xtext.base.Base.MultiplicityCS");
                      					afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTemplateBindingCS"


    // $ANTLR start "entryRuleTemplateParameterSubstitutionCS"
    // InternalQVTimperative.g:12004:1: entryRuleTemplateParameterSubstitutionCS returns [EObject current=null] : iv_ruleTemplateParameterSubstitutionCS= ruleTemplateParameterSubstitutionCS EOF ;
    public final EObject entryRuleTemplateParameterSubstitutionCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTemplateParameterSubstitutionCS = null;


        try {
            // InternalQVTimperative.g:12004:72: (iv_ruleTemplateParameterSubstitutionCS= ruleTemplateParameterSubstitutionCS EOF )
            // InternalQVTimperative.g:12005:2: iv_ruleTemplateParameterSubstitutionCS= ruleTemplateParameterSubstitutionCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateParameterSubstitutionCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTemplateParameterSubstitutionCS=ruleTemplateParameterSubstitutionCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateParameterSubstitutionCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTemplateParameterSubstitutionCS"


    // $ANTLR start "ruleTemplateParameterSubstitutionCS"
    // InternalQVTimperative.g:12011:1: ruleTemplateParameterSubstitutionCS returns [EObject current=null] : ( (lv_ownedActualParameter_0_0= ruleTypeRefCS ) ) ;
    public final EObject ruleTemplateParameterSubstitutionCS() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedActualParameter_0_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:12017:2: ( ( (lv_ownedActualParameter_0_0= ruleTypeRefCS ) ) )
            // InternalQVTimperative.g:12018:2: ( (lv_ownedActualParameter_0_0= ruleTypeRefCS ) )
            {
            // InternalQVTimperative.g:12018:2: ( (lv_ownedActualParameter_0_0= ruleTypeRefCS ) )
            // InternalQVTimperative.g:12019:3: (lv_ownedActualParameter_0_0= ruleTypeRefCS )
            {
            // InternalQVTimperative.g:12019:3: (lv_ownedActualParameter_0_0= ruleTypeRefCS )
            // InternalQVTimperative.g:12020:4: lv_ownedActualParameter_0_0= ruleTypeRefCS
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getTemplateParameterSubstitutionCSAccess().getOwnedActualParameterTypeRefCSParserRuleCall_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedActualParameter_0_0=ruleTypeRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getTemplateParameterSubstitutionCSRule());
              				}
              				set(
              					current,
              					"ownedActualParameter",
              					lv_ownedActualParameter_0_0,
              					"org.eclipse.ocl.xtext.base.Base.TypeRefCS");
              				afterParserOrEnumRuleCall();

            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTemplateParameterSubstitutionCS"


    // $ANTLR start "entryRuleTemplateSignatureCS"
    // InternalQVTimperative.g:12040:1: entryRuleTemplateSignatureCS returns [EObject current=null] : iv_ruleTemplateSignatureCS= ruleTemplateSignatureCS EOF ;
    public final EObject entryRuleTemplateSignatureCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTemplateSignatureCS = null;


        try {
            // InternalQVTimperative.g:12040:60: (iv_ruleTemplateSignatureCS= ruleTemplateSignatureCS EOF )
            // InternalQVTimperative.g:12041:2: iv_ruleTemplateSignatureCS= ruleTemplateSignatureCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateSignatureCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTemplateSignatureCS=ruleTemplateSignatureCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateSignatureCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTemplateSignatureCS"


    // $ANTLR start "ruleTemplateSignatureCS"
    // InternalQVTimperative.g:12047:1: ruleTemplateSignatureCS returns [EObject current=null] : (otherlv_0= '(' ( (lv_ownedParameters_1_0= ruleTypeParameterCS ) ) (otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) ) )* otherlv_4= ')' ) ;
    public final EObject ruleTemplateSignatureCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedParameters_1_0 = null;

        EObject lv_ownedParameters_3_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:12053:2: ( (otherlv_0= '(' ( (lv_ownedParameters_1_0= ruleTypeParameterCS ) ) (otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) ) )* otherlv_4= ')' ) )
            // InternalQVTimperative.g:12054:2: (otherlv_0= '(' ( (lv_ownedParameters_1_0= ruleTypeParameterCS ) ) (otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) ) )* otherlv_4= ')' )
            {
            // InternalQVTimperative.g:12054:2: (otherlv_0= '(' ( (lv_ownedParameters_1_0= ruleTypeParameterCS ) ) (otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) ) )* otherlv_4= ')' )
            // InternalQVTimperative.g:12055:3: otherlv_0= '(' ( (lv_ownedParameters_1_0= ruleTypeParameterCS ) ) (otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) ) )* otherlv_4= ')'
            {
            otherlv_0=(Token)match(input,56,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTemplateSignatureCSAccess().getLeftParenthesisKeyword_0());

            }
            // InternalQVTimperative.g:12059:3: ( (lv_ownedParameters_1_0= ruleTypeParameterCS ) )
            // InternalQVTimperative.g:12060:4: (lv_ownedParameters_1_0= ruleTypeParameterCS )
            {
            // InternalQVTimperative.g:12060:4: (lv_ownedParameters_1_0= ruleTypeParameterCS )
            // InternalQVTimperative.g:12061:5: lv_ownedParameters_1_0= ruleTypeParameterCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTemplateSignatureCSAccess().getOwnedParametersTypeParameterCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_56);
            lv_ownedParameters_1_0=ruleTypeParameterCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTemplateSignatureCSRule());
              					}
              					add(
              						current,
              						"ownedParameters",
              						lv_ownedParameters_1_0,
              						"org.eclipse.ocl.xtext.base.Base.TypeParameterCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:12078:3: (otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) ) )*
            loop261:
            do {
                int alt261=2;
                int LA261_0 = input.LA(1);

                if ( (LA261_0==18) ) {
                    alt261=1;
                }


                switch (alt261) {
            	case 1 :
            	    // InternalQVTimperative.g:12079:4: otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getTemplateSignatureCSAccess().getCommaKeyword_2_0());

            	    }
            	    // InternalQVTimperative.g:12083:4: ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) )
            	    // InternalQVTimperative.g:12084:5: (lv_ownedParameters_3_0= ruleTypeParameterCS )
            	    {
            	    // InternalQVTimperative.g:12084:5: (lv_ownedParameters_3_0= ruleTypeParameterCS )
            	    // InternalQVTimperative.g:12085:6: lv_ownedParameters_3_0= ruleTypeParameterCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTemplateSignatureCSAccess().getOwnedParametersTypeParameterCSParserRuleCall_2_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_56);
            	    lv_ownedParameters_3_0=ruleTypeParameterCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTemplateSignatureCSRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ownedParameters",
            	      							lv_ownedParameters_3_0,
            	      							"org.eclipse.ocl.xtext.base.Base.TypeParameterCS");
            	      						afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop261;
                }
            } while (true);

            otherlv_4=(Token)match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getTemplateSignatureCSAccess().getRightParenthesisKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTemplateSignatureCS"


    // $ANTLR start "entryRuleTypeParameterCS"
    // InternalQVTimperative.g:12111:1: entryRuleTypeParameterCS returns [EObject current=null] : iv_ruleTypeParameterCS= ruleTypeParameterCS EOF ;
    public final EObject entryRuleTypeParameterCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeParameterCS = null;


        try {
            // InternalQVTimperative.g:12111:56: (iv_ruleTypeParameterCS= ruleTypeParameterCS EOF )
            // InternalQVTimperative.g:12112:2: iv_ruleTypeParameterCS= ruleTypeParameterCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeParameterCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeParameterCS=ruleTypeParameterCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeParameterCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeParameterCS"


    // $ANTLR start "ruleTypeParameterCS"
    // InternalQVTimperative.g:12118:1: ruleTypeParameterCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= 'extends' ( (lv_ownedExtends_2_0= ruleTypedRefCS ) ) (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )* )? ) ;
    public final EObject ruleTypeParameterCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedExtends_2_0 = null;

        EObject lv_ownedExtends_4_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:12124:2: ( ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= 'extends' ( (lv_ownedExtends_2_0= ruleTypedRefCS ) ) (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )* )? ) )
            // InternalQVTimperative.g:12125:2: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= 'extends' ( (lv_ownedExtends_2_0= ruleTypedRefCS ) ) (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )* )? )
            {
            // InternalQVTimperative.g:12125:2: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= 'extends' ( (lv_ownedExtends_2_0= ruleTypedRefCS ) ) (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )* )? )
            // InternalQVTimperative.g:12126:3: ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= 'extends' ( (lv_ownedExtends_2_0= ruleTypedRefCS ) ) (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )* )?
            {
            // InternalQVTimperative.g:12126:3: ( (lv_name_0_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:12127:4: (lv_name_0_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:12127:4: (lv_name_0_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:12128:5: lv_name_0_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeParameterCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_159);
            lv_name_0_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeParameterCSRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:12145:3: (otherlv_1= 'extends' ( (lv_ownedExtends_2_0= ruleTypedRefCS ) ) (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )* )?
            int alt263=2;
            int LA263_0 = input.LA(1);

            if ( (LA263_0==104) ) {
                alt263=1;
            }
            switch (alt263) {
                case 1 :
                    // InternalQVTimperative.g:12146:4: otherlv_1= 'extends' ( (lv_ownedExtends_2_0= ruleTypedRefCS ) ) (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )*
                    {
                    otherlv_1=(Token)match(input,104,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getTypeParameterCSAccess().getExtendsKeyword_1_0());

                    }
                    // InternalQVTimperative.g:12150:4: ( (lv_ownedExtends_2_0= ruleTypedRefCS ) )
                    // InternalQVTimperative.g:12151:5: (lv_ownedExtends_2_0= ruleTypedRefCS )
                    {
                    // InternalQVTimperative.g:12151:5: (lv_ownedExtends_2_0= ruleTypedRefCS )
                    // InternalQVTimperative.g:12152:6: lv_ownedExtends_2_0= ruleTypedRefCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeParameterCSAccess().getOwnedExtendsTypedRefCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_160);
                    lv_ownedExtends_2_0=ruleTypedRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeParameterCSRule());
                      						}
                      						add(
                      							current,
                      							"ownedExtends",
                      							lv_ownedExtends_2_0,
                      							"org.eclipse.qvtd.xtext.qvtbase.QVTbase.TypedRefCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:12169:4: (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )*
                    loop262:
                    do {
                        int alt262=2;
                        int LA262_0 = input.LA(1);

                        if ( (LA262_0==165) ) {
                            alt262=1;
                        }


                        switch (alt262) {
                    	case 1 :
                    	    // InternalQVTimperative.g:12170:5: otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) )
                    	    {
                    	    otherlv_3=(Token)match(input,165,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getTypeParameterCSAccess().getAmpersandAmpersandKeyword_1_2_0());

                    	    }
                    	    // InternalQVTimperative.g:12174:5: ( (lv_ownedExtends_4_0= ruleTypedRefCS ) )
                    	    // InternalQVTimperative.g:12175:6: (lv_ownedExtends_4_0= ruleTypedRefCS )
                    	    {
                    	    // InternalQVTimperative.g:12175:6: (lv_ownedExtends_4_0= ruleTypedRefCS )
                    	    // InternalQVTimperative.g:12176:7: lv_ownedExtends_4_0= ruleTypedRefCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getTypeParameterCSAccess().getOwnedExtendsTypedRefCSParserRuleCall_1_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_160);
                    	    lv_ownedExtends_4_0=ruleTypedRefCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getTypeParameterCSRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"ownedExtends",
                    	      								lv_ownedExtends_4_0,
                    	      								"org.eclipse.qvtd.xtext.qvtbase.QVTbase.TypedRefCS");
                    	      							afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop262;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeParameterCS"


    // $ANTLR start "entryRuleTypeRefCS"
    // InternalQVTimperative.g:12199:1: entryRuleTypeRefCS returns [EObject current=null] : iv_ruleTypeRefCS= ruleTypeRefCS EOF ;
    public final EObject entryRuleTypeRefCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeRefCS = null;


        try {
            // InternalQVTimperative.g:12199:50: (iv_ruleTypeRefCS= ruleTypeRefCS EOF )
            // InternalQVTimperative.g:12200:2: iv_ruleTypeRefCS= ruleTypeRefCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRefCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeRefCS=ruleTypeRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeRefCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeRefCS"


    // $ANTLR start "ruleTypeRefCS"
    // InternalQVTimperative.g:12206:1: ruleTypeRefCS returns [EObject current=null] : (this_TypedRefCS_0= ruleTypedRefCS | this_WildcardTypeRefCS_1= ruleWildcardTypeRefCS ) ;
    public final EObject ruleTypeRefCS() throws RecognitionException {
        EObject current = null;

        EObject this_TypedRefCS_0 = null;

        EObject this_WildcardTypeRefCS_1 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:12212:2: ( (this_TypedRefCS_0= ruleTypedRefCS | this_WildcardTypeRefCS_1= ruleWildcardTypeRefCS ) )
            // InternalQVTimperative.g:12213:2: (this_TypedRefCS_0= ruleTypedRefCS | this_WildcardTypeRefCS_1= ruleWildcardTypeRefCS )
            {
            // InternalQVTimperative.g:12213:2: (this_TypedRefCS_0= ruleTypedRefCS | this_WildcardTypeRefCS_1= ruleWildcardTypeRefCS )
            int alt264=2;
            int LA264_0 = input.LA(1);

            if ( ((LA264_0>=RULE_SIMPLE_ID && LA264_0<=RULE_ESCAPED_ID)||LA264_0==17||LA264_0==19||(LA264_0>=22 && LA264_0<=23)||(LA264_0>=25 && LA264_0<=26)||(LA264_0>=29 && LA264_0<=34)||LA264_0==39||(LA264_0>=43 && LA264_0<=48)||(LA264_0>=50 && LA264_0<=52)||(LA264_0>=54 && LA264_0<=55)||(LA264_0>=58 && LA264_0<=60)||(LA264_0>=62 && LA264_0<=70)||LA264_0==72||LA264_0==74||LA264_0==76||LA264_0==79||LA264_0==81||LA264_0==83||(LA264_0>=85 && LA264_0<=89)||(LA264_0>=91 && LA264_0<=96)||LA264_0==98||LA264_0==100||(LA264_0>=102 && LA264_0<=105)||(LA264_0>=127 && LA264_0<=141)) ) {
                alt264=1;
            }
            else if ( (LA264_0==164) ) {
                alt264=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 264, 0, input);

                throw nvae;
            }
            switch (alt264) {
                case 1 :
                    // InternalQVTimperative.g:12214:3: this_TypedRefCS_0= ruleTypedRefCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeRefCSAccess().getTypedRefCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypedRefCS_0=ruleTypedRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypedRefCS_0;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:12226:3: this_WildcardTypeRefCS_1= ruleWildcardTypeRefCS
                    {
                    if ( state.backtracking==0 ) {

                      			/* */

                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeRefCSAccess().getWildcardTypeRefCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_WildcardTypeRefCS_1=ruleWildcardTypeRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_WildcardTypeRefCS_1;
                      			afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeRefCS"


    // $ANTLR start "entryRuleTypedTypeRefCS"
    // InternalQVTimperative.g:12241:1: entryRuleTypedTypeRefCS returns [EObject current=null] : iv_ruleTypedTypeRefCS= ruleTypedTypeRefCS EOF ;
    public final EObject entryRuleTypedTypeRefCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypedTypeRefCS = null;


        try {
            // InternalQVTimperative.g:12241:55: (iv_ruleTypedTypeRefCS= ruleTypedTypeRefCS EOF )
            // InternalQVTimperative.g:12242:2: iv_ruleTypedTypeRefCS= ruleTypedTypeRefCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypedTypeRefCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypedTypeRefCS=ruleTypedTypeRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypedTypeRefCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypedTypeRefCS"


    // $ANTLR start "ruleTypedTypeRefCS"
    // InternalQVTimperative.g:12248:1: ruleTypedTypeRefCS returns [EObject current=null] : ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) (otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')' )? ) ;
    public final EObject ruleTypedTypeRefCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_ownedPathName_0_0 = null;

        EObject lv_ownedBinding_2_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:12254:2: ( ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) (otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')' )? ) )
            // InternalQVTimperative.g:12255:2: ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) (otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')' )? )
            {
            // InternalQVTimperative.g:12255:2: ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) (otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')' )? )
            // InternalQVTimperative.g:12256:3: ( (lv_ownedPathName_0_0= rulePathNameCS ) ) (otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')' )?
            {
            // InternalQVTimperative.g:12256:3: ( (lv_ownedPathName_0_0= rulePathNameCS ) )
            // InternalQVTimperative.g:12257:4: (lv_ownedPathName_0_0= rulePathNameCS )
            {
            // InternalQVTimperative.g:12257:4: (lv_ownedPathName_0_0= rulePathNameCS )
            // InternalQVTimperative.g:12258:5: lv_ownedPathName_0_0= rulePathNameCS
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypedTypeRefCSAccess().getOwnedPathNamePathNameCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_120);
            lv_ownedPathName_0_0=rulePathNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypedTypeRefCSRule());
              					}
              					set(
              						current,
              						"ownedPathName",
              						lv_ownedPathName_0_0,
              						"org.eclipse.ocl.xtext.base.Base.PathNameCS");
              					afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:12275:3: (otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')' )?
            int alt265=2;
            int LA265_0 = input.LA(1);

            if ( (LA265_0==56) ) {
                alt265=1;
            }
            switch (alt265) {
                case 1 :
                    // InternalQVTimperative.g:12276:4: otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')'
                    {
                    otherlv_1=(Token)match(input,56,FollowSets000.FOLLOW_158); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getTypedTypeRefCSAccess().getLeftParenthesisKeyword_1_0());

                    }
                    // InternalQVTimperative.g:12280:4: ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) )
                    // InternalQVTimperative.g:12281:5: (lv_ownedBinding_2_0= ruleTemplateBindingCS )
                    {
                    // InternalQVTimperative.g:12281:5: (lv_ownedBinding_2_0= ruleTemplateBindingCS )
                    // InternalQVTimperative.g:12282:6: lv_ownedBinding_2_0= ruleTemplateBindingCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypedTypeRefCSAccess().getOwnedBindingTemplateBindingCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_122);
                    lv_ownedBinding_2_0=ruleTemplateBindingCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypedTypeRefCSRule());
                      						}
                      						set(
                      							current,
                      							"ownedBinding",
                      							lv_ownedBinding_2_0,
                      							"org.eclipse.ocl.xtext.base.Base.TemplateBindingCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    otherlv_3=(Token)match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getTypedTypeRefCSAccess().getRightParenthesisKeyword_1_2());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypedTypeRefCS"


    // $ANTLR start "entryRuleWildcardTypeRefCS"
    // InternalQVTimperative.g:12308:1: entryRuleWildcardTypeRefCS returns [EObject current=null] : iv_ruleWildcardTypeRefCS= ruleWildcardTypeRefCS EOF ;
    public final EObject entryRuleWildcardTypeRefCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcardTypeRefCS = null;


        try {
            // InternalQVTimperative.g:12308:58: (iv_ruleWildcardTypeRefCS= ruleWildcardTypeRefCS EOF )
            // InternalQVTimperative.g:12309:2: iv_ruleWildcardTypeRefCS= ruleWildcardTypeRefCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardTypeRefCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleWildcardTypeRefCS=ruleWildcardTypeRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardTypeRefCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWildcardTypeRefCS"


    // $ANTLR start "ruleWildcardTypeRefCS"
    // InternalQVTimperative.g:12315:1: ruleWildcardTypeRefCS returns [EObject current=null] : ( () otherlv_1= '?' (otherlv_2= 'extends' ( (lv_ownedExtends_3_0= ruleTypedRefCS ) ) )? ) ;
    public final EObject ruleWildcardTypeRefCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_ownedExtends_3_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:12321:2: ( ( () otherlv_1= '?' (otherlv_2= 'extends' ( (lv_ownedExtends_3_0= ruleTypedRefCS ) ) )? ) )
            // InternalQVTimperative.g:12322:2: ( () otherlv_1= '?' (otherlv_2= 'extends' ( (lv_ownedExtends_3_0= ruleTypedRefCS ) ) )? )
            {
            // InternalQVTimperative.g:12322:2: ( () otherlv_1= '?' (otherlv_2= 'extends' ( (lv_ownedExtends_3_0= ruleTypedRefCS ) ) )? )
            // InternalQVTimperative.g:12323:3: () otherlv_1= '?' (otherlv_2= 'extends' ( (lv_ownedExtends_3_0= ruleTypedRefCS ) ) )?
            {
            // InternalQVTimperative.g:12323:3: ()
            // InternalQVTimperative.g:12324:4:
            {
            if ( state.backtracking==0 ) {

              				/* */

            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getWildcardTypeRefCSAccess().getWildcardTypeRefCSAction_0(),
              					current);

            }

            }

            otherlv_1=(Token)match(input,164,FollowSets000.FOLLOW_159); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getWildcardTypeRefCSAccess().getQuestionMarkKeyword_1());

            }
            // InternalQVTimperative.g:12337:3: (otherlv_2= 'extends' ( (lv_ownedExtends_3_0= ruleTypedRefCS ) ) )?
            int alt266=2;
            int LA266_0 = input.LA(1);

            if ( (LA266_0==104) ) {
                alt266=1;
            }
            switch (alt266) {
                case 1 :
                    // InternalQVTimperative.g:12338:4: otherlv_2= 'extends' ( (lv_ownedExtends_3_0= ruleTypedRefCS ) )
                    {
                    otherlv_2=(Token)match(input,104,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getWildcardTypeRefCSAccess().getExtendsKeyword_2_0());

                    }
                    // InternalQVTimperative.g:12342:4: ( (lv_ownedExtends_3_0= ruleTypedRefCS ) )
                    // InternalQVTimperative.g:12343:5: (lv_ownedExtends_3_0= ruleTypedRefCS )
                    {
                    // InternalQVTimperative.g:12343:5: (lv_ownedExtends_3_0= ruleTypedRefCS )
                    // InternalQVTimperative.g:12344:6: lv_ownedExtends_3_0= ruleTypedRefCS
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getWildcardTypeRefCSAccess().getOwnedExtendsTypedRefCSParserRuleCall_2_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedExtends_3_0=ruleTypedRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getWildcardTypeRefCSRule());
                      						}
                      						set(
                      							current,
                      							"ownedExtends",
                      							lv_ownedExtends_3_0,
                      							"org.eclipse.qvtd.xtext.qvtbase.QVTbase.TypedRefCS");
                      						afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWildcardTypeRefCS"


    // $ANTLR start "entryRuleID"
    // InternalQVTimperative.g:12366:1: entryRuleID returns [String current=null] : iv_ruleID= ruleID EOF ;
    public final String entryRuleID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleID = null;


        try {
            // InternalQVTimperative.g:12366:42: (iv_ruleID= ruleID EOF )
            // InternalQVTimperative.g:12367:2: iv_ruleID= ruleID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIDRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleID=ruleID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleID.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleID"


    // $ANTLR start "ruleID"
    // InternalQVTimperative.g:12373:1: ruleID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_SIMPLE_ID_0= RULE_SIMPLE_ID | this_ESCAPED_ID_1= RULE_ESCAPED_ID ) ;
    public final AntlrDatatypeRuleToken ruleID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_SIMPLE_ID_0=null;
        Token this_ESCAPED_ID_1=null;


        	enterRule();

        try {
            // InternalQVTimperative.g:12379:2: ( (this_SIMPLE_ID_0= RULE_SIMPLE_ID | this_ESCAPED_ID_1= RULE_ESCAPED_ID ) )
            // InternalQVTimperative.g:12380:2: (this_SIMPLE_ID_0= RULE_SIMPLE_ID | this_ESCAPED_ID_1= RULE_ESCAPED_ID )
            {
            // InternalQVTimperative.g:12380:2: (this_SIMPLE_ID_0= RULE_SIMPLE_ID | this_ESCAPED_ID_1= RULE_ESCAPED_ID )
            int alt267=2;
            int LA267_0 = input.LA(1);

            if ( (LA267_0==RULE_SIMPLE_ID) ) {
                alt267=1;
            }
            else if ( (LA267_0==RULE_ESCAPED_ID) ) {
                alt267=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 267, 0, input);

                throw nvae;
            }
            switch (alt267) {
                case 1 :
                    // InternalQVTimperative.g:12381:3: this_SIMPLE_ID_0= RULE_SIMPLE_ID
                    {
                    this_SIMPLE_ID_0=(Token)match(input,RULE_SIMPLE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_SIMPLE_ID_0);

                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_SIMPLE_ID_0, grammarAccess.getIDAccess().getSIMPLE_IDTerminalRuleCall_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:12389:3: this_ESCAPED_ID_1= RULE_ESCAPED_ID
                    {
                    this_ESCAPED_ID_1=(Token)match(input,RULE_ESCAPED_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ESCAPED_ID_1);

                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_ESCAPED_ID_1, grammarAccess.getIDAccess().getESCAPED_IDTerminalRuleCall_1());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleID"


    // $ANTLR start "entryRuleIdentifier"
    // InternalQVTimperative.g:12400:1: entryRuleIdentifier returns [String current=null] : iv_ruleIdentifier= ruleIdentifier EOF ;
    public final String entryRuleIdentifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIdentifier = null;


        try {
            // InternalQVTimperative.g:12400:50: (iv_ruleIdentifier= ruleIdentifier EOF )
            // InternalQVTimperative.g:12401:2: iv_ruleIdentifier= ruleIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentifierRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIdentifier=ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentifier.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdentifier"


    // $ANTLR start "ruleIdentifier"
    // InternalQVTimperative.g:12407:1: ruleIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_ID_0= ruleID ;
    public final AntlrDatatypeRuleToken ruleIdentifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_ID_0 = null;



        	enterRule();

        try {
            // InternalQVTimperative.g:12413:2: (this_ID_0= ruleID )
            // InternalQVTimperative.g:12414:2: this_ID_0= ruleID
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getIdentifierAccess().getIDParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_ID_0=ruleID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);

            }
            if ( state.backtracking==0 ) {

              		afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdentifier"


    // $ANTLR start "entryRuleLOWER"
    // InternalQVTimperative.g:12427:1: entryRuleLOWER returns [String current=null] : iv_ruleLOWER= ruleLOWER EOF ;
    public final String entryRuleLOWER() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleLOWER = null;


        try {
            // InternalQVTimperative.g:12427:45: (iv_ruleLOWER= ruleLOWER EOF )
            // InternalQVTimperative.g:12428:2: iv_ruleLOWER= ruleLOWER EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLOWERRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLOWER=ruleLOWER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLOWER.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLOWER"


    // $ANTLR start "ruleLOWER"
    // InternalQVTimperative.g:12434:1: ruleLOWER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_INT_0= RULE_INT ;
    public final AntlrDatatypeRuleToken ruleLOWER() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0=null;


        	enterRule();

        try {
            // InternalQVTimperative.g:12440:2: (this_INT_0= RULE_INT )
            // InternalQVTimperative.g:12441:2: this_INT_0= RULE_INT
            {
            this_INT_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_INT_0);

            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_INT_0, grammarAccess.getLOWERAccess().getINTTerminalRuleCall());

            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLOWER"


    // $ANTLR start "entryRuleNUMBER_LITERAL"
    // InternalQVTimperative.g:12451:1: entryRuleNUMBER_LITERAL returns [String current=null] : iv_ruleNUMBER_LITERAL= ruleNUMBER_LITERAL EOF ;
    public final String entryRuleNUMBER_LITERAL() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNUMBER_LITERAL = null;


        try {
            // InternalQVTimperative.g:12451:54: (iv_ruleNUMBER_LITERAL= ruleNUMBER_LITERAL EOF )
            // InternalQVTimperative.g:12452:2: iv_ruleNUMBER_LITERAL= ruleNUMBER_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNUMBER_LITERALRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNUMBER_LITERAL=ruleNUMBER_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNUMBER_LITERAL.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNUMBER_LITERAL"


    // $ANTLR start "ruleNUMBER_LITERAL"
    // InternalQVTimperative.g:12458:1: ruleNUMBER_LITERAL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_INT_0= RULE_INT ;
    public final AntlrDatatypeRuleToken ruleNUMBER_LITERAL() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0=null;


        	enterRule();

        try {
            // InternalQVTimperative.g:12464:2: (this_INT_0= RULE_INT )
            // InternalQVTimperative.g:12465:2: this_INT_0= RULE_INT
            {
            this_INT_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_INT_0);

            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_INT_0, grammarAccess.getNUMBER_LITERALAccess().getINTTerminalRuleCall());

            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNUMBER_LITERAL"


    // $ANTLR start "entryRuleStringLiteral"
    // InternalQVTimperative.g:12475:1: entryRuleStringLiteral returns [String current=null] : iv_ruleStringLiteral= ruleStringLiteral EOF ;
    public final String entryRuleStringLiteral() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleStringLiteral = null;


        try {
            // InternalQVTimperative.g:12475:53: (iv_ruleStringLiteral= ruleStringLiteral EOF )
            // InternalQVTimperative.g:12476:2: iv_ruleStringLiteral= ruleStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringLiteralRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStringLiteral=ruleStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringLiteral.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringLiteral"


    // $ANTLR start "ruleStringLiteral"
    // InternalQVTimperative.g:12482:1: ruleStringLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_SINGLE_QUOTED_STRING_0= RULE_SINGLE_QUOTED_STRING ;
    public final AntlrDatatypeRuleToken ruleStringLiteral() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_SINGLE_QUOTED_STRING_0=null;


        	enterRule();

        try {
            // InternalQVTimperative.g:12488:2: (this_SINGLE_QUOTED_STRING_0= RULE_SINGLE_QUOTED_STRING )
            // InternalQVTimperative.g:12489:2: this_SINGLE_QUOTED_STRING_0= RULE_SINGLE_QUOTED_STRING
            {
            this_SINGLE_QUOTED_STRING_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_SINGLE_QUOTED_STRING_0);

            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_SINGLE_QUOTED_STRING_0, grammarAccess.getStringLiteralAccess().getSINGLE_QUOTED_STRINGTerminalRuleCall());

            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringLiteral"


    // $ANTLR start "entryRuleUPPER"
    // InternalQVTimperative.g:12499:1: entryRuleUPPER returns [String current=null] : iv_ruleUPPER= ruleUPPER EOF ;
    public final String entryRuleUPPER() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUPPER = null;


        try {
            // InternalQVTimperative.g:12499:45: (iv_ruleUPPER= ruleUPPER EOF )
            // InternalQVTimperative.g:12500:2: iv_ruleUPPER= ruleUPPER EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUPPERRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleUPPER=ruleUPPER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUPPER.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUPPER"


    // $ANTLR start "ruleUPPER"
    // InternalQVTimperative.g:12506:1: ruleUPPER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_INT_0= RULE_INT | kw= '*' ) ;
    public final AntlrDatatypeRuleToken ruleUPPER() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0=null;
        Token kw=null;


        	enterRule();

        try {
            // InternalQVTimperative.g:12512:2: ( (this_INT_0= RULE_INT | kw= '*' ) )
            // InternalQVTimperative.g:12513:2: (this_INT_0= RULE_INT | kw= '*' )
            {
            // InternalQVTimperative.g:12513:2: (this_INT_0= RULE_INT | kw= '*' )
            int alt268=2;
            int LA268_0 = input.LA(1);

            if ( (LA268_0==RULE_INT) ) {
                alt268=1;
            }
            else if ( (LA268_0==42) ) {
                alt268=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 268, 0, input);

                throw nvae;
            }
            switch (alt268) {
                case 1 :
                    // InternalQVTimperative.g:12514:3: this_INT_0= RULE_INT
                    {
                    this_INT_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_INT_0);

                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_INT_0, grammarAccess.getUPPERAccess().getINTTerminalRuleCall_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:12522:3: kw= '*'
                    {
                    kw=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getUPPERAccess().getAsteriskKeyword_1());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUPPER"


    // $ANTLR start "entryRuleURI"
    // InternalQVTimperative.g:12531:1: entryRuleURI returns [String current=null] : iv_ruleURI= ruleURI EOF ;
    public final String entryRuleURI() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleURI = null;


        try {
            // InternalQVTimperative.g:12531:43: (iv_ruleURI= ruleURI EOF )
            // InternalQVTimperative.g:12532:2: iv_ruleURI= ruleURI EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getURIRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleURI=ruleURI();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleURI.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleURI"


    // $ANTLR start "ruleURI"
    // InternalQVTimperative.g:12538:1: ruleURI returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_SINGLE_QUOTED_STRING_0= RULE_SINGLE_QUOTED_STRING ;
    public final AntlrDatatypeRuleToken ruleURI() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_SINGLE_QUOTED_STRING_0=null;


        	enterRule();

        try {
            // InternalQVTimperative.g:12544:2: (this_SINGLE_QUOTED_STRING_0= RULE_SINGLE_QUOTED_STRING )
            // InternalQVTimperative.g:12545:2: this_SINGLE_QUOTED_STRING_0= RULE_SINGLE_QUOTED_STRING
            {
            this_SINGLE_QUOTED_STRING_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_SINGLE_QUOTED_STRING_0);

            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_SINGLE_QUOTED_STRING_0, grammarAccess.getURIAccess().getSINGLE_QUOTED_STRINGTerminalRuleCall());

            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleURI"

    // $ANTLR start synpred36_InternalQVTimperative
    public final void synpred36_InternalQVTimperative_fragment() throws RecognitionException {
        EObject this_DeclareStatementCS_1 = null;


        // InternalQVTimperative.g:1521:3: (this_DeclareStatementCS_1= ruleDeclareStatementCS )
        // InternalQVTimperative.g:1521:3: this_DeclareStatementCS_1= ruleDeclareStatementCS
        {
        if ( state.backtracking==0 ) {

          			/* */

        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_DeclareStatementCS_1=ruleDeclareStatementCS();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred36_InternalQVTimperative

    // $ANTLR start synpred37_InternalQVTimperative
    public final void synpred37_InternalQVTimperative_fragment() throws RecognitionException {
        EObject this_DeclareStatementCS_2 = null;


        // InternalQVTimperative.g:1533:3: (this_DeclareStatementCS_2= ruleDeclareStatementCS )
        // InternalQVTimperative.g:1533:3: this_DeclareStatementCS_2= ruleDeclareStatementCS
        {
        if ( state.backtracking==0 ) {

          			/* */

        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_DeclareStatementCS_2=ruleDeclareStatementCS();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred37_InternalQVTimperative

    // $ANTLR start synpred38_InternalQVTimperative
    public final void synpred38_InternalQVTimperative_fragment() throws RecognitionException {
        EObject this_CheckStatementCS_3 = null;


        // InternalQVTimperative.g:1545:3: (this_CheckStatementCS_3= ruleCheckStatementCS )
        // InternalQVTimperative.g:1545:3: this_CheckStatementCS_3= ruleCheckStatementCS
        {
        if ( state.backtracking==0 ) {

          			/* */

        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_CheckStatementCS_3=ruleCheckStatementCS();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred38_InternalQVTimperative

    // $ANTLR start synpred82_InternalQVTimperative
    public final void synpred82_InternalQVTimperative_fragment() throws RecognitionException {
        Token lv_isCheck_0_0=null;

        // InternalQVTimperative.g:3259:4: ( (lv_isCheck_0_0= 'check' ) )
        // InternalQVTimperative.g:3259:4: (lv_isCheck_0_0= 'check' )
        {
        // InternalQVTimperative.g:3259:4: (lv_isCheck_0_0= 'check' )
        // InternalQVTimperative.g:3260:5: lv_isCheck_0_0= 'check'
        {
        lv_isCheck_0_0=(Token)match(input,29,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred82_InternalQVTimperative

    // $ANTLR start synpred123_InternalQVTimperative
    public final void synpred123_InternalQVTimperative_fragment() throws RecognitionException {
        AntlrDatatypeRuleToken this_QVTbaseUnrestrictedName_1 = null;


        // InternalQVTimperative.g:3913:3: (this_QVTbaseUnrestrictedName_1= ruleQVTbaseUnrestrictedName )
        // InternalQVTimperative.g:3913:3: this_QVTbaseUnrestrictedName_1= ruleQVTbaseUnrestrictedName
        {
        if ( state.backtracking==0 ) {

          			newCompositeNode(grammarAccess.getUnrestrictedNameAccess().getQVTbaseUnrestrictedNameParserRuleCall_1());

        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_QVTbaseUnrestrictedName_1=ruleQVTbaseUnrestrictedName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred123_InternalQVTimperative

    // $ANTLR start synpred359_InternalQVTimperative
    public final void synpred359_InternalQVTimperative_fragment() throws RecognitionException {
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedPatternGuard_3_0 = null;


        // InternalQVTimperative.g:9355:5: (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )
        // InternalQVTimperative.g:9355:5: otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}'
        {
        otherlv_2=(Token)match(input,35,FollowSets000.FOLLOW_8); if (state.failed) return ;
        // InternalQVTimperative.g:9359:5: ( (lv_ownedPatternGuard_3_0= ruleExpCS ) )
        // InternalQVTimperative.g:9360:6: (lv_ownedPatternGuard_3_0= ruleExpCS )
        {
        // InternalQVTimperative.g:9360:6: (lv_ownedPatternGuard_3_0= ruleExpCS )
        // InternalQVTimperative.g:9361:7: lv_ownedPatternGuard_3_0= ruleExpCS
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getTypeNameExpCSAccess().getOwnedPatternGuardExpCSParserRuleCall_1_1_1_0());

        }
        pushFollow(FollowSets000.FOLLOW_58);
        lv_ownedPatternGuard_3_0=ruleExpCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_4=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred359_InternalQVTimperative

    // $ANTLR start synpred360_InternalQVTimperative
    public final void synpred360_InternalQVTimperative_fragment() throws RecognitionException {
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedCurlyBracketedClause_1_0 = null;

        EObject lv_ownedPatternGuard_3_0 = null;


        // InternalQVTimperative.g:9335:4: ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )
        // InternalQVTimperative.g:9335:4: ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )?
        {
        // InternalQVTimperative.g:9335:4: ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) )
        // InternalQVTimperative.g:9336:5: (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS )
        {
        // InternalQVTimperative.g:9336:5: (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS )
        // InternalQVTimperative.g:9337:6: lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTypeNameExpCSAccess().getOwnedCurlyBracketedClauseCurlyBracketedClauseCSParserRuleCall_1_0_0());

        }
        pushFollow(FollowSets000.FOLLOW_98);
        lv_ownedCurlyBracketedClause_1_0=ruleCurlyBracketedClauseCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalQVTimperative.g:9354:4: (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )?
        int alt355=2;
        int LA355_0 = input.LA(1);

        if ( (LA355_0==35) ) {
            alt355=1;
        }
        switch (alt355) {
            case 1 :
                // InternalQVTimperative.g:9355:5: otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}'
                {
                otherlv_2=(Token)match(input,35,FollowSets000.FOLLOW_8); if (state.failed) return ;
                // InternalQVTimperative.g:9359:5: ( (lv_ownedPatternGuard_3_0= ruleExpCS ) )
                // InternalQVTimperative.g:9360:6: (lv_ownedPatternGuard_3_0= ruleExpCS )
                {
                // InternalQVTimperative.g:9360:6: (lv_ownedPatternGuard_3_0= ruleExpCS )
                // InternalQVTimperative.g:9361:7: lv_ownedPatternGuard_3_0= ruleExpCS
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getTypeNameExpCSAccess().getOwnedPatternGuardExpCSParserRuleCall_1_1_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_58);
                lv_ownedPatternGuard_3_0=ruleExpCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                otherlv_4=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }
    }
    // $ANTLR end synpred360_InternalQVTimperative

    // $ANTLR start synpred362_InternalQVTimperative
    public final void synpred362_InternalQVTimperative_fragment() throws RecognitionException {
        EObject this_TypeLiteralCS_1 = null;


        // InternalQVTimperative.g:9415:3: (this_TypeLiteralCS_1= ruleTypeLiteralCS )
        // InternalQVTimperative.g:9415:3: this_TypeLiteralCS_1= ruleTypeLiteralCS
        {
        if ( state.backtracking==0 ) {

          			/* */

        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_TypeLiteralCS_1=ruleTypeLiteralCS();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred362_InternalQVTimperative

    // $ANTLR start synpred365_InternalQVTimperative
    public final void synpred365_InternalQVTimperative_fragment() throws RecognitionException {
        EObject this_PrefixedPrimaryExpCS_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_ownedRight_3_0 = null;


        // InternalQVTimperative.g:9506:3: ( (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? ) )
        // InternalQVTimperative.g:9506:3: (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? )
        {
        // InternalQVTimperative.g:9506:3: (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? )
        // InternalQVTimperative.g:9507:4: this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )?
        {
        if ( state.backtracking==0 ) {

          				/* */

        }
        pushFollow(FollowSets000.FOLLOW_134);
        this_PrefixedPrimaryExpCS_0=rulePrefixedPrimaryExpCS();

        state._fsp--;
        if (state.failed) return ;
        // InternalQVTimperative.g:9518:4: ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )?
        int alt356=2;
        int LA356_0 = input.LA(1);

        if ( (LA356_0==42||LA356_0==53||LA356_0==61||LA356_0==106||(LA356_0>=109 && LA356_0<=126)) ) {
            alt356=1;
        }
        switch (alt356) {
            case 1 :
                // InternalQVTimperative.g:9519:5: () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) )
                {
                // InternalQVTimperative.g:9519:5: ()
                // InternalQVTimperative.g:9520:6:
                {
                if ( state.backtracking==0 ) {

                  						/* */

                }

                }

                // InternalQVTimperative.g:9529:5: ( (lv_name_2_0= ruleBinaryOperatorName ) )
                // InternalQVTimperative.g:9530:6: (lv_name_2_0= ruleBinaryOperatorName )
                {
                // InternalQVTimperative.g:9530:6: (lv_name_2_0= ruleBinaryOperatorName )
                // InternalQVTimperative.g:9531:7: lv_name_2_0= ruleBinaryOperatorName
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getExpCSAccess().getNameBinaryOperatorNameParserRuleCall_0_1_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_8);
                lv_name_2_0=ruleBinaryOperatorName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalQVTimperative.g:9548:5: ( (lv_ownedRight_3_0= ruleExpCS ) )
                // InternalQVTimperative.g:9549:6: (lv_ownedRight_3_0= ruleExpCS )
                {
                // InternalQVTimperative.g:9549:6: (lv_ownedRight_3_0= ruleExpCS )
                // InternalQVTimperative.g:9550:7: lv_ownedRight_3_0= ruleExpCS
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getExpCSAccess().getOwnedRightExpCSParserRuleCall_0_1_2_0());

                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_ownedRight_3_0=ruleExpCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred365_InternalQVTimperative

    // $ANTLR start synpred372_InternalQVTimperative
    public final void synpred372_InternalQVTimperative_fragment() throws RecognitionException {
        EObject this_TupleLiteralExpCS_4 = null;


        // InternalQVTimperative.g:9810:3: (this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS )
        // InternalQVTimperative.g:9810:3: this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS
        {
        if ( state.backtracking==0 ) {

          			/* */

        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_TupleLiteralExpCS_4=ruleTupleLiteralExpCS();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred372_InternalQVTimperative

    // $ANTLR start synpred373_InternalQVTimperative
    public final void synpred373_InternalQVTimperative_fragment() throws RecognitionException {
        EObject this_MapLiteralExpCS_5 = null;


        // InternalQVTimperative.g:9822:3: (this_MapLiteralExpCS_5= ruleMapLiteralExpCS )
        // InternalQVTimperative.g:9822:3: this_MapLiteralExpCS_5= ruleMapLiteralExpCS
        {
        if ( state.backtracking==0 ) {

          			/* */

        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_MapLiteralExpCS_5=ruleMapLiteralExpCS();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred373_InternalQVTimperative

    // $ANTLR start synpred374_InternalQVTimperative
    public final void synpred374_InternalQVTimperative_fragment() throws RecognitionException {
        EObject this_CollectionLiteralExpCS_6 = null;


        // InternalQVTimperative.g:9834:3: (this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS )
        // InternalQVTimperative.g:9834:3: this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS
        {
        if ( state.backtracking==0 ) {

          			/* */

        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_CollectionLiteralExpCS_6=ruleCollectionLiteralExpCS();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred374_InternalQVTimperative

    // $ANTLR start synpred376_InternalQVTimperative
    public final void synpred376_InternalQVTimperative_fragment() throws RecognitionException {
        EObject this_TypeLiteralExpCS_8 = null;


        // InternalQVTimperative.g:9858:3: (this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS )
        // InternalQVTimperative.g:9858:3: this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS
        {
        if ( state.backtracking==0 ) {

          			/* */

        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_TypeLiteralExpCS_8=ruleTypeLiteralExpCS();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred376_InternalQVTimperative

    // $ANTLR start synpred390_InternalQVTimperative
    public final void synpred390_InternalQVTimperative_fragment() throws RecognitionException {
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedCoIterator_3_0 = null;

        EObject lv_ownedInitExpression_5_0 = null;


        // InternalQVTimperative.g:10301:5: ( ( (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) )
        // InternalQVTimperative.g:10301:5: ( (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )
        {
        // InternalQVTimperative.g:10301:5: ( (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )
        // InternalQVTimperative.g:10302:6: (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
        {
        // InternalQVTimperative.g:10302:6: (otherlv_1= 'with' | otherlv_2= '<-' )
        int alt361=2;
        int LA361_0 = input.LA(1);

        if ( (LA361_0==144) ) {
            alt361=1;
        }
        else if ( (LA361_0==145) ) {
            alt361=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 361, 0, input);

            throw nvae;
        }
        switch (alt361) {
            case 1 :
                // InternalQVTimperative.g:10303:7: otherlv_1= 'with'
                {
                otherlv_1=(Token)match(input,144,FollowSets000.FOLLOW_5); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalQVTimperative.g:10308:7: otherlv_2= '<-'
                {
                otherlv_2=(Token)match(input,145,FollowSets000.FOLLOW_5); if (state.failed) return ;

                }
                break;

        }

        // InternalQVTimperative.g:10313:6: ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) )
        // InternalQVTimperative.g:10314:7: (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS )
        {
        // InternalQVTimperative.g:10314:7: (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS )
        // InternalQVTimperative.g:10315:8: lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_0_1_0_1_0());

        }
        pushFollow(FollowSets000.FOLLOW_145);
        lv_ownedCoIterator_3_0=ruleCoIteratorVariableCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalQVTimperative.g:10332:6: (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
        int alt362=2;
        int LA362_0 = input.LA(1);

        if ( (LA362_0==53) ) {
            alt362=1;
        }
        switch (alt362) {
            case 1 :
                // InternalQVTimperative.g:10333:7: otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                {
                otherlv_4=(Token)match(input,53,FollowSets000.FOLLOW_8); if (state.failed) return ;
                // InternalQVTimperative.g:10337:7: ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                // InternalQVTimperative.g:10338:8: (lv_ownedInitExpression_5_0= ruleExpCS )
                {
                // InternalQVTimperative.g:10338:8: (lv_ownedInitExpression_5_0= ruleExpCS )
                // InternalQVTimperative.g:10339:9: lv_ownedInitExpression_5_0= ruleExpCS
                {
                if ( state.backtracking==0 ) {

                  									newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_1_0_2_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_ownedInitExpression_5_0=ruleExpCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred390_InternalQVTimperative

    // $ANTLR start synpred394_InternalQVTimperative
    public final void synpred394_InternalQVTimperative_fragment() throws RecognitionException {
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        EObject lv_ownedType_7_0 = null;

        EObject lv_ownedCoIterator_10_0 = null;

        EObject lv_ownedInitExpression_12_0 = null;


        // InternalQVTimperative.g:10359:5: ( (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )? (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )? ) )
        // InternalQVTimperative.g:10359:5: (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )? (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )? )
        {
        // InternalQVTimperative.g:10359:5: (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )? (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )? )
        // InternalQVTimperative.g:10360:6: otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )? (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )?
        {
        otherlv_6=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return ;
        // InternalQVTimperative.g:10364:6: ( (lv_ownedType_7_0= ruleTypeExpCS ) )
        // InternalQVTimperative.g:10365:7: (lv_ownedType_7_0= ruleTypeExpCS )
        {
        // InternalQVTimperative.g:10365:7: (lv_ownedType_7_0= ruleTypeExpCS )
        // InternalQVTimperative.g:10366:8: lv_ownedType_7_0= ruleTypeExpCS
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_0_1_1_1_0());

        }
        pushFollow(FollowSets000.FOLLOW_146);
        lv_ownedType_7_0=ruleTypeExpCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalQVTimperative.g:10383:6: ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )?
        int alt365=2;
        int LA365_0 = input.LA(1);

        if ( ((LA365_0>=144 && LA365_0<=145)) ) {
            alt365=1;
        }
        switch (alt365) {
            case 1 :
                // InternalQVTimperative.g:10384:7: (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) )
                {
                // InternalQVTimperative.g:10384:7: (otherlv_8= 'with' | otherlv_9= '<-' )
                int alt364=2;
                int LA364_0 = input.LA(1);

                if ( (LA364_0==144) ) {
                    alt364=1;
                }
                else if ( (LA364_0==145) ) {
                    alt364=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 364, 0, input);

                    throw nvae;
                }
                switch (alt364) {
                    case 1 :
                        // InternalQVTimperative.g:10385:8: otherlv_8= 'with'
                        {
                        otherlv_8=(Token)match(input,144,FollowSets000.FOLLOW_5); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalQVTimperative.g:10390:8: otherlv_9= '<-'
                        {
                        otherlv_9=(Token)match(input,145,FollowSets000.FOLLOW_5); if (state.failed) return ;

                        }
                        break;

                }

                // InternalQVTimperative.g:10395:7: ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) )
                // InternalQVTimperative.g:10396:8: (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS )
                {
                // InternalQVTimperative.g:10396:8: (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS )
                // InternalQVTimperative.g:10397:9: lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS
                {
                if ( state.backtracking==0 ) {

                  									newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_0_1_1_2_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_145);
                lv_ownedCoIterator_10_0=ruleCoIteratorVariableCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalQVTimperative.g:10415:6: (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )?
        int alt366=2;
        int LA366_0 = input.LA(1);

        if ( (LA366_0==53) ) {
            alt366=1;
        }
        switch (alt366) {
            case 1 :
                // InternalQVTimperative.g:10416:7: otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) )
                {
                otherlv_11=(Token)match(input,53,FollowSets000.FOLLOW_8); if (state.failed) return ;
                // InternalQVTimperative.g:10420:7: ( (lv_ownedInitExpression_12_0= ruleExpCS ) )
                // InternalQVTimperative.g:10421:8: (lv_ownedInitExpression_12_0= ruleExpCS )
                {
                // InternalQVTimperative.g:10421:8: (lv_ownedInitExpression_12_0= ruleExpCS )
                // InternalQVTimperative.g:10422:9: lv_ownedInitExpression_12_0= ruleExpCS
                {
                if ( state.backtracking==0 ) {

                  									newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_1_1_3_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_ownedInitExpression_12_0=ruleExpCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred394_InternalQVTimperative

    // $ANTLR start synpred398_InternalQVTimperative
    public final void synpred398_InternalQVTimperative_fragment() throws RecognitionException {
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        EObject lv_ownedType_14_0 = null;

        EObject lv_ownedCoIterator_17_0 = null;

        EObject lv_ownedInitExpression_19_0 = null;


        // InternalQVTimperative.g:10442:5: ( ( (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )? ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )? otherlv_18= 'in' ( (lv_ownedInitExpression_19_0= ruleExpCS ) ) ) )
        // InternalQVTimperative.g:10442:5: ( (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )? ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )? otherlv_18= 'in' ( (lv_ownedInitExpression_19_0= ruleExpCS ) ) )
        {
        // InternalQVTimperative.g:10442:5: ( (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )? ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )? otherlv_18= 'in' ( (lv_ownedInitExpression_19_0= ruleExpCS ) ) )
        // InternalQVTimperative.g:10443:6: (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )? ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )? otherlv_18= 'in' ( (lv_ownedInitExpression_19_0= ruleExpCS ) )
        {
        // InternalQVTimperative.g:10443:6: (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )?
        int alt368=2;
        int LA368_0 = input.LA(1);

        if ( (LA368_0==24) ) {
            alt368=1;
        }
        switch (alt368) {
            case 1 :
                // InternalQVTimperative.g:10444:7: otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) )
                {
                otherlv_13=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return ;
                // InternalQVTimperative.g:10448:7: ( (lv_ownedType_14_0= ruleTypeExpCS ) )
                // InternalQVTimperative.g:10449:8: (lv_ownedType_14_0= ruleTypeExpCS )
                {
                // InternalQVTimperative.g:10449:8: (lv_ownedType_14_0= ruleTypeExpCS )
                // InternalQVTimperative.g:10450:9: lv_ownedType_14_0= ruleTypeExpCS
                {
                if ( state.backtracking==0 ) {

                  									newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_0_1_2_0_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_147);
                lv_ownedType_14_0=ruleTypeExpCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalQVTimperative.g:10468:6: ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )?
        int alt370=2;
        int LA370_0 = input.LA(1);

        if ( ((LA370_0>=144 && LA370_0<=145)) ) {
            alt370=1;
        }
        switch (alt370) {
            case 1 :
                // InternalQVTimperative.g:10469:7: (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) )
                {
                // InternalQVTimperative.g:10469:7: (otherlv_15= 'with' | otherlv_16= '<-' )
                int alt369=2;
                int LA369_0 = input.LA(1);

                if ( (LA369_0==144) ) {
                    alt369=1;
                }
                else if ( (LA369_0==145) ) {
                    alt369=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 369, 0, input);

                    throw nvae;
                }
                switch (alt369) {
                    case 1 :
                        // InternalQVTimperative.g:10470:8: otherlv_15= 'with'
                        {
                        otherlv_15=(Token)match(input,144,FollowSets000.FOLLOW_5); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalQVTimperative.g:10475:8: otherlv_16= '<-'
                        {
                        otherlv_16=(Token)match(input,145,FollowSets000.FOLLOW_5); if (state.failed) return ;

                        }
                        break;

                }

                // InternalQVTimperative.g:10480:7: ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) )
                // InternalQVTimperative.g:10481:8: (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS )
                {
                // InternalQVTimperative.g:10481:8: (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS )
                // InternalQVTimperative.g:10482:9: lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS
                {
                if ( state.backtracking==0 ) {

                  									newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_0_1_2_1_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_44);
                lv_ownedCoIterator_17_0=ruleCoIteratorVariableCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        otherlv_18=(Token)match(input,49,FollowSets000.FOLLOW_8); if (state.failed) return ;
        // InternalQVTimperative.g:10504:6: ( (lv_ownedInitExpression_19_0= ruleExpCS ) )
        // InternalQVTimperative.g:10505:7: (lv_ownedInitExpression_19_0= ruleExpCS )
        {
        // InternalQVTimperative.g:10505:7: (lv_ownedInitExpression_19_0= ruleExpCS )
        // InternalQVTimperative.g:10506:8: lv_ownedInitExpression_19_0= ruleExpCS
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_1_2_3_0());

        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_ownedInitExpression_19_0=ruleExpCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred398_InternalQVTimperative

    // $ANTLR start synpred404_InternalQVTimperative
    public final void synpred404_InternalQVTimperative_fragment() throws RecognitionException {
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_ownedCoIterator_4_0 = null;

        EObject lv_ownedInitExpression_6_0 = null;


        // InternalQVTimperative.g:10707:4: ( ( (otherlv_2= 'with' | otherlv_3= '<-' ) ( (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS ) ) (otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) )? ) )
        // InternalQVTimperative.g:10707:4: ( (otherlv_2= 'with' | otherlv_3= '<-' ) ( (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS ) ) (otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) )? )
        {
        // InternalQVTimperative.g:10707:4: ( (otherlv_2= 'with' | otherlv_3= '<-' ) ( (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS ) ) (otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) )? )
        // InternalQVTimperative.g:10708:5: (otherlv_2= 'with' | otherlv_3= '<-' ) ( (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS ) ) (otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) )?
        {
        // InternalQVTimperative.g:10708:5: (otherlv_2= 'with' | otherlv_3= '<-' )
        int alt381=2;
        int LA381_0 = input.LA(1);

        if ( (LA381_0==144) ) {
            alt381=1;
        }
        else if ( (LA381_0==145) ) {
            alt381=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 381, 0, input);

            throw nvae;
        }
        switch (alt381) {
            case 1 :
                // InternalQVTimperative.g:10709:6: otherlv_2= 'with'
                {
                otherlv_2=(Token)match(input,144,FollowSets000.FOLLOW_5); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalQVTimperative.g:10714:6: otherlv_3= '<-'
                {
                otherlv_3=(Token)match(input,145,FollowSets000.FOLLOW_5); if (state.failed) return ;

                }
                break;

        }

        // InternalQVTimperative.g:10719:5: ( (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS ) )
        // InternalQVTimperative.g:10720:6: (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS )
        {
        // InternalQVTimperative.g:10720:6: (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS )
        // InternalQVTimperative.g:10721:7: lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_2_0_1_0());

        }
        pushFollow(FollowSets000.FOLLOW_145);
        lv_ownedCoIterator_4_0=ruleCoIteratorVariableCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalQVTimperative.g:10738:5: (otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) )?
        int alt382=2;
        int LA382_0 = input.LA(1);

        if ( (LA382_0==53) ) {
            alt382=1;
        }
        switch (alt382) {
            case 1 :
                // InternalQVTimperative.g:10739:6: otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) )
                {
                otherlv_5=(Token)match(input,53,FollowSets000.FOLLOW_8); if (state.failed) return ;
                // InternalQVTimperative.g:10743:6: ( (lv_ownedInitExpression_6_0= ruleExpCS ) )
                // InternalQVTimperative.g:10744:7: (lv_ownedInitExpression_6_0= ruleExpCS )
                {
                // InternalQVTimperative.g:10744:7: (lv_ownedInitExpression_6_0= ruleExpCS )
                // InternalQVTimperative.g:10745:8: lv_ownedInitExpression_6_0= ruleExpCS
                {
                if ( state.backtracking==0 ) {

                  								newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_0_2_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_ownedInitExpression_6_0=ruleExpCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred404_InternalQVTimperative

    // $ANTLR start synpred408_InternalQVTimperative
    public final void synpred408_InternalQVTimperative_fragment() throws RecognitionException {
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_ownedType_8_0 = null;

        EObject lv_ownedCoIterator_11_0 = null;

        EObject lv_ownedInitExpression_13_0 = null;


        // InternalQVTimperative.g:10765:4: ( (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) ( (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) ) )? (otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) ) )? ) )
        // InternalQVTimperative.g:10765:4: (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) ( (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) ) )? (otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) ) )? )
        {
        // InternalQVTimperative.g:10765:4: (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) ( (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) ) )? (otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) ) )? )
        // InternalQVTimperative.g:10766:5: otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) ( (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) ) )? (otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) ) )?
        {
        otherlv_7=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return ;
        // InternalQVTimperative.g:10770:5: ( (lv_ownedType_8_0= ruleTypeExpCS ) )
        // InternalQVTimperative.g:10771:6: (lv_ownedType_8_0= ruleTypeExpCS )
        {
        // InternalQVTimperative.g:10771:6: (lv_ownedType_8_0= ruleTypeExpCS )
        // InternalQVTimperative.g:10772:7: lv_ownedType_8_0= ruleTypeExpCS
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_1_1_0());

        }
        pushFollow(FollowSets000.FOLLOW_146);
        lv_ownedType_8_0=ruleTypeExpCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalQVTimperative.g:10789:5: ( (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) ) )?
        int alt385=2;
        int LA385_0 = input.LA(1);

        if ( ((LA385_0>=144 && LA385_0<=145)) ) {
            alt385=1;
        }
        switch (alt385) {
            case 1 :
                // InternalQVTimperative.g:10790:6: (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) )
                {
                // InternalQVTimperative.g:10790:6: (otherlv_9= 'with' | otherlv_10= '<-' )
                int alt384=2;
                int LA384_0 = input.LA(1);

                if ( (LA384_0==144) ) {
                    alt384=1;
                }
                else if ( (LA384_0==145) ) {
                    alt384=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 384, 0, input);

                    throw nvae;
                }
                switch (alt384) {
                    case 1 :
                        // InternalQVTimperative.g:10791:7: otherlv_9= 'with'
                        {
                        otherlv_9=(Token)match(input,144,FollowSets000.FOLLOW_5); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalQVTimperative.g:10796:7: otherlv_10= '<-'
                        {
                        otherlv_10=(Token)match(input,145,FollowSets000.FOLLOW_5); if (state.failed) return ;

                        }
                        break;

                }

                // InternalQVTimperative.g:10801:6: ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) )
                // InternalQVTimperative.g:10802:7: (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS )
                {
                // InternalQVTimperative.g:10802:7: (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS )
                // InternalQVTimperative.g:10803:8: lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS
                {
                if ( state.backtracking==0 ) {

                  								newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_2_1_2_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_145);
                lv_ownedCoIterator_11_0=ruleCoIteratorVariableCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalQVTimperative.g:10821:5: (otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) ) )?
        int alt386=2;
        int LA386_0 = input.LA(1);

        if ( (LA386_0==53) ) {
            alt386=1;
        }
        switch (alt386) {
            case 1 :
                // InternalQVTimperative.g:10822:6: otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) )
                {
                otherlv_12=(Token)match(input,53,FollowSets000.FOLLOW_8); if (state.failed) return ;
                // InternalQVTimperative.g:10826:6: ( (lv_ownedInitExpression_13_0= ruleExpCS ) )
                // InternalQVTimperative.g:10827:7: (lv_ownedInitExpression_13_0= ruleExpCS )
                {
                // InternalQVTimperative.g:10827:7: (lv_ownedInitExpression_13_0= ruleExpCS )
                // InternalQVTimperative.g:10828:8: lv_ownedInitExpression_13_0= ruleExpCS
                {
                if ( state.backtracking==0 ) {

                  								newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_1_3_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_ownedInitExpression_13_0=ruleExpCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred408_InternalQVTimperative

    // $ANTLR start synpred412_InternalQVTimperative
    public final void synpred412_InternalQVTimperative_fragment() throws RecognitionException {
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        EObject lv_ownedType_15_0 = null;

        EObject lv_ownedCoIterator_18_0 = null;

        EObject lv_ownedInitExpression_20_0 = null;


        // InternalQVTimperative.g:10848:4: ( ( (otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) ) )? ( (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) ) )? otherlv_19= 'in' ( (lv_ownedInitExpression_20_0= ruleExpCS ) ) ) )
        // InternalQVTimperative.g:10848:4: ( (otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) ) )? ( (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) ) )? otherlv_19= 'in' ( (lv_ownedInitExpression_20_0= ruleExpCS ) ) )
        {
        // InternalQVTimperative.g:10848:4: ( (otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) ) )? ( (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) ) )? otherlv_19= 'in' ( (lv_ownedInitExpression_20_0= ruleExpCS ) ) )
        // InternalQVTimperative.g:10849:5: (otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) ) )? ( (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) ) )? otherlv_19= 'in' ( (lv_ownedInitExpression_20_0= ruleExpCS ) )
        {
        // InternalQVTimperative.g:10849:5: (otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) ) )?
        int alt388=2;
        int LA388_0 = input.LA(1);

        if ( (LA388_0==24) ) {
            alt388=1;
        }
        switch (alt388) {
            case 1 :
                // InternalQVTimperative.g:10850:6: otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) )
                {
                otherlv_14=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return ;
                // InternalQVTimperative.g:10854:6: ( (lv_ownedType_15_0= ruleTypeExpCS ) )
                // InternalQVTimperative.g:10855:7: (lv_ownedType_15_0= ruleTypeExpCS )
                {
                // InternalQVTimperative.g:10855:7: (lv_ownedType_15_0= ruleTypeExpCS )
                // InternalQVTimperative.g:10856:8: lv_ownedType_15_0= ruleTypeExpCS
                {
                if ( state.backtracking==0 ) {

                  								newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_2_0_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_147);
                lv_ownedType_15_0=ruleTypeExpCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalQVTimperative.g:10874:5: ( (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) ) )?
        int alt390=2;
        int LA390_0 = input.LA(1);

        if ( ((LA390_0>=144 && LA390_0<=145)) ) {
            alt390=1;
        }
        switch (alt390) {
            case 1 :
                // InternalQVTimperative.g:10875:6: (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) )
                {
                // InternalQVTimperative.g:10875:6: (otherlv_16= 'with' | otherlv_17= '<-' )
                int alt389=2;
                int LA389_0 = input.LA(1);

                if ( (LA389_0==144) ) {
                    alt389=1;
                }
                else if ( (LA389_0==145) ) {
                    alt389=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 389, 0, input);

                    throw nvae;
                }
                switch (alt389) {
                    case 1 :
                        // InternalQVTimperative.g:10876:7: otherlv_16= 'with'
                        {
                        otherlv_16=(Token)match(input,144,FollowSets000.FOLLOW_5); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalQVTimperative.g:10881:7: otherlv_17= '<-'
                        {
                        otherlv_17=(Token)match(input,145,FollowSets000.FOLLOW_5); if (state.failed) return ;

                        }
                        break;

                }

                // InternalQVTimperative.g:10886:6: ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) )
                // InternalQVTimperative.g:10887:7: (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS )
                {
                // InternalQVTimperative.g:10887:7: (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS )
                // InternalQVTimperative.g:10888:8: lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS
                {
                if ( state.backtracking==0 ) {

                  								newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_2_2_1_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_44);
                lv_ownedCoIterator_18_0=ruleCoIteratorVariableCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        otherlv_19=(Token)match(input,49,FollowSets000.FOLLOW_8); if (state.failed) return ;
        // InternalQVTimperative.g:10910:5: ( (lv_ownedInitExpression_20_0= ruleExpCS ) )
        // InternalQVTimperative.g:10911:6: (lv_ownedInitExpression_20_0= ruleExpCS )
        {
        // InternalQVTimperative.g:10911:6: (lv_ownedInitExpression_20_0= ruleExpCS )
        // InternalQVTimperative.g:10912:7: lv_ownedInitExpression_20_0= ruleExpCS
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_2_3_0());

        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_ownedInitExpression_20_0=ruleExpCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred412_InternalQVTimperative

    // Delegated rules

    public final boolean synpred374_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred374_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred408_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred408_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred82_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred82_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred376_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred376_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred412_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred412_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred404_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred404_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred390_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred390_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred123_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred123_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred362_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred362_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred372_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred372_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred38_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred36_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred394_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred394_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred373_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred373_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred359_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred359_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred398_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred398_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred360_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred360_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred365_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred365_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred37_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA10 dfa10 = new DFA10(this);
    protected DFA13 dfa13 = new DFA13(this);
    protected DFA28 dfa28 = new DFA28(this);
    protected DFA29 dfa29 = new DFA29(this);
    protected DFA33 dfa33 = new DFA33(this);
    protected DFA41 dfa41 = new DFA41(this);
    protected DFA42 dfa42 = new DFA42(this);
    protected DFA50 dfa50 = new DFA50(this);
    protected DFA56 dfa56 = new DFA56(this);
    protected DFA66 dfa66 = new DFA66(this);
    protected DFA71 dfa71 = new DFA71(this);
    protected DFA73 dfa73 = new DFA73(this);
    protected DFA190 dfa190 = new DFA190(this);
    protected DFA193 dfa193 = new DFA193(this);
    protected DFA207 dfa207 = new DFA207(this);
    protected DFA206 dfa206 = new DFA206(this);
    protected DFA208 dfa208 = new DFA208(this);
    protected DFA211 dfa211 = new DFA211(this);
    protected DFA214 dfa214 = new DFA214(this);
    protected DFA217 dfa217 = new DFA217(this);
    protected DFA233 dfa233 = new DFA233(this);
    protected DFA245 dfa245 = new DFA245(this);
    protected DFA249 dfa249 = new DFA249(this);
    static final String dfa_1s = "\u0119\uffff";
    static final String dfa_2s = "\1\21\1\7\2\uffff\75\22\2\7\u0089\22\1\7\114\22";
    static final String dfa_3s = "\1\74\1\151\2\uffff\75\74\1\u008d\1\151\u0089\74\1\u008d\114\74";
    static final String dfa_4s = "\2\uffff\1\1\1\2\u0115\uffff";
    static final String dfa_5s = "\u0119\uffff}>";
    static final String[] dfa_6s = {
            "\1\1\40\uffff\2\2\7\uffff\2\3",
            "\1\4\1\5\10\uffff\1\64\1\uffff\1\42\2\uffff\1\44\1\43\1\uffff\1\72\1\45\2\uffff\1\47\1\77\1\54\1\51\1\55\1\65\4\uffff\1\73\3\uffff\1\60\1\61\1\46\1\56\1\57\1\52\1\uffff\1\50\1\62\1\66\1\uffff\1\36\1\67\2\uffff\1\53\1\63\1\70\1\uffff\1\76\1\71\1\75\1\74\1\100\1\34\1\14\1\7\1\15\1\uffff\1\21\1\uffff\1\26\1\uffff\1\31\2\uffff\1\37\1\uffff\1\40\1\uffff\1\41\1\uffff\1\22\1\16\1\27\1\13\1\33\1\uffff\1\17\1\24\1\25\1\35\1\10\1\30\1\uffff\1\12\1\uffff\1\32\1\uffff\1\6\1\11\1\20\1\23",
            "",
            "",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\103\1\104\10\uffff\1\163\1\uffff\1\141\2\uffff\1\143\1\142\1\uffff\1\171\1\144\2\uffff\1\146\1\176\1\153\1\150\1\154\1\164\4\uffff\1\172\3\uffff\1\157\1\160\1\145\1\155\1\156\1\151\1\uffff\1\147\1\161\1\165\1\uffff\1\135\1\166\2\uffff\1\152\1\162\1\167\1\uffff\1\175\1\170\1\174\1\173\1\177\1\133\1\113\1\106\1\114\1\uffff\1\120\1\uffff\1\125\1\uffff\1\130\2\uffff\1\136\1\uffff\1\137\1\uffff\1\140\1\uffff\1\121\1\115\1\126\1\112\1\132\1\uffff\1\116\1\123\1\124\1\134\1\107\1\127\1\uffff\1\111\1\uffff\1\131\1\uffff\1\105\1\110\1\117\1\122\25\uffff\1\u008d\1\u008e\1\u0085\1\u0086\1\u0087\1\u0088\1\u0089\1\u008a\1\u008b\1\u008c\1\u0080\1\u0081\1\u0082\1\u0083\1\u0084",
            "\1\u008f\1\u0090\10\uffff\1\u00bf\1\uffff\1\u00ad\2\uffff\1\u00af\1\u00ae\1\uffff\1\u00c5\1\u00b0\2\uffff\1\u00b2\1\u00ca\1\u00b7\1\u00b4\1\u00b8\1\u00c0\4\uffff\1\u00c6\3\uffff\1\u00bb\1\u00bc\1\u00b1\1\u00b9\1\u00ba\1\u00b5\1\uffff\1\u00b3\1\u00bd\1\u00c1\1\uffff\1\u00a9\1\u00c2\2\uffff\1\u00b6\1\u00be\1\u00c3\1\uffff\1\u00c9\1\u00c4\1\u00c8\1\u00c7\1\u00cb\1\u00a7\1\u0097\1\u0092\1\u0098\1\uffff\1\u009c\1\uffff\1\u00a1\1\uffff\1\u00a4\2\uffff\1\u00aa\1\uffff\1\u00ab\1\uffff\1\u00ac\1\uffff\1\u009d\1\u0099\1\u00a2\1\u0096\1\u00a6\1\uffff\1\u009a\1\u009f\1\u00a0\1\u00a8\1\u0093\1\u00a3\1\uffff\1\u0095\1\uffff\1\u00a5\1\uffff\1\u0091\1\u0094\1\u009b\1\u009e",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\101\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\u00cd\1\u00ce\10\uffff\1\u00fd\1\uffff\1\u00eb\2\uffff\1\u00ed\1\u00ec\1\uffff\1\u0103\1\u00ee\2\uffff\1\u00f0\1\u0108\1\u00f5\1\u00f2\1\u00f6\1\u00fe\4\uffff\1\u0104\3\uffff\1\u00f9\1\u00fa\1\u00ef\1\u00f7\1\u00f8\1\u00f3\1\uffff\1\u00f1\1\u00fb\1\u00ff\1\uffff\1\u00e7\1\u0100\2\uffff\1\u00f4\1\u00fc\1\u0101\1\uffff\1\u0107\1\u0102\1\u0106\1\u0105\1\u0109\1\u00e5\1\u00d5\1\u00d0\1\u00d6\1\uffff\1\u00da\1\uffff\1\u00df\1\uffff\1\u00e2\2\uffff\1\u00e8\1\uffff\1\u00e9\1\uffff\1\u00ea\1\uffff\1\u00db\1\u00d7\1\u00e0\1\u00d4\1\u00e4\1\uffff\1\u00d8\1\u00dd\1\u00de\1\u00e6\1\u00d1\1\u00e1\1\uffff\1\u00d3\1\uffff\1\u00e3\1\uffff\1\u00cf\1\u00d2\1\u00d9\1\u00dc\25\uffff\1\u0117\1\u0118\1\u010f\1\u0110\1\u0111\1\u0112\1\u0113\1\u0114\1\u0115\1\u0116\1\u010a\1\u010b\1\u010c\1\u010d\1\u010e",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3",
            "\1\102\26\uffff\1\u00cc\10\uffff\2\2\7\uffff\2\3"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA10 extends DFA {

        public DFA10(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 10;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "585:2: (this_NewStatementCS_0= ruleNewStatementCS | this_SetStatementCS_1= ruleSetStatementCS )";
        }
    }
    static final String dfa_7s = "\u011a\uffff";
    static final String dfa_8s = "\1\21\1\7\3\uffff\75\22\2\7\u0089\22\1\7\114\22";
    static final String dfa_9s = "\1\60\1\151\3\uffff\75\60\1\u008d\1\151\u0089\60\1\u008d\114\60";
    static final String dfa_10s = "\2\uffff\1\1\1\2\1\3\u0115\uffff";
    static final String dfa_11s = "\u011a\uffff}>";
    static final String[] dfa_12s = {
            "\1\1\1\uffff\1\2\31\uffff\3\3\1\4",
            "\1\5\1\6\10\uffff\1\65\1\uffff\1\43\2\uffff\1\45\1\44\1\uffff\1\73\1\46\2\uffff\1\50\1\100\1\55\1\52\1\56\1\66\4\uffff\1\74\3\uffff\1\61\1\62\1\47\1\57\1\60\1\53\1\uffff\1\51\1\63\1\67\1\uffff\1\37\1\70\2\uffff\1\54\1\64\1\71\1\uffff\1\77\1\72\1\76\1\75\1\101\1\35\1\15\1\10\1\16\1\uffff\1\22\1\uffff\1\27\1\uffff\1\32\2\uffff\1\40\1\uffff\1\41\1\uffff\1\42\1\uffff\1\23\1\17\1\30\1\14\1\34\1\uffff\1\20\1\25\1\26\1\36\1\11\1\31\1\uffff\1\13\1\uffff\1\33\1\uffff\1\7\1\12\1\21\1\24",
            "",
            "",
            "",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\104\1\105\10\uffff\1\164\1\uffff\1\142\2\uffff\1\144\1\143\1\uffff\1\172\1\145\2\uffff\1\147\1\177\1\154\1\151\1\155\1\165\4\uffff\1\173\3\uffff\1\160\1\161\1\146\1\156\1\157\1\152\1\uffff\1\150\1\162\1\166\1\uffff\1\136\1\167\2\uffff\1\153\1\163\1\170\1\uffff\1\176\1\171\1\175\1\174\1\u0080\1\134\1\114\1\107\1\115\1\uffff\1\121\1\uffff\1\126\1\uffff\1\131\2\uffff\1\137\1\uffff\1\140\1\uffff\1\141\1\uffff\1\122\1\116\1\127\1\113\1\133\1\uffff\1\117\1\124\1\125\1\135\1\110\1\130\1\uffff\1\112\1\uffff\1\132\1\uffff\1\106\1\111\1\120\1\123\25\uffff\1\u008e\1\u008f\1\u0086\1\u0087\1\u0088\1\u0089\1\u008a\1\u008b\1\u008c\1\u008d\1\u0081\1\u0082\1\u0083\1\u0084\1\u0085",
            "\1\u0090\1\u0091\10\uffff\1\u00c0\1\uffff\1\u00ae\2\uffff\1\u00b0\1\u00af\1\uffff\1\u00c6\1\u00b1\2\uffff\1\u00b3\1\u00cb\1\u00b8\1\u00b5\1\u00b9\1\u00c1\4\uffff\1\u00c7\3\uffff\1\u00bc\1\u00bd\1\u00b2\1\u00ba\1\u00bb\1\u00b6\1\uffff\1\u00b4\1\u00be\1\u00c2\1\uffff\1\u00aa\1\u00c3\2\uffff\1\u00b7\1\u00bf\1\u00c4\1\uffff\1\u00ca\1\u00c5\1\u00c9\1\u00c8\1\u00cc\1\u00a8\1\u0098\1\u0093\1\u0099\1\uffff\1\u009d\1\uffff\1\u00a2\1\uffff\1\u00a5\2\uffff\1\u00ab\1\uffff\1\u00ac\1\uffff\1\u00ad\1\uffff\1\u009e\1\u009a\1\u00a3\1\u0097\1\u00a7\1\uffff\1\u009b\1\u00a0\1\u00a1\1\u00a9\1\u0094\1\u00a4\1\uffff\1\u0096\1\uffff\1\u00a6\1\uffff\1\u0092\1\u0095\1\u009c\1\u009f",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\102\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\u00ce\1\u00cf\10\uffff\1\u00fe\1\uffff\1\u00ec\2\uffff\1\u00ee\1\u00ed\1\uffff\1\u0104\1\u00ef\2\uffff\1\u00f1\1\u0109\1\u00f6\1\u00f3\1\u00f7\1\u00ff\4\uffff\1\u0105\3\uffff\1\u00fa\1\u00fb\1\u00f0\1\u00f8\1\u00f9\1\u00f4\1\uffff\1\u00f2\1\u00fc\1\u0100\1\uffff\1\u00e8\1\u0101\2\uffff\1\u00f5\1\u00fd\1\u0102\1\uffff\1\u0108\1\u0103\1\u0107\1\u0106\1\u010a\1\u00e6\1\u00d6\1\u00d1\1\u00d7\1\uffff\1\u00db\1\uffff\1\u00e0\1\uffff\1\u00e3\2\uffff\1\u00e9\1\uffff\1\u00ea\1\uffff\1\u00eb\1\uffff\1\u00dc\1\u00d8\1\u00e1\1\u00d5\1\u00e5\1\uffff\1\u00d9\1\u00de\1\u00df\1\u00e7\1\u00d2\1\u00e2\1\uffff\1\u00d4\1\uffff\1\u00e4\1\uffff\1\u00d0\1\u00d3\1\u00da\1\u00dd\25\uffff\1\u0118\1\u0119\1\u0110\1\u0111\1\u0112\1\u0113\1\u0114\1\u0115\1\u0116\1\u0117\1\u010b\1\u010c\1\u010d\1\u010e\1\u010f",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4",
            "\1\103\1\2\25\uffff\1\u00cd\6\uffff\1\4"
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA13 extends DFA {

        public DFA13(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 13;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "723:2: (this_AddStatementCS_0= ruleAddStatementCS | this_MappingCallCS_1= ruleMappingCallCS | this_MappingLoopCS_2= ruleMappingLoopCS )";
        }
    }
    static final String dfa_13s = "\1\77\1\151\2\uffff\75\74\1\u008d\1\151\u0089\74\1\u008d\114\74";
    static final String dfa_14s = "\2\uffff\1\2\1\1\u0115\uffff";
    static final String[] dfa_15s = {
            "\1\1\1\uffff\1\2\5\uffff\2\3\2\uffff\2\3\5\uffff\1\2\10\uffff\4\2\1\uffff\2\2\7\uffff\2\2\2\uffff\1\3",
            "\1\4\1\5\10\uffff\1\64\1\uffff\1\42\2\uffff\1\44\1\43\1\uffff\1\72\1\45\2\uffff\1\47\1\77\1\54\1\51\1\55\1\65\4\uffff\1\73\3\uffff\1\60\1\61\1\46\1\56\1\57\1\52\1\uffff\1\50\1\62\1\66\1\uffff\1\36\1\67\2\uffff\1\53\1\63\1\70\1\uffff\1\76\1\71\1\75\1\74\1\100\1\34\1\14\1\7\1\15\1\uffff\1\21\1\uffff\1\26\1\uffff\1\31\2\uffff\1\37\1\uffff\1\40\1\uffff\1\41\1\uffff\1\22\1\16\1\27\1\13\1\33\1\uffff\1\17\1\24\1\25\1\35\1\10\1\30\1\uffff\1\12\1\uffff\1\32\1\uffff\1\6\1\11\1\20\1\23",
            "",
            "",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\103\1\104\10\uffff\1\163\1\uffff\1\141\2\uffff\1\143\1\142\1\uffff\1\171\1\144\2\uffff\1\146\1\176\1\153\1\150\1\154\1\164\4\uffff\1\172\3\uffff\1\157\1\160\1\145\1\155\1\156\1\151\1\uffff\1\147\1\161\1\165\1\uffff\1\135\1\166\2\uffff\1\152\1\162\1\167\1\uffff\1\175\1\170\1\174\1\173\1\177\1\133\1\113\1\106\1\114\1\uffff\1\120\1\uffff\1\125\1\uffff\1\130\2\uffff\1\136\1\uffff\1\137\1\uffff\1\140\1\uffff\1\121\1\115\1\126\1\112\1\132\1\uffff\1\116\1\123\1\124\1\134\1\107\1\127\1\uffff\1\111\1\uffff\1\131\1\uffff\1\105\1\110\1\117\1\122\25\uffff\1\u008d\1\u008e\1\u0085\1\u0086\1\u0087\1\u0088\1\u0089\1\u008a\1\u008b\1\u008c\1\u0080\1\u0081\1\u0082\1\u0083\1\u0084",
            "\1\u008f\1\u0090\10\uffff\1\u00bf\1\uffff\1\u00ad\2\uffff\1\u00af\1\u00ae\1\uffff\1\u00c5\1\u00b0\2\uffff\1\u00b2\1\u00ca\1\u00b7\1\u00b4\1\u00b8\1\u00c0\4\uffff\1\u00c6\3\uffff\1\u00bb\1\u00bc\1\u00b1\1\u00b9\1\u00ba\1\u00b5\1\uffff\1\u00b3\1\u00bd\1\u00c1\1\uffff\1\u00a9\1\u00c2\2\uffff\1\u00b6\1\u00be\1\u00c3\1\uffff\1\u00c9\1\u00c4\1\u00c8\1\u00c7\1\u00cb\1\u00a7\1\u0097\1\u0092\1\u0098\1\uffff\1\u009c\1\uffff\1\u00a1\1\uffff\1\u00a4\2\uffff\1\u00aa\1\uffff\1\u00ab\1\uffff\1\u00ac\1\uffff\1\u009d\1\u0099\1\u00a2\1\u0096\1\u00a6\1\uffff\1\u009a\1\u009f\1\u00a0\1\u00a8\1\u0093\1\u00a3\1\uffff\1\u0095\1\uffff\1\u00a5\1\uffff\1\u0091\1\u0094\1\u009b\1\u009e",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\101\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\u00cd\1\u00ce\10\uffff\1\u00fd\1\uffff\1\u00eb\2\uffff\1\u00ed\1\u00ec\1\uffff\1\u0103\1\u00ee\2\uffff\1\u00f0\1\u0108\1\u00f5\1\u00f2\1\u00f6\1\u00fe\4\uffff\1\u0104\3\uffff\1\u00f9\1\u00fa\1\u00ef\1\u00f7\1\u00f8\1\u00f3\1\uffff\1\u00f1\1\u00fb\1\u00ff\1\uffff\1\u00e7\1\u0100\2\uffff\1\u00f4\1\u00fc\1\u0101\1\uffff\1\u0107\1\u0102\1\u0106\1\u0105\1\u0109\1\u00e5\1\u00d5\1\u00d0\1\u00d6\1\uffff\1\u00da\1\uffff\1\u00df\1\uffff\1\u00e2\2\uffff\1\u00e8\1\uffff\1\u00e9\1\uffff\1\u00ea\1\uffff\1\u00db\1\u00d7\1\u00e0\1\u00d4\1\u00e4\1\uffff\1\u00d8\1\u00dd\1\u00de\1\u00e6\1\u00d1\1\u00e1\1\uffff\1\u00d3\1\uffff\1\u00e3\1\uffff\1\u00cf\1\u00d2\1\u00d9\1\u00dc\25\uffff\1\u0117\1\u0118\1\u010f\1\u0110\1\u0111\1\u0112\1\u0113\1\u0114\1\u0115\1\u0116\1\u010a\1\u010b\1\u010c\1\u010d\1\u010e",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2",
            "\1\102\1\2\11\uffff\2\3\12\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\2\7\uffff\2\2"
    };
    static final char[] dfa_13 = DFA.unpackEncodedStringToUnsignedChars(dfa_13s);
    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final short[][] dfa_15 = unpackEncodedStringArray(dfa_15s);

    class DFA28 extends DFA {

        public DFA28(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 28;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_13;
            this.accept = dfa_14;
            this.special = dfa_5;
            this.transition = dfa_15;
        }
        public String getDescription() {
            return "()* loopback of 1233:3: ( (lv_ownedStatements_16_0= ruleGuardStatementCS ) )*";
        }
    }
    static final String[] dfa_16s = {
            "\1\1\1\uffff\1\2\20\uffff\1\2\10\uffff\4\2\1\uffff\2\3\7\uffff\2\3",
            "\1\4\1\5\10\uffff\1\64\1\uffff\1\42\2\uffff\1\44\1\43\1\uffff\1\72\1\45\2\uffff\1\47\1\77\1\54\1\51\1\55\1\65\4\uffff\1\73\3\uffff\1\60\1\61\1\46\1\56\1\57\1\52\1\uffff\1\50\1\62\1\66\1\uffff\1\36\1\67\2\uffff\1\53\1\63\1\70\1\uffff\1\76\1\71\1\75\1\74\1\100\1\34\1\14\1\7\1\15\1\uffff\1\21\1\uffff\1\26\1\uffff\1\31\2\uffff\1\37\1\uffff\1\40\1\uffff\1\41\1\uffff\1\22\1\16\1\27\1\13\1\33\1\uffff\1\17\1\24\1\25\1\35\1\10\1\30\1\uffff\1\12\1\uffff\1\32\1\uffff\1\6\1\11\1\20\1\23",
            "",
            "",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\103\1\104\10\uffff\1\163\1\uffff\1\141\2\uffff\1\143\1\142\1\uffff\1\171\1\144\2\uffff\1\146\1\176\1\153\1\150\1\154\1\164\4\uffff\1\172\3\uffff\1\157\1\160\1\145\1\155\1\156\1\151\1\uffff\1\147\1\161\1\165\1\uffff\1\135\1\166\2\uffff\1\152\1\162\1\167\1\uffff\1\175\1\170\1\174\1\173\1\177\1\133\1\113\1\106\1\114\1\uffff\1\120\1\uffff\1\125\1\uffff\1\130\2\uffff\1\136\1\uffff\1\137\1\uffff\1\140\1\uffff\1\121\1\115\1\126\1\112\1\132\1\uffff\1\116\1\123\1\124\1\134\1\107\1\127\1\uffff\1\111\1\uffff\1\131\1\uffff\1\105\1\110\1\117\1\122\25\uffff\1\u008d\1\u008e\1\u0085\1\u0086\1\u0087\1\u0088\1\u0089\1\u008a\1\u008b\1\u008c\1\u0080\1\u0081\1\u0082\1\u0083\1\u0084",
            "\1\u008f\1\u0090\10\uffff\1\u00bf\1\uffff\1\u00ad\2\uffff\1\u00af\1\u00ae\1\uffff\1\u00c5\1\u00b0\2\uffff\1\u00b2\1\u00ca\1\u00b7\1\u00b4\1\u00b8\1\u00c0\4\uffff\1\u00c6\3\uffff\1\u00bb\1\u00bc\1\u00b1\1\u00b9\1\u00ba\1\u00b5\1\uffff\1\u00b3\1\u00bd\1\u00c1\1\uffff\1\u00a9\1\u00c2\2\uffff\1\u00b6\1\u00be\1\u00c3\1\uffff\1\u00c9\1\u00c4\1\u00c8\1\u00c7\1\u00cb\1\u00a7\1\u0097\1\u0092\1\u0098\1\uffff\1\u009c\1\uffff\1\u00a1\1\uffff\1\u00a4\2\uffff\1\u00aa\1\uffff\1\u00ab\1\uffff\1\u00ac\1\uffff\1\u009d\1\u0099\1\u00a2\1\u0096\1\u00a6\1\uffff\1\u009a\1\u009f\1\u00a0\1\u00a8\1\u0093\1\u00a3\1\uffff\1\u0095\1\uffff\1\u00a5\1\uffff\1\u0091\1\u0094\1\u009b\1\u009e",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\101\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\u00cd\1\u00ce\10\uffff\1\u00fd\1\uffff\1\u00eb\2\uffff\1\u00ed\1\u00ec\1\uffff\1\u0103\1\u00ee\2\uffff\1\u00f0\1\u0108\1\u00f5\1\u00f2\1\u00f6\1\u00fe\4\uffff\1\u0104\3\uffff\1\u00f9\1\u00fa\1\u00ef\1\u00f7\1\u00f8\1\u00f3\1\uffff\1\u00f1\1\u00fb\1\u00ff\1\uffff\1\u00e7\1\u0100\2\uffff\1\u00f4\1\u00fc\1\u0101\1\uffff\1\u0107\1\u0102\1\u0106\1\u0105\1\u0109\1\u00e5\1\u00d5\1\u00d0\1\u00d6\1\uffff\1\u00da\1\uffff\1\u00df\1\uffff\1\u00e2\2\uffff\1\u00e8\1\uffff\1\u00e9\1\uffff\1\u00ea\1\uffff\1\u00db\1\u00d7\1\u00e0\1\u00d4\1\u00e4\1\uffff\1\u00d8\1\u00dd\1\u00de\1\u00e6\1\u00d1\1\u00e1\1\uffff\1\u00d3\1\uffff\1\u00e3\1\uffff\1\u00cf\1\u00d2\1\u00d9\1\u00dc\25\uffff\1\u0117\1\u0118\1\u010f\1\u0110\1\u0111\1\u0112\1\u0113\1\u0114\1\u0115\1\u0116\1\u010a\1\u010b\1\u010c\1\u010d\1\u010e",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3",
            "\1\102\1\2\25\uffff\1\u00cc\6\uffff\1\2\1\uffff\2\3\7\uffff\2\3"
    };
    static final short[][] dfa_16 = unpackEncodedStringArray(dfa_16s);

    class DFA29 extends DFA {

        public DFA29(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 29;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_14;
            this.special = dfa_5;
            this.transition = dfa_16;
        }
        public String getDescription() {
            return "()* loopback of 1252:3: ( (lv_ownedStatements_17_0= ruleCommitStatementCS ) )*";
        }
    }
    static final String dfa_17s = "\12\uffff";
    static final String dfa_18s = "\1\21\2\uffff\3\0\4\uffff";
    static final String dfa_19s = "\1\77\2\uffff\3\0\4\uffff";
    static final String dfa_20s = "\1\uffff\1\1\4\uffff\1\5\1\2\1\3\1\4";
    static final String dfa_21s = "\3\uffff\1\0\1\1\1\2\4\uffff}>";
    static final String[] dfa_22s = {
            "\1\3\7\uffff\2\1\2\uffff\1\4\1\5\40\uffff\1\6",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final char[] dfa_18 = DFA.unpackEncodedStringToUnsignedChars(dfa_18s);
    static final char[] dfa_19 = DFA.unpackEncodedStringToUnsignedChars(dfa_19s);
    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final short[][] dfa_22 = unpackEncodedStringArray(dfa_22s);

    class DFA33 extends DFA {

        public DFA33(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 33;
            this.eot = dfa_17;
            this.eof = dfa_17;
            this.min = dfa_18;
            this.max = dfa_19;
            this.accept = dfa_20;
            this.special = dfa_21;
            this.transition = dfa_22;
        }
        public String getDescription() {
            return "1508:2: (this_BufferStatementCS_0= ruleBufferStatementCS | this_DeclareStatementCS_1= ruleDeclareStatementCS | this_DeclareStatementCS_2= ruleDeclareStatementCS | this_CheckStatementCS_3= ruleCheckStatementCS | this_SpeculateStatementCS_4= ruleSpeculateStatementCS )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA33_3 = input.LA(1);


                        int index33_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalQVTimperative()) ) {s = 7;}

                        else if ( (synpred37_InternalQVTimperative()) ) {s = 8;}

                        else if ( (synpred38_InternalQVTimperative()) ) {s = 9;}


                        input.seek(index33_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 :
                        int LA33_4 = input.LA(1);


                        int index33_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalQVTimperative()) ) {s = 7;}

                        else if ( (synpred37_InternalQVTimperative()) ) {s = 8;}

                        else if ( (synpred38_InternalQVTimperative()) ) {s = 9;}


                        input.seek(index33_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 :
                        int LA33_5 = input.LA(1);


                        int index33_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalQVTimperative()) ) {s = 7;}

                        else if ( (synpred37_InternalQVTimperative()) ) {s = 8;}


                        input.seek(index33_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 33, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA41 extends DFA {

        public DFA41(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 41;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_13;
            this.accept = dfa_14;
            this.special = dfa_5;
            this.transition = dfa_15;
        }
        public String getDescription() {
            return "()* loopback of 1877:3: ( (lv_ownedStatements_10_0= ruleGuardStatementCS ) )*";
        }
    }

    class DFA42 extends DFA {

        public DFA42(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 42;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_14;
            this.special = dfa_5;
            this.transition = dfa_16;
        }
        public String getDescription() {
            return "()* loopback of 1896:3: ( (lv_ownedStatements_11_0= ruleCommitStatementCS ) )*";
        }
    }
    static final String dfa_23s = "\u0083\uffff";
    static final String dfa_24s = "\1\7\43\26\1\7\31\26\4\uffff\40\45\1\7\13\45\1\7\15\45\1\4\2\45\1\7\2\4\1\7";
    static final String dfa_25s = "\1\151\43\76\1\151\31\76\4\uffff\40\76\1\151\13\76\1\151\15\76\1\u00a1\2\76\1\151\2\u00a1\1\u0098";
    static final String dfa_26s = "\76\uffff\1\1\1\2\1\4\1\3\101\uffff";
    static final String dfa_27s = "\u0083\uffff}>";
    static final String[] dfa_28s = {
            "\1\1\1\2\10\uffff\1\61\1\uffff\1\37\2\uffff\1\41\1\40\1\uffff\1\67\1\42\2\uffff\1\44\1\74\1\51\1\46\1\52\1\62\4\uffff\1\70\3\uffff\1\55\1\56\1\43\1\53\1\54\1\47\1\uffff\1\45\1\57\1\63\1\uffff\1\33\1\64\2\uffff\1\50\1\60\1\65\1\uffff\1\73\1\66\1\72\1\71\1\75\1\31\1\11\1\4\1\12\1\uffff\1\16\1\uffff\1\23\1\uffff\1\26\2\uffff\1\34\1\uffff\1\35\1\uffff\1\36\1\uffff\1\17\1\13\1\24\1\10\1\30\1\uffff\1\14\1\21\1\22\1\32\1\5\1\25\1\uffff\1\7\1\uffff\1\27\1\uffff\1\3\1\6\1\15\1\20",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\102\1\103\10\uffff\1\162\1\uffff\1\140\2\uffff\1\142\1\141\1\uffff\1\170\1\143\2\uffff\1\145\1\175\1\152\1\147\1\153\1\163\2\uffff\1\77\1\uffff\1\171\3\uffff\1\156\1\157\1\144\1\154\1\155\1\150\1\uffff\1\146\1\160\1\164\1\uffff\1\134\1\165\2\uffff\1\151\1\161\1\166\1\uffff\1\174\1\167\1\173\1\172\1\176\1\132\1\112\1\105\1\113\1\uffff\1\117\1\uffff\1\124\1\uffff\1\127\2\uffff\1\135\1\uffff\1\136\1\uffff\1\137\1\uffff\1\120\1\114\1\125\1\111\1\131\1\uffff\1\115\1\122\1\123\1\133\1\106\1\126\1\uffff\1\110\1\uffff\1\130\1\uffff\1\104\1\107\1\116\1\121",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\76\16\uffff\1\77\5\uffff\1\101\22\uffff\1\100",
            "",
            "",
            "",
            "",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\2\76\10\uffff\1\76\1\uffff\1\76\2\uffff\2\76\1\uffff\2\76\2\uffff\6\76\2\uffff\1\77\1\uffff\1\76\3\uffff\1\177\5\76\1\uffff\3\76\1\uffff\2\76\2\uffff\3\76\1\uffff\1\u0080\10\76\1\uffff\1\76\1\uffff\1\76\1\uffff\1\76\2\uffff\1\76\1\uffff\1\76\1\uffff\1\76\1\uffff\5\76\1\uffff\6\76\1\uffff\1\76\1\uffff\1\76\1\uffff\4\76",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\2\101\10\uffff\1\101\1\uffff\1\101\2\uffff\2\101\1\uffff\2\101\2\uffff\6\101\2\uffff\1\77\1\uffff\1\101\3\uffff\6\101\1\uffff\3\101\1\uffff\2\101\2\uffff\3\101\1\uffff\1\u0081\10\101\1\uffff\1\101\1\uffff\1\101\1\uffff\1\101\2\uffff\1\101\1\uffff\1\101\1\uffff\1\101\1\uffff\5\101\1\uffff\6\101\1\uffff\1\101\1\uffff\1\101\1\uffff\4\101",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\100\1\uffff\3\100\10\uffff\1\100\1\uffff\1\100\2\uffff\2\100\1\uffff\2\100\2\uffff\6\100\2\uffff\1\77\1\uffff\1\100\2\uffff\1\100\1\u0082\5\100\1\uffff\3\100\1\uffff\3\100\1\uffff\3\100\1\uffff\11\100\1\uffff\1\100\1\uffff\1\100\1\uffff\1\100\2\uffff\1\100\1\uffff\1\100\1\uffff\1\100\1\uffff\5\100\1\uffff\6\100\1\uffff\1\100\1\uffff\1\100\1\uffff\7\100\22\uffff\17\100\1\uffff\1\100\2\uffff\4\100\5\uffff\1\100\4\uffff\2\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\1\77\5\uffff\1\101\22\uffff\1\100",
            "\2\101\10\uffff\1\101\1\uffff\1\101\1\uffff\1\76\2\101\1\uffff\2\101\2\uffff\6\101\4\uffff\1\101\3\uffff\6\101\1\uffff\3\101\1\uffff\2\101\2\uffff\3\101\1\uffff\11\101\1\uffff\1\101\1\uffff\1\101\1\uffff\1\101\2\uffff\1\101\1\uffff\1\101\1\uffff\1\101\1\uffff\5\101\1\uffff\6\101\1\uffff\1\101\1\uffff\1\101\1\uffff\4\101",
            "\1\100\1\uffff\3\100\10\uffff\1\100\1\uffff\1\100\1\uffff\1\76\2\100\1\uffff\2\100\2\uffff\6\100\4\uffff\1\100\2\uffff\7\100\1\uffff\3\100\1\uffff\3\100\1\uffff\3\100\1\uffff\11\100\1\uffff\1\100\1\uffff\1\100\1\uffff\1\100\2\uffff\1\100\1\uffff\1\100\1\uffff\1\100\1\uffff\5\100\1\uffff\6\100\1\uffff\1\100\1\uffff\1\100\1\uffff\7\100\22\uffff\17\100\1\uffff\1\100\2\uffff\4\100\5\uffff\1\100\4\uffff\2\100",
            "\1\100\1\uffff\3\100\10\uffff\1\100\1\uffff\1\100\1\uffff\1\101\2\100\1\uffff\2\100\2\uffff\6\100\4\uffff\1\100\2\uffff\7\100\1\uffff\3\100\1\uffff\3\100\1\uffff\3\100\1\uffff\11\100\1\uffff\1\100\1\uffff\1\100\1\uffff\1\100\2\uffff\1\100\1\uffff\1\100\1\uffff\1\100\1\uffff\5\100\1\uffff\6\100\1\uffff\1\100\1\uffff\1\100\1\uffff\7\100\22\uffff\17\100\1\uffff\1\100\2\uffff\4\100\5\uffff\1\100\4\uffff\2\100",
            "\2\101\10\uffff\1\101\1\uffff\1\101\1\uffff\1\100\2\101\1\uffff\2\101\2\uffff\6\101\1\100\3\uffff\1\101\1\uffff\2\100\6\101\1\uffff\3\101\1\100\2\101\1\100\1\uffff\3\101\1\100\11\101\1\uffff\1\101\1\uffff\1\101\1\uffff\1\101\2\uffff\1\101\1\uffff\1\101\1\uffff\1\101\1\uffff\5\101\1\uffff\6\101\1\uffff\1\101\1\uffff\1\101\1\uffff\4\101\1\100\2\uffff\22\100\27\uffff\1\100\1\uffff\1\100"
    };

    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final char[] dfa_24 = DFA.unpackEncodedStringToUnsignedChars(dfa_24s);
    static final char[] dfa_25 = DFA.unpackEncodedStringToUnsignedChars(dfa_25s);
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final short[][] dfa_28 = unpackEncodedStringArray(dfa_28s);

    class DFA50 extends DFA {

        public DFA50(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 50;
            this.eot = dfa_23;
            this.eof = dfa_23;
            this.min = dfa_24;
            this.max = dfa_25;
            this.accept = dfa_26;
            this.special = dfa_27;
            this.transition = dfa_28;
        }
        public String getDescription() {
            return "2272:2: (this_AppendParameterBindingCS_0= ruleAppendParameterBindingCS | this_GuardParameterBindingCS_1= ruleGuardParameterBindingCS | this_LoopParameterBindingCS_2= ruleLoopParameterBindingCS | this_SimpleParameterBindingCS_3= ruleSimpleParameterBindingCS )";
        }
    }
    static final String dfa_29s = "\100\uffff";
    static final String dfa_30s = "\1\7\75\25\2\uffff";
    static final String dfa_31s = "\1\151\75\65\2\uffff";
    static final String dfa_32s = "\76\uffff\1\2\1\1";
    static final String dfa_33s = "\100\uffff}>";
    static final String[] dfa_34s = {
            "\1\1\1\2\10\uffff\1\61\1\uffff\1\37\2\uffff\1\41\1\40\1\uffff\1\67\1\42\2\uffff\1\44\1\74\1\51\1\46\1\52\1\62\4\uffff\1\70\3\uffff\1\55\1\56\1\43\1\53\1\54\1\47\1\uffff\1\45\1\57\1\63\1\uffff\1\33\1\64\2\uffff\1\50\1\60\1\65\1\uffff\1\73\1\66\1\72\1\71\1\75\1\31\1\11\1\4\1\12\1\uffff\1\16\1\uffff\1\23\1\uffff\1\26\2\uffff\1\34\1\uffff\1\35\1\uffff\1\36\1\uffff\1\17\1\13\1\24\1\10\1\30\1\uffff\1\14\1\21\1\22\1\32\1\5\1\25\1\uffff\1\7\1\uffff\1\27\1\uffff\1\3\1\6\1\15\1\20",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\77\13\uffff\1\76",
            "",
            ""
    };

    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final char[] dfa_30 = DFA.unpackEncodedStringToUnsignedChars(dfa_30s);
    static final char[] dfa_31 = DFA.unpackEncodedStringToUnsignedChars(dfa_31s);
    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final short[][] dfa_34 = unpackEncodedStringArray(dfa_34s);

    class DFA56 extends DFA {

        public DFA56(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 56;
            this.eot = dfa_29;
            this.eof = dfa_29;
            this.min = dfa_30;
            this.max = dfa_31;
            this.accept = dfa_32;
            this.special = dfa_33;
            this.transition = dfa_34;
        }
        public String getDescription() {
            return "2639:3: ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )?";
        }
    }
    static final String dfa_35s = "\117\uffff";
    static final String dfa_36s = "\1\76\116\uffff";
    static final String dfa_37s = "\1\7\75\25\1\uffff\17\30\1\uffff";
    static final String dfa_38s = "\1\u008d\75\65\1\uffff\17\51\1\uffff";
    static final String dfa_39s = "\76\uffff\1\2\17\uffff\1\1";
    static final String dfa_40s = "\117\uffff}>";
    static final String[] dfa_41s = {
            "\1\1\1\2\10\uffff\1\61\1\uffff\1\37\2\uffff\1\41\1\40\1\uffff\1\67\1\42\2\uffff\1\44\1\74\1\51\1\46\1\52\1\62\4\uffff\1\70\3\uffff\1\55\1\56\1\43\1\53\1\54\1\47\1\uffff\1\45\1\57\1\63\1\uffff\1\33\1\64\2\uffff\1\50\1\60\1\65\1\uffff\1\73\1\66\1\72\1\71\1\75\1\31\1\11\1\4\1\12\1\uffff\1\16\1\uffff\1\23\1\uffff\1\26\2\uffff\1\34\1\uffff\1\35\1\uffff\1\36\1\uffff\1\17\1\13\1\24\1\10\1\30\1\uffff\1\14\1\21\1\22\1\32\1\5\1\25\1\uffff\1\7\1\uffff\1\27\1\uffff\1\3\1\6\1\15\1\20\25\uffff\1\114\1\115\1\104\1\105\1\106\1\107\1\110\1\111\1\112\1\113\1\77\1\100\1\101\1\102\1\103",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "\1\76\2\uffff\1\76\12\uffff\1\76\5\uffff\1\116\13\uffff\1\76",
            "",
            "\1\76\12\uffff\1\76\5\uffff\1\116",
            "\1\76\12\uffff\1\76\5\uffff\1\116",
            "\1\76\12\uffff\1\76\5\uffff\1\116",
            "\1\76\12\uffff\1\76\5\uffff\1\116",
            "\1\76\12\uffff\1\76\5\uffff\1\116",
            "\1\76\12\uffff\1\76\5\uffff\1\116",
            "\1\76\12\uffff\1\76\5\uffff\1\116",
            "\1\76\12\uffff\1\76\5\uffff\1\116",
            "\1\76\12\uffff\1\76\5\uffff\1\116",
            "\1\76\12\uffff\1\76\5\uffff\1\116",
            "\1\76\12\uffff\1\76\5\uffff\1\116",
            "\1\76\12\uffff\1\76\5\uffff\1\116",
            "\1\76\12\uffff\1\76\5\uffff\1\116",
            "\1\76\12\uffff\1\76\5\uffff\1\116",
            "\1\76\12\uffff\1\76\5\uffff\1\116",
            ""
    };

    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final char[] dfa_37 = DFA.unpackEncodedStringToUnsignedChars(dfa_37s);
    static final char[] dfa_38 = DFA.unpackEncodedStringToUnsignedChars(dfa_38s);
    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final short[][] dfa_41 = unpackEncodedStringArray(dfa_41s);

    class DFA66 extends DFA {

        public DFA66(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 66;
            this.eot = dfa_35;
            this.eof = dfa_36;
            this.min = dfa_37;
            this.max = dfa_38;
            this.accept = dfa_39;
            this.special = dfa_40;
            this.transition = dfa_41;
        }
        public String getDescription() {
            return "()* loopback of 3041:3: ( ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) otherlv_3= '::' )*";
        }
    }
    static final String dfa_42s = "\77\uffff";
    static final String dfa_43s = "\1\7\1\0\75\uffff";
    static final String dfa_44s = "\1\151\1\0\75\uffff";
    static final String dfa_45s = "\2\uffff\1\2\73\uffff\1\1";
    static final String dfa_46s = "\1\uffff\1\0\75\uffff}>";
    static final String[] dfa_47s = {
            "\2\2\10\uffff\1\2\1\uffff\1\2\2\uffff\2\2\1\uffff\2\2\2\uffff\1\1\5\2\4\uffff\1\2\3\uffff\6\2\1\uffff\3\2\1\uffff\2\2\2\uffff\3\2\1\uffff\11\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\4\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final char[] dfa_43 = DFA.unpackEncodedStringToUnsignedChars(dfa_43s);
    static final char[] dfa_44 = DFA.unpackEncodedStringToUnsignedChars(dfa_44s);
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final short[][] dfa_47 = unpackEncodedStringArray(dfa_47s);

    class DFA71 extends DFA {

        public DFA71(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 71;
            this.eot = dfa_42;
            this.eof = dfa_42;
            this.min = dfa_43;
            this.max = dfa_44;
            this.accept = dfa_45;
            this.special = dfa_46;
            this.transition = dfa_47;
        }
        public String getDescription() {
            return "3258:3: ( (lv_isCheck_0_0= 'check' ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA71_1 = input.LA(1);


                        int index71_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred82_InternalQVTimperative()) ) {s = 62;}

                        else if ( (true) ) {s = 2;}


                        input.seek(index71_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 71, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_48s = "\1\7\75\30\2\uffff";
    static final String dfa_49s = "\1\u008d\75\51\2\uffff";
    static final String[] dfa_50s = {
            "\1\1\1\2\10\uffff\1\61\1\uffff\1\37\2\uffff\1\41\1\40\1\uffff\1\67\1\42\2\uffff\1\44\1\74\1\51\1\46\1\52\1\62\4\uffff\1\70\3\uffff\1\55\1\56\1\43\1\53\1\54\1\47\1\uffff\1\45\1\57\1\63\1\uffff\1\33\1\64\2\uffff\1\50\1\60\1\65\1\uffff\1\73\1\66\1\72\1\71\1\75\1\31\1\11\1\4\1\12\1\uffff\1\16\1\uffff\1\23\1\uffff\1\26\2\uffff\1\34\1\uffff\1\35\1\uffff\1\36\1\uffff\1\17\1\13\1\24\1\10\1\30\1\uffff\1\14\1\21\1\22\1\32\1\5\1\25\1\uffff\1\7\1\uffff\1\27\1\uffff\1\3\1\6\1\15\1\20\25\uffff\17\76",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "\1\76\12\uffff\1\76\5\uffff\1\77",
            "",
            ""
    };
    static final char[] dfa_48 = DFA.unpackEncodedStringToUnsignedChars(dfa_48s);
    static final char[] dfa_49 = DFA.unpackEncodedStringToUnsignedChars(dfa_49s);
    static final short[][] dfa_50 = unpackEncodedStringArray(dfa_50s);

    class DFA73 extends DFA {

        public DFA73(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 73;
            this.eot = dfa_29;
            this.eof = dfa_29;
            this.min = dfa_48;
            this.max = dfa_49;
            this.accept = dfa_32;
            this.special = dfa_33;
            this.transition = dfa_50;
        }
        public String getDescription() {
            return "3504:3: ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )?";
        }
    }
    static final String dfa_51s = "\2\uffff\75\1\1\uffff";
    static final String dfa_52s = "\1\4\1\uffff\75\22\1\uffff";
    static final String dfa_53s = "\1\u00a1\1\uffff\75\u0098\1\uffff";
    static final String dfa_54s = "\1\uffff\1\1\75\uffff\1\2";
    static final String[] dfa_55s = {
            "\1\1\1\uffff\1\1\1\2\1\3\10\uffff\1\62\1\uffff\1\40\2\uffff\1\42\1\41\1\77\1\70\1\43\2\uffff\1\45\1\75\1\52\1\47\1\53\1\63\4\uffff\1\71\2\uffff\1\1\1\56\1\57\1\44\1\54\1\55\1\50\1\uffff\1\46\1\60\1\64\1\uffff\1\34\1\65\1\1\1\uffff\1\51\1\61\1\66\1\uffff\1\74\1\67\1\73\1\72\1\76\1\32\1\12\1\5\1\13\1\uffff\1\17\1\uffff\1\24\1\uffff\1\27\2\uffff\1\35\1\uffff\1\36\1\uffff\1\37\1\uffff\1\20\1\14\1\25\1\11\1\31\1\uffff\1\15\1\22\1\23\1\33\1\6\1\26\1\uffff\1\10\1\uffff\1\30\1\uffff\1\4\1\7\1\16\1\21\3\1\22\uffff\17\1\1\uffff\1\1\2\uffff\4\1\5\uffff\1\1\4\uffff\2\1",
            "",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            ""
    };
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final char[] dfa_52 = DFA.unpackEncodedStringToUnsignedChars(dfa_52s);
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final short[][] dfa_55 = unpackEncodedStringArray(dfa_55s);

    class DFA190 extends DFA {

        public DFA190(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 190;
            this.eot = dfa_29;
            this.eof = dfa_51;
            this.min = dfa_52;
            this.max = dfa_53;
            this.accept = dfa_54;
            this.special = dfa_33;
            this.transition = dfa_55;
        }
        public String getDescription() {
            return "8119:2: ( ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )? ) | ( (lv_ownedExpression_3_0= rulePatternExpCS ) ) )";
        }
    }
    static final String[] dfa_56s = {
            "\1\1\1\uffff\1\1\1\2\1\3\10\uffff\1\62\1\uffff\1\40\2\uffff\1\42\1\41\1\77\1\70\1\43\2\uffff\1\45\1\75\1\52\1\47\1\53\1\63\4\uffff\1\71\2\uffff\1\1\1\56\1\57\1\44\1\54\1\55\1\50\1\uffff\1\46\1\60\1\64\1\uffff\1\34\1\65\1\1\1\uffff\1\51\1\61\1\66\1\uffff\1\74\1\67\1\73\1\72\1\76\1\32\1\12\1\5\1\13\1\uffff\1\17\1\uffff\1\24\1\uffff\1\27\2\uffff\1\35\1\uffff\1\36\1\uffff\1\37\1\uffff\1\20\1\14\1\25\1\11\1\31\1\uffff\1\15\1\22\1\23\1\33\1\6\1\26\1\uffff\1\10\1\uffff\1\30\1\uffff\1\4\1\7\1\16\1\21\3\1\22\uffff\17\1\1\uffff\1\1\2\uffff\4\1\5\uffff\1\1\4\uffff\2\1",
            "",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\77\12\uffff\2\1\4\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1",
            ""
    };
    static final short[][] dfa_56 = unpackEncodedStringArray(dfa_56s);

    class DFA193 extends DFA {

        public DFA193(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 193;
            this.eot = dfa_29;
            this.eof = dfa_51;
            this.min = dfa_52;
            this.max = dfa_53;
            this.accept = dfa_54;
            this.special = dfa_33;
            this.transition = dfa_56;
        }
        public String getDescription() {
            return "8348:6: (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS )";
        }
    }
    static final String dfa_57s = "\23\uffff";
    static final String dfa_58s = "\1\2\22\uffff";
    static final String dfa_59s = "\1\22\1\0\21\uffff";
    static final String dfa_60s = "\1\u009c\1\0\21\uffff";
    static final String dfa_61s = "\2\uffff\1\2\17\uffff\1\1";
    static final String dfa_62s = "\1\uffff\1\0\21\uffff}>";
    static final String[] dfa_63s = {
            "\1\2\2\uffff\1\2\6\uffff\1\2\6\uffff\1\1\1\2\2\uffff\1\2\11\uffff\1\2\3\uffff\1\2\3\uffff\2\2\123\uffff\1\2\1\uffff\2\2\6\uffff\1\2\1\uffff\1\2\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_57 = DFA.unpackEncodedString(dfa_57s);
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final char[] dfa_59 = DFA.unpackEncodedStringToUnsignedChars(dfa_59s);
    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);
    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final short[][] dfa_63 = unpackEncodedStringArray(dfa_63s);

    class DFA207 extends DFA {

        public DFA207(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 207;
            this.eot = dfa_57;
            this.eof = dfa_58;
            this.min = dfa_59;
            this.max = dfa_60;
            this.accept = dfa_61;
            this.special = dfa_62;
            this.transition = dfa_63;
        }
        public String getDescription() {
            return "9334:3: ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA207_1 = input.LA(1);


                        int index207_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred360_InternalQVTimperative()) ) {s = 18;}

                        else if ( (true) ) {s = 2;}


                        input.seek(index207_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 207, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA206 extends DFA {

        public DFA206(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 206;
            this.eot = dfa_57;
            this.eof = dfa_58;
            this.min = dfa_59;
            this.max = dfa_60;
            this.accept = dfa_61;
            this.special = dfa_62;
            this.transition = dfa_63;
        }
        public String getDescription() {
            return "9354:4: (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA206_1 = input.LA(1);


                        int index206_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred359_InternalQVTimperative()) ) {s = 18;}

                        else if ( (true) ) {s = 2;}


                        input.seek(index206_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 206, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_64s = "\116\uffff";
    static final String dfa_65s = "\1\7\105\uffff\5\0\3\uffff";
    static final String dfa_66s = "\1\u008d\105\uffff\5\0\3\uffff";
    static final String dfa_67s = "\1\uffff\1\1\74\uffff\1\2\16\uffff\1\3";
    static final String dfa_68s = "\106\uffff\1\0\1\1\1\2\1\3\1\4\3\uffff}>";
    static final String[] dfa_69s = {
            "\2\1\10\uffff\1\1\1\uffff\1\1\2\uffff\2\1\1\uffff\2\1\2\uffff\6\1\4\uffff\1\1\3\uffff\6\1\1\uffff\3\1\1\uffff\2\1\2\uffff\3\1\1\uffff\11\1\1\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\5\1\1\uffff\6\1\1\uffff\1\1\1\uffff\1\1\1\uffff\4\1\25\uffff\12\76\1\106\1\107\1\110\1\111\1\112",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final char[] dfa_65 = DFA.unpackEncodedStringToUnsignedChars(dfa_65s);
    static final char[] dfa_66 = DFA.unpackEncodedStringToUnsignedChars(dfa_66s);
    static final short[] dfa_67 = DFA.unpackEncodedString(dfa_67s);
    static final short[] dfa_68 = DFA.unpackEncodedString(dfa_68s);
    static final short[][] dfa_69 = unpackEncodedStringArray(dfa_69s);

    class DFA208 extends DFA {

        public DFA208(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 208;
            this.eot = dfa_64;
            this.eof = dfa_64;
            this.min = dfa_65;
            this.max = dfa_66;
            this.accept = dfa_67;
            this.special = dfa_68;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "9402:2: (this_TypeNameExpCS_0= ruleTypeNameExpCS | this_TypeLiteralCS_1= ruleTypeLiteralCS | this_CollectionPatternCS_2= ruleCollectionPatternCS )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA208_70 = input.LA(1);


                        int index208_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred362_InternalQVTimperative()) ) {s = 62;}

                        else if ( (true) ) {s = 77;}


                        input.seek(index208_70);
                        if ( s>=0 ) return s;
                        break;
                    case 1 :
                        int LA208_71 = input.LA(1);


                        int index208_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred362_InternalQVTimperative()) ) {s = 62;}

                        else if ( (true) ) {s = 77;}


                        input.seek(index208_71);
                        if ( s>=0 ) return s;
                        break;
                    case 2 :
                        int LA208_72 = input.LA(1);


                        int index208_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred362_InternalQVTimperative()) ) {s = 62;}

                        else if ( (true) ) {s = 77;}


                        input.seek(index208_72);
                        if ( s>=0 ) return s;
                        break;
                    case 3 :
                        int LA208_73 = input.LA(1);


                        int index208_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred362_InternalQVTimperative()) ) {s = 62;}

                        else if ( (true) ) {s = 77;}


                        input.seek(index208_73);
                        if ( s>=0 ) return s;
                        break;
                    case 4 :
                        int LA208_74 = input.LA(1);


                        int index208_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred362_InternalQVTimperative()) ) {s = 62;}

                        else if ( (true) ) {s = 77;}


                        input.seek(index208_74);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 208, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_70s = "\134\uffff";
    static final String dfa_71s = "\1\4\3\0\130\uffff";
    static final String dfa_72s = "\1\u00a1\3\0\130\uffff";
    static final String dfa_73s = "\4\uffff\1\1\126\uffff\1\2";
    static final String dfa_74s = "\1\uffff\1\0\1\1\1\2\130\uffff}>";
    static final String[] dfa_75s = {
            "\1\4\1\uffff\3\4\10\uffff\1\4\1\uffff\1\4\2\uffff\2\4\1\uffff\2\4\2\uffff\6\4\4\uffff\1\4\2\uffff\7\4\1\uffff\3\4\1\uffff\3\4\1\uffff\3\4\1\uffff\11\4\1\uffff\1\4\1\uffff\1\4\1\uffff\1\4\2\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\5\4\1\uffff\6\4\1\uffff\1\4\1\uffff\1\4\1\uffff\4\4\1\1\1\2\1\3\22\uffff\17\4\1\uffff\1\4\2\uffff\4\4\5\uffff\1\4\4\uffff\1\133\1\4",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final char[] dfa_71 = DFA.unpackEncodedStringToUnsignedChars(dfa_71s);
    static final char[] dfa_72 = DFA.unpackEncodedStringToUnsignedChars(dfa_72s);
    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final short[] dfa_74 = DFA.unpackEncodedString(dfa_74s);
    static final short[][] dfa_75 = unpackEncodedStringArray(dfa_75s);

    class DFA211 extends DFA {

        public DFA211(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 211;
            this.eot = dfa_70;
            this.eof = dfa_70;
            this.min = dfa_71;
            this.max = dfa_72;
            this.accept = dfa_73;
            this.special = dfa_74;
            this.transition = dfa_75;
        }
        public String getDescription() {
            return "9505:2: ( (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? ) | this_PrefixedLetExpCS_4= rulePrefixedLetExpCS )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA211_1 = input.LA(1);


                        int index211_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred365_InternalQVTimperative()) ) {s = 4;}

                        else if ( (true) ) {s = 91;}


                        input.seek(index211_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 :
                        int LA211_2 = input.LA(1);


                        int index211_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred365_InternalQVTimperative()) ) {s = 4;}

                        else if ( (true) ) {s = 91;}


                        input.seek(index211_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 :
                        int LA211_3 = input.LA(1);


                        int index211_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred365_InternalQVTimperative()) ) {s = 4;}

                        else if ( (true) ) {s = 91;}


                        input.seek(index211_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 211, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_76s = "\133\uffff";
    static final String dfa_77s = "\1\4\12\uffff\7\0\111\uffff";
    static final String dfa_78s = "\1\u00a1\12\uffff\7\0\111\uffff";
    static final String dfa_79s = "\1\uffff\1\1\1\2\1\3\1\4\15\uffff\1\10\1\11\7\uffff\1\12\74\uffff\1\5\1\6\1\7";
    static final String dfa_80s = "\13\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\111\uffff}>";
    static final String[] dfa_81s = {
            "\1\4\1\uffff\1\4\2\33\10\uffff\1\33\1\uffff\1\33\2\uffff\2\33\1\uffff\2\33\2\uffff\6\33\4\uffff\1\33\2\uffff\1\4\6\33\1\uffff\3\33\1\uffff\2\33\1\1\1\uffff\3\33\1\uffff\11\33\1\uffff\1\33\1\uffff\1\33\1\uffff\1\33\2\uffff\1\33\1\uffff\1\33\1\uffff\1\33\1\uffff\5\33\1\uffff\6\33\1\uffff\1\33\1\uffff\1\33\1\uffff\4\33\25\uffff\1\14\1\13\10\23\1\15\1\16\1\17\1\20\1\21\1\uffff\1\22\2\uffff\4\4\5\uffff\1\2\5\uffff\1\3",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_76s);
    static final char[] dfa_77 = DFA.unpackEncodedStringToUnsignedChars(dfa_77s);
    static final char[] dfa_78 = DFA.unpackEncodedStringToUnsignedChars(dfa_78s);
    static final short[] dfa_79 = DFA.unpackEncodedString(dfa_79s);
    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final short[][] dfa_81 = unpackEncodedStringArray(dfa_81s);

    class DFA214 extends DFA {

        public DFA214(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 214;
            this.eot = dfa_76;
            this.eof = dfa_76;
            this.min = dfa_77;
            this.max = dfa_78;
            this.accept = dfa_79;
            this.special = dfa_80;
            this.transition = dfa_81;
        }
        public String getDescription() {
            return "9761:2: (this_NestedExpCS_0= ruleNestedExpCS | this_IfExpCS_1= ruleIfExpCS | this_SelfExpCS_2= ruleSelfExpCS | this_PrimitiveLiteralExpCS_3= rulePrimitiveLiteralExpCS | this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS | this_MapLiteralExpCS_5= ruleMapLiteralExpCS | this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS | this_LambdaLiteralExpCS_7= ruleLambdaLiteralExpCS | this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS | this_NameExpCS_9= ruleNameExpCS )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA214_11 = input.LA(1);


                        int index214_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred372_InternalQVTimperative()) ) {s = 88;}

                        else if ( (synpred376_InternalQVTimperative()) ) {s = 19;}


                        input.seek(index214_11);
                        if ( s>=0 ) return s;
                        break;
                    case 1 :
                        int LA214_12 = input.LA(1);


                        int index214_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred373_InternalQVTimperative()) ) {s = 89;}

                        else if ( (synpred376_InternalQVTimperative()) ) {s = 19;}


                        input.seek(index214_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 :
                        int LA214_13 = input.LA(1);


                        int index214_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred374_InternalQVTimperative()) ) {s = 90;}

                        else if ( (synpred376_InternalQVTimperative()) ) {s = 19;}


                        input.seek(index214_13);
                        if ( s>=0 ) return s;
                        break;
                    case 3 :
                        int LA214_14 = input.LA(1);


                        int index214_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred374_InternalQVTimperative()) ) {s = 90;}

                        else if ( (synpred376_InternalQVTimperative()) ) {s = 19;}


                        input.seek(index214_14);
                        if ( s>=0 ) return s;
                        break;
                    case 4 :
                        int LA214_15 = input.LA(1);


                        int index214_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred374_InternalQVTimperative()) ) {s = 90;}

                        else if ( (synpred376_InternalQVTimperative()) ) {s = 19;}


                        input.seek(index214_15);
                        if ( s>=0 ) return s;
                        break;
                    case 5 :
                        int LA214_16 = input.LA(1);


                        int index214_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred374_InternalQVTimperative()) ) {s = 90;}

                        else if ( (synpred376_InternalQVTimperative()) ) {s = 19;}


                        input.seek(index214_16);
                        if ( s>=0 ) return s;
                        break;
                    case 6 :
                        int LA214_17 = input.LA(1);


                        int index214_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred374_InternalQVTimperative()) ) {s = 90;}

                        else if ( (synpred376_InternalQVTimperative()) ) {s = 19;}


                        input.seek(index214_17);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 214, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_82s = "\1\2\11\uffff";
    static final String dfa_83s = "\1\22\1\4\1\uffff\6\7\1\uffff";
    static final String dfa_84s = "\1\u009f\1\151\1\uffff\6\151\1\uffff";
    static final String dfa_85s = "\2\uffff\1\2\6\uffff\1\1";
    static final String dfa_86s = "\12\uffff}>";
    static final String[] dfa_87s = {
            "\1\2\2\uffff\1\2\2\uffff\1\2\2\uffff\1\2\7\uffff\1\1\1\2\5\uffff\1\2\6\uffff\1\2\3\uffff\1\2\3\uffff\1\2\3\uffff\1\2\54\uffff\1\2\2\uffff\22\2\21\uffff\2\2\4\uffff\1\2\2\uffff\2\2\1\uffff\4\2",
            "\1\11\2\uffff\2\11\10\uffff\1\3\1\uffff\1\4\2\uffff\2\11\1\uffff\2\11\2\uffff\6\11\1\uffff\1\11\2\uffff\1\11\3\uffff\2\11\1\5\1\6\1\7\1\10\1\uffff\3\11\1\uffff\2\11\2\uffff\3\11\1\uffff\11\11\1\uffff\1\11\1\uffff\1\11\1\uffff\1\11\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\5\11\1\uffff\6\11\1\uffff\1\11\1\uffff\1\11\1\uffff\4\11",
            "",
            "\2\2\10\uffff\1\2\1\uffff\1\2\2\uffff\2\2\1\uffff\2\2\2\uffff\6\2\4\uffff\1\2\3\uffff\6\2\1\uffff\3\2\1\11\2\2\2\uffff\3\2\1\uffff\11\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\4\2",
            "\2\2\10\uffff\1\2\1\uffff\1\2\2\uffff\2\2\1\uffff\2\2\2\uffff\6\2\4\uffff\1\2\3\uffff\6\2\1\uffff\3\2\1\11\2\2\2\uffff\3\2\1\uffff\11\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\4\2",
            "\2\2\10\uffff\1\2\1\uffff\1\2\2\uffff\2\2\1\uffff\2\2\2\uffff\6\2\4\uffff\1\2\3\uffff\6\2\1\uffff\3\2\1\11\2\2\2\uffff\3\2\1\uffff\11\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\4\2",
            "\2\2\10\uffff\1\2\1\uffff\1\2\2\uffff\2\2\1\uffff\2\2\2\uffff\6\2\4\uffff\1\2\3\uffff\6\2\1\uffff\3\2\1\11\2\2\2\uffff\3\2\1\uffff\11\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\4\2",
            "\2\2\10\uffff\1\2\1\uffff\1\2\2\uffff\2\2\1\uffff\2\2\2\uffff\6\2\4\uffff\1\2\3\uffff\6\2\1\uffff\3\2\1\11\2\2\2\uffff\3\2\1\uffff\11\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\4\2",
            "\2\2\10\uffff\1\2\1\uffff\1\2\2\uffff\2\2\1\uffff\2\2\2\uffff\6\2\4\uffff\1\2\3\uffff\6\2\1\uffff\3\2\1\11\2\2\2\uffff\3\2\1\uffff\11\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\4\2",
            ""
    };
    static final short[] dfa_82 = DFA.unpackEncodedString(dfa_82s);
    static final char[] dfa_83 = DFA.unpackEncodedStringToUnsignedChars(dfa_83s);
    static final char[] dfa_84 = DFA.unpackEncodedStringToUnsignedChars(dfa_84s);
    static final short[] dfa_85 = DFA.unpackEncodedString(dfa_85s);
    static final short[] dfa_86 = DFA.unpackEncodedString(dfa_86s);
    static final short[][] dfa_87 = unpackEncodedStringArray(dfa_87s);

    class DFA217 extends DFA {

        public DFA217(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 217;
            this.eot = dfa_17;
            this.eof = dfa_82;
            this.min = dfa_83;
            this.max = dfa_84;
            this.accept = dfa_85;
            this.special = dfa_86;
            this.transition = dfa_87;
        }
        public String getDescription() {
            return "9957:3: ( (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS ) )?";
        }
    }
    static final String dfa_88s = "\14\uffff";
    static final String dfa_89s = "\1\5\13\uffff";
    static final String dfa_90s = "\1\22\3\0\10\uffff";
    static final String dfa_91s = "\1\u009a\3\0\10\uffff";
    static final String dfa_92s = "\4\uffff\1\3\1\4\4\uffff\1\1\1\2";
    static final String dfa_93s = "\1\uffff\1\0\1\1\1\2\10\uffff}>";
    static final String[] dfa_94s = {
            "\1\5\2\uffff\1\5\2\uffff\1\3\30\uffff\1\4\7\uffff\1\5\126\uffff\1\1\1\2\10\uffff\1\5",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_88 = DFA.unpackEncodedString(dfa_88s);
    static final short[] dfa_89 = DFA.unpackEncodedString(dfa_89s);
    static final char[] dfa_90 = DFA.unpackEncodedStringToUnsignedChars(dfa_90s);
    static final char[] dfa_91 = DFA.unpackEncodedStringToUnsignedChars(dfa_91s);
    static final short[] dfa_92 = DFA.unpackEncodedString(dfa_92s);
    static final short[] dfa_93 = DFA.unpackEncodedString(dfa_93s);
    static final short[][] dfa_94 = unpackEncodedStringArray(dfa_94s);

    class DFA233 extends DFA {

        public DFA233(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 233;
            this.eot = dfa_88;
            this.eof = dfa_89;
            this.min = dfa_90;
            this.max = dfa_91;
            this.accept = dfa_92;
            this.special = dfa_93;
            this.transition = dfa_94;
        }
        public String getDescription() {
            return "10300:4: ( ( (otherlv_1= 'with' | otherlv_2= '<-' ) ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) ( (otherlv_8= 'with' | otherlv_9= '<-' ) ( (lv_ownedCoIterator_10_0= ruleCoIteratorVariableCS ) ) )? (otherlv_11= '=' ( (lv_ownedInitExpression_12_0= ruleExpCS ) ) )? ) | ( (otherlv_13= ':' ( (lv_ownedType_14_0= ruleTypeExpCS ) ) )? ( (otherlv_15= 'with' | otherlv_16= '<-' ) ( (lv_ownedCoIterator_17_0= ruleCoIteratorVariableCS ) ) )? otherlv_18= 'in' ( (lv_ownedInitExpression_19_0= ruleExpCS ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA233_1 = input.LA(1);


                        int index233_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred390_InternalQVTimperative()) ) {s = 10;}

                        else if ( (synpred398_InternalQVTimperative()) ) {s = 4;}


                        input.seek(index233_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 :
                        int LA233_2 = input.LA(1);


                        int index233_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred390_InternalQVTimperative()) ) {s = 10;}

                        else if ( (synpred398_InternalQVTimperative()) ) {s = 4;}


                        input.seek(index233_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 :
                        int LA233_3 = input.LA(1);


                        int index233_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred394_InternalQVTimperative()) ) {s = 11;}

                        else if ( (synpred398_InternalQVTimperative()) ) {s = 4;}


                        input.seek(index233_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 233, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA245 extends DFA {

        public DFA245(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 245;
            this.eot = dfa_88;
            this.eof = dfa_89;
            this.min = dfa_90;
            this.max = dfa_91;
            this.accept = dfa_92;
            this.special = dfa_93;
            this.transition = dfa_94;
        }
        public String getDescription() {
            return "10706:3: ( ( (otherlv_2= 'with' | otherlv_3= '<-' ) ( (lv_ownedCoIterator_4_0= ruleCoIteratorVariableCS ) ) (otherlv_5= '=' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) )? ) | (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) ( (otherlv_9= 'with' | otherlv_10= '<-' ) ( (lv_ownedCoIterator_11_0= ruleCoIteratorVariableCS ) ) )? (otherlv_12= '=' ( (lv_ownedInitExpression_13_0= ruleExpCS ) ) )? ) | ( (otherlv_14= ':' ( (lv_ownedType_15_0= ruleTypeExpCS ) ) )? ( (otherlv_16= 'with' | otherlv_17= '<-' ) ( (lv_ownedCoIterator_18_0= ruleCoIteratorVariableCS ) ) )? otherlv_19= 'in' ( (lv_ownedInitExpression_20_0= ruleExpCS ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA245_1 = input.LA(1);


                        int index245_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred404_InternalQVTimperative()) ) {s = 10;}

                        else if ( (synpred412_InternalQVTimperative()) ) {s = 4;}


                        input.seek(index245_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 :
                        int LA245_2 = input.LA(1);


                        int index245_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred404_InternalQVTimperative()) ) {s = 10;}

                        else if ( (synpred412_InternalQVTimperative()) ) {s = 4;}


                        input.seek(index245_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 :
                        int LA245_3 = input.LA(1);


                        int index245_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred408_InternalQVTimperative()) ) {s = 11;}

                        else if ( (synpred412_InternalQVTimperative()) ) {s = 4;}


                        input.seek(index245_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 245, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_95s = "\1\4\1\uffff\75\30\1\uffff";
    static final String dfa_96s = "\1\u00a1\1\uffff\75\u009c\1\uffff";
    static final String[] dfa_97s = {
            "\1\1\1\uffff\1\1\1\2\1\3\10\uffff\1\62\1\uffff\1\40\2\uffff\1\42\1\41\1\77\1\70\1\43\2\uffff\1\45\1\75\1\52\1\47\1\53\1\63\4\uffff\1\71\2\uffff\1\1\1\56\1\57\1\44\1\54\1\55\1\50\1\uffff\1\46\1\60\1\64\1\uffff\1\34\1\65\1\1\1\uffff\1\51\1\61\1\66\1\uffff\1\74\1\67\1\73\1\72\1\76\1\32\1\12\1\5\1\13\1\uffff\1\17\1\uffff\1\24\1\uffff\1\27\2\uffff\1\35\1\uffff\1\36\1\uffff\1\37\1\uffff\1\20\1\14\1\25\1\11\1\31\1\uffff\1\15\1\22\1\23\1\33\1\6\1\26\1\uffff\1\10\1\uffff\1\30\1\uffff\1\4\1\7\1\16\1\21\3\1\22\uffff\17\1\1\uffff\1\1\2\uffff\4\1\5\uffff\1\1\4\uffff\2\1",
            "",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\77\12\uffff\1\1\5\uffff\2\1\12\uffff\1\1\2\uffff\1\1\4\uffff\1\1\54\uffff\1\1\2\uffff\22\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            ""
    };
    static final char[] dfa_95 = DFA.unpackEncodedStringToUnsignedChars(dfa_95s);
    static final char[] dfa_96 = DFA.unpackEncodedStringToUnsignedChars(dfa_96s);
    static final short[][] dfa_97 = unpackEncodedStringArray(dfa_97s);

    class DFA249 extends DFA {

        public DFA249(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 249;
            this.eot = dfa_29;
            this.eof = dfa_29;
            this.min = dfa_95;
            this.max = dfa_96;
            this.accept = dfa_54;
            this.special = dfa_33;
            this.transition = dfa_97;
        }
        public String getDescription() {
            return "11149:5: (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS )";
        }
    }



    private static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0010010000000002L,0x0000000000000001L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0010000000000002L,0x0000000000000001L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0xDCDDF887E6CA0180L,0x000003D5FBEA957FL});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x00000000000C0000L});
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000100000L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0xDDDDFC87E6CA01D0L,0x80001FD5FBEA957FL,0x00000003083CBFFFL});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000200000L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000400000L});
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000001000000L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0xDCDDF887E6CA0180L,0x800003D5FBEA957FL,0x0000000000003FFFL});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000004000000L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0xDCDDF887E7CA0180L,0x000003D5FBEA957FL});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0xDCDDF887EECA0180L,0x000003D5FBEA957FL});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000011200000L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000010200000L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000020040000L});
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000060040000L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000040000000L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000011000000L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000010000000L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000080200000L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000240000L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000100000000L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000E00000000L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000C00040000L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000800040000L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x980FE050668A0000L});
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x980DE010660A0000L});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x180DE010000A0000L});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0001E010000A0000L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000002000000000L});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000008000200000L});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0xDCDDF887E6CA0190L,0x000003D5FBEA957FL});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000020000200000L});
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000040000000000L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000080000000000L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000100000000000L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000800000000L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0xDCDDF897E6CA0180L,0x000003D5FBEA957FL});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0001000000040000L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0002000000000000L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0001E000000A0000L});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000001000002L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x000C000000040000L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0008000000000000L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0020000801200000L});
        public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0020000800200000L});
        public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000800200000L});
        public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0010001000000000L,0x000000C009800001L});
        public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0080000000000000L});
        public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0100000000000000L});
        public static final BitSet FOLLOW_55 = new BitSet(new long[]{0xDEDDF887E6CA0180L,0x000003D5FBEA957FL});
        public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0200000000040000L});
        public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0400000800200000L});
        public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000001000000000L});
        public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_61 = new BitSet(new long[]{0xDCDDF887E6CA0182L,0x800003D5FBEA957FL,0x0000000000003FFFL});
        public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x1800000000040000L});
        public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x2000000000000000L});
        public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000010100000L});
        public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x4000000000000000L});
        public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000801000000L});
        public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x00C0101182200180L,0x0000000100000038L});
        public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x00C0101102000000L,0x0000000100000038L});
        public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000030L});
        public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
        public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000028L});
        public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0040000000000000L,0x00000000001FFFC0L});
        public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0040001000040000L,0x00000000001FFFC0L});
        public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0040001000000000L,0x00000000001FFFC0L});
        public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000001000000000L,0x0000000000600000L});
        public static final BitSet FOLLOW_77 = new BitSet(new long[]{0xDDDDFC87E6EA01F0L,0x80001FD5FBEA957FL,0x00000003083CBFFFL});
        public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000001600000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000200002L});
        public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
        public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0100000801200000L});
        public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000801200000L});
        public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000001000000000L,0x0000000006000000L});
        public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000001000000180L,0x0000000010000000L});
        public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000040L,0x0000040000000000L});
        public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000010L});
        public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
        public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000008L});
        public static final BitSet FOLLOW_89 = new BitSet(new long[]{0xDDDDF887E6CA0180L,0x000003D5FBEA957FL});
        public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000801200000L,0x0000000040000000L});
        public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000800200000L,0x0000000040000000L});
        public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000800240000L});
        public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000000000000L,0x0000000000018CC0L});
        public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000001000040000L,0x0000000000018CC0L});
        public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000001000000000L,0x0000000000018CC0L});
        public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000001000000000L,0x0000000080000000L});
        public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000801000002L});
        public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000800000002L});
        public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000000000000000L,0x0000000000018C00L});
        public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000001000040000L,0x0000000000018C00L});
        public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000001000000000L,0x0000000000018C00L});
        public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000010L});
        public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
        public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000008L});
        public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0020000801200000L,0x0000000200000000L});
        public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0040000000000000L,0x0000003C001FFCC0L});
        public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0040001000040000L,0x0000003C001FFCC0L});
        public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0040001000000000L,0x0000003C001FFCC0L});
        public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000080000200000L});
        public static final BitSet FOLLOW_110 = new BitSet(new long[]{0xDCDDF88FE6CA0180L,0x000003D5FBEA957FL});
        public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000001000040000L});
        public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L});
        public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0100000801200000L,0x0000010000000000L});
        public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000801200000L,0x0000010000000000L});
        public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000000801240000L});
        public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000001000000000L,0x0000020000000000L});
        public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x00C0101102000000L,0x0000000120000038L});
        public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000001000000L});
        public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000020000000002L});
        public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0100000000000002L});
        public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0200000000000000L,0x0000000000000000L,0x0000000001000000L});
        public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0200000000000000L});
        public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0000000000040000L});
        public static final BitSet FOLLOW_124 = new BitSet(new long[]{0xDDDDFC97E7CA01D0L,0x80001FD5FBEA957FL,0x00000003083CBFFFL});
        public static final BitSet FOLLOW_125 = new BitSet(new long[]{0xDDDDFC87E7CA01D0L,0x80001FD5FBEA957FL,0x00000003083CBFFFL});
        public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0000000008000002L});
        public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000000000040000L,0x0000000000000000L,0x0000000000004000L});
        public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000000000000180L});
        public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0020000000000000L});
        public static final BitSet FOLLOW_130 = new BitSet(new long[]{0xDDDDFC97E6CA01D0L,0x80001FD5FBEA957FL,0x00000003083CBFFFL});
        public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000030000L});
        public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0020000001000000L});
        public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x2020040000000002L,0x7FFFE40000000000L});
        public static final BitSet FOLLOW_135 = new BitSet(new long[]{0xDDDDFC87E6CA01D0L,0x80001FD5FBEA957FL,0x00000002083CBFFFL});
        public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x0100000800000002L,0x0000000000000000L,0x0000000001400000L});
        public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x0000000800000002L,0x0000000000000000L,0x0000000000400000L});
        public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000400000L});
        public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000800000L});
        public static final BitSet FOLLOW_140 = new BitSet(new long[]{0xDCDDF897E6CA0190L,0x000003D5FBEA957FL});
        public static final BitSet FOLLOW_141 = new BitSet(new long[]{0xDFDDFC87E7CA01D0L,0x80001FD5FBEA957FL,0x00000003083CBFFFL});
        public static final BitSet FOLLOW_142 = new BitSet(new long[]{0x0200000000240000L,0x0000000000000000L,0x0000000004000000L});
        public static final BitSet FOLLOW_143 = new BitSet(new long[]{0x0000000000040000L,0x0000000000000000L,0x0000000002000000L});
        public static final BitSet FOLLOW_144 = new BitSet(new long[]{0x0002000001000002L,0x0000000000000000L,0x0000000000030000L});
        public static final BitSet FOLLOW_145 = new BitSet(new long[]{0x0020000000000002L});
        public static final BitSet FOLLOW_146 = new BitSet(new long[]{0x0020000000000002L,0x0000000000000000L,0x0000000000030000L});
        public static final BitSet FOLLOW_147 = new BitSet(new long[]{0x0002000000000000L,0x0000000000000000L,0x0000000000030000L});
        public static final BitSet FOLLOW_148 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000010000000L});
        public static final BitSet FOLLOW_149 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x00000000A0000000L});
        public static final BitSet FOLLOW_150 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
        public static final BitSet FOLLOW_151 = new BitSet(new long[]{0x0002000000040000L});
        public static final BitSet FOLLOW_152 = new BitSet(new long[]{0x0120000001000000L});
        public static final BitSet FOLLOW_153 = new BitSet(new long[]{0x0000040000000040L});
        public static final BitSet FOLLOW_154 = new BitSet(new long[]{0x0000040000000040L,0x0000400000000000L,0x0000001000000000L});
        public static final BitSet FOLLOW_155 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000C02000000L});
        public static final BitSet FOLLOW_156 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
        public static final BitSet FOLLOW_157 = new BitSet(new long[]{0x0000000000040002L,0x0000000000000000L,0x0000000001000000L});
        public static final BitSet FOLLOW_158 = new BitSet(new long[]{0xDCDDF887E6CA0180L,0x800003D5FBEA957FL,0x0000001000003FFFL});
        public static final BitSet FOLLOW_159 = new BitSet(new long[]{0x0000000000000002L,0x0000010000000000L});
        public static final BitSet FOLLOW_160 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L});
    }


}
