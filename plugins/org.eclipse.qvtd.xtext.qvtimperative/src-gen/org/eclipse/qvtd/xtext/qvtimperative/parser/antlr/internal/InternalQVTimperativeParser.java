package org.eclipse.qvtd.xtext.qvtimperative.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.qvtd.xtext.qvtimperative.services.QVTimperativeGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
/*******************************************************************************
 * Copyright (c) 2011, 2019 Willink Transformations and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v2.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v20.html
 *
 * Contributors:
 *     E.D.Willink - initial API and implementation
 *******************************************************************************/
@SuppressWarnings("all")
public class InternalQVTimperativeParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_SINGLE_QUOTED_STRING", "RULE_UNQUOTED_STRING", "RULE_INT", "RULE_SIMPLE_ID", "RULE_ESCAPED_ID", "RULE_ESCAPED_CHARACTER", "RULE_LETTER_CHARACTER", "RULE_DOUBLE_QUOTED_STRING", "RULE_ML_SINGLE_QUOTED_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'observe'", "','", "'add'", "'+='", "';'", "'appendsTo'", "'append'", "':'", "'strict'", "'buffer'", "'..'", "':='", "'check'", "'var'", "'enforce'", "'imports'", "'entry'", "'in'", "'{'", "'}'", "'consumes'", "'guard'", "'success'", "'import'", "'::'", "'*'", "'iterates'", "'map'", "'call'", "'install'", "'invoke'", "'for'", "'contained'", "'new'", "'package'", "'='", "'transient'", "'query'", "'('", "')'", "'implementedby'", "'notify'", "'set'", "'.'", "'uses'", "'transformation'", "'static'", "'definition'", "'attribute'", "'derived'", "'!derived'", "'id'", "'!id'", "'ordered'", "'!ordered'", "'readonly'", "'!readonly'", "'!transient'", "'unique'", "'!unique'", "'unsettable'", "'!unsettable'", "'volatile'", "'!volatile'", "'initial'", "'derivation'", "'primitive'", "'datatype'", "'serializable'", "'!serializable'", "'enum'", "'literal'", "'operation'", "'throws'", "'body'", "'property'", "'#'", "'composes'", "'!composes'", "'resolve'", "'!resolve'", "'abstract'", "'class'", "'extends'", "'interface'", "'-'", "'not'", "'/'", "'+'", "'>'", "'<'", "'>='", "'<='", "'<>'", "'and'", "'or'", "'xor'", "'implies'", "'->'", "'?.'", "'?->'", "'Map'", "'Tuple'", "'Boolean'", "'Integer'", "'Real'", "'String'", "'UnlimitedNatural'", "'OclAny'", "'OclInvalid'", "'OclVoid'", "'Set'", "'Bag'", "'Sequence'", "'Collection'", "'OrderedSet'", "'++'", "'Lambda'", "'<-'", "'true'", "'false'", "'invalid'", "'null'", "'@'", "'pre'", "'['", "']'", "'|'", "'if'", "'then'", "'else'", "'endif'", "'elseif'", "'let'", "'self'", "'|?'", "'|1'", "'?'", "'&&'"
    };
    public static final int T__144=144;
    public static final int T__143=143;
    public static final int T__146=146;
    public static final int T__50=50;
    public static final int T__145=145;
    public static final int T__140=140;
    public static final int T__142=142;
    public static final int T__141=141;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__53=53;
    public static final int T__139=139;
    public static final int T__54=54;
    public static final int T__138=138;
    public static final int T__133=133;
    public static final int T__132=132;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int T__131=131;
    public static final int T__130=130;
    public static final int RULE_INT=6;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=13;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__155=155;
    public static final int T__154=154;
    public static final int T__151=151;
    public static final int T__150=150;
    public static final int T__153=153;
    public static final int T__152=152;
    public static final int RULE_SINGLE_QUOTED_STRING=4;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int RULE_DOUBLE_QUOTED_STRING=11;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int RULE_ESCAPED_ID=8;
    public static final int T__40=40;
    public static final int T__148=148;
    public static final int T__41=41;
    public static final int T__147=147;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__149=149;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int RULE_LETTER_CHARACTER=10;
    public static final int T__19=19;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__99=99;
    public static final int RULE_ESCAPED_CHARACTER=9;
    public static final int T__95=95;
    public static final int RULE_ML_SINGLE_QUOTED_STRING=12;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__122=122;
    public static final int T__70=70;
    public static final int T__121=121;
    public static final int T__71=71;
    public static final int T__124=124;
    public static final int T__72=72;
    public static final int T__123=123;
    public static final int T__120=120;
    public static final int RULE_UNQUOTED_STRING=5;
    public static final int RULE_SL_COMMENT=14;
    public static final int T__77=77;
    public static final int T__119=119;
    public static final int T__78=78;
    public static final int T__118=118;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__114=114;
    public static final int T__75=75;
    public static final int T__117=117;
    public static final int T__76=76;
    public static final int T__116=116;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__113=113;
    public static final int RULE_SIMPLE_ID=7;
    public static final int T__83=83;
    public static final int T__112=112;
    public static final int RULE_WS=15;
    public static final int RULE_ANY_OTHER=16;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalQVTimperativeParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalQVTimperativeParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);

        }


    public String[] getTokenNames() { return InternalQVTimperativeParser.tokenNames; }
    public String getGrammarFileName() { return "InternalQVTimperative.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private QVTimperativeGrammarAccess grammarAccess;

        public InternalQVTimperativeParser(TokenStream input, QVTimperativeGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "TopLevelCS";
       	}

       	@Override
       	protected QVTimperativeGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}



    // $ANTLR start "entryRuleTopLevelCS"
    // InternalQVTimperative.g:80:1: entryRuleTopLevelCS returns [EObject current=null] : iv_ruleTopLevelCS= ruleTopLevelCS EOF ;
    public final EObject entryRuleTopLevelCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTopLevelCS = null;


        try {
            // InternalQVTimperative.g:81:2: (iv_ruleTopLevelCS= ruleTopLevelCS EOF )
            // InternalQVTimperative.g:82:2: iv_ruleTopLevelCS= ruleTopLevelCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTopLevelCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTopLevelCS=ruleTopLevelCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTopLevelCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTopLevelCS"


    // $ANTLR start "ruleTopLevelCS"
    // InternalQVTimperative.g:89:1: ruleTopLevelCS returns [EObject current=null] : ( ( (lv_ownedImports_0_0= ruleImportCS ) )* ( ( (lv_ownedPackages_1_0= ruleQualifiedPackageCS ) ) | ( (lv_ownedTransformations_2_0= ruleTransformationCS ) ) | ( ( (lv_ownedMappings_3_1= ruleEntryPointCS | lv_ownedMappings_3_2= ruleMappingCS ) ) ) | ( (lv_ownedQueries_4_0= ruleQueryCS ) ) )* ) ;
    public final EObject ruleTopLevelCS() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedImports_0_0 = null;

        EObject lv_ownedPackages_1_0 = null;

        EObject lv_ownedTransformations_2_0 = null;

        EObject lv_ownedMappings_3_1 = null;

        EObject lv_ownedMappings_3_2 = null;

        EObject lv_ownedQueries_4_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:92:28: ( ( ( (lv_ownedImports_0_0= ruleImportCS ) )* ( ( (lv_ownedPackages_1_0= ruleQualifiedPackageCS ) ) | ( (lv_ownedTransformations_2_0= ruleTransformationCS ) ) | ( ( (lv_ownedMappings_3_1= ruleEntryPointCS | lv_ownedMappings_3_2= ruleMappingCS ) ) ) | ( (lv_ownedQueries_4_0= ruleQueryCS ) ) )* ) )
            // InternalQVTimperative.g:93:1: ( ( (lv_ownedImports_0_0= ruleImportCS ) )* ( ( (lv_ownedPackages_1_0= ruleQualifiedPackageCS ) ) | ( (lv_ownedTransformations_2_0= ruleTransformationCS ) ) | ( ( (lv_ownedMappings_3_1= ruleEntryPointCS | lv_ownedMappings_3_2= ruleMappingCS ) ) ) | ( (lv_ownedQueries_4_0= ruleQueryCS ) ) )* )
            {
            // InternalQVTimperative.g:93:1: ( ( (lv_ownedImports_0_0= ruleImportCS ) )* ( ( (lv_ownedPackages_1_0= ruleQualifiedPackageCS ) ) | ( (lv_ownedTransformations_2_0= ruleTransformationCS ) ) | ( ( (lv_ownedMappings_3_1= ruleEntryPointCS | lv_ownedMappings_3_2= ruleMappingCS ) ) ) | ( (lv_ownedQueries_4_0= ruleQueryCS ) ) )* )
            // InternalQVTimperative.g:93:2: ( (lv_ownedImports_0_0= ruleImportCS ) )* ( ( (lv_ownedPackages_1_0= ruleQualifiedPackageCS ) ) | ( (lv_ownedTransformations_2_0= ruleTransformationCS ) ) | ( ( (lv_ownedMappings_3_1= ruleEntryPointCS | lv_ownedMappings_3_2= ruleMappingCS ) ) ) | ( (lv_ownedQueries_4_0= ruleQueryCS ) ) )*
            {
            // InternalQVTimperative.g:93:2: ( (lv_ownedImports_0_0= ruleImportCS ) )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==40) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalQVTimperative.g:94:1: (lv_ownedImports_0_0= ruleImportCS )
            	    {
            	    // InternalQVTimperative.g:94:1: (lv_ownedImports_0_0= ruleImportCS )
            	    // InternalQVTimperative.g:95:3: lv_ownedImports_0_0= ruleImportCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getTopLevelCSAccess().getOwnedImportsImportCSParserRuleCall_0_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    lv_ownedImports_0_0=ruleImportCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTopLevelCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedImports",
            	              		lv_ownedImports_0_0,
            	              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.ImportCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            // InternalQVTimperative.g:111:3: ( ( (lv_ownedPackages_1_0= ruleQualifiedPackageCS ) ) | ( (lv_ownedTransformations_2_0= ruleTransformationCS ) ) | ( ( (lv_ownedMappings_3_1= ruleEntryPointCS | lv_ownedMappings_3_2= ruleMappingCS ) ) ) | ( (lv_ownedQueries_4_0= ruleQueryCS ) ) )*
            loop3:
            do {
                int alt3=5;
                switch ( input.LA(1) ) {
                case 51:
                    {
                    alt3=1;
                    }
                    break;
                case 62:
                    {
                    alt3=2;
                    }
                    break;
                case 25:
                case 33:
                case 44:
                    {
                    alt3=3;
                    }
                    break;
                case 53:
                case 54:
                    {
                    alt3=4;
                    }
                    break;

                }

                switch (alt3) {
            	case 1 :
            	    // InternalQVTimperative.g:111:4: ( (lv_ownedPackages_1_0= ruleQualifiedPackageCS ) )
            	    {
            	    // InternalQVTimperative.g:111:4: ( (lv_ownedPackages_1_0= ruleQualifiedPackageCS ) )
            	    // InternalQVTimperative.g:112:1: (lv_ownedPackages_1_0= ruleQualifiedPackageCS )
            	    {
            	    // InternalQVTimperative.g:112:1: (lv_ownedPackages_1_0= ruleQualifiedPackageCS )
            	    // InternalQVTimperative.g:113:3: lv_ownedPackages_1_0= ruleQualifiedPackageCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getTopLevelCSAccess().getOwnedPackagesQualifiedPackageCSParserRuleCall_1_0_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_4);
            	    lv_ownedPackages_1_0=ruleQualifiedPackageCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTopLevelCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedPackages",
            	              		lv_ownedPackages_1_0,
            	              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.QualifiedPackageCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalQVTimperative.g:130:6: ( (lv_ownedTransformations_2_0= ruleTransformationCS ) )
            	    {
            	    // InternalQVTimperative.g:130:6: ( (lv_ownedTransformations_2_0= ruleTransformationCS ) )
            	    // InternalQVTimperative.g:131:1: (lv_ownedTransformations_2_0= ruleTransformationCS )
            	    {
            	    // InternalQVTimperative.g:131:1: (lv_ownedTransformations_2_0= ruleTransformationCS )
            	    // InternalQVTimperative.g:132:3: lv_ownedTransformations_2_0= ruleTransformationCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getTopLevelCSAccess().getOwnedTransformationsTransformationCSParserRuleCall_1_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_4);
            	    lv_ownedTransformations_2_0=ruleTransformationCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTopLevelCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedTransformations",
            	              		lv_ownedTransformations_2_0,
            	              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.TransformationCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalQVTimperative.g:149:6: ( ( (lv_ownedMappings_3_1= ruleEntryPointCS | lv_ownedMappings_3_2= ruleMappingCS ) ) )
            	    {
            	    // InternalQVTimperative.g:149:6: ( ( (lv_ownedMappings_3_1= ruleEntryPointCS | lv_ownedMappings_3_2= ruleMappingCS ) ) )
            	    // InternalQVTimperative.g:150:1: ( (lv_ownedMappings_3_1= ruleEntryPointCS | lv_ownedMappings_3_2= ruleMappingCS ) )
            	    {
            	    // InternalQVTimperative.g:150:1: ( (lv_ownedMappings_3_1= ruleEntryPointCS | lv_ownedMappings_3_2= ruleMappingCS ) )
            	    // InternalQVTimperative.g:151:1: (lv_ownedMappings_3_1= ruleEntryPointCS | lv_ownedMappings_3_2= ruleMappingCS )
            	    {
            	    // InternalQVTimperative.g:151:1: (lv_ownedMappings_3_1= ruleEntryPointCS | lv_ownedMappings_3_2= ruleMappingCS )
            	    int alt2=2;
            	    switch ( input.LA(1) ) {
            	    case 25:
            	        {
            	        int LA2_1 = input.LA(2);

            	        if ( (LA2_1==33) ) {
            	            alt2=1;
            	        }
            	        else if ( (LA2_1==44) ) {
            	            alt2=2;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return current;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 2, 1, input);

            	            throw nvae;
            	        }
            	        }
            	        break;
            	    case 33:
            	        {
            	        alt2=1;
            	        }
            	        break;
            	    case 44:
            	        {
            	        alt2=2;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 2, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt2) {
            	        case 1 :
            	            // InternalQVTimperative.g:152:3: lv_ownedMappings_3_1= ruleEntryPointCS
            	            {
            	            if ( state.backtracking==0 ) {

            	              	        newCompositeNode(grammarAccess.getTopLevelCSAccess().getOwnedMappingsEntryPointCSParserRuleCall_1_2_0_0());

            	            }
            	            pushFollow(FollowSets000.FOLLOW_4);
            	            lv_ownedMappings_3_1=ruleEntryPointCS();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElementForParent(grammarAccess.getTopLevelCSRule());
            	              	        }
            	                     		add(
            	                     			current,
            	                     			"ownedMappings",
            	                      		lv_ownedMappings_3_1,
            	                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.EntryPointCS");
            	              	        afterParserOrEnumRuleCall();

            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalQVTimperative.g:167:8: lv_ownedMappings_3_2= ruleMappingCS
            	            {
            	            if ( state.backtracking==0 ) {

            	              	        newCompositeNode(grammarAccess.getTopLevelCSAccess().getOwnedMappingsMappingCSParserRuleCall_1_2_0_1());

            	            }
            	            pushFollow(FollowSets000.FOLLOW_4);
            	            lv_ownedMappings_3_2=ruleMappingCS();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElementForParent(grammarAccess.getTopLevelCSRule());
            	              	        }
            	                     		add(
            	                     			current,
            	                     			"ownedMappings",
            	                      		lv_ownedMappings_3_2,
            	                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.MappingCS");
            	              	        afterParserOrEnumRuleCall();

            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalQVTimperative.g:186:6: ( (lv_ownedQueries_4_0= ruleQueryCS ) )
            	    {
            	    // InternalQVTimperative.g:186:6: ( (lv_ownedQueries_4_0= ruleQueryCS ) )
            	    // InternalQVTimperative.g:187:1: (lv_ownedQueries_4_0= ruleQueryCS )
            	    {
            	    // InternalQVTimperative.g:187:1: (lv_ownedQueries_4_0= ruleQueryCS )
            	    // InternalQVTimperative.g:188:3: lv_ownedQueries_4_0= ruleQueryCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getTopLevelCSAccess().getOwnedQueriesQueryCSParserRuleCall_1_3_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_4);
            	    lv_ownedQueries_4_0=ruleQueryCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTopLevelCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedQueries",
            	              		lv_ownedQueries_4_0,
            	              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.QueryCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTopLevelCS"


    // $ANTLR start "entryRuleAddStatementCS"
    // InternalQVTimperative.g:212:1: entryRuleAddStatementCS returns [EObject current=null] : iv_ruleAddStatementCS= ruleAddStatementCS EOF ;
    public final EObject entryRuleAddStatementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAddStatementCS = null;


        try {
            // InternalQVTimperative.g:213:2: (iv_ruleAddStatementCS= ruleAddStatementCS EOF )
            // InternalQVTimperative.g:214:2: iv_ruleAddStatementCS= ruleAddStatementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAddStatementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAddStatementCS=ruleAddStatementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAddStatementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAddStatementCS"


    // $ANTLR start "ruleAddStatementCS"
    // InternalQVTimperative.g:221:1: ruleAddStatementCS returns [EObject current=null] : ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'add' ( ( ruleUnrestrictedName ) ) otherlv_6= '+=' ( (lv_ownedExpression_7_0= ruleExpCS ) ) otherlv_8= ';' ) ;
    public final EObject ruleAddStatementCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        EObject lv_observedProperties_1_0 = null;

        EObject lv_observedProperties_3_0 = null;

        EObject lv_ownedExpression_7_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:224:28: ( ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'add' ( ( ruleUnrestrictedName ) ) otherlv_6= '+=' ( (lv_ownedExpression_7_0= ruleExpCS ) ) otherlv_8= ';' ) )
            // InternalQVTimperative.g:225:1: ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'add' ( ( ruleUnrestrictedName ) ) otherlv_6= '+=' ( (lv_ownedExpression_7_0= ruleExpCS ) ) otherlv_8= ';' )
            {
            // InternalQVTimperative.g:225:1: ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'add' ( ( ruleUnrestrictedName ) ) otherlv_6= '+=' ( (lv_ownedExpression_7_0= ruleExpCS ) ) otherlv_8= ';' )
            // InternalQVTimperative.g:225:2: (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'add' ( ( ruleUnrestrictedName ) ) otherlv_6= '+=' ( (lv_ownedExpression_7_0= ruleExpCS ) ) otherlv_8= ';'
            {
            // InternalQVTimperative.g:225:2: (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==17) ) {
                alt5=1;
            }
            switch (alt5) {
                case 1 :
                    // InternalQVTimperative.g:225:4: otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )*
                    {
                    otherlv_0=(Token)match(input,17,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getAddStatementCSAccess().getObserveKeyword_0_0());

                    }
                    // InternalQVTimperative.g:229:1: ( (lv_observedProperties_1_0= rulePathNameCS ) )
                    // InternalQVTimperative.g:230:1: (lv_observedProperties_1_0= rulePathNameCS )
                    {
                    // InternalQVTimperative.g:230:1: (lv_observedProperties_1_0= rulePathNameCS )
                    // InternalQVTimperative.g:231:3: lv_observedProperties_1_0= rulePathNameCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getAddStatementCSAccess().getObservedPropertiesPathNameCSParserRuleCall_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_6);
                    lv_observedProperties_1_0=rulePathNameCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAddStatementCSRule());
                      	        }
                             		add(
                             			current,
                             			"observedProperties",
                              		lv_observedProperties_1_0,
                              		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:247:2: (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )*
                    loop4:
                    do {
                        int alt4=2;
                        int LA4_0 = input.LA(1);

                        if ( (LA4_0==18) ) {
                            alt4=1;
                        }


                        switch (alt4) {
                    	case 1 :
                    	    // InternalQVTimperative.g:247:4: otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) )
                    	    {
                    	    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getAddStatementCSAccess().getCommaKeyword_0_2_0());

                    	    }
                    	    // InternalQVTimperative.g:251:1: ( (lv_observedProperties_3_0= rulePathNameCS ) )
                    	    // InternalQVTimperative.g:252:1: (lv_observedProperties_3_0= rulePathNameCS )
                    	    {
                    	    // InternalQVTimperative.g:252:1: (lv_observedProperties_3_0= rulePathNameCS )
                    	    // InternalQVTimperative.g:253:3: lv_observedProperties_3_0= rulePathNameCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getAddStatementCSAccess().getObservedPropertiesPathNameCSParserRuleCall_0_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_6);
                    	    lv_observedProperties_3_0=rulePathNameCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAddStatementCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"observedProperties",
                    	              		lv_observedProperties_3_0,
                    	              		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop4;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_4=(Token)match(input,19,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getAddStatementCSAccess().getAddKeyword_1());

            }
            // InternalQVTimperative.g:273:1: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:274:1: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:274:1: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:275:3: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              		  /* */

            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getAddStatementCSRule());
              	        }

            }
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getAddStatementCSAccess().getTargetVariableConnectionVariableCrossReference_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_7);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_6=(Token)match(input,20,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getAddStatementCSAccess().getPlusSignEqualsSignKeyword_3());

            }
            // InternalQVTimperative.g:295:1: ( (lv_ownedExpression_7_0= ruleExpCS ) )
            // InternalQVTimperative.g:296:1: (lv_ownedExpression_7_0= ruleExpCS )
            {
            // InternalQVTimperative.g:296:1: (lv_ownedExpression_7_0= ruleExpCS )
            // InternalQVTimperative.g:297:3: lv_ownedExpression_7_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getAddStatementCSAccess().getOwnedExpressionExpCSParserRuleCall_4_0());

            }
            pushFollow(FollowSets000.FOLLOW_9);
            lv_ownedExpression_7_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAddStatementCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedExpression",
                      		lv_ownedExpression_7_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_8=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getAddStatementCSAccess().getSemicolonKeyword_5());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAddStatementCS"


    // $ANTLR start "entryRuleAppendParameterBindingCS"
    // InternalQVTimperative.g:325:1: entryRuleAppendParameterBindingCS returns [EObject current=null] : iv_ruleAppendParameterBindingCS= ruleAppendParameterBindingCS EOF ;
    public final EObject entryRuleAppendParameterBindingCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAppendParameterBindingCS = null;


        try {
            // InternalQVTimperative.g:326:2: (iv_ruleAppendParameterBindingCS= ruleAppendParameterBindingCS EOF )
            // InternalQVTimperative.g:327:2: iv_ruleAppendParameterBindingCS= ruleAppendParameterBindingCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAppendParameterBindingCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAppendParameterBindingCS=ruleAppendParameterBindingCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAppendParameterBindingCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAppendParameterBindingCS"


    // $ANTLR start "ruleAppendParameterBindingCS"
    // InternalQVTimperative.g:334:1: ruleAppendParameterBindingCS returns [EObject current=null] : ( ( ( ruleUnrestrictedName ) ) otherlv_1= 'appendsTo' ( ( ruleUnrestrictedName ) ) otherlv_3= ';' ) ;
    public final EObject ruleAppendParameterBindingCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;

         enterRule();

        try {
            // InternalQVTimperative.g:337:28: ( ( ( ( ruleUnrestrictedName ) ) otherlv_1= 'appendsTo' ( ( ruleUnrestrictedName ) ) otherlv_3= ';' ) )
            // InternalQVTimperative.g:338:1: ( ( ( ruleUnrestrictedName ) ) otherlv_1= 'appendsTo' ( ( ruleUnrestrictedName ) ) otherlv_3= ';' )
            {
            // InternalQVTimperative.g:338:1: ( ( ( ruleUnrestrictedName ) ) otherlv_1= 'appendsTo' ( ( ruleUnrestrictedName ) ) otherlv_3= ';' )
            // InternalQVTimperative.g:338:2: ( ( ruleUnrestrictedName ) ) otherlv_1= 'appendsTo' ( ( ruleUnrestrictedName ) ) otherlv_3= ';'
            {
            // InternalQVTimperative.g:338:2: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:339:1: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:339:1: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:340:3: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              		  /* */

            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getAppendParameterBindingCSRule());
              	        }

            }
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getAppendParameterBindingCSAccess().getReferredVariableAppendParameterCrossReference_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_10);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_1=(Token)match(input,22,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAppendParameterBindingCSAccess().getAppendsToKeyword_1());

            }
            // InternalQVTimperative.g:360:1: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:361:1: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:361:1: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:362:3: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              		  /* */

            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getAppendParameterBindingCSRule());
              	        }

            }
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getAppendParameterBindingCSAccess().getValueConnectionVariableCrossReference_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_9);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_3=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getAppendParameterBindingCSAccess().getSemicolonKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAppendParameterBindingCS"


    // $ANTLR start "entryRuleAppendParameterCS"
    // InternalQVTimperative.g:390:1: entryRuleAppendParameterCS returns [EObject current=null] : iv_ruleAppendParameterCS= ruleAppendParameterCS EOF ;
    public final EObject entryRuleAppendParameterCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAppendParameterCS = null;


        try {
            // InternalQVTimperative.g:391:2: (iv_ruleAppendParameterCS= ruleAppendParameterCS EOF )
            // InternalQVTimperative.g:392:2: iv_ruleAppendParameterCS= ruleAppendParameterCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAppendParameterCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAppendParameterCS=ruleAppendParameterCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAppendParameterCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAppendParameterCS"


    // $ANTLR start "ruleAppendParameterCS"
    // InternalQVTimperative.g:399:1: ruleAppendParameterCS returns [EObject current=null] : (otherlv_0= 'append' ( (lv_name_1_0= ruleUnrestrictedName ) ) otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) otherlv_4= ';' ) ;
    public final EObject ruleAppendParameterCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_ownedType_3_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:402:28: ( (otherlv_0= 'append' ( (lv_name_1_0= ruleUnrestrictedName ) ) otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) otherlv_4= ';' ) )
            // InternalQVTimperative.g:403:1: (otherlv_0= 'append' ( (lv_name_1_0= ruleUnrestrictedName ) ) otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) otherlv_4= ';' )
            {
            // InternalQVTimperative.g:403:1: (otherlv_0= 'append' ( (lv_name_1_0= ruleUnrestrictedName ) ) otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) otherlv_4= ';' )
            // InternalQVTimperative.g:403:3: otherlv_0= 'append' ( (lv_name_1_0= ruleUnrestrictedName ) ) otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) otherlv_4= ';'
            {
            otherlv_0=(Token)match(input,23,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getAppendParameterCSAccess().getAppendKeyword_0());

            }
            // InternalQVTimperative.g:407:1: ( (lv_name_1_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:408:1: (lv_name_1_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:408:1: (lv_name_1_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:409:3: lv_name_1_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getAppendParameterCSAccess().getNameUnrestrictedNameParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_11);
            lv_name_1_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAppendParameterCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_1_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_2=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getAppendParameterCSAccess().getColonKeyword_2());

            }
            // InternalQVTimperative.g:429:1: ( (lv_ownedType_3_0= ruleTypeExpCS ) )
            // InternalQVTimperative.g:430:1: (lv_ownedType_3_0= ruleTypeExpCS )
            {
            // InternalQVTimperative.g:430:1: (lv_ownedType_3_0= ruleTypeExpCS )
            // InternalQVTimperative.g:431:3: lv_ownedType_3_0= ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getAppendParameterCSAccess().getOwnedTypeTypeExpCSParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_9);
            lv_ownedType_3_0=ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAppendParameterCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedType",
                      		lv_ownedType_3_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_4=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getAppendParameterCSAccess().getSemicolonKeyword_4());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAppendParameterCS"


    // $ANTLR start "entryRuleBufferStatementCS"
    // InternalQVTimperative.g:459:1: entryRuleBufferStatementCS returns [EObject current=null] : iv_ruleBufferStatementCS= ruleBufferStatementCS EOF ;
    public final EObject entryRuleBufferStatementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBufferStatementCS = null;


        try {
            // InternalQVTimperative.g:460:2: (iv_ruleBufferStatementCS= ruleBufferStatementCS EOF )
            // InternalQVTimperative.g:461:2: iv_ruleBufferStatementCS= ruleBufferStatementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBufferStatementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBufferStatementCS=ruleBufferStatementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBufferStatementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBufferStatementCS"


    // $ANTLR start "ruleBufferStatementCS"
    // InternalQVTimperative.g:468:1: ruleBufferStatementCS returns [EObject current=null] : ( ( (lv_isStrict_0_0= 'strict' ) )? otherlv_1= 'buffer' (otherlv_2= ':' ( (lv_firstPass_3_0= ruleLOWER ) ) (otherlv_4= '..' ( (lv_lastPass_5_0= ruleLOWER ) ) )? )? ( (lv_name_6_0= ruleUnrestrictedName ) ) (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) )? (otherlv_9= ':=' ( (lv_ownedExpression_10_0= ruleExpCS ) ) )? otherlv_11= ';' ) ;
    public final EObject ruleBufferStatementCS() throws RecognitionException {
        EObject current = null;

        Token lv_isStrict_0_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        AntlrDatatypeRuleToken lv_firstPass_3_0 = null;

        AntlrDatatypeRuleToken lv_lastPass_5_0 = null;

        AntlrDatatypeRuleToken lv_name_6_0 = null;

        EObject lv_ownedType_8_0 = null;

        EObject lv_ownedExpression_10_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:471:28: ( ( ( (lv_isStrict_0_0= 'strict' ) )? otherlv_1= 'buffer' (otherlv_2= ':' ( (lv_firstPass_3_0= ruleLOWER ) ) (otherlv_4= '..' ( (lv_lastPass_5_0= ruleLOWER ) ) )? )? ( (lv_name_6_0= ruleUnrestrictedName ) ) (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) )? (otherlv_9= ':=' ( (lv_ownedExpression_10_0= ruleExpCS ) ) )? otherlv_11= ';' ) )
            // InternalQVTimperative.g:472:1: ( ( (lv_isStrict_0_0= 'strict' ) )? otherlv_1= 'buffer' (otherlv_2= ':' ( (lv_firstPass_3_0= ruleLOWER ) ) (otherlv_4= '..' ( (lv_lastPass_5_0= ruleLOWER ) ) )? )? ( (lv_name_6_0= ruleUnrestrictedName ) ) (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) )? (otherlv_9= ':=' ( (lv_ownedExpression_10_0= ruleExpCS ) ) )? otherlv_11= ';' )
            {
            // InternalQVTimperative.g:472:1: ( ( (lv_isStrict_0_0= 'strict' ) )? otherlv_1= 'buffer' (otherlv_2= ':' ( (lv_firstPass_3_0= ruleLOWER ) ) (otherlv_4= '..' ( (lv_lastPass_5_0= ruleLOWER ) ) )? )? ( (lv_name_6_0= ruleUnrestrictedName ) ) (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) )? (otherlv_9= ':=' ( (lv_ownedExpression_10_0= ruleExpCS ) ) )? otherlv_11= ';' )
            // InternalQVTimperative.g:472:2: ( (lv_isStrict_0_0= 'strict' ) )? otherlv_1= 'buffer' (otherlv_2= ':' ( (lv_firstPass_3_0= ruleLOWER ) ) (otherlv_4= '..' ( (lv_lastPass_5_0= ruleLOWER ) ) )? )? ( (lv_name_6_0= ruleUnrestrictedName ) ) (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) )? (otherlv_9= ':=' ( (lv_ownedExpression_10_0= ruleExpCS ) ) )? otherlv_11= ';'
            {
            // InternalQVTimperative.g:472:2: ( (lv_isStrict_0_0= 'strict' ) )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==25) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // InternalQVTimperative.g:473:1: (lv_isStrict_0_0= 'strict' )
                    {
                    // InternalQVTimperative.g:473:1: (lv_isStrict_0_0= 'strict' )
                    // InternalQVTimperative.g:474:3: lv_isStrict_0_0= 'strict'
                    {
                    lv_isStrict_0_0=(Token)match(input,25,FollowSets000.FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isStrict_0_0, grammarAccess.getBufferStatementCSAccess().getIsStrictStrictKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getBufferStatementCSRule());
                      	        }
                             		setWithLastConsumed(current, "isStrict", true, "strict");

                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,26,FollowSets000.FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getBufferStatementCSAccess().getBufferKeyword_1());

            }
            // InternalQVTimperative.g:491:1: (otherlv_2= ':' ( (lv_firstPass_3_0= ruleLOWER ) ) (otherlv_4= '..' ( (lv_lastPass_5_0= ruleLOWER ) ) )? )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==24) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // InternalQVTimperative.g:491:3: otherlv_2= ':' ( (lv_firstPass_3_0= ruleLOWER ) ) (otherlv_4= '..' ( (lv_lastPass_5_0= ruleLOWER ) ) )?
                    {
                    otherlv_2=(Token)match(input,24,FollowSets000.FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getBufferStatementCSAccess().getColonKeyword_2_0());

                    }
                    // InternalQVTimperative.g:495:1: ( (lv_firstPass_3_0= ruleLOWER ) )
                    // InternalQVTimperative.g:496:1: (lv_firstPass_3_0= ruleLOWER )
                    {
                    // InternalQVTimperative.g:496:1: (lv_firstPass_3_0= ruleLOWER )
                    // InternalQVTimperative.g:497:3: lv_firstPass_3_0= ruleLOWER
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getBufferStatementCSAccess().getFirstPassLOWERParserRuleCall_2_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_16);
                    lv_firstPass_3_0=ruleLOWER();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBufferStatementCSRule());
                      	        }
                             		set(
                             			current,
                             			"firstPass",
                              		lv_firstPass_3_0,
                              		"org.eclipse.ocl.xtext.base.Base.LOWER");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:513:2: (otherlv_4= '..' ( (lv_lastPass_5_0= ruleLOWER ) ) )?
                    int alt7=2;
                    int LA7_0 = input.LA(1);

                    if ( (LA7_0==27) ) {
                        alt7=1;
                    }
                    switch (alt7) {
                        case 1 :
                            // InternalQVTimperative.g:513:4: otherlv_4= '..' ( (lv_lastPass_5_0= ruleLOWER ) )
                            {
                            otherlv_4=(Token)match(input,27,FollowSets000.FOLLOW_15); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getBufferStatementCSAccess().getFullStopFullStopKeyword_2_2_0());

                            }
                            // InternalQVTimperative.g:517:1: ( (lv_lastPass_5_0= ruleLOWER ) )
                            // InternalQVTimperative.g:518:1: (lv_lastPass_5_0= ruleLOWER )
                            {
                            // InternalQVTimperative.g:518:1: (lv_lastPass_5_0= ruleLOWER )
                            // InternalQVTimperative.g:519:3: lv_lastPass_5_0= ruleLOWER
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getBufferStatementCSAccess().getLastPassLOWERParserRuleCall_2_2_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_5);
                            lv_lastPass_5_0=ruleLOWER();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getBufferStatementCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"lastPass",
                                      		lv_lastPass_5_0,
                                      		"org.eclipse.ocl.xtext.base.Base.LOWER");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:535:6: ( (lv_name_6_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:536:1: (lv_name_6_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:536:1: (lv_name_6_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:537:3: lv_name_6_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getBufferStatementCSAccess().getNameUnrestrictedNameParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_17);
            lv_name_6_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getBufferStatementCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_6_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:553:2: (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) )?
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==24) ) {
                alt9=1;
            }
            switch (alt9) {
                case 1 :
                    // InternalQVTimperative.g:553:4: otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) )
                    {
                    otherlv_7=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getBufferStatementCSAccess().getColonKeyword_4_0());

                    }
                    // InternalQVTimperative.g:557:1: ( (lv_ownedType_8_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:558:1: (lv_ownedType_8_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:558:1: (lv_ownedType_8_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:559:3: lv_ownedType_8_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getBufferStatementCSAccess().getOwnedTypeTypeExpCSParserRuleCall_4_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_18);
                    lv_ownedType_8_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBufferStatementCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_8_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:575:4: (otherlv_9= ':=' ( (lv_ownedExpression_10_0= ruleExpCS ) ) )?
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==28) ) {
                alt10=1;
            }
            switch (alt10) {
                case 1 :
                    // InternalQVTimperative.g:575:6: otherlv_9= ':=' ( (lv_ownedExpression_10_0= ruleExpCS ) )
                    {
                    otherlv_9=(Token)match(input,28,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getBufferStatementCSAccess().getColonEqualsSignKeyword_5_0());

                    }
                    // InternalQVTimperative.g:579:1: ( (lv_ownedExpression_10_0= ruleExpCS ) )
                    // InternalQVTimperative.g:580:1: (lv_ownedExpression_10_0= ruleExpCS )
                    {
                    // InternalQVTimperative.g:580:1: (lv_ownedExpression_10_0= ruleExpCS )
                    // InternalQVTimperative.g:581:3: lv_ownedExpression_10_0= ruleExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getBufferStatementCSAccess().getOwnedExpressionExpCSParserRuleCall_5_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_ownedExpression_10_0=ruleExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBufferStatementCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedExpression",
                              		lv_ownedExpression_10_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_11=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_11, grammarAccess.getBufferStatementCSAccess().getSemicolonKeyword_6());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBufferStatementCS"


    // $ANTLR start "entryRuleCommitStatementCS"
    // InternalQVTimperative.g:609:1: entryRuleCommitStatementCS returns [EObject current=null] : iv_ruleCommitStatementCS= ruleCommitStatementCS EOF ;
    public final EObject entryRuleCommitStatementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCommitStatementCS = null;


        try {
            // InternalQVTimperative.g:610:2: (iv_ruleCommitStatementCS= ruleCommitStatementCS EOF )
            // InternalQVTimperative.g:611:2: iv_ruleCommitStatementCS= ruleCommitStatementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommitStatementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCommitStatementCS=ruleCommitStatementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommitStatementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommitStatementCS"


    // $ANTLR start "ruleCommitStatementCS"
    // InternalQVTimperative.g:618:1: ruleCommitStatementCS returns [EObject current=null] : (this_NewStatementCS_0= ruleNewStatementCS | this_SetStatementCS_1= ruleSetStatementCS ) ;
    public final EObject ruleCommitStatementCS() throws RecognitionException {
        EObject current = null;

        EObject this_NewStatementCS_0 = null;

        EObject this_SetStatementCS_1 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:621:28: ( (this_NewStatementCS_0= ruleNewStatementCS | this_SetStatementCS_1= ruleSetStatementCS ) )
            // InternalQVTimperative.g:622:1: (this_NewStatementCS_0= ruleNewStatementCS | this_SetStatementCS_1= ruleSetStatementCS )
            {
            // InternalQVTimperative.g:622:1: (this_NewStatementCS_0= ruleNewStatementCS | this_SetStatementCS_1= ruleSetStatementCS )
            int alt11=2;
            alt11 = dfa11.predict(input);
            switch (alt11) {
                case 1 :
                    // InternalQVTimperative.g:623:2: this_NewStatementCS_0= ruleNewStatementCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getCommitStatementCSAccess().getNewStatementCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NewStatementCS_0=ruleNewStatementCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NewStatementCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:636:2: this_SetStatementCS_1= ruleSetStatementCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getCommitStatementCSAccess().getSetStatementCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SetStatementCS_1=ruleSetStatementCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_SetStatementCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommitStatementCS"


    // $ANTLR start "entryRuleCheckStatementCS"
    // InternalQVTimperative.g:655:1: entryRuleCheckStatementCS returns [EObject current=null] : iv_ruleCheckStatementCS= ruleCheckStatementCS EOF ;
    public final EObject entryRuleCheckStatementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCheckStatementCS = null;


        try {
            // InternalQVTimperative.g:656:2: (iv_ruleCheckStatementCS= ruleCheckStatementCS EOF )
            // InternalQVTimperative.g:657:2: iv_ruleCheckStatementCS= ruleCheckStatementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCheckStatementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCheckStatementCS=ruleCheckStatementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCheckStatementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCheckStatementCS"


    // $ANTLR start "ruleCheckStatementCS"
    // InternalQVTimperative.g:664:1: ruleCheckStatementCS returns [EObject current=null] : ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'check' ( (lv_ownedCondition_5_0= ruleExpCS ) ) otherlv_6= ';' ) ;
    public final EObject ruleCheckStatementCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_observedProperties_1_0 = null;

        EObject lv_observedProperties_3_0 = null;

        EObject lv_ownedCondition_5_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:667:28: ( ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'check' ( (lv_ownedCondition_5_0= ruleExpCS ) ) otherlv_6= ';' ) )
            // InternalQVTimperative.g:668:1: ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'check' ( (lv_ownedCondition_5_0= ruleExpCS ) ) otherlv_6= ';' )
            {
            // InternalQVTimperative.g:668:1: ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'check' ( (lv_ownedCondition_5_0= ruleExpCS ) ) otherlv_6= ';' )
            // InternalQVTimperative.g:668:2: (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'check' ( (lv_ownedCondition_5_0= ruleExpCS ) ) otherlv_6= ';'
            {
            // InternalQVTimperative.g:668:2: (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==17) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // InternalQVTimperative.g:668:4: otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )*
                    {
                    otherlv_0=(Token)match(input,17,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getCheckStatementCSAccess().getObserveKeyword_0_0());

                    }
                    // InternalQVTimperative.g:672:1: ( (lv_observedProperties_1_0= rulePathNameCS ) )
                    // InternalQVTimperative.g:673:1: (lv_observedProperties_1_0= rulePathNameCS )
                    {
                    // InternalQVTimperative.g:673:1: (lv_observedProperties_1_0= rulePathNameCS )
                    // InternalQVTimperative.g:674:3: lv_observedProperties_1_0= rulePathNameCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getCheckStatementCSAccess().getObservedPropertiesPathNameCSParserRuleCall_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_19);
                    lv_observedProperties_1_0=rulePathNameCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCheckStatementCSRule());
                      	        }
                             		add(
                             			current,
                             			"observedProperties",
                              		lv_observedProperties_1_0,
                              		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:690:2: (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )*
                    loop12:
                    do {
                        int alt12=2;
                        int LA12_0 = input.LA(1);

                        if ( (LA12_0==18) ) {
                            alt12=1;
                        }


                        switch (alt12) {
                    	case 1 :
                    	    // InternalQVTimperative.g:690:4: otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) )
                    	    {
                    	    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getCheckStatementCSAccess().getCommaKeyword_0_2_0());

                    	    }
                    	    // InternalQVTimperative.g:694:1: ( (lv_observedProperties_3_0= rulePathNameCS ) )
                    	    // InternalQVTimperative.g:695:1: (lv_observedProperties_3_0= rulePathNameCS )
                    	    {
                    	    // InternalQVTimperative.g:695:1: (lv_observedProperties_3_0= rulePathNameCS )
                    	    // InternalQVTimperative.g:696:3: lv_observedProperties_3_0= rulePathNameCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getCheckStatementCSAccess().getObservedPropertiesPathNameCSParserRuleCall_0_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_19);
                    	    lv_observedProperties_3_0=rulePathNameCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getCheckStatementCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"observedProperties",
                    	              		lv_observedProperties_3_0,
                    	              		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop12;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_4=(Token)match(input,29,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getCheckStatementCSAccess().getCheckKeyword_1());

            }
            // InternalQVTimperative.g:716:1: ( (lv_ownedCondition_5_0= ruleExpCS ) )
            // InternalQVTimperative.g:717:1: (lv_ownedCondition_5_0= ruleExpCS )
            {
            // InternalQVTimperative.g:717:1: (lv_ownedCondition_5_0= ruleExpCS )
            // InternalQVTimperative.g:718:3: lv_ownedCondition_5_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getCheckStatementCSAccess().getOwnedConditionExpCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_9);
            lv_ownedCondition_5_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCheckStatementCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedCondition",
                      		lv_ownedCondition_5_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_6=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getCheckStatementCSAccess().getSemicolonKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCheckStatementCS"


    // $ANTLR start "entryRuleControlStatementCS"
    // InternalQVTimperative.g:746:1: entryRuleControlStatementCS returns [EObject current=null] : iv_ruleControlStatementCS= ruleControlStatementCS EOF ;
    public final EObject entryRuleControlStatementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleControlStatementCS = null;


        try {
            // InternalQVTimperative.g:747:2: (iv_ruleControlStatementCS= ruleControlStatementCS EOF )
            // InternalQVTimperative.g:748:2: iv_ruleControlStatementCS= ruleControlStatementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getControlStatementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleControlStatementCS=ruleControlStatementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleControlStatementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleControlStatementCS"


    // $ANTLR start "ruleControlStatementCS"
    // InternalQVTimperative.g:755:1: ruleControlStatementCS returns [EObject current=null] : (this_AddStatementCS_0= ruleAddStatementCS | this_MappingCallCS_1= ruleMappingCallCS | this_MappingLoopCS_2= ruleMappingLoopCS ) ;
    public final EObject ruleControlStatementCS() throws RecognitionException {
        EObject current = null;

        EObject this_AddStatementCS_0 = null;

        EObject this_MappingCallCS_1 = null;

        EObject this_MappingLoopCS_2 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:758:28: ( (this_AddStatementCS_0= ruleAddStatementCS | this_MappingCallCS_1= ruleMappingCallCS | this_MappingLoopCS_2= ruleMappingLoopCS ) )
            // InternalQVTimperative.g:759:1: (this_AddStatementCS_0= ruleAddStatementCS | this_MappingCallCS_1= ruleMappingCallCS | this_MappingLoopCS_2= ruleMappingLoopCS )
            {
            // InternalQVTimperative.g:759:1: (this_AddStatementCS_0= ruleAddStatementCS | this_MappingCallCS_1= ruleMappingCallCS | this_MappingLoopCS_2= ruleMappingLoopCS )
            int alt14=3;
            alt14 = dfa14.predict(input);
            switch (alt14) {
                case 1 :
                    // InternalQVTimperative.g:760:2: this_AddStatementCS_0= ruleAddStatementCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getControlStatementCSAccess().getAddStatementCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AddStatementCS_0=ruleAddStatementCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AddStatementCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:773:2: this_MappingCallCS_1= ruleMappingCallCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getControlStatementCSAccess().getMappingCallCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_MappingCallCS_1=ruleMappingCallCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MappingCallCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:786:2: this_MappingLoopCS_2= ruleMappingLoopCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getControlStatementCSAccess().getMappingLoopCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_MappingLoopCS_2=ruleMappingLoopCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MappingLoopCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleControlStatementCS"


    // $ANTLR start "entryRuleDeclareStatementCS"
    // InternalQVTimperative.g:805:1: entryRuleDeclareStatementCS returns [EObject current=null] : iv_ruleDeclareStatementCS= ruleDeclareStatementCS EOF ;
    public final EObject entryRuleDeclareStatementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclareStatementCS = null;


        try {
            // InternalQVTimperative.g:806:2: (iv_ruleDeclareStatementCS= ruleDeclareStatementCS EOF )
            // InternalQVTimperative.g:807:2: iv_ruleDeclareStatementCS= ruleDeclareStatementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclareStatementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclareStatementCS=ruleDeclareStatementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclareStatementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclareStatementCS"


    // $ANTLR start "ruleDeclareStatementCS"
    // InternalQVTimperative.g:814:1: ruleDeclareStatementCS returns [EObject current=null] : ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isCheck_4_0= 'check' ) )? otherlv_5= 'var' ( (lv_name_6_0= ruleUnrestrictedName ) ) (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) )? otherlv_9= ':=' ( (lv_ownedExpression_10_0= ruleExpCS ) ) otherlv_11= ';' ) ;
    public final EObject ruleDeclareStatementCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token lv_isCheck_4_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        EObject lv_observedProperties_1_0 = null;

        EObject lv_observedProperties_3_0 = null;

        AntlrDatatypeRuleToken lv_name_6_0 = null;

        EObject lv_ownedType_8_0 = null;

        EObject lv_ownedExpression_10_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:817:28: ( ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isCheck_4_0= 'check' ) )? otherlv_5= 'var' ( (lv_name_6_0= ruleUnrestrictedName ) ) (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) )? otherlv_9= ':=' ( (lv_ownedExpression_10_0= ruleExpCS ) ) otherlv_11= ';' ) )
            // InternalQVTimperative.g:818:1: ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isCheck_4_0= 'check' ) )? otherlv_5= 'var' ( (lv_name_6_0= ruleUnrestrictedName ) ) (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) )? otherlv_9= ':=' ( (lv_ownedExpression_10_0= ruleExpCS ) ) otherlv_11= ';' )
            {
            // InternalQVTimperative.g:818:1: ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isCheck_4_0= 'check' ) )? otherlv_5= 'var' ( (lv_name_6_0= ruleUnrestrictedName ) ) (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) )? otherlv_9= ':=' ( (lv_ownedExpression_10_0= ruleExpCS ) ) otherlv_11= ';' )
            // InternalQVTimperative.g:818:2: (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isCheck_4_0= 'check' ) )? otherlv_5= 'var' ( (lv_name_6_0= ruleUnrestrictedName ) ) (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) )? otherlv_9= ':=' ( (lv_ownedExpression_10_0= ruleExpCS ) ) otherlv_11= ';'
            {
            // InternalQVTimperative.g:818:2: (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==17) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // InternalQVTimperative.g:818:4: otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )*
                    {
                    otherlv_0=(Token)match(input,17,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getDeclareStatementCSAccess().getObserveKeyword_0_0());

                    }
                    // InternalQVTimperative.g:822:1: ( (lv_observedProperties_1_0= rulePathNameCS ) )
                    // InternalQVTimperative.g:823:1: (lv_observedProperties_1_0= rulePathNameCS )
                    {
                    // InternalQVTimperative.g:823:1: (lv_observedProperties_1_0= rulePathNameCS )
                    // InternalQVTimperative.g:824:3: lv_observedProperties_1_0= rulePathNameCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getDeclareStatementCSAccess().getObservedPropertiesPathNameCSParserRuleCall_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_20);
                    lv_observedProperties_1_0=rulePathNameCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDeclareStatementCSRule());
                      	        }
                             		add(
                             			current,
                             			"observedProperties",
                              		lv_observedProperties_1_0,
                              		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:840:2: (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )*
                    loop15:
                    do {
                        int alt15=2;
                        int LA15_0 = input.LA(1);

                        if ( (LA15_0==18) ) {
                            alt15=1;
                        }


                        switch (alt15) {
                    	case 1 :
                    	    // InternalQVTimperative.g:840:4: otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) )
                    	    {
                    	    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getDeclareStatementCSAccess().getCommaKeyword_0_2_0());

                    	    }
                    	    // InternalQVTimperative.g:844:1: ( (lv_observedProperties_3_0= rulePathNameCS ) )
                    	    // InternalQVTimperative.g:845:1: (lv_observedProperties_3_0= rulePathNameCS )
                    	    {
                    	    // InternalQVTimperative.g:845:1: (lv_observedProperties_3_0= rulePathNameCS )
                    	    // InternalQVTimperative.g:846:3: lv_observedProperties_3_0= rulePathNameCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getDeclareStatementCSAccess().getObservedPropertiesPathNameCSParserRuleCall_0_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_20);
                    	    lv_observedProperties_3_0=rulePathNameCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getDeclareStatementCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"observedProperties",
                    	              		lv_observedProperties_3_0,
                    	              		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop15;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalQVTimperative.g:862:6: ( (lv_isCheck_4_0= 'check' ) )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==29) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // InternalQVTimperative.g:863:1: (lv_isCheck_4_0= 'check' )
                    {
                    // InternalQVTimperative.g:863:1: (lv_isCheck_4_0= 'check' )
                    // InternalQVTimperative.g:864:3: lv_isCheck_4_0= 'check'
                    {
                    lv_isCheck_4_0=(Token)match(input,29,FollowSets000.FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isCheck_4_0, grammarAccess.getDeclareStatementCSAccess().getIsCheckCheckKeyword_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDeclareStatementCSRule());
                      	        }
                             		setWithLastConsumed(current, "isCheck", true, "check");

                    }

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,30,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getDeclareStatementCSAccess().getVarKeyword_2());

            }
            // InternalQVTimperative.g:881:1: ( (lv_name_6_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:882:1: (lv_name_6_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:882:1: (lv_name_6_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:883:3: lv_name_6_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getDeclareStatementCSAccess().getNameUnrestrictedNameParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_22);
            lv_name_6_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDeclareStatementCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_6_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:899:2: (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==24) ) {
                alt18=1;
            }
            switch (alt18) {
                case 1 :
                    // InternalQVTimperative.g:899:4: otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) )
                    {
                    otherlv_7=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getDeclareStatementCSAccess().getColonKeyword_4_0());

                    }
                    // InternalQVTimperative.g:903:1: ( (lv_ownedType_8_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:904:1: (lv_ownedType_8_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:904:1: (lv_ownedType_8_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:905:3: lv_ownedType_8_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getDeclareStatementCSAccess().getOwnedTypeTypeExpCSParserRuleCall_4_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_23);
                    lv_ownedType_8_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDeclareStatementCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_8_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_9=(Token)match(input,28,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getDeclareStatementCSAccess().getColonEqualsSignKeyword_5());

            }
            // InternalQVTimperative.g:925:1: ( (lv_ownedExpression_10_0= ruleExpCS ) )
            // InternalQVTimperative.g:926:1: (lv_ownedExpression_10_0= ruleExpCS )
            {
            // InternalQVTimperative.g:926:1: (lv_ownedExpression_10_0= ruleExpCS )
            // InternalQVTimperative.g:927:3: lv_ownedExpression_10_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getDeclareStatementCSAccess().getOwnedExpressionExpCSParserRuleCall_6_0());

            }
            pushFollow(FollowSets000.FOLLOW_9);
            lv_ownedExpression_10_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDeclareStatementCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedExpression",
                      		lv_ownedExpression_10_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_11=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_11, grammarAccess.getDeclareStatementCSAccess().getSemicolonKeyword_7());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclareStatementCS"


    // $ANTLR start "entryRuleDirectionCS"
    // InternalQVTimperative.g:955:1: entryRuleDirectionCS returns [EObject current=null] : iv_ruleDirectionCS= ruleDirectionCS EOF ;
    public final EObject entryRuleDirectionCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDirectionCS = null;


        try {
            // InternalQVTimperative.g:956:2: (iv_ruleDirectionCS= ruleDirectionCS EOF )
            // InternalQVTimperative.g:957:2: iv_ruleDirectionCS= ruleDirectionCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDirectionCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDirectionCS=ruleDirectionCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDirectionCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDirectionCS"


    // $ANTLR start "ruleDirectionCS"
    // InternalQVTimperative.g:964:1: ruleDirectionCS returns [EObject current=null] : ( () ( ( (lv_isChecked_1_0= 'check' ) ) | ( (lv_isEnforced_2_0= 'enforce' ) ) )? ( (lv_name_3_0= ruleUnrestrictedName ) )? (otherlv_4= 'imports' ( ( ruleUnrestrictedName ) ) (otherlv_6= ',' ( ( ruleUnrestrictedName ) ) )* )? ) ;
    public final EObject ruleDirectionCS() throws RecognitionException {
        EObject current = null;

        Token lv_isChecked_1_0=null;
        Token lv_isEnforced_2_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_3_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:967:28: ( ( () ( ( (lv_isChecked_1_0= 'check' ) ) | ( (lv_isEnforced_2_0= 'enforce' ) ) )? ( (lv_name_3_0= ruleUnrestrictedName ) )? (otherlv_4= 'imports' ( ( ruleUnrestrictedName ) ) (otherlv_6= ',' ( ( ruleUnrestrictedName ) ) )* )? ) )
            // InternalQVTimperative.g:968:1: ( () ( ( (lv_isChecked_1_0= 'check' ) ) | ( (lv_isEnforced_2_0= 'enforce' ) ) )? ( (lv_name_3_0= ruleUnrestrictedName ) )? (otherlv_4= 'imports' ( ( ruleUnrestrictedName ) ) (otherlv_6= ',' ( ( ruleUnrestrictedName ) ) )* )? )
            {
            // InternalQVTimperative.g:968:1: ( () ( ( (lv_isChecked_1_0= 'check' ) ) | ( (lv_isEnforced_2_0= 'enforce' ) ) )? ( (lv_name_3_0= ruleUnrestrictedName ) )? (otherlv_4= 'imports' ( ( ruleUnrestrictedName ) ) (otherlv_6= ',' ( ( ruleUnrestrictedName ) ) )* )? )
            // InternalQVTimperative.g:968:2: () ( ( (lv_isChecked_1_0= 'check' ) ) | ( (lv_isEnforced_2_0= 'enforce' ) ) )? ( (lv_name_3_0= ruleUnrestrictedName ) )? (otherlv_4= 'imports' ( ( ruleUnrestrictedName ) ) (otherlv_6= ',' ( ( ruleUnrestrictedName ) ) )* )?
            {
            // InternalQVTimperative.g:968:2: ()
            // InternalQVTimperative.g:969:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getDirectionCSAccess().getDirectionCSAction_0(),
                          current);

            }

            }

            // InternalQVTimperative.g:977:2: ( ( (lv_isChecked_1_0= 'check' ) ) | ( (lv_isEnforced_2_0= 'enforce' ) ) )?
            int alt19=3;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==29) ) {
                int LA19_1 = input.LA(2);

                if ( (synpred23_InternalQVTimperative()) ) {
                    alt19=1;
                }
            }
            else if ( (LA19_0==31) ) {
                int LA19_2 = input.LA(2);

                if ( (synpred24_InternalQVTimperative()) ) {
                    alt19=2;
                }
            }
            switch (alt19) {
                case 1 :
                    // InternalQVTimperative.g:977:3: ( (lv_isChecked_1_0= 'check' ) )
                    {
                    // InternalQVTimperative.g:977:3: ( (lv_isChecked_1_0= 'check' ) )
                    // InternalQVTimperative.g:978:1: (lv_isChecked_1_0= 'check' )
                    {
                    // InternalQVTimperative.g:978:1: (lv_isChecked_1_0= 'check' )
                    // InternalQVTimperative.g:979:3: lv_isChecked_1_0= 'check'
                    {
                    lv_isChecked_1_0=(Token)match(input,29,FollowSets000.FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isChecked_1_0, grammarAccess.getDirectionCSAccess().getIsCheckedCheckKeyword_1_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDirectionCSRule());
                      	        }
                             		setWithLastConsumed(current, "isChecked", true, "check");

                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:993:6: ( (lv_isEnforced_2_0= 'enforce' ) )
                    {
                    // InternalQVTimperative.g:993:6: ( (lv_isEnforced_2_0= 'enforce' ) )
                    // InternalQVTimperative.g:994:1: (lv_isEnforced_2_0= 'enforce' )
                    {
                    // InternalQVTimperative.g:994:1: (lv_isEnforced_2_0= 'enforce' )
                    // InternalQVTimperative.g:995:3: lv_isEnforced_2_0= 'enforce'
                    {
                    lv_isEnforced_2_0=(Token)match(input,31,FollowSets000.FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isEnforced_2_0, grammarAccess.getDirectionCSAccess().getIsEnforcedEnforceKeyword_1_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDirectionCSRule());
                      	        }
                             		setWithLastConsumed(current, "isEnforced", true, "enforce");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:1008:4: ( (lv_name_3_0= ruleUnrestrictedName ) )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( ((LA20_0>=RULE_SIMPLE_ID && LA20_0<=RULE_ESCAPED_ID)||LA20_0==17||LA20_0==19||(LA20_0>=22 && LA20_0<=23)||(LA20_0>=25 && LA20_0<=26)||(LA20_0>=29 && LA20_0<=31)||LA20_0==33||LA20_0==39||(LA20_0>=43 && LA20_0<=51)||(LA20_0>=53 && LA20_0<=54)||(LA20_0>=57 && LA20_0<=59)||(LA20_0>=61 && LA20_0<=66)||LA20_0==68||LA20_0==70||LA20_0==72||LA20_0==75||LA20_0==77||LA20_0==79||(LA20_0>=81 && LA20_0<=85)||(LA20_0>=87 && LA20_0<=92)||LA20_0==94||LA20_0==96||(LA20_0>=98 && LA20_0<=101)) ) {
                alt20=1;
            }
            else if ( (LA20_0==32) ) {
                int LA20_2 = input.LA(2);

                if ( (LA20_2==32) ) {
                    int LA20_4 = input.LA(3);

                    if ( ((LA20_4>=RULE_SIMPLE_ID && LA20_4<=RULE_ESCAPED_ID)||LA20_4==17||LA20_4==19||(LA20_4>=22 && LA20_4<=23)||(LA20_4>=25 && LA20_4<=26)||(LA20_4>=29 && LA20_4<=33)||LA20_4==39||(LA20_4>=43 && LA20_4<=51)||(LA20_4>=53 && LA20_4<=54)||(LA20_4>=57 && LA20_4<=59)||(LA20_4>=61 && LA20_4<=66)||LA20_4==68||LA20_4==70||LA20_4==72||LA20_4==75||LA20_4==77||LA20_4==79||(LA20_4>=81 && LA20_4<=85)||(LA20_4>=87 && LA20_4<=92)||LA20_4==94||LA20_4==96||(LA20_4>=98 && LA20_4<=101)) ) {
                        alt20=1;
                    }
                }
                else if ( (LA20_2==EOF||LA20_2==21) ) {
                    alt20=1;
                }
            }
            switch (alt20) {
                case 1 :
                    // InternalQVTimperative.g:1009:1: (lv_name_3_0= ruleUnrestrictedName )
                    {
                    // InternalQVTimperative.g:1009:1: (lv_name_3_0= ruleUnrestrictedName )
                    // InternalQVTimperative.g:1010:3: lv_name_3_0= ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getDirectionCSAccess().getNameUnrestrictedNameParserRuleCall_2_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_25);
                    lv_name_3_0=ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDirectionCSRule());
                      	        }
                             		set(
                             			current,
                             			"name",
                              		lv_name_3_0,
                              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:1026:3: (otherlv_4= 'imports' ( ( ruleUnrestrictedName ) ) (otherlv_6= ',' ( ( ruleUnrestrictedName ) ) )* )?
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==32) ) {
                alt22=1;
            }
            switch (alt22) {
                case 1 :
                    // InternalQVTimperative.g:1026:5: otherlv_4= 'imports' ( ( ruleUnrestrictedName ) ) (otherlv_6= ',' ( ( ruleUnrestrictedName ) ) )*
                    {
                    otherlv_4=(Token)match(input,32,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getDirectionCSAccess().getImportsKeyword_3_0());

                    }
                    // InternalQVTimperative.g:1030:1: ( ( ruleUnrestrictedName ) )
                    // InternalQVTimperative.g:1031:1: ( ruleUnrestrictedName )
                    {
                    // InternalQVTimperative.g:1031:1: ( ruleUnrestrictedName )
                    // InternalQVTimperative.g:1032:3: ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      		  /* */

                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getDirectionCSRule());
                      	        }

                    }
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getDirectionCSAccess().getImportsPackageCrossReference_3_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_26);
                    ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:1048:2: (otherlv_6= ',' ( ( ruleUnrestrictedName ) ) )*
                    loop21:
                    do {
                        int alt21=2;
                        int LA21_0 = input.LA(1);

                        if ( (LA21_0==18) ) {
                            alt21=1;
                        }


                        switch (alt21) {
                    	case 1 :
                    	    // InternalQVTimperative.g:1048:4: otherlv_6= ',' ( ( ruleUnrestrictedName ) )
                    	    {
                    	    otherlv_6=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_6, grammarAccess.getDirectionCSAccess().getCommaKeyword_3_2_0());

                    	    }
                    	    // InternalQVTimperative.g:1052:1: ( ( ruleUnrestrictedName ) )
                    	    // InternalQVTimperative.g:1053:1: ( ruleUnrestrictedName )
                    	    {
                    	    // InternalQVTimperative.g:1053:1: ( ruleUnrestrictedName )
                    	    // InternalQVTimperative.g:1054:3: ruleUnrestrictedName
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      		  /* */

                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      			if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getDirectionCSRule());
                    	      	        }

                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getDirectionCSAccess().getImportsPackageCrossReference_3_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_26);
                    	    ruleUnrestrictedName();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop21;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDirectionCS"


    // $ANTLR start "entryRuleEntryPointCS"
    // InternalQVTimperative.g:1078:1: entryRuleEntryPointCS returns [EObject current=null] : iv_ruleEntryPointCS= ruleEntryPointCS EOF ;
    public final EObject entryRuleEntryPointCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEntryPointCS = null;


        try {
            // InternalQVTimperative.g:1079:2: (iv_ruleEntryPointCS= ruleEntryPointCS EOF )
            // InternalQVTimperative.g:1080:2: iv_ruleEntryPointCS= ruleEntryPointCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEntryPointCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEntryPointCS=ruleEntryPointCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEntryPointCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEntryPointCS"


    // $ANTLR start "ruleEntryPointCS"
    // InternalQVTimperative.g:1087:1: ruleEntryPointCS returns [EObject current=null] : ( () ( (lv_isStrict_1_0= 'strict' ) )? otherlv_2= 'entry' (otherlv_3= ':' ( (lv_firstPass_4_0= ruleLOWER ) ) (otherlv_5= '..' ( (lv_lastPass_6_0= ruleLOWER ) ) )? )? ( (lv_name_7_0= ruleUnrestrictedName ) ) (otherlv_8= 'check' ( ( ruleUnrestrictedName ) ) (otherlv_10= ',' ( ( ruleUnrestrictedName ) ) )* )? (otherlv_12= 'enforce' ( ( ruleUnrestrictedName ) ) (otherlv_14= ',' ( ( ruleUnrestrictedName ) ) )* )? (otherlv_16= 'in' ( (lv_ownedInPathName_17_0= rulePathNameCS ) ) )? otherlv_18= '{' ( (lv_ownedParameters_19_0= ruleMappingParameterCS ) )* ( (lv_ownedStatements_20_0= ruleGuardStatementCS ) )* ( (lv_ownedStatements_21_0= ruleCommitStatementCS ) )* ( (lv_ownedStatements_22_0= ruleControlStatementCS ) )* otherlv_23= '}' ) ;
    public final EObject ruleEntryPointCS() throws RecognitionException {
        EObject current = null;

        Token lv_isStrict_1_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_23=null;
        AntlrDatatypeRuleToken lv_firstPass_4_0 = null;

        AntlrDatatypeRuleToken lv_lastPass_6_0 = null;

        AntlrDatatypeRuleToken lv_name_7_0 = null;

        EObject lv_ownedInPathName_17_0 = null;

        EObject lv_ownedParameters_19_0 = null;

        EObject lv_ownedStatements_20_0 = null;

        EObject lv_ownedStatements_21_0 = null;

        EObject lv_ownedStatements_22_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:1090:28: ( ( () ( (lv_isStrict_1_0= 'strict' ) )? otherlv_2= 'entry' (otherlv_3= ':' ( (lv_firstPass_4_0= ruleLOWER ) ) (otherlv_5= '..' ( (lv_lastPass_6_0= ruleLOWER ) ) )? )? ( (lv_name_7_0= ruleUnrestrictedName ) ) (otherlv_8= 'check' ( ( ruleUnrestrictedName ) ) (otherlv_10= ',' ( ( ruleUnrestrictedName ) ) )* )? (otherlv_12= 'enforce' ( ( ruleUnrestrictedName ) ) (otherlv_14= ',' ( ( ruleUnrestrictedName ) ) )* )? (otherlv_16= 'in' ( (lv_ownedInPathName_17_0= rulePathNameCS ) ) )? otherlv_18= '{' ( (lv_ownedParameters_19_0= ruleMappingParameterCS ) )* ( (lv_ownedStatements_20_0= ruleGuardStatementCS ) )* ( (lv_ownedStatements_21_0= ruleCommitStatementCS ) )* ( (lv_ownedStatements_22_0= ruleControlStatementCS ) )* otherlv_23= '}' ) )
            // InternalQVTimperative.g:1091:1: ( () ( (lv_isStrict_1_0= 'strict' ) )? otherlv_2= 'entry' (otherlv_3= ':' ( (lv_firstPass_4_0= ruleLOWER ) ) (otherlv_5= '..' ( (lv_lastPass_6_0= ruleLOWER ) ) )? )? ( (lv_name_7_0= ruleUnrestrictedName ) ) (otherlv_8= 'check' ( ( ruleUnrestrictedName ) ) (otherlv_10= ',' ( ( ruleUnrestrictedName ) ) )* )? (otherlv_12= 'enforce' ( ( ruleUnrestrictedName ) ) (otherlv_14= ',' ( ( ruleUnrestrictedName ) ) )* )? (otherlv_16= 'in' ( (lv_ownedInPathName_17_0= rulePathNameCS ) ) )? otherlv_18= '{' ( (lv_ownedParameters_19_0= ruleMappingParameterCS ) )* ( (lv_ownedStatements_20_0= ruleGuardStatementCS ) )* ( (lv_ownedStatements_21_0= ruleCommitStatementCS ) )* ( (lv_ownedStatements_22_0= ruleControlStatementCS ) )* otherlv_23= '}' )
            {
            // InternalQVTimperative.g:1091:1: ( () ( (lv_isStrict_1_0= 'strict' ) )? otherlv_2= 'entry' (otherlv_3= ':' ( (lv_firstPass_4_0= ruleLOWER ) ) (otherlv_5= '..' ( (lv_lastPass_6_0= ruleLOWER ) ) )? )? ( (lv_name_7_0= ruleUnrestrictedName ) ) (otherlv_8= 'check' ( ( ruleUnrestrictedName ) ) (otherlv_10= ',' ( ( ruleUnrestrictedName ) ) )* )? (otherlv_12= 'enforce' ( ( ruleUnrestrictedName ) ) (otherlv_14= ',' ( ( ruleUnrestrictedName ) ) )* )? (otherlv_16= 'in' ( (lv_ownedInPathName_17_0= rulePathNameCS ) ) )? otherlv_18= '{' ( (lv_ownedParameters_19_0= ruleMappingParameterCS ) )* ( (lv_ownedStatements_20_0= ruleGuardStatementCS ) )* ( (lv_ownedStatements_21_0= ruleCommitStatementCS ) )* ( (lv_ownedStatements_22_0= ruleControlStatementCS ) )* otherlv_23= '}' )
            // InternalQVTimperative.g:1091:2: () ( (lv_isStrict_1_0= 'strict' ) )? otherlv_2= 'entry' (otherlv_3= ':' ( (lv_firstPass_4_0= ruleLOWER ) ) (otherlv_5= '..' ( (lv_lastPass_6_0= ruleLOWER ) ) )? )? ( (lv_name_7_0= ruleUnrestrictedName ) ) (otherlv_8= 'check' ( ( ruleUnrestrictedName ) ) (otherlv_10= ',' ( ( ruleUnrestrictedName ) ) )* )? (otherlv_12= 'enforce' ( ( ruleUnrestrictedName ) ) (otherlv_14= ',' ( ( ruleUnrestrictedName ) ) )* )? (otherlv_16= 'in' ( (lv_ownedInPathName_17_0= rulePathNameCS ) ) )? otherlv_18= '{' ( (lv_ownedParameters_19_0= ruleMappingParameterCS ) )* ( (lv_ownedStatements_20_0= ruleGuardStatementCS ) )* ( (lv_ownedStatements_21_0= ruleCommitStatementCS ) )* ( (lv_ownedStatements_22_0= ruleControlStatementCS ) )* otherlv_23= '}'
            {
            // InternalQVTimperative.g:1091:2: ()
            // InternalQVTimperative.g:1092:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getEntryPointCSAccess().getEntryPointCSAction_0(),
                          current);

            }

            }

            // InternalQVTimperative.g:1100:2: ( (lv_isStrict_1_0= 'strict' ) )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==25) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // InternalQVTimperative.g:1101:1: (lv_isStrict_1_0= 'strict' )
                    {
                    // InternalQVTimperative.g:1101:1: (lv_isStrict_1_0= 'strict' )
                    // InternalQVTimperative.g:1102:3: lv_isStrict_1_0= 'strict'
                    {
                    lv_isStrict_1_0=(Token)match(input,25,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isStrict_1_0, grammarAccess.getEntryPointCSAccess().getIsStrictStrictKeyword_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getEntryPointCSRule());
                      	        }
                             		setWithLastConsumed(current, "isStrict", true, "strict");

                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,33,FollowSets000.FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getEntryPointCSAccess().getEntryKeyword_2());

            }
            // InternalQVTimperative.g:1119:1: (otherlv_3= ':' ( (lv_firstPass_4_0= ruleLOWER ) ) (otherlv_5= '..' ( (lv_lastPass_6_0= ruleLOWER ) ) )? )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==24) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // InternalQVTimperative.g:1119:3: otherlv_3= ':' ( (lv_firstPass_4_0= ruleLOWER ) ) (otherlv_5= '..' ( (lv_lastPass_6_0= ruleLOWER ) ) )?
                    {
                    otherlv_3=(Token)match(input,24,FollowSets000.FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getEntryPointCSAccess().getColonKeyword_3_0());

                    }
                    // InternalQVTimperative.g:1123:1: ( (lv_firstPass_4_0= ruleLOWER ) )
                    // InternalQVTimperative.g:1124:1: (lv_firstPass_4_0= ruleLOWER )
                    {
                    // InternalQVTimperative.g:1124:1: (lv_firstPass_4_0= ruleLOWER )
                    // InternalQVTimperative.g:1125:3: lv_firstPass_4_0= ruleLOWER
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getEntryPointCSAccess().getFirstPassLOWERParserRuleCall_3_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_16);
                    lv_firstPass_4_0=ruleLOWER();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getEntryPointCSRule());
                      	        }
                             		set(
                             			current,
                             			"firstPass",
                              		lv_firstPass_4_0,
                              		"org.eclipse.ocl.xtext.base.Base.LOWER");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:1141:2: (otherlv_5= '..' ( (lv_lastPass_6_0= ruleLOWER ) ) )?
                    int alt24=2;
                    int LA24_0 = input.LA(1);

                    if ( (LA24_0==27) ) {
                        alt24=1;
                    }
                    switch (alt24) {
                        case 1 :
                            // InternalQVTimperative.g:1141:4: otherlv_5= '..' ( (lv_lastPass_6_0= ruleLOWER ) )
                            {
                            otherlv_5=(Token)match(input,27,FollowSets000.FOLLOW_15); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getEntryPointCSAccess().getFullStopFullStopKeyword_3_2_0());

                            }
                            // InternalQVTimperative.g:1145:1: ( (lv_lastPass_6_0= ruleLOWER ) )
                            // InternalQVTimperative.g:1146:1: (lv_lastPass_6_0= ruleLOWER )
                            {
                            // InternalQVTimperative.g:1146:1: (lv_lastPass_6_0= ruleLOWER )
                            // InternalQVTimperative.g:1147:3: lv_lastPass_6_0= ruleLOWER
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getEntryPointCSAccess().getLastPassLOWERParserRuleCall_3_2_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_5);
                            lv_lastPass_6_0=ruleLOWER();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getEntryPointCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"lastPass",
                                      		lv_lastPass_6_0,
                                      		"org.eclipse.ocl.xtext.base.Base.LOWER");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:1163:6: ( (lv_name_7_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:1164:1: (lv_name_7_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:1164:1: (lv_name_7_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:1165:3: lv_name_7_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getEntryPointCSAccess().getNameUnrestrictedNameParserRuleCall_4_0());

            }
            pushFollow(FollowSets000.FOLLOW_28);
            lv_name_7_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getEntryPointCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_7_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:1181:2: (otherlv_8= 'check' ( ( ruleUnrestrictedName ) ) (otherlv_10= ',' ( ( ruleUnrestrictedName ) ) )* )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==29) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // InternalQVTimperative.g:1181:4: otherlv_8= 'check' ( ( ruleUnrestrictedName ) ) (otherlv_10= ',' ( ( ruleUnrestrictedName ) ) )*
                    {
                    otherlv_8=(Token)match(input,29,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getEntryPointCSAccess().getCheckKeyword_5_0());

                    }
                    // InternalQVTimperative.g:1185:1: ( ( ruleUnrestrictedName ) )
                    // InternalQVTimperative.g:1186:1: ( ruleUnrestrictedName )
                    {
                    // InternalQVTimperative.g:1186:1: ( ruleUnrestrictedName )
                    // InternalQVTimperative.g:1187:3: ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      		  /* */

                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getEntryPointCSRule());
                      	        }

                    }
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getEntryPointCSAccess().getCheckedTypedModelsTypedModelCrossReference_5_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_29);
                    ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:1203:2: (otherlv_10= ',' ( ( ruleUnrestrictedName ) ) )*
                    loop26:
                    do {
                        int alt26=2;
                        int LA26_0 = input.LA(1);

                        if ( (LA26_0==18) ) {
                            alt26=1;
                        }


                        switch (alt26) {
                    	case 1 :
                    	    // InternalQVTimperative.g:1203:4: otherlv_10= ',' ( ( ruleUnrestrictedName ) )
                    	    {
                    	    otherlv_10=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_10, grammarAccess.getEntryPointCSAccess().getCommaKeyword_5_2_0());

                    	    }
                    	    // InternalQVTimperative.g:1207:1: ( ( ruleUnrestrictedName ) )
                    	    // InternalQVTimperative.g:1208:1: ( ruleUnrestrictedName )
                    	    {
                    	    // InternalQVTimperative.g:1208:1: ( ruleUnrestrictedName )
                    	    // InternalQVTimperative.g:1209:3: ruleUnrestrictedName
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      		  /* */

                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      			if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getEntryPointCSRule());
                    	      	        }

                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getEntryPointCSAccess().getCheckedTypedModelsTypedModelCrossReference_5_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_29);
                    	    ruleUnrestrictedName();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop26;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalQVTimperative.g:1225:6: (otherlv_12= 'enforce' ( ( ruleUnrestrictedName ) ) (otherlv_14= ',' ( ( ruleUnrestrictedName ) ) )* )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==31) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // InternalQVTimperative.g:1225:8: otherlv_12= 'enforce' ( ( ruleUnrestrictedName ) ) (otherlv_14= ',' ( ( ruleUnrestrictedName ) ) )*
                    {
                    otherlv_12=(Token)match(input,31,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getEntryPointCSAccess().getEnforceKeyword_6_0());

                    }
                    // InternalQVTimperative.g:1229:1: ( ( ruleUnrestrictedName ) )
                    // InternalQVTimperative.g:1230:1: ( ruleUnrestrictedName )
                    {
                    // InternalQVTimperative.g:1230:1: ( ruleUnrestrictedName )
                    // InternalQVTimperative.g:1231:3: ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      		  /* */

                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getEntryPointCSRule());
                      	        }

                    }
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getEntryPointCSAccess().getEnforcedTypedModelsTypedModelCrossReference_6_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_30);
                    ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:1247:2: (otherlv_14= ',' ( ( ruleUnrestrictedName ) ) )*
                    loop28:
                    do {
                        int alt28=2;
                        int LA28_0 = input.LA(1);

                        if ( (LA28_0==18) ) {
                            alt28=1;
                        }


                        switch (alt28) {
                    	case 1 :
                    	    // InternalQVTimperative.g:1247:4: otherlv_14= ',' ( ( ruleUnrestrictedName ) )
                    	    {
                    	    otherlv_14=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_14, grammarAccess.getEntryPointCSAccess().getCommaKeyword_6_2_0());

                    	    }
                    	    // InternalQVTimperative.g:1251:1: ( ( ruleUnrestrictedName ) )
                    	    // InternalQVTimperative.g:1252:1: ( ruleUnrestrictedName )
                    	    {
                    	    // InternalQVTimperative.g:1252:1: ( ruleUnrestrictedName )
                    	    // InternalQVTimperative.g:1253:3: ruleUnrestrictedName
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      		  /* */

                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      			if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getEntryPointCSRule());
                    	      	        }

                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getEntryPointCSAccess().getEnforcedTypedModelsTypedModelCrossReference_6_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_30);
                    	    ruleUnrestrictedName();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop28;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalQVTimperative.g:1269:6: (otherlv_16= 'in' ( (lv_ownedInPathName_17_0= rulePathNameCS ) ) )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==34) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // InternalQVTimperative.g:1269:8: otherlv_16= 'in' ( (lv_ownedInPathName_17_0= rulePathNameCS ) )
                    {
                    otherlv_16=(Token)match(input,34,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_16, grammarAccess.getEntryPointCSAccess().getInKeyword_7_0());

                    }
                    // InternalQVTimperative.g:1273:1: ( (lv_ownedInPathName_17_0= rulePathNameCS ) )
                    // InternalQVTimperative.g:1274:1: (lv_ownedInPathName_17_0= rulePathNameCS )
                    {
                    // InternalQVTimperative.g:1274:1: (lv_ownedInPathName_17_0= rulePathNameCS )
                    // InternalQVTimperative.g:1275:3: lv_ownedInPathName_17_0= rulePathNameCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getEntryPointCSAccess().getOwnedInPathNamePathNameCSParserRuleCall_7_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_ownedInPathName_17_0=rulePathNameCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getEntryPointCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedInPathName",
                              		lv_ownedInPathName_17_0,
                              		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_18=(Token)match(input,35,FollowSets000.FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_18, grammarAccess.getEntryPointCSAccess().getLeftCurlyBracketKeyword_8());

            }
            // InternalQVTimperative.g:1295:1: ( (lv_ownedParameters_19_0= ruleMappingParameterCS ) )*
            loop31:
            do {
                int alt31=2;
                int LA31_0 = input.LA(1);

                if ( (LA31_0==23||LA31_0==34||LA31_0==38) ) {
                    alt31=1;
                }


                switch (alt31) {
            	case 1 :
            	    // InternalQVTimperative.g:1296:1: (lv_ownedParameters_19_0= ruleMappingParameterCS )
            	    {
            	    // InternalQVTimperative.g:1296:1: (lv_ownedParameters_19_0= ruleMappingParameterCS )
            	    // InternalQVTimperative.g:1297:3: lv_ownedParameters_19_0= ruleMappingParameterCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getEntryPointCSAccess().getOwnedParametersMappingParameterCSParserRuleCall_9_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_32);
            	    lv_ownedParameters_19_0=ruleMappingParameterCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEntryPointCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedParameters",
            	              		lv_ownedParameters_19_0,
            	              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.MappingParameterCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop31;
                }
            } while (true);

            // InternalQVTimperative.g:1313:3: ( (lv_ownedStatements_20_0= ruleGuardStatementCS ) )*
            loop32:
            do {
                int alt32=2;
                alt32 = dfa32.predict(input);
                switch (alt32) {
            	case 1 :
            	    // InternalQVTimperative.g:1314:1: (lv_ownedStatements_20_0= ruleGuardStatementCS )
            	    {
            	    // InternalQVTimperative.g:1314:1: (lv_ownedStatements_20_0= ruleGuardStatementCS )
            	    // InternalQVTimperative.g:1315:3: lv_ownedStatements_20_0= ruleGuardStatementCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getEntryPointCSAccess().getOwnedStatementsGuardStatementCSParserRuleCall_10_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_33);
            	    lv_ownedStatements_20_0=ruleGuardStatementCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEntryPointCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedStatements",
            	              		lv_ownedStatements_20_0,
            	              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.GuardStatementCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop32;
                }
            } while (true);

            // InternalQVTimperative.g:1331:3: ( (lv_ownedStatements_21_0= ruleCommitStatementCS ) )*
            loop33:
            do {
                int alt33=2;
                alt33 = dfa33.predict(input);
                switch (alt33) {
            	case 1 :
            	    // InternalQVTimperative.g:1332:1: (lv_ownedStatements_21_0= ruleCommitStatementCS )
            	    {
            	    // InternalQVTimperative.g:1332:1: (lv_ownedStatements_21_0= ruleCommitStatementCS )
            	    // InternalQVTimperative.g:1333:3: lv_ownedStatements_21_0= ruleCommitStatementCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getEntryPointCSAccess().getOwnedStatementsCommitStatementCSParserRuleCall_11_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_34);
            	    lv_ownedStatements_21_0=ruleCommitStatementCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEntryPointCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedStatements",
            	              		lv_ownedStatements_21_0,
            	              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.CommitStatementCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop33;
                }
            } while (true);

            // InternalQVTimperative.g:1349:3: ( (lv_ownedStatements_22_0= ruleControlStatementCS ) )*
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( (LA34_0==17||LA34_0==19||(LA34_0>=45 && LA34_0<=48)) ) {
                    alt34=1;
                }


                switch (alt34) {
            	case 1 :
            	    // InternalQVTimperative.g:1350:1: (lv_ownedStatements_22_0= ruleControlStatementCS )
            	    {
            	    // InternalQVTimperative.g:1350:1: (lv_ownedStatements_22_0= ruleControlStatementCS )
            	    // InternalQVTimperative.g:1351:3: lv_ownedStatements_22_0= ruleControlStatementCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getEntryPointCSAccess().getOwnedStatementsControlStatementCSParserRuleCall_12_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_35);
            	    lv_ownedStatements_22_0=ruleControlStatementCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEntryPointCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedStatements",
            	              		lv_ownedStatements_22_0,
            	              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.ControlStatementCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop34;
                }
            } while (true);

            otherlv_23=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_23, grammarAccess.getEntryPointCSAccess().getRightCurlyBracketKeyword_13());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEntryPointCS"


    // $ANTLR start "entryRuleGuardParameterBindingCS"
    // InternalQVTimperative.g:1379:1: entryRuleGuardParameterBindingCS returns [EObject current=null] : iv_ruleGuardParameterBindingCS= ruleGuardParameterBindingCS EOF ;
    public final EObject entryRuleGuardParameterBindingCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGuardParameterBindingCS = null;


        try {
            // InternalQVTimperative.g:1380:2: (iv_ruleGuardParameterBindingCS= ruleGuardParameterBindingCS EOF )
            // InternalQVTimperative.g:1381:2: iv_ruleGuardParameterBindingCS= ruleGuardParameterBindingCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGuardParameterBindingCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleGuardParameterBindingCS=ruleGuardParameterBindingCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGuardParameterBindingCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGuardParameterBindingCS"


    // $ANTLR start "ruleGuardParameterBindingCS"
    // InternalQVTimperative.g:1388:1: ruleGuardParameterBindingCS returns [EObject current=null] : ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'consumes' ( ( ruleUnrestrictedName ) ) otherlv_4= ';' ) ;
    public final EObject ruleGuardParameterBindingCS() throws RecognitionException {
        EObject current = null;

        Token lv_isCheck_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;

         enterRule();

        try {
            // InternalQVTimperative.g:1391:28: ( ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'consumes' ( ( ruleUnrestrictedName ) ) otherlv_4= ';' ) )
            // InternalQVTimperative.g:1392:1: ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'consumes' ( ( ruleUnrestrictedName ) ) otherlv_4= ';' )
            {
            // InternalQVTimperative.g:1392:1: ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'consumes' ( ( ruleUnrestrictedName ) ) otherlv_4= ';' )
            // InternalQVTimperative.g:1392:2: ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'consumes' ( ( ruleUnrestrictedName ) ) otherlv_4= ';'
            {
            // InternalQVTimperative.g:1392:2: ( (lv_isCheck_0_0= 'check' ) )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==29) ) {
                int LA35_1 = input.LA(2);

                if ( ((LA35_1>=RULE_SIMPLE_ID && LA35_1<=RULE_ESCAPED_ID)||LA35_1==17||LA35_1==19||(LA35_1>=22 && LA35_1<=23)||(LA35_1>=25 && LA35_1<=26)||(LA35_1>=29 && LA35_1<=33)||LA35_1==39||(LA35_1>=43 && LA35_1<=51)||(LA35_1>=53 && LA35_1<=54)||(LA35_1>=57 && LA35_1<=59)||(LA35_1>=61 && LA35_1<=66)||LA35_1==68||LA35_1==70||LA35_1==72||LA35_1==75||LA35_1==77||LA35_1==79||(LA35_1>=81 && LA35_1<=85)||(LA35_1>=87 && LA35_1<=92)||LA35_1==94||LA35_1==96||(LA35_1>=98 && LA35_1<=101)) ) {
                    alt35=1;
                }
            }
            switch (alt35) {
                case 1 :
                    // InternalQVTimperative.g:1393:1: (lv_isCheck_0_0= 'check' )
                    {
                    // InternalQVTimperative.g:1393:1: (lv_isCheck_0_0= 'check' )
                    // InternalQVTimperative.g:1394:3: lv_isCheck_0_0= 'check'
                    {
                    lv_isCheck_0_0=(Token)match(input,29,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isCheck_0_0, grammarAccess.getGuardParameterBindingCSAccess().getIsCheckCheckKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getGuardParameterBindingCSRule());
                      	        }
                             		setWithLastConsumed(current, "isCheck", true, "check");

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:1407:3: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:1408:1: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:1408:1: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:1409:3: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              		  /* */

            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getGuardParameterBindingCSRule());
              	        }

            }
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getGuardParameterBindingCSAccess().getReferredVariableGuardParameterCrossReference_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_36);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_2=(Token)match(input,37,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getGuardParameterBindingCSAccess().getConsumesKeyword_2());

            }
            // InternalQVTimperative.g:1429:1: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:1430:1: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:1430:1: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:1431:3: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              		  /* */

            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getGuardParameterBindingCSRule());
              	        }

            }
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getGuardParameterBindingCSAccess().getValueConnectionVariableCrossReference_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_9);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_4=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getGuardParameterBindingCSAccess().getSemicolonKeyword_4());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGuardParameterBindingCS"


    // $ANTLR start "entryRuleGuardParameterCS"
    // InternalQVTimperative.g:1459:1: entryRuleGuardParameterCS returns [EObject current=null] : iv_ruleGuardParameterCS= ruleGuardParameterCS EOF ;
    public final EObject entryRuleGuardParameterCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGuardParameterCS = null;


        try {
            // InternalQVTimperative.g:1460:2: (iv_ruleGuardParameterCS= ruleGuardParameterCS EOF )
            // InternalQVTimperative.g:1461:2: iv_ruleGuardParameterCS= ruleGuardParameterCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGuardParameterCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleGuardParameterCS=ruleGuardParameterCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGuardParameterCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGuardParameterCS"


    // $ANTLR start "ruleGuardParameterCS"
    // InternalQVTimperative.g:1468:1: ruleGuardParameterCS returns [EObject current=null] : (otherlv_0= 'guard' otherlv_1= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' ( (lv_ownedType_5_0= ruleTypeExpCS ) ) (otherlv_6= 'success' ( ( ruleUnrestrictedName ) ) )? otherlv_8= ';' ) ;
    public final EObject ruleGuardParameterCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_ownedType_5_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:1471:28: ( (otherlv_0= 'guard' otherlv_1= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' ( (lv_ownedType_5_0= ruleTypeExpCS ) ) (otherlv_6= 'success' ( ( ruleUnrestrictedName ) ) )? otherlv_8= ';' ) )
            // InternalQVTimperative.g:1472:1: (otherlv_0= 'guard' otherlv_1= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' ( (lv_ownedType_5_0= ruleTypeExpCS ) ) (otherlv_6= 'success' ( ( ruleUnrestrictedName ) ) )? otherlv_8= ';' )
            {
            // InternalQVTimperative.g:1472:1: (otherlv_0= 'guard' otherlv_1= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' ( (lv_ownedType_5_0= ruleTypeExpCS ) ) (otherlv_6= 'success' ( ( ruleUnrestrictedName ) ) )? otherlv_8= ';' )
            // InternalQVTimperative.g:1472:3: otherlv_0= 'guard' otherlv_1= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' ( (lv_ownedType_5_0= ruleTypeExpCS ) ) (otherlv_6= 'success' ( ( ruleUnrestrictedName ) ) )? otherlv_8= ';'
            {
            otherlv_0=(Token)match(input,38,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getGuardParameterCSAccess().getGuardKeyword_0());

            }
            otherlv_1=(Token)match(input,24,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getGuardParameterCSAccess().getColonKeyword_1());

            }
            // InternalQVTimperative.g:1480:1: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:1481:1: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:1481:1: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:1482:3: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              		  /* */

            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getGuardParameterCSRule());
              	        }

            }
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getGuardParameterCSAccess().getReferredTypedModelImperativeTypedModelCrossReference_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_5);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:1498:2: ( (lv_name_3_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:1499:1: (lv_name_3_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:1499:1: (lv_name_3_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:1500:3: lv_name_3_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getGuardParameterCSAccess().getNameUnrestrictedNameParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_11);
            lv_name_3_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getGuardParameterCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_3_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_4=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getGuardParameterCSAccess().getColonKeyword_4());

            }
            // InternalQVTimperative.g:1520:1: ( (lv_ownedType_5_0= ruleTypeExpCS ) )
            // InternalQVTimperative.g:1521:1: (lv_ownedType_5_0= ruleTypeExpCS )
            {
            // InternalQVTimperative.g:1521:1: (lv_ownedType_5_0= ruleTypeExpCS )
            // InternalQVTimperative.g:1522:3: lv_ownedType_5_0= ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getGuardParameterCSAccess().getOwnedTypeTypeExpCSParserRuleCall_5_0());

            }
            pushFollow(FollowSets000.FOLLOW_37);
            lv_ownedType_5_0=ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getGuardParameterCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedType",
                      		lv_ownedType_5_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:1538:2: (otherlv_6= 'success' ( ( ruleUnrestrictedName ) ) )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==39) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // InternalQVTimperative.g:1538:4: otherlv_6= 'success' ( ( ruleUnrestrictedName ) )
                    {
                    otherlv_6=(Token)match(input,39,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getGuardParameterCSAccess().getSuccessKeyword_6_0());

                    }
                    // InternalQVTimperative.g:1542:1: ( ( ruleUnrestrictedName ) )
                    // InternalQVTimperative.g:1543:1: ( ruleUnrestrictedName )
                    {
                    // InternalQVTimperative.g:1543:1: ( ruleUnrestrictedName )
                    // InternalQVTimperative.g:1544:3: ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      		  /* */

                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getGuardParameterCSRule());
                      	        }

                    }
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getGuardParameterCSAccess().getSuccessPropertyPropertyCrossReference_6_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getGuardParameterCSAccess().getSemicolonKeyword_7());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGuardParameterCS"


    // $ANTLR start "entryRuleGuardStatementCS"
    // InternalQVTimperative.g:1572:1: entryRuleGuardStatementCS returns [EObject current=null] : iv_ruleGuardStatementCS= ruleGuardStatementCS EOF ;
    public final EObject entryRuleGuardStatementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGuardStatementCS = null;


        try {
            // InternalQVTimperative.g:1573:2: (iv_ruleGuardStatementCS= ruleGuardStatementCS EOF )
            // InternalQVTimperative.g:1574:2: iv_ruleGuardStatementCS= ruleGuardStatementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGuardStatementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleGuardStatementCS=ruleGuardStatementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGuardStatementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGuardStatementCS"


    // $ANTLR start "ruleGuardStatementCS"
    // InternalQVTimperative.g:1581:1: ruleGuardStatementCS returns [EObject current=null] : (this_BufferStatementCS_0= ruleBufferStatementCS | this_DeclareStatementCS_1= ruleDeclareStatementCS | this_DeclareStatementCS_2= ruleDeclareStatementCS | this_CheckStatementCS_3= ruleCheckStatementCS ) ;
    public final EObject ruleGuardStatementCS() throws RecognitionException {
        EObject current = null;

        EObject this_BufferStatementCS_0 = null;

        EObject this_DeclareStatementCS_1 = null;

        EObject this_DeclareStatementCS_2 = null;

        EObject this_CheckStatementCS_3 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:1584:28: ( (this_BufferStatementCS_0= ruleBufferStatementCS | this_DeclareStatementCS_1= ruleDeclareStatementCS | this_DeclareStatementCS_2= ruleDeclareStatementCS | this_CheckStatementCS_3= ruleCheckStatementCS ) )
            // InternalQVTimperative.g:1585:1: (this_BufferStatementCS_0= ruleBufferStatementCS | this_DeclareStatementCS_1= ruleDeclareStatementCS | this_DeclareStatementCS_2= ruleDeclareStatementCS | this_CheckStatementCS_3= ruleCheckStatementCS )
            {
            // InternalQVTimperative.g:1585:1: (this_BufferStatementCS_0= ruleBufferStatementCS | this_DeclareStatementCS_1= ruleDeclareStatementCS | this_DeclareStatementCS_2= ruleDeclareStatementCS | this_CheckStatementCS_3= ruleCheckStatementCS )
            int alt37=4;
            switch ( input.LA(1) ) {
            case 25:
            case 26:
                {
                alt37=1;
                }
                break;
            case 17:
                {
                int LA37_3 = input.LA(2);

                if ( (synpred43_InternalQVTimperative()) ) {
                    alt37=2;
                }
                else if ( (synpred44_InternalQVTimperative()) ) {
                    alt37=3;
                }
                else if ( (true) ) {
                    alt37=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 3, input);

                    throw nvae;
                }
                }
                break;
            case 29:
                {
                int LA37_4 = input.LA(2);

                if ( (synpred43_InternalQVTimperative()) ) {
                    alt37=2;
                }
                else if ( (synpred44_InternalQVTimperative()) ) {
                    alt37=3;
                }
                else if ( (true) ) {
                    alt37=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 4, input);

                    throw nvae;
                }
                }
                break;
            case 30:
                {
                int LA37_5 = input.LA(2);

                if ( (synpred43_InternalQVTimperative()) ) {
                    alt37=2;
                }
                else if ( (synpred44_InternalQVTimperative()) ) {
                    alt37=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 5, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }

            switch (alt37) {
                case 1 :
                    // InternalQVTimperative.g:1586:2: this_BufferStatementCS_0= ruleBufferStatementCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getGuardStatementCSAccess().getBufferStatementCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BufferStatementCS_0=ruleBufferStatementCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BufferStatementCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:1599:2: this_DeclareStatementCS_1= ruleDeclareStatementCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getGuardStatementCSAccess().getDeclareStatementCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DeclareStatementCS_1=ruleDeclareStatementCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_DeclareStatementCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:1612:2: this_DeclareStatementCS_2= ruleDeclareStatementCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getGuardStatementCSAccess().getDeclareStatementCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DeclareStatementCS_2=ruleDeclareStatementCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_DeclareStatementCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:1625:2: this_CheckStatementCS_3= ruleCheckStatementCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getGuardStatementCSAccess().getCheckStatementCSParserRuleCall_3());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CheckStatementCS_3=ruleCheckStatementCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_CheckStatementCS_3;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGuardStatementCS"


    // $ANTLR start "entryRuleImportCS"
    // InternalQVTimperative.g:1644:1: entryRuleImportCS returns [EObject current=null] : iv_ruleImportCS= ruleImportCS EOF ;
    public final EObject entryRuleImportCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImportCS = null;


        try {
            // InternalQVTimperative.g:1645:2: (iv_ruleImportCS= ruleImportCS EOF )
            // InternalQVTimperative.g:1646:2: iv_ruleImportCS= ruleImportCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleImportCS=ruleImportCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImportCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImportCS"


    // $ANTLR start "ruleImportCS"
    // InternalQVTimperative.g:1653:1: ruleImportCS returns [EObject current=null] : (otherlv_0= 'import' ( ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= ':' )? ( (lv_ownedPathName_3_0= ruleURIPathNameCS ) ) ( ( (lv_isAll_4_0= '::' ) ) otherlv_5= '*' )? otherlv_6= ';' ) ;
    public final EObject ruleImportCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token lv_isAll_4_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_ownedPathName_3_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:1656:28: ( (otherlv_0= 'import' ( ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= ':' )? ( (lv_ownedPathName_3_0= ruleURIPathNameCS ) ) ( ( (lv_isAll_4_0= '::' ) ) otherlv_5= '*' )? otherlv_6= ';' ) )
            // InternalQVTimperative.g:1657:1: (otherlv_0= 'import' ( ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= ':' )? ( (lv_ownedPathName_3_0= ruleURIPathNameCS ) ) ( ( (lv_isAll_4_0= '::' ) ) otherlv_5= '*' )? otherlv_6= ';' )
            {
            // InternalQVTimperative.g:1657:1: (otherlv_0= 'import' ( ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= ':' )? ( (lv_ownedPathName_3_0= ruleURIPathNameCS ) ) ( ( (lv_isAll_4_0= '::' ) ) otherlv_5= '*' )? otherlv_6= ';' )
            // InternalQVTimperative.g:1657:3: otherlv_0= 'import' ( ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= ':' )? ( (lv_ownedPathName_3_0= ruleURIPathNameCS ) ) ( ( (lv_isAll_4_0= '::' ) ) otherlv_5= '*' )? otherlv_6= ';'
            {
            otherlv_0=(Token)match(input,40,FollowSets000.FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getImportCSAccess().getImportKeyword_0());

            }
            // InternalQVTimperative.g:1661:1: ( ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= ':' )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==RULE_SIMPLE_ID) ) {
                int LA38_1 = input.LA(2);

                if ( (LA38_1==24) ) {
                    alt38=1;
                }
            }
            else if ( (LA38_0==RULE_ESCAPED_ID) ) {
                int LA38_2 = input.LA(2);

                if ( (LA38_2==24) ) {
                    alt38=1;
                }
            }
            switch (alt38) {
                case 1 :
                    // InternalQVTimperative.g:1661:2: ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= ':'
                    {
                    // InternalQVTimperative.g:1661:2: ( (lv_name_1_0= ruleIdentifier ) )
                    // InternalQVTimperative.g:1662:1: (lv_name_1_0= ruleIdentifier )
                    {
                    // InternalQVTimperative.g:1662:1: (lv_name_1_0= ruleIdentifier )
                    // InternalQVTimperative.g:1663:3: lv_name_1_0= ruleIdentifier
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getImportCSAccess().getNameIdentifierParserRuleCall_1_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_name_1_0=ruleIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getImportCSRule());
                      	        }
                             		set(
                             			current,
                             			"name",
                              		lv_name_1_0,
                              		"org.eclipse.ocl.xtext.base.Base.Identifier");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    otherlv_2=(Token)match(input,24,FollowSets000.FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getImportCSAccess().getColonKeyword_1_1());

                    }

                    }
                    break;

            }

            // InternalQVTimperative.g:1683:3: ( (lv_ownedPathName_3_0= ruleURIPathNameCS ) )
            // InternalQVTimperative.g:1684:1: (lv_ownedPathName_3_0= ruleURIPathNameCS )
            {
            // InternalQVTimperative.g:1684:1: (lv_ownedPathName_3_0= ruleURIPathNameCS )
            // InternalQVTimperative.g:1685:3: lv_ownedPathName_3_0= ruleURIPathNameCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getImportCSAccess().getOwnedPathNameURIPathNameCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_39);
            lv_ownedPathName_3_0=ruleURIPathNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getImportCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedPathName",
                      		lv_ownedPathName_3_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.URIPathNameCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:1701:2: ( ( (lv_isAll_4_0= '::' ) ) otherlv_5= '*' )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==41) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalQVTimperative.g:1701:3: ( (lv_isAll_4_0= '::' ) ) otherlv_5= '*'
                    {
                    // InternalQVTimperative.g:1701:3: ( (lv_isAll_4_0= '::' ) )
                    // InternalQVTimperative.g:1702:1: (lv_isAll_4_0= '::' )
                    {
                    // InternalQVTimperative.g:1702:1: (lv_isAll_4_0= '::' )
                    // InternalQVTimperative.g:1703:3: lv_isAll_4_0= '::'
                    {
                    lv_isAll_4_0=(Token)match(input,41,FollowSets000.FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isAll_4_0, grammarAccess.getImportCSAccess().getIsAllColonColonKeyword_3_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getImportCSRule());
                      	        }
                             		setWithLastConsumed(current, "isAll", true, "::");

                    }

                    }


                    }

                    otherlv_5=(Token)match(input,42,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getImportCSAccess().getAsteriskKeyword_3_1());

                    }

                    }
                    break;

            }

            otherlv_6=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getImportCSAccess().getSemicolonKeyword_4());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImportCS"


    // $ANTLR start "entryRuleLoopParameterBindingCS"
    // InternalQVTimperative.g:1732:1: entryRuleLoopParameterBindingCS returns [EObject current=null] : iv_ruleLoopParameterBindingCS= ruleLoopParameterBindingCS EOF ;
    public final EObject entryRuleLoopParameterBindingCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLoopParameterBindingCS = null;


        try {
            // InternalQVTimperative.g:1733:2: (iv_ruleLoopParameterBindingCS= ruleLoopParameterBindingCS EOF )
            // InternalQVTimperative.g:1734:2: iv_ruleLoopParameterBindingCS= ruleLoopParameterBindingCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLoopParameterBindingCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLoopParameterBindingCS=ruleLoopParameterBindingCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLoopParameterBindingCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLoopParameterBindingCS"


    // $ANTLR start "ruleLoopParameterBindingCS"
    // InternalQVTimperative.g:1741:1: ruleLoopParameterBindingCS returns [EObject current=null] : ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'iterates' ( ( ruleUnrestrictedName ) ) otherlv_4= ';' ) ;
    public final EObject ruleLoopParameterBindingCS() throws RecognitionException {
        EObject current = null;

        Token lv_isCheck_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;

         enterRule();

        try {
            // InternalQVTimperative.g:1744:28: ( ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'iterates' ( ( ruleUnrestrictedName ) ) otherlv_4= ';' ) )
            // InternalQVTimperative.g:1745:1: ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'iterates' ( ( ruleUnrestrictedName ) ) otherlv_4= ';' )
            {
            // InternalQVTimperative.g:1745:1: ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'iterates' ( ( ruleUnrestrictedName ) ) otherlv_4= ';' )
            // InternalQVTimperative.g:1745:2: ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'iterates' ( ( ruleUnrestrictedName ) ) otherlv_4= ';'
            {
            // InternalQVTimperative.g:1745:2: ( (lv_isCheck_0_0= 'check' ) )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==29) ) {
                int LA40_1 = input.LA(2);

                if ( (LA40_1==43) ) {
                    int LA40_3 = input.LA(3);

                    if ( (LA40_3==43) ) {
                        int LA40_5 = input.LA(4);

                        if ( ((LA40_5>=RULE_SIMPLE_ID && LA40_5<=RULE_ESCAPED_ID)||LA40_5==17||LA40_5==19||(LA40_5>=22 && LA40_5<=23)||(LA40_5>=25 && LA40_5<=26)||(LA40_5>=29 && LA40_5<=33)||LA40_5==39||(LA40_5>=43 && LA40_5<=51)||(LA40_5>=53 && LA40_5<=54)||(LA40_5>=57 && LA40_5<=59)||(LA40_5>=61 && LA40_5<=66)||LA40_5==68||LA40_5==70||LA40_5==72||LA40_5==75||LA40_5==77||LA40_5==79||(LA40_5>=81 && LA40_5<=85)||(LA40_5>=87 && LA40_5<=92)||LA40_5==94||LA40_5==96||(LA40_5>=98 && LA40_5<=101)) ) {
                            alt40=1;
                        }
                    }
                }
                else if ( ((LA40_1>=RULE_SIMPLE_ID && LA40_1<=RULE_ESCAPED_ID)||LA40_1==17||LA40_1==19||(LA40_1>=22 && LA40_1<=23)||(LA40_1>=25 && LA40_1<=26)||(LA40_1>=29 && LA40_1<=33)||LA40_1==39||(LA40_1>=44 && LA40_1<=51)||(LA40_1>=53 && LA40_1<=54)||(LA40_1>=57 && LA40_1<=59)||(LA40_1>=61 && LA40_1<=66)||LA40_1==68||LA40_1==70||LA40_1==72||LA40_1==75||LA40_1==77||LA40_1==79||(LA40_1>=81 && LA40_1<=85)||(LA40_1>=87 && LA40_1<=92)||LA40_1==94||LA40_1==96||(LA40_1>=98 && LA40_1<=101)) ) {
                    alt40=1;
                }
            }
            switch (alt40) {
                case 1 :
                    // InternalQVTimperative.g:1746:1: (lv_isCheck_0_0= 'check' )
                    {
                    // InternalQVTimperative.g:1746:1: (lv_isCheck_0_0= 'check' )
                    // InternalQVTimperative.g:1747:3: lv_isCheck_0_0= 'check'
                    {
                    lv_isCheck_0_0=(Token)match(input,29,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isCheck_0_0, grammarAccess.getLoopParameterBindingCSAccess().getIsCheckCheckKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getLoopParameterBindingCSRule());
                      	        }
                             		setWithLastConsumed(current, "isCheck", true, "check");

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:1760:3: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:1761:1: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:1761:1: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:1762:3: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              		  /* */

            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getLoopParameterBindingCSRule());
              	        }

            }
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getLoopParameterBindingCSAccess().getReferredVariableGuardParameterCrossReference_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_41);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_2=(Token)match(input,43,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getLoopParameterBindingCSAccess().getIteratesKeyword_2());

            }
            // InternalQVTimperative.g:1782:1: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:1783:1: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:1783:1: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:1784:3: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              		  /* */

            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getLoopParameterBindingCSRule());
              	        }

            }
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getLoopParameterBindingCSAccess().getValueLoopVariableCrossReference_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_9);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_4=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getLoopParameterBindingCSAccess().getSemicolonKeyword_4());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLoopParameterBindingCS"


    // $ANTLR start "entryRuleMappingCS"
    // InternalQVTimperative.g:1812:1: entryRuleMappingCS returns [EObject current=null] : iv_ruleMappingCS= ruleMappingCS EOF ;
    public final EObject entryRuleMappingCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMappingCS = null;


        try {
            // InternalQVTimperative.g:1813:2: (iv_ruleMappingCS= ruleMappingCS EOF )
            // InternalQVTimperative.g:1814:2: iv_ruleMappingCS= ruleMappingCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMappingCS=ruleMappingCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMappingCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMappingCS"


    // $ANTLR start "ruleMappingCS"
    // InternalQVTimperative.g:1821:1: ruleMappingCS returns [EObject current=null] : ( () ( (lv_isStrict_1_0= 'strict' ) )? otherlv_2= 'map' (otherlv_3= ':' ( (lv_firstPass_4_0= ruleLOWER ) ) (otherlv_5= '..' ( (lv_lastPass_6_0= ruleLOWER ) ) )? )? ( (lv_name_7_0= ruleUnrestrictedName ) ) (otherlv_8= 'in' ( (lv_ownedInPathName_9_0= rulePathNameCS ) ) )? otherlv_10= '{' ( (lv_ownedParameters_11_0= ruleMappingParameterCS ) )* ( (lv_ownedStatements_12_0= ruleGuardStatementCS ) )* ( (lv_ownedStatements_13_0= ruleCommitStatementCS ) )* ( (lv_ownedStatements_14_0= ruleControlStatementCS ) )* otherlv_15= '}' ) ;
    public final EObject ruleMappingCS() throws RecognitionException {
        EObject current = null;

        Token lv_isStrict_1_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_15=null;
        AntlrDatatypeRuleToken lv_firstPass_4_0 = null;

        AntlrDatatypeRuleToken lv_lastPass_6_0 = null;

        AntlrDatatypeRuleToken lv_name_7_0 = null;

        EObject lv_ownedInPathName_9_0 = null;

        EObject lv_ownedParameters_11_0 = null;

        EObject lv_ownedStatements_12_0 = null;

        EObject lv_ownedStatements_13_0 = null;

        EObject lv_ownedStatements_14_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:1824:28: ( ( () ( (lv_isStrict_1_0= 'strict' ) )? otherlv_2= 'map' (otherlv_3= ':' ( (lv_firstPass_4_0= ruleLOWER ) ) (otherlv_5= '..' ( (lv_lastPass_6_0= ruleLOWER ) ) )? )? ( (lv_name_7_0= ruleUnrestrictedName ) ) (otherlv_8= 'in' ( (lv_ownedInPathName_9_0= rulePathNameCS ) ) )? otherlv_10= '{' ( (lv_ownedParameters_11_0= ruleMappingParameterCS ) )* ( (lv_ownedStatements_12_0= ruleGuardStatementCS ) )* ( (lv_ownedStatements_13_0= ruleCommitStatementCS ) )* ( (lv_ownedStatements_14_0= ruleControlStatementCS ) )* otherlv_15= '}' ) )
            // InternalQVTimperative.g:1825:1: ( () ( (lv_isStrict_1_0= 'strict' ) )? otherlv_2= 'map' (otherlv_3= ':' ( (lv_firstPass_4_0= ruleLOWER ) ) (otherlv_5= '..' ( (lv_lastPass_6_0= ruleLOWER ) ) )? )? ( (lv_name_7_0= ruleUnrestrictedName ) ) (otherlv_8= 'in' ( (lv_ownedInPathName_9_0= rulePathNameCS ) ) )? otherlv_10= '{' ( (lv_ownedParameters_11_0= ruleMappingParameterCS ) )* ( (lv_ownedStatements_12_0= ruleGuardStatementCS ) )* ( (lv_ownedStatements_13_0= ruleCommitStatementCS ) )* ( (lv_ownedStatements_14_0= ruleControlStatementCS ) )* otherlv_15= '}' )
            {
            // InternalQVTimperative.g:1825:1: ( () ( (lv_isStrict_1_0= 'strict' ) )? otherlv_2= 'map' (otherlv_3= ':' ( (lv_firstPass_4_0= ruleLOWER ) ) (otherlv_5= '..' ( (lv_lastPass_6_0= ruleLOWER ) ) )? )? ( (lv_name_7_0= ruleUnrestrictedName ) ) (otherlv_8= 'in' ( (lv_ownedInPathName_9_0= rulePathNameCS ) ) )? otherlv_10= '{' ( (lv_ownedParameters_11_0= ruleMappingParameterCS ) )* ( (lv_ownedStatements_12_0= ruleGuardStatementCS ) )* ( (lv_ownedStatements_13_0= ruleCommitStatementCS ) )* ( (lv_ownedStatements_14_0= ruleControlStatementCS ) )* otherlv_15= '}' )
            // InternalQVTimperative.g:1825:2: () ( (lv_isStrict_1_0= 'strict' ) )? otherlv_2= 'map' (otherlv_3= ':' ( (lv_firstPass_4_0= ruleLOWER ) ) (otherlv_5= '..' ( (lv_lastPass_6_0= ruleLOWER ) ) )? )? ( (lv_name_7_0= ruleUnrestrictedName ) ) (otherlv_8= 'in' ( (lv_ownedInPathName_9_0= rulePathNameCS ) ) )? otherlv_10= '{' ( (lv_ownedParameters_11_0= ruleMappingParameterCS ) )* ( (lv_ownedStatements_12_0= ruleGuardStatementCS ) )* ( (lv_ownedStatements_13_0= ruleCommitStatementCS ) )* ( (lv_ownedStatements_14_0= ruleControlStatementCS ) )* otherlv_15= '}'
            {
            // InternalQVTimperative.g:1825:2: ()
            // InternalQVTimperative.g:1826:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getMappingCSAccess().getMappingCSAction_0(),
                          current);

            }

            }

            // InternalQVTimperative.g:1834:2: ( (lv_isStrict_1_0= 'strict' ) )?
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==25) ) {
                alt41=1;
            }
            switch (alt41) {
                case 1 :
                    // InternalQVTimperative.g:1835:1: (lv_isStrict_1_0= 'strict' )
                    {
                    // InternalQVTimperative.g:1835:1: (lv_isStrict_1_0= 'strict' )
                    // InternalQVTimperative.g:1836:3: lv_isStrict_1_0= 'strict'
                    {
                    lv_isStrict_1_0=(Token)match(input,25,FollowSets000.FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isStrict_1_0, grammarAccess.getMappingCSAccess().getIsStrictStrictKeyword_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMappingCSRule());
                      	        }
                             		setWithLastConsumed(current, "isStrict", true, "strict");

                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,44,FollowSets000.FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getMappingCSAccess().getMapKeyword_2());

            }
            // InternalQVTimperative.g:1853:1: (otherlv_3= ':' ( (lv_firstPass_4_0= ruleLOWER ) ) (otherlv_5= '..' ( (lv_lastPass_6_0= ruleLOWER ) ) )? )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==24) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // InternalQVTimperative.g:1853:3: otherlv_3= ':' ( (lv_firstPass_4_0= ruleLOWER ) ) (otherlv_5= '..' ( (lv_lastPass_6_0= ruleLOWER ) ) )?
                    {
                    otherlv_3=(Token)match(input,24,FollowSets000.FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getMappingCSAccess().getColonKeyword_3_0());

                    }
                    // InternalQVTimperative.g:1857:1: ( (lv_firstPass_4_0= ruleLOWER ) )
                    // InternalQVTimperative.g:1858:1: (lv_firstPass_4_0= ruleLOWER )
                    {
                    // InternalQVTimperative.g:1858:1: (lv_firstPass_4_0= ruleLOWER )
                    // InternalQVTimperative.g:1859:3: lv_firstPass_4_0= ruleLOWER
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getMappingCSAccess().getFirstPassLOWERParserRuleCall_3_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_16);
                    lv_firstPass_4_0=ruleLOWER();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMappingCSRule());
                      	        }
                             		set(
                             			current,
                             			"firstPass",
                              		lv_firstPass_4_0,
                              		"org.eclipse.ocl.xtext.base.Base.LOWER");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:1875:2: (otherlv_5= '..' ( (lv_lastPass_6_0= ruleLOWER ) ) )?
                    int alt42=2;
                    int LA42_0 = input.LA(1);

                    if ( (LA42_0==27) ) {
                        alt42=1;
                    }
                    switch (alt42) {
                        case 1 :
                            // InternalQVTimperative.g:1875:4: otherlv_5= '..' ( (lv_lastPass_6_0= ruleLOWER ) )
                            {
                            otherlv_5=(Token)match(input,27,FollowSets000.FOLLOW_15); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getMappingCSAccess().getFullStopFullStopKeyword_3_2_0());

                            }
                            // InternalQVTimperative.g:1879:1: ( (lv_lastPass_6_0= ruleLOWER ) )
                            // InternalQVTimperative.g:1880:1: (lv_lastPass_6_0= ruleLOWER )
                            {
                            // InternalQVTimperative.g:1880:1: (lv_lastPass_6_0= ruleLOWER )
                            // InternalQVTimperative.g:1881:3: lv_lastPass_6_0= ruleLOWER
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getMappingCSAccess().getLastPassLOWERParserRuleCall_3_2_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_5);
                            lv_lastPass_6_0=ruleLOWER();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getMappingCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"lastPass",
                                      		lv_lastPass_6_0,
                                      		"org.eclipse.ocl.xtext.base.Base.LOWER");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:1897:6: ( (lv_name_7_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:1898:1: (lv_name_7_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:1898:1: (lv_name_7_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:1899:3: lv_name_7_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getMappingCSAccess().getNameUnrestrictedNameParserRuleCall_4_0());

            }
            pushFollow(FollowSets000.FOLLOW_43);
            lv_name_7_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMappingCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_7_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:1915:2: (otherlv_8= 'in' ( (lv_ownedInPathName_9_0= rulePathNameCS ) ) )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==34) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalQVTimperative.g:1915:4: otherlv_8= 'in' ( (lv_ownedInPathName_9_0= rulePathNameCS ) )
                    {
                    otherlv_8=(Token)match(input,34,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getMappingCSAccess().getInKeyword_5_0());

                    }
                    // InternalQVTimperative.g:1919:1: ( (lv_ownedInPathName_9_0= rulePathNameCS ) )
                    // InternalQVTimperative.g:1920:1: (lv_ownedInPathName_9_0= rulePathNameCS )
                    {
                    // InternalQVTimperative.g:1920:1: (lv_ownedInPathName_9_0= rulePathNameCS )
                    // InternalQVTimperative.g:1921:3: lv_ownedInPathName_9_0= rulePathNameCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getMappingCSAccess().getOwnedInPathNamePathNameCSParserRuleCall_5_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_ownedInPathName_9_0=rulePathNameCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMappingCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedInPathName",
                              		lv_ownedInPathName_9_0,
                              		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,35,FollowSets000.FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_10, grammarAccess.getMappingCSAccess().getLeftCurlyBracketKeyword_6());

            }
            // InternalQVTimperative.g:1941:1: ( (lv_ownedParameters_11_0= ruleMappingParameterCS ) )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( (LA45_0==23||LA45_0==34||LA45_0==38) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // InternalQVTimperative.g:1942:1: (lv_ownedParameters_11_0= ruleMappingParameterCS )
            	    {
            	    // InternalQVTimperative.g:1942:1: (lv_ownedParameters_11_0= ruleMappingParameterCS )
            	    // InternalQVTimperative.g:1943:3: lv_ownedParameters_11_0= ruleMappingParameterCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getMappingCSAccess().getOwnedParametersMappingParameterCSParserRuleCall_7_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_32);
            	    lv_ownedParameters_11_0=ruleMappingParameterCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMappingCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedParameters",
            	              		lv_ownedParameters_11_0,
            	              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.MappingParameterCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);

            // InternalQVTimperative.g:1959:3: ( (lv_ownedStatements_12_0= ruleGuardStatementCS ) )*
            loop46:
            do {
                int alt46=2;
                alt46 = dfa46.predict(input);
                switch (alt46) {
            	case 1 :
            	    // InternalQVTimperative.g:1960:1: (lv_ownedStatements_12_0= ruleGuardStatementCS )
            	    {
            	    // InternalQVTimperative.g:1960:1: (lv_ownedStatements_12_0= ruleGuardStatementCS )
            	    // InternalQVTimperative.g:1961:3: lv_ownedStatements_12_0= ruleGuardStatementCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getMappingCSAccess().getOwnedStatementsGuardStatementCSParserRuleCall_8_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_33);
            	    lv_ownedStatements_12_0=ruleGuardStatementCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMappingCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedStatements",
            	              		lv_ownedStatements_12_0,
            	              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.GuardStatementCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop46;
                }
            } while (true);

            // InternalQVTimperative.g:1977:3: ( (lv_ownedStatements_13_0= ruleCommitStatementCS ) )*
            loop47:
            do {
                int alt47=2;
                alt47 = dfa47.predict(input);
                switch (alt47) {
            	case 1 :
            	    // InternalQVTimperative.g:1978:1: (lv_ownedStatements_13_0= ruleCommitStatementCS )
            	    {
            	    // InternalQVTimperative.g:1978:1: (lv_ownedStatements_13_0= ruleCommitStatementCS )
            	    // InternalQVTimperative.g:1979:3: lv_ownedStatements_13_0= ruleCommitStatementCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getMappingCSAccess().getOwnedStatementsCommitStatementCSParserRuleCall_9_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_34);
            	    lv_ownedStatements_13_0=ruleCommitStatementCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMappingCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedStatements",
            	              		lv_ownedStatements_13_0,
            	              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.CommitStatementCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);

            // InternalQVTimperative.g:1995:3: ( (lv_ownedStatements_14_0= ruleControlStatementCS ) )*
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==17||LA48_0==19||(LA48_0>=45 && LA48_0<=48)) ) {
                    alt48=1;
                }


                switch (alt48) {
            	case 1 :
            	    // InternalQVTimperative.g:1996:1: (lv_ownedStatements_14_0= ruleControlStatementCS )
            	    {
            	    // InternalQVTimperative.g:1996:1: (lv_ownedStatements_14_0= ruleControlStatementCS )
            	    // InternalQVTimperative.g:1997:3: lv_ownedStatements_14_0= ruleControlStatementCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getMappingCSAccess().getOwnedStatementsControlStatementCSParserRuleCall_10_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_35);
            	    lv_ownedStatements_14_0=ruleControlStatementCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMappingCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedStatements",
            	              		lv_ownedStatements_14_0,
            	              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.ControlStatementCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);

            otherlv_15=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_15, grammarAccess.getMappingCSAccess().getRightCurlyBracketKeyword_11());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMappingCS"


    // $ANTLR start "entryRuleMappingCallCS"
    // InternalQVTimperative.g:2025:1: entryRuleMappingCallCS returns [EObject current=null] : iv_ruleMappingCallCS= ruleMappingCallCS EOF ;
    public final EObject entryRuleMappingCallCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMappingCallCS = null;


        try {
            // InternalQVTimperative.g:2026:2: (iv_ruleMappingCallCS= ruleMappingCallCS EOF )
            // InternalQVTimperative.g:2027:2: iv_ruleMappingCallCS= ruleMappingCallCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingCallCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMappingCallCS=ruleMappingCallCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMappingCallCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMappingCallCS"


    // $ANTLR start "ruleMappingCallCS"
    // InternalQVTimperative.g:2034:1: ruleMappingCallCS returns [EObject current=null] : ( () (otherlv_1= 'call' | ( (lv_isInstall_2_0= 'install' ) ) | ( (lv_isInvoke_3_0= 'invoke' ) ) ) ( (lv_ownedPathName_4_0= rulePathNameCS ) ) otherlv_5= '{' ( (lv_ownedBindings_6_0= ruleMappingParameterBindingCS ) )* otherlv_7= '}' ) ;
    public final EObject ruleMappingCallCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_isInstall_2_0=null;
        Token lv_isInvoke_3_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_ownedPathName_4_0 = null;

        EObject lv_ownedBindings_6_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:2037:28: ( ( () (otherlv_1= 'call' | ( (lv_isInstall_2_0= 'install' ) ) | ( (lv_isInvoke_3_0= 'invoke' ) ) ) ( (lv_ownedPathName_4_0= rulePathNameCS ) ) otherlv_5= '{' ( (lv_ownedBindings_6_0= ruleMappingParameterBindingCS ) )* otherlv_7= '}' ) )
            // InternalQVTimperative.g:2038:1: ( () (otherlv_1= 'call' | ( (lv_isInstall_2_0= 'install' ) ) | ( (lv_isInvoke_3_0= 'invoke' ) ) ) ( (lv_ownedPathName_4_0= rulePathNameCS ) ) otherlv_5= '{' ( (lv_ownedBindings_6_0= ruleMappingParameterBindingCS ) )* otherlv_7= '}' )
            {
            // InternalQVTimperative.g:2038:1: ( () (otherlv_1= 'call' | ( (lv_isInstall_2_0= 'install' ) ) | ( (lv_isInvoke_3_0= 'invoke' ) ) ) ( (lv_ownedPathName_4_0= rulePathNameCS ) ) otherlv_5= '{' ( (lv_ownedBindings_6_0= ruleMappingParameterBindingCS ) )* otherlv_7= '}' )
            // InternalQVTimperative.g:2038:2: () (otherlv_1= 'call' | ( (lv_isInstall_2_0= 'install' ) ) | ( (lv_isInvoke_3_0= 'invoke' ) ) ) ( (lv_ownedPathName_4_0= rulePathNameCS ) ) otherlv_5= '{' ( (lv_ownedBindings_6_0= ruleMappingParameterBindingCS ) )* otherlv_7= '}'
            {
            // InternalQVTimperative.g:2038:2: ()
            // InternalQVTimperative.g:2039:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getMappingCallCSAccess().getMappingCallCSAction_0(),
                          current);

            }

            }

            // InternalQVTimperative.g:2047:2: (otherlv_1= 'call' | ( (lv_isInstall_2_0= 'install' ) ) | ( (lv_isInvoke_3_0= 'invoke' ) ) )
            int alt49=3;
            switch ( input.LA(1) ) {
            case 45:
                {
                alt49=1;
                }
                break;
            case 46:
                {
                alt49=2;
                }
                break;
            case 47:
                {
                alt49=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 49, 0, input);

                throw nvae;
            }

            switch (alt49) {
                case 1 :
                    // InternalQVTimperative.g:2047:4: otherlv_1= 'call'
                    {
                    otherlv_1=(Token)match(input,45,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getMappingCallCSAccess().getCallKeyword_1_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:2052:6: ( (lv_isInstall_2_0= 'install' ) )
                    {
                    // InternalQVTimperative.g:2052:6: ( (lv_isInstall_2_0= 'install' ) )
                    // InternalQVTimperative.g:2053:1: (lv_isInstall_2_0= 'install' )
                    {
                    // InternalQVTimperative.g:2053:1: (lv_isInstall_2_0= 'install' )
                    // InternalQVTimperative.g:2054:3: lv_isInstall_2_0= 'install'
                    {
                    lv_isInstall_2_0=(Token)match(input,46,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isInstall_2_0, grammarAccess.getMappingCallCSAccess().getIsInstallInstallKeyword_1_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMappingCallCSRule());
                      	        }
                             		setWithLastConsumed(current, "isInstall", true, "install");

                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:2068:6: ( (lv_isInvoke_3_0= 'invoke' ) )
                    {
                    // InternalQVTimperative.g:2068:6: ( (lv_isInvoke_3_0= 'invoke' ) )
                    // InternalQVTimperative.g:2069:1: (lv_isInvoke_3_0= 'invoke' )
                    {
                    // InternalQVTimperative.g:2069:1: (lv_isInvoke_3_0= 'invoke' )
                    // InternalQVTimperative.g:2070:3: lv_isInvoke_3_0= 'invoke'
                    {
                    lv_isInvoke_3_0=(Token)match(input,47,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isInvoke_3_0, grammarAccess.getMappingCallCSAccess().getIsInvokeInvokeKeyword_1_2_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMappingCallCSRule());
                      	        }
                             		setWithLastConsumed(current, "isInvoke", true, "invoke");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:2083:3: ( (lv_ownedPathName_4_0= rulePathNameCS ) )
            // InternalQVTimperative.g:2084:1: (lv_ownedPathName_4_0= rulePathNameCS )
            {
            // InternalQVTimperative.g:2084:1: (lv_ownedPathName_4_0= rulePathNameCS )
            // InternalQVTimperative.g:2085:3: lv_ownedPathName_4_0= rulePathNameCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getMappingCallCSAccess().getOwnedPathNamePathNameCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_31);
            lv_ownedPathName_4_0=rulePathNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMappingCallCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedPathName",
                      		lv_ownedPathName_4_0,
                      		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_5=(Token)match(input,35,FollowSets000.FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getMappingCallCSAccess().getLeftCurlyBracketKeyword_3());

            }
            // InternalQVTimperative.g:2105:1: ( (lv_ownedBindings_6_0= ruleMappingParameterBindingCS ) )*
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( ((LA50_0>=RULE_SIMPLE_ID && LA50_0<=RULE_ESCAPED_ID)||LA50_0==17||LA50_0==19||(LA50_0>=22 && LA50_0<=23)||(LA50_0>=25 && LA50_0<=26)||(LA50_0>=29 && LA50_0<=33)||LA50_0==39||(LA50_0>=43 && LA50_0<=51)||(LA50_0>=53 && LA50_0<=54)||(LA50_0>=57 && LA50_0<=59)||(LA50_0>=61 && LA50_0<=66)||LA50_0==68||LA50_0==70||LA50_0==72||LA50_0==75||LA50_0==77||LA50_0==79||(LA50_0>=81 && LA50_0<=85)||(LA50_0>=87 && LA50_0<=92)||LA50_0==94||LA50_0==96||(LA50_0>=98 && LA50_0<=101)) ) {
                    alt50=1;
                }


                switch (alt50) {
            	case 1 :
            	    // InternalQVTimperative.g:2106:1: (lv_ownedBindings_6_0= ruleMappingParameterBindingCS )
            	    {
            	    // InternalQVTimperative.g:2106:1: (lv_ownedBindings_6_0= ruleMappingParameterBindingCS )
            	    // InternalQVTimperative.g:2107:3: lv_ownedBindings_6_0= ruleMappingParameterBindingCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getMappingCallCSAccess().getOwnedBindingsMappingParameterBindingCSParserRuleCall_4_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_44);
            	    lv_ownedBindings_6_0=ruleMappingParameterBindingCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMappingCallCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedBindings",
            	              		lv_ownedBindings_6_0,
            	              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.MappingParameterBindingCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);

            otherlv_7=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getMappingCallCSAccess().getRightCurlyBracketKeyword_5());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMappingCallCS"


    // $ANTLR start "entryRuleMappingLoopCS"
    // InternalQVTimperative.g:2135:1: entryRuleMappingLoopCS returns [EObject current=null] : iv_ruleMappingLoopCS= ruleMappingLoopCS EOF ;
    public final EObject entryRuleMappingLoopCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMappingLoopCS = null;


        try {
            // InternalQVTimperative.g:2136:2: (iv_ruleMappingLoopCS= ruleMappingLoopCS EOF )
            // InternalQVTimperative.g:2137:2: iv_ruleMappingLoopCS= ruleMappingLoopCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingLoopCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMappingLoopCS=ruleMappingLoopCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMappingLoopCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMappingLoopCS"


    // $ANTLR start "ruleMappingLoopCS"
    // InternalQVTimperative.g:2144:1: ruleMappingLoopCS returns [EObject current=null] : ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'for' ( (lv_ownedIterator_5_0= ruleMappingIteratorCS ) ) otherlv_6= 'in' ( (lv_ownedInExpression_7_0= ruleExpCS ) ) otherlv_8= '{' ( (lv_ownedMappingStatements_9_0= ruleControlStatementCS ) )+ otherlv_10= '}' ) ;
    public final EObject ruleMappingLoopCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        EObject lv_observedProperties_1_0 = null;

        EObject lv_observedProperties_3_0 = null;

        EObject lv_ownedIterator_5_0 = null;

        EObject lv_ownedInExpression_7_0 = null;

        EObject lv_ownedMappingStatements_9_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:2147:28: ( ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'for' ( (lv_ownedIterator_5_0= ruleMappingIteratorCS ) ) otherlv_6= 'in' ( (lv_ownedInExpression_7_0= ruleExpCS ) ) otherlv_8= '{' ( (lv_ownedMappingStatements_9_0= ruleControlStatementCS ) )+ otherlv_10= '}' ) )
            // InternalQVTimperative.g:2148:1: ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'for' ( (lv_ownedIterator_5_0= ruleMappingIteratorCS ) ) otherlv_6= 'in' ( (lv_ownedInExpression_7_0= ruleExpCS ) ) otherlv_8= '{' ( (lv_ownedMappingStatements_9_0= ruleControlStatementCS ) )+ otherlv_10= '}' )
            {
            // InternalQVTimperative.g:2148:1: ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'for' ( (lv_ownedIterator_5_0= ruleMappingIteratorCS ) ) otherlv_6= 'in' ( (lv_ownedInExpression_7_0= ruleExpCS ) ) otherlv_8= '{' ( (lv_ownedMappingStatements_9_0= ruleControlStatementCS ) )+ otherlv_10= '}' )
            // InternalQVTimperative.g:2148:2: (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'for' ( (lv_ownedIterator_5_0= ruleMappingIteratorCS ) ) otherlv_6= 'in' ( (lv_ownedInExpression_7_0= ruleExpCS ) ) otherlv_8= '{' ( (lv_ownedMappingStatements_9_0= ruleControlStatementCS ) )+ otherlv_10= '}'
            {
            // InternalQVTimperative.g:2148:2: (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==17) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // InternalQVTimperative.g:2148:4: otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )*
                    {
                    otherlv_0=(Token)match(input,17,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getMappingLoopCSAccess().getObserveKeyword_0_0());

                    }
                    // InternalQVTimperative.g:2152:1: ( (lv_observedProperties_1_0= rulePathNameCS ) )
                    // InternalQVTimperative.g:2153:1: (lv_observedProperties_1_0= rulePathNameCS )
                    {
                    // InternalQVTimperative.g:2153:1: (lv_observedProperties_1_0= rulePathNameCS )
                    // InternalQVTimperative.g:2154:3: lv_observedProperties_1_0= rulePathNameCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getMappingLoopCSAccess().getObservedPropertiesPathNameCSParserRuleCall_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_45);
                    lv_observedProperties_1_0=rulePathNameCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMappingLoopCSRule());
                      	        }
                             		add(
                             			current,
                             			"observedProperties",
                              		lv_observedProperties_1_0,
                              		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:2170:2: (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )*
                    loop51:
                    do {
                        int alt51=2;
                        int LA51_0 = input.LA(1);

                        if ( (LA51_0==18) ) {
                            alt51=1;
                        }


                        switch (alt51) {
                    	case 1 :
                    	    // InternalQVTimperative.g:2170:4: otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) )
                    	    {
                    	    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getMappingLoopCSAccess().getCommaKeyword_0_2_0());

                    	    }
                    	    // InternalQVTimperative.g:2174:1: ( (lv_observedProperties_3_0= rulePathNameCS ) )
                    	    // InternalQVTimperative.g:2175:1: (lv_observedProperties_3_0= rulePathNameCS )
                    	    {
                    	    // InternalQVTimperative.g:2175:1: (lv_observedProperties_3_0= rulePathNameCS )
                    	    // InternalQVTimperative.g:2176:3: lv_observedProperties_3_0= rulePathNameCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getMappingLoopCSAccess().getObservedPropertiesPathNameCSParserRuleCall_0_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_45);
                    	    lv_observedProperties_3_0=rulePathNameCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMappingLoopCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"observedProperties",
                    	              		lv_observedProperties_3_0,
                    	              		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop51;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_4=(Token)match(input,48,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getMappingLoopCSAccess().getForKeyword_1());

            }
            // InternalQVTimperative.g:2196:1: ( (lv_ownedIterator_5_0= ruleMappingIteratorCS ) )
            // InternalQVTimperative.g:2197:1: (lv_ownedIterator_5_0= ruleMappingIteratorCS )
            {
            // InternalQVTimperative.g:2197:1: (lv_ownedIterator_5_0= ruleMappingIteratorCS )
            // InternalQVTimperative.g:2198:3: lv_ownedIterator_5_0= ruleMappingIteratorCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getMappingLoopCSAccess().getOwnedIteratorMappingIteratorCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_46);
            lv_ownedIterator_5_0=ruleMappingIteratorCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMappingLoopCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedIterator",
                      		lv_ownedIterator_5_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.MappingIteratorCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_6=(Token)match(input,34,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getMappingLoopCSAccess().getInKeyword_3());

            }
            // InternalQVTimperative.g:2218:1: ( (lv_ownedInExpression_7_0= ruleExpCS ) )
            // InternalQVTimperative.g:2219:1: (lv_ownedInExpression_7_0= ruleExpCS )
            {
            // InternalQVTimperative.g:2219:1: (lv_ownedInExpression_7_0= ruleExpCS )
            // InternalQVTimperative.g:2220:3: lv_ownedInExpression_7_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getMappingLoopCSAccess().getOwnedInExpressionExpCSParserRuleCall_4_0());

            }
            pushFollow(FollowSets000.FOLLOW_31);
            lv_ownedInExpression_7_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMappingLoopCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedInExpression",
                      		lv_ownedInExpression_7_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_8=(Token)match(input,35,FollowSets000.FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getMappingLoopCSAccess().getLeftCurlyBracketKeyword_5());

            }
            // InternalQVTimperative.g:2240:1: ( (lv_ownedMappingStatements_9_0= ruleControlStatementCS ) )+
            int cnt53=0;
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( (LA53_0==17||LA53_0==19||(LA53_0>=45 && LA53_0<=48)) ) {
                    alt53=1;
                }


                switch (alt53) {
            	case 1 :
            	    // InternalQVTimperative.g:2241:1: (lv_ownedMappingStatements_9_0= ruleControlStatementCS )
            	    {
            	    // InternalQVTimperative.g:2241:1: (lv_ownedMappingStatements_9_0= ruleControlStatementCS )
            	    // InternalQVTimperative.g:2242:3: lv_ownedMappingStatements_9_0= ruleControlStatementCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getMappingLoopCSAccess().getOwnedMappingStatementsControlStatementCSParserRuleCall_6_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_35);
            	    lv_ownedMappingStatements_9_0=ruleControlStatementCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMappingLoopCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedMappingStatements",
            	              		lv_ownedMappingStatements_9_0,
            	              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.ControlStatementCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt53 >= 1 ) break loop53;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(53, input);
                        throw eee;
                }
                cnt53++;
            } while (true);

            otherlv_10=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_10, grammarAccess.getMappingLoopCSAccess().getRightCurlyBracketKeyword_7());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMappingLoopCS"


    // $ANTLR start "entryRuleMappingIteratorCS"
    // InternalQVTimperative.g:2270:1: entryRuleMappingIteratorCS returns [EObject current=null] : iv_ruleMappingIteratorCS= ruleMappingIteratorCS EOF ;
    public final EObject entryRuleMappingIteratorCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMappingIteratorCS = null;


        try {
            // InternalQVTimperative.g:2271:2: (iv_ruleMappingIteratorCS= ruleMappingIteratorCS EOF )
            // InternalQVTimperative.g:2272:2: iv_ruleMappingIteratorCS= ruleMappingIteratorCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingIteratorCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMappingIteratorCS=ruleMappingIteratorCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMappingIteratorCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMappingIteratorCS"


    // $ANTLR start "ruleMappingIteratorCS"
    // InternalQVTimperative.g:2279:1: ruleMappingIteratorCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? ) ;
    public final EObject ruleMappingIteratorCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedType_2_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:2282:28: ( ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? ) )
            // InternalQVTimperative.g:2283:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? )
            {
            // InternalQVTimperative.g:2283:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? )
            // InternalQVTimperative.g:2283:2: ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )?
            {
            // InternalQVTimperative.g:2283:2: ( (lv_name_0_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:2284:1: (lv_name_0_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:2284:1: (lv_name_0_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:2285:3: lv_name_0_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getMappingIteratorCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_48);
            lv_name_0_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMappingIteratorCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_0_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:2301:2: (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==24) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalQVTimperative.g:2301:4: otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) )
                    {
                    otherlv_1=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getMappingIteratorCSAccess().getColonKeyword_1_0());

                    }
                    // InternalQVTimperative.g:2305:1: ( (lv_ownedType_2_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:2306:1: (lv_ownedType_2_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:2306:1: (lv_ownedType_2_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:2307:3: lv_ownedType_2_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getMappingIteratorCSAccess().getOwnedTypeTypeExpCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedType_2_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMappingIteratorCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMappingIteratorCS"


    // $ANTLR start "entryRuleMappingParameterBindingCS"
    // InternalQVTimperative.g:2331:1: entryRuleMappingParameterBindingCS returns [EObject current=null] : iv_ruleMappingParameterBindingCS= ruleMappingParameterBindingCS EOF ;
    public final EObject entryRuleMappingParameterBindingCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMappingParameterBindingCS = null;


        try {
            // InternalQVTimperative.g:2332:2: (iv_ruleMappingParameterBindingCS= ruleMappingParameterBindingCS EOF )
            // InternalQVTimperative.g:2333:2: iv_ruleMappingParameterBindingCS= ruleMappingParameterBindingCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingParameterBindingCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMappingParameterBindingCS=ruleMappingParameterBindingCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMappingParameterBindingCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMappingParameterBindingCS"


    // $ANTLR start "ruleMappingParameterBindingCS"
    // InternalQVTimperative.g:2340:1: ruleMappingParameterBindingCS returns [EObject current=null] : (this_AppendParameterBindingCS_0= ruleAppendParameterBindingCS | this_GuardParameterBindingCS_1= ruleGuardParameterBindingCS | this_LoopParameterBindingCS_2= ruleLoopParameterBindingCS | this_SimpleParameterBindingCS_3= ruleSimpleParameterBindingCS ) ;
    public final EObject ruleMappingParameterBindingCS() throws RecognitionException {
        EObject current = null;

        EObject this_AppendParameterBindingCS_0 = null;

        EObject this_GuardParameterBindingCS_1 = null;

        EObject this_LoopParameterBindingCS_2 = null;

        EObject this_SimpleParameterBindingCS_3 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:2343:28: ( (this_AppendParameterBindingCS_0= ruleAppendParameterBindingCS | this_GuardParameterBindingCS_1= ruleGuardParameterBindingCS | this_LoopParameterBindingCS_2= ruleLoopParameterBindingCS | this_SimpleParameterBindingCS_3= ruleSimpleParameterBindingCS ) )
            // InternalQVTimperative.g:2344:1: (this_AppendParameterBindingCS_0= ruleAppendParameterBindingCS | this_GuardParameterBindingCS_1= ruleGuardParameterBindingCS | this_LoopParameterBindingCS_2= ruleLoopParameterBindingCS | this_SimpleParameterBindingCS_3= ruleSimpleParameterBindingCS )
            {
            // InternalQVTimperative.g:2344:1: (this_AppendParameterBindingCS_0= ruleAppendParameterBindingCS | this_GuardParameterBindingCS_1= ruleGuardParameterBindingCS | this_LoopParameterBindingCS_2= ruleLoopParameterBindingCS | this_SimpleParameterBindingCS_3= ruleSimpleParameterBindingCS )
            int alt55=4;
            alt55 = dfa55.predict(input);
            switch (alt55) {
                case 1 :
                    // InternalQVTimperative.g:2345:2: this_AppendParameterBindingCS_0= ruleAppendParameterBindingCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getMappingParameterBindingCSAccess().getAppendParameterBindingCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AppendParameterBindingCS_0=ruleAppendParameterBindingCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AppendParameterBindingCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:2358:2: this_GuardParameterBindingCS_1= ruleGuardParameterBindingCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getMappingParameterBindingCSAccess().getGuardParameterBindingCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_GuardParameterBindingCS_1=ruleGuardParameterBindingCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_GuardParameterBindingCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:2371:2: this_LoopParameterBindingCS_2= ruleLoopParameterBindingCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getMappingParameterBindingCSAccess().getLoopParameterBindingCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_LoopParameterBindingCS_2=ruleLoopParameterBindingCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_LoopParameterBindingCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:2384:2: this_SimpleParameterBindingCS_3= ruleSimpleParameterBindingCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getMappingParameterBindingCSAccess().getSimpleParameterBindingCSParserRuleCall_3());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SimpleParameterBindingCS_3=ruleSimpleParameterBindingCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_SimpleParameterBindingCS_3;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMappingParameterBindingCS"


    // $ANTLR start "entryRuleMappingParameterCS"
    // InternalQVTimperative.g:2403:1: entryRuleMappingParameterCS returns [EObject current=null] : iv_ruleMappingParameterCS= ruleMappingParameterCS EOF ;
    public final EObject entryRuleMappingParameterCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMappingParameterCS = null;


        try {
            // InternalQVTimperative.g:2404:2: (iv_ruleMappingParameterCS= ruleMappingParameterCS EOF )
            // InternalQVTimperative.g:2405:2: iv_ruleMappingParameterCS= ruleMappingParameterCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingParameterCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMappingParameterCS=ruleMappingParameterCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMappingParameterCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMappingParameterCS"


    // $ANTLR start "ruleMappingParameterCS"
    // InternalQVTimperative.g:2412:1: ruleMappingParameterCS returns [EObject current=null] : (this_AppendParameterCS_0= ruleAppendParameterCS | this_GuardParameterCS_1= ruleGuardParameterCS | this_SimpleParameterCS_2= ruleSimpleParameterCS ) ;
    public final EObject ruleMappingParameterCS() throws RecognitionException {
        EObject current = null;

        EObject this_AppendParameterCS_0 = null;

        EObject this_GuardParameterCS_1 = null;

        EObject this_SimpleParameterCS_2 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:2415:28: ( (this_AppendParameterCS_0= ruleAppendParameterCS | this_GuardParameterCS_1= ruleGuardParameterCS | this_SimpleParameterCS_2= ruleSimpleParameterCS ) )
            // InternalQVTimperative.g:2416:1: (this_AppendParameterCS_0= ruleAppendParameterCS | this_GuardParameterCS_1= ruleGuardParameterCS | this_SimpleParameterCS_2= ruleSimpleParameterCS )
            {
            // InternalQVTimperative.g:2416:1: (this_AppendParameterCS_0= ruleAppendParameterCS | this_GuardParameterCS_1= ruleGuardParameterCS | this_SimpleParameterCS_2= ruleSimpleParameterCS )
            int alt56=3;
            switch ( input.LA(1) ) {
            case 23:
                {
                alt56=1;
                }
                break;
            case 38:
                {
                alt56=2;
                }
                break;
            case 34:
                {
                alt56=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;
            }

            switch (alt56) {
                case 1 :
                    // InternalQVTimperative.g:2417:2: this_AppendParameterCS_0= ruleAppendParameterCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getMappingParameterCSAccess().getAppendParameterCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AppendParameterCS_0=ruleAppendParameterCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AppendParameterCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:2430:2: this_GuardParameterCS_1= ruleGuardParameterCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getMappingParameterCSAccess().getGuardParameterCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_GuardParameterCS_1=ruleGuardParameterCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_GuardParameterCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:2443:2: this_SimpleParameterCS_2= ruleSimpleParameterCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getMappingParameterCSAccess().getSimpleParameterCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SimpleParameterCS_2=ruleSimpleParameterCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_SimpleParameterCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMappingParameterCS"


    // $ANTLR start "entryRuleNewStatementCS"
    // InternalQVTimperative.g:2462:1: entryRuleNewStatementCS returns [EObject current=null] : iv_ruleNewStatementCS= ruleNewStatementCS EOF ;
    public final EObject entryRuleNewStatementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNewStatementCS = null;


        try {
            // InternalQVTimperative.g:2463:2: (iv_ruleNewStatementCS= ruleNewStatementCS EOF )
            // InternalQVTimperative.g:2464:2: iv_ruleNewStatementCS= ruleNewStatementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNewStatementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNewStatementCS=ruleNewStatementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNewStatementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNewStatementCS"


    // $ANTLR start "ruleNewStatementCS"
    // InternalQVTimperative.g:2471:1: ruleNewStatementCS returns [EObject current=null] : ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isContained_4_0= 'contained' ) )? otherlv_5= 'new' otherlv_6= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_8_0= ruleUnrestrictedName ) ) otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypeExpCS ) ) (otherlv_11= ':=' ( (lv_ownedExpression_12_0= ruleExpCS ) ) )? otherlv_13= ';' ) ;
    public final EObject ruleNewStatementCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token lv_isContained_4_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_observedProperties_1_0 = null;

        EObject lv_observedProperties_3_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_ownedType_10_0 = null;

        EObject lv_ownedExpression_12_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:2474:28: ( ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isContained_4_0= 'contained' ) )? otherlv_5= 'new' otherlv_6= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_8_0= ruleUnrestrictedName ) ) otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypeExpCS ) ) (otherlv_11= ':=' ( (lv_ownedExpression_12_0= ruleExpCS ) ) )? otherlv_13= ';' ) )
            // InternalQVTimperative.g:2475:1: ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isContained_4_0= 'contained' ) )? otherlv_5= 'new' otherlv_6= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_8_0= ruleUnrestrictedName ) ) otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypeExpCS ) ) (otherlv_11= ':=' ( (lv_ownedExpression_12_0= ruleExpCS ) ) )? otherlv_13= ';' )
            {
            // InternalQVTimperative.g:2475:1: ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isContained_4_0= 'contained' ) )? otherlv_5= 'new' otherlv_6= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_8_0= ruleUnrestrictedName ) ) otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypeExpCS ) ) (otherlv_11= ':=' ( (lv_ownedExpression_12_0= ruleExpCS ) ) )? otherlv_13= ';' )
            // InternalQVTimperative.g:2475:2: (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isContained_4_0= 'contained' ) )? otherlv_5= 'new' otherlv_6= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_8_0= ruleUnrestrictedName ) ) otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypeExpCS ) ) (otherlv_11= ':=' ( (lv_ownedExpression_12_0= ruleExpCS ) ) )? otherlv_13= ';'
            {
            // InternalQVTimperative.g:2475:2: (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==17) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalQVTimperative.g:2475:4: otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )*
                    {
                    otherlv_0=(Token)match(input,17,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getNewStatementCSAccess().getObserveKeyword_0_0());

                    }
                    // InternalQVTimperative.g:2479:1: ( (lv_observedProperties_1_0= rulePathNameCS ) )
                    // InternalQVTimperative.g:2480:1: (lv_observedProperties_1_0= rulePathNameCS )
                    {
                    // InternalQVTimperative.g:2480:1: (lv_observedProperties_1_0= rulePathNameCS )
                    // InternalQVTimperative.g:2481:3: lv_observedProperties_1_0= rulePathNameCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNewStatementCSAccess().getObservedPropertiesPathNameCSParserRuleCall_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_49);
                    lv_observedProperties_1_0=rulePathNameCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNewStatementCSRule());
                      	        }
                             		add(
                             			current,
                             			"observedProperties",
                              		lv_observedProperties_1_0,
                              		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:2497:2: (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )*
                    loop57:
                    do {
                        int alt57=2;
                        int LA57_0 = input.LA(1);

                        if ( (LA57_0==18) ) {
                            alt57=1;
                        }


                        switch (alt57) {
                    	case 1 :
                    	    // InternalQVTimperative.g:2497:4: otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) )
                    	    {
                    	    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getNewStatementCSAccess().getCommaKeyword_0_2_0());

                    	    }
                    	    // InternalQVTimperative.g:2501:1: ( (lv_observedProperties_3_0= rulePathNameCS ) )
                    	    // InternalQVTimperative.g:2502:1: (lv_observedProperties_3_0= rulePathNameCS )
                    	    {
                    	    // InternalQVTimperative.g:2502:1: (lv_observedProperties_3_0= rulePathNameCS )
                    	    // InternalQVTimperative.g:2503:3: lv_observedProperties_3_0= rulePathNameCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getNewStatementCSAccess().getObservedPropertiesPathNameCSParserRuleCall_0_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_49);
                    	    lv_observedProperties_3_0=rulePathNameCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getNewStatementCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"observedProperties",
                    	              		lv_observedProperties_3_0,
                    	              		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop57;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalQVTimperative.g:2519:6: ( (lv_isContained_4_0= 'contained' ) )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==49) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    // InternalQVTimperative.g:2520:1: (lv_isContained_4_0= 'contained' )
                    {
                    // InternalQVTimperative.g:2520:1: (lv_isContained_4_0= 'contained' )
                    // InternalQVTimperative.g:2521:3: lv_isContained_4_0= 'contained'
                    {
                    lv_isContained_4_0=(Token)match(input,49,FollowSets000.FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isContained_4_0, grammarAccess.getNewStatementCSAccess().getIsContainedContainedKeyword_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getNewStatementCSRule());
                      	        }
                             		setWithLastConsumed(current, "isContained", true, "contained");

                    }

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,50,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getNewStatementCSAccess().getNewKeyword_2());

            }
            otherlv_6=(Token)match(input,24,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getNewStatementCSAccess().getColonKeyword_3());

            }
            // InternalQVTimperative.g:2542:1: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:2543:1: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:2543:1: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:2544:3: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              		  /* */

            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getNewStatementCSRule());
              	        }

            }
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getNewStatementCSAccess().getReferredTypedModelImperativeTypedModelCrossReference_4_0());

            }
            pushFollow(FollowSets000.FOLLOW_5);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:2560:2: ( (lv_name_8_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:2561:1: (lv_name_8_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:2561:1: (lv_name_8_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:2562:3: lv_name_8_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getNewStatementCSAccess().getNameUnrestrictedNameParserRuleCall_5_0());

            }
            pushFollow(FollowSets000.FOLLOW_11);
            lv_name_8_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNewStatementCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_8_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_9=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getNewStatementCSAccess().getColonKeyword_6());

            }
            // InternalQVTimperative.g:2582:1: ( (lv_ownedType_10_0= ruleTypeExpCS ) )
            // InternalQVTimperative.g:2583:1: (lv_ownedType_10_0= ruleTypeExpCS )
            {
            // InternalQVTimperative.g:2583:1: (lv_ownedType_10_0= ruleTypeExpCS )
            // InternalQVTimperative.g:2584:3: lv_ownedType_10_0= ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getNewStatementCSAccess().getOwnedTypeTypeExpCSParserRuleCall_7_0());

            }
            pushFollow(FollowSets000.FOLLOW_18);
            lv_ownedType_10_0=ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNewStatementCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedType",
                      		lv_ownedType_10_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:2600:2: (otherlv_11= ':=' ( (lv_ownedExpression_12_0= ruleExpCS ) ) )?
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==28) ) {
                alt60=1;
            }
            switch (alt60) {
                case 1 :
                    // InternalQVTimperative.g:2600:4: otherlv_11= ':=' ( (lv_ownedExpression_12_0= ruleExpCS ) )
                    {
                    otherlv_11=(Token)match(input,28,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_11, grammarAccess.getNewStatementCSAccess().getColonEqualsSignKeyword_8_0());

                    }
                    // InternalQVTimperative.g:2604:1: ( (lv_ownedExpression_12_0= ruleExpCS ) )
                    // InternalQVTimperative.g:2605:1: (lv_ownedExpression_12_0= ruleExpCS )
                    {
                    // InternalQVTimperative.g:2605:1: (lv_ownedExpression_12_0= ruleExpCS )
                    // InternalQVTimperative.g:2606:3: lv_ownedExpression_12_0= ruleExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNewStatementCSAccess().getOwnedExpressionExpCSParserRuleCall_8_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_ownedExpression_12_0=ruleExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNewStatementCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedExpression",
                              		lv_ownedExpression_12_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_13=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_13, grammarAccess.getNewStatementCSAccess().getSemicolonKeyword_9());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNewStatementCS"


    // $ANTLR start "entryRuleParamDeclarationCS"
    // InternalQVTimperative.g:2634:1: entryRuleParamDeclarationCS returns [EObject current=null] : iv_ruleParamDeclarationCS= ruleParamDeclarationCS EOF ;
    public final EObject entryRuleParamDeclarationCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParamDeclarationCS = null;


        try {
            // InternalQVTimperative.g:2635:2: (iv_ruleParamDeclarationCS= ruleParamDeclarationCS EOF )
            // InternalQVTimperative.g:2636:2: iv_ruleParamDeclarationCS= ruleParamDeclarationCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParamDeclarationCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleParamDeclarationCS=ruleParamDeclarationCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParamDeclarationCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParamDeclarationCS"


    // $ANTLR start "ruleParamDeclarationCS"
    // InternalQVTimperative.g:2643:1: ruleParamDeclarationCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) ) ;
    public final EObject ruleParamDeclarationCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedType_2_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:2646:28: ( ( ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) ) )
            // InternalQVTimperative.g:2647:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )
            {
            // InternalQVTimperative.g:2647:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )
            // InternalQVTimperative.g:2647:2: ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) )
            {
            // InternalQVTimperative.g:2647:2: ( (lv_name_0_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:2648:1: (lv_name_0_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:2648:1: (lv_name_0_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:2649:3: lv_name_0_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getParamDeclarationCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_11);
            lv_name_0_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParamDeclarationCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_0_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_1=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getParamDeclarationCSAccess().getColonKeyword_1());

            }
            // InternalQVTimperative.g:2669:1: ( (lv_ownedType_2_0= ruleTypeExpCS ) )
            // InternalQVTimperative.g:2670:1: (lv_ownedType_2_0= ruleTypeExpCS )
            {
            // InternalQVTimperative.g:2670:1: (lv_ownedType_2_0= ruleTypeExpCS )
            // InternalQVTimperative.g:2671:3: lv_ownedType_2_0= ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getParamDeclarationCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedType_2_0=ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParamDeclarationCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedType",
                      		lv_ownedType_2_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParamDeclarationCS"


    // $ANTLR start "entryRuleQualifiedPackageCS"
    // InternalQVTimperative.g:2695:1: entryRuleQualifiedPackageCS returns [EObject current=null] : iv_ruleQualifiedPackageCS= ruleQualifiedPackageCS EOF ;
    public final EObject entryRuleQualifiedPackageCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQualifiedPackageCS = null;


        try {
            // InternalQVTimperative.g:2696:2: (iv_ruleQualifiedPackageCS= ruleQualifiedPackageCS EOF )
            // InternalQVTimperative.g:2697:2: iv_ruleQualifiedPackageCS= ruleQualifiedPackageCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedPackageCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQualifiedPackageCS=ruleQualifiedPackageCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedPackageCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedPackageCS"


    // $ANTLR start "ruleQualifiedPackageCS"
    // InternalQVTimperative.g:2704:1: ruleQualifiedPackageCS returns [EObject current=null] : (otherlv_0= 'package' ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )? ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= ':' ( (lv_nsPrefix_4_0= ruleUnrestrictedName ) ) )? (otherlv_5= '=' ( (lv_nsURI_6_0= ruleURI ) ) )? ( (otherlv_7= '{' ( ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) ) | ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) ) )* otherlv_10= '}' ) | otherlv_11= ';' ) ) ;
    public final EObject ruleQualifiedPackageCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        EObject lv_ownedPathName_1_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        AntlrDatatypeRuleToken lv_nsPrefix_4_0 = null;

        AntlrDatatypeRuleToken lv_nsURI_6_0 = null;

        EObject lv_ownedPackages_8_0 = null;

        EObject lv_ownedClasses_9_1 = null;

        EObject lv_ownedClasses_9_2 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:2707:28: ( (otherlv_0= 'package' ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )? ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= ':' ( (lv_nsPrefix_4_0= ruleUnrestrictedName ) ) )? (otherlv_5= '=' ( (lv_nsURI_6_0= ruleURI ) ) )? ( (otherlv_7= '{' ( ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) ) | ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) ) )* otherlv_10= '}' ) | otherlv_11= ';' ) ) )
            // InternalQVTimperative.g:2708:1: (otherlv_0= 'package' ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )? ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= ':' ( (lv_nsPrefix_4_0= ruleUnrestrictedName ) ) )? (otherlv_5= '=' ( (lv_nsURI_6_0= ruleURI ) ) )? ( (otherlv_7= '{' ( ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) ) | ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) ) )* otherlv_10= '}' ) | otherlv_11= ';' ) )
            {
            // InternalQVTimperative.g:2708:1: (otherlv_0= 'package' ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )? ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= ':' ( (lv_nsPrefix_4_0= ruleUnrestrictedName ) ) )? (otherlv_5= '=' ( (lv_nsURI_6_0= ruleURI ) ) )? ( (otherlv_7= '{' ( ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) ) | ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) ) )* otherlv_10= '}' ) | otherlv_11= ';' ) )
            // InternalQVTimperative.g:2708:3: otherlv_0= 'package' ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )? ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= ':' ( (lv_nsPrefix_4_0= ruleUnrestrictedName ) ) )? (otherlv_5= '=' ( (lv_nsURI_6_0= ruleURI ) ) )? ( (otherlv_7= '{' ( ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) ) | ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) ) )* otherlv_10= '}' ) | otherlv_11= ';' )
            {
            otherlv_0=(Token)match(input,51,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getQualifiedPackageCSAccess().getPackageKeyword_0());

            }
            // InternalQVTimperative.g:2712:1: ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )?
            int alt61=2;
            alt61 = dfa61.predict(input);
            switch (alt61) {
                case 1 :
                    // InternalQVTimperative.g:2713:1: (lv_ownedPathName_1_0= ruleScopeNameCS )
                    {
                    // InternalQVTimperative.g:2713:1: (lv_ownedPathName_1_0= ruleScopeNameCS )
                    // InternalQVTimperative.g:2714:3: lv_ownedPathName_1_0= ruleScopeNameCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getQualifiedPackageCSAccess().getOwnedPathNameScopeNameCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_5);
                    lv_ownedPathName_1_0=ruleScopeNameCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getQualifiedPackageCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedPathName",
                              		lv_ownedPathName_1_0,
                              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.ScopeNameCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:2730:3: ( (lv_name_2_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:2731:1: (lv_name_2_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:2731:1: (lv_name_2_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:2732:3: lv_name_2_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getQualifiedPackageCSAccess().getNameUnrestrictedNameParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_51);
            lv_name_2_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getQualifiedPackageCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_2_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:2748:2: (otherlv_3= ':' ( (lv_nsPrefix_4_0= ruleUnrestrictedName ) ) )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==24) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // InternalQVTimperative.g:2748:4: otherlv_3= ':' ( (lv_nsPrefix_4_0= ruleUnrestrictedName ) )
                    {
                    otherlv_3=(Token)match(input,24,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getQualifiedPackageCSAccess().getColonKeyword_3_0());

                    }
                    // InternalQVTimperative.g:2752:1: ( (lv_nsPrefix_4_0= ruleUnrestrictedName ) )
                    // InternalQVTimperative.g:2753:1: (lv_nsPrefix_4_0= ruleUnrestrictedName )
                    {
                    // InternalQVTimperative.g:2753:1: (lv_nsPrefix_4_0= ruleUnrestrictedName )
                    // InternalQVTimperative.g:2754:3: lv_nsPrefix_4_0= ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getQualifiedPackageCSAccess().getNsPrefixUnrestrictedNameParserRuleCall_3_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_52);
                    lv_nsPrefix_4_0=ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getQualifiedPackageCSRule());
                      	        }
                             		set(
                             			current,
                             			"nsPrefix",
                              		lv_nsPrefix_4_0,
                              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:2770:4: (otherlv_5= '=' ( (lv_nsURI_6_0= ruleURI ) ) )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==52) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalQVTimperative.g:2770:6: otherlv_5= '=' ( (lv_nsURI_6_0= ruleURI ) )
                    {
                    otherlv_5=(Token)match(input,52,FollowSets000.FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getQualifiedPackageCSAccess().getEqualsSignKeyword_4_0());

                    }
                    // InternalQVTimperative.g:2774:1: ( (lv_nsURI_6_0= ruleURI ) )
                    // InternalQVTimperative.g:2775:1: (lv_nsURI_6_0= ruleURI )
                    {
                    // InternalQVTimperative.g:2775:1: (lv_nsURI_6_0= ruleURI )
                    // InternalQVTimperative.g:2776:3: lv_nsURI_6_0= ruleURI
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getQualifiedPackageCSAccess().getNsURIURIParserRuleCall_4_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_53);
                    lv_nsURI_6_0=ruleURI();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getQualifiedPackageCSRule());
                      	        }
                             		set(
                             			current,
                             			"nsURI",
                              		lv_nsURI_6_0,
                              		"org.eclipse.ocl.xtext.base.Base.URI");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:2792:4: ( (otherlv_7= '{' ( ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) ) | ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) ) )* otherlv_10= '}' ) | otherlv_11= ';' )
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==35) ) {
                alt66=1;
            }
            else if ( (LA66_0==21) ) {
                alt66=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 66, 0, input);

                throw nvae;
            }
            switch (alt66) {
                case 1 :
                    // InternalQVTimperative.g:2792:5: (otherlv_7= '{' ( ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) ) | ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) ) )* otherlv_10= '}' )
                    {
                    // InternalQVTimperative.g:2792:5: (otherlv_7= '{' ( ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) ) | ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) ) )* otherlv_10= '}' )
                    // InternalQVTimperative.g:2792:7: otherlv_7= '{' ( ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) ) | ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) ) )* otherlv_10= '}'
                    {
                    otherlv_7=(Token)match(input,35,FollowSets000.FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getQualifiedPackageCSAccess().getLeftCurlyBracketKeyword_5_0_0());

                    }
                    // InternalQVTimperative.g:2796:1: ( ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) ) | ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) ) )*
                    loop65:
                    do {
                        int alt65=3;
                        int LA65_0 = input.LA(1);

                        if ( (LA65_0==51) ) {
                            alt65=1;
                        }
                        else if ( (LA65_0==62||(LA65_0>=83 && LA65_0<=84)||LA65_0==87||(LA65_0>=98 && LA65_0<=99)) ) {
                            alt65=2;
                        }


                        switch (alt65) {
                    	case 1 :
                    	    // InternalQVTimperative.g:2796:2: ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) )
                    	    {
                    	    // InternalQVTimperative.g:2796:2: ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) )
                    	    // InternalQVTimperative.g:2797:1: (lv_ownedPackages_8_0= ruleQualifiedPackageCS )
                    	    {
                    	    // InternalQVTimperative.g:2797:1: (lv_ownedPackages_8_0= ruleQualifiedPackageCS )
                    	    // InternalQVTimperative.g:2798:3: lv_ownedPackages_8_0= ruleQualifiedPackageCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getQualifiedPackageCSAccess().getOwnedPackagesQualifiedPackageCSParserRuleCall_5_0_1_0_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_54);
                    	    lv_ownedPackages_8_0=ruleQualifiedPackageCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getQualifiedPackageCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedPackages",
                    	              		lv_ownedPackages_8_0,
                    	              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.QualifiedPackageCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQVTimperative.g:2815:6: ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) )
                    	    {
                    	    // InternalQVTimperative.g:2815:6: ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) )
                    	    // InternalQVTimperative.g:2816:1: ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) )
                    	    {
                    	    // InternalQVTimperative.g:2816:1: ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) )
                    	    // InternalQVTimperative.g:2817:1: (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS )
                    	    {
                    	    // InternalQVTimperative.g:2817:1: (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS )
                    	    int alt64=2;
                    	    int LA64_0 = input.LA(1);

                    	    if ( ((LA64_0>=83 && LA64_0<=84)||LA64_0==87||(LA64_0>=98 && LA64_0<=99)) ) {
                    	        alt64=1;
                    	    }
                    	    else if ( (LA64_0==62) ) {
                    	        alt64=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 64, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt64) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:2818:3: lv_ownedClasses_9_1= ruleClassCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	        newCompositeNode(grammarAccess.getQualifiedPackageCSAccess().getOwnedClassesClassCSParserRuleCall_5_0_1_1_0_0());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_54);
                    	            lv_ownedClasses_9_1=ruleClassCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getQualifiedPackageCSRule());
                    	              	        }
                    	                     		add(
                    	                     			current,
                    	                     			"ownedClasses",
                    	                      		lv_ownedClasses_9_1,
                    	                      		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.ClassCS");
                    	              	        afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalQVTimperative.g:2833:8: lv_ownedClasses_9_2= ruleTransformationCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	        newCompositeNode(grammarAccess.getQualifiedPackageCSAccess().getOwnedClassesTransformationCSParserRuleCall_5_0_1_1_0_1());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_54);
                    	            lv_ownedClasses_9_2=ruleTransformationCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getQualifiedPackageCSRule());
                    	              	        }
                    	                     		add(
                    	                     			current,
                    	                     			"ownedClasses",
                    	                      		lv_ownedClasses_9_2,
                    	                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.TransformationCS");
                    	              	        afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop65;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getQualifiedPackageCSAccess().getRightCurlyBracketKeyword_5_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:2856:7: otherlv_11= ';'
                    {
                    otherlv_11=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_11, grammarAccess.getQualifiedPackageCSAccess().getSemicolonKeyword_5_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedPackageCS"


    // $ANTLR start "entryRuleQueryCS"
    // InternalQVTimperative.g:2868:1: entryRuleQueryCS returns [EObject current=null] : iv_ruleQueryCS= ruleQueryCS EOF ;
    public final EObject entryRuleQueryCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQueryCS = null;


        try {
            // InternalQVTimperative.g:2869:2: (iv_ruleQueryCS= ruleQueryCS EOF )
            // InternalQVTimperative.g:2870:2: iv_ruleQueryCS= ruleQueryCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQueryCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQueryCS=ruleQueryCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQueryCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQueryCS"


    // $ANTLR start "ruleQueryCS"
    // InternalQVTimperative.g:2877:1: ruleQueryCS returns [EObject current=null] : ( ( (lv_isTransient_0_0= 'transient' ) )? otherlv_1= 'query' ( (lv_ownedPathName_2_0= ruleScopeNameCS ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= '(' ( ( (lv_ownedParameters_5_0= ruleParamDeclarationCS ) ) (otherlv_6= ',' ( (lv_ownedParameters_7_0= ruleParamDeclarationCS ) ) )* )? otherlv_8= ')' otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypeExpCS ) ) (otherlv_11= ';' | (otherlv_12= '{' ( (lv_ownedExpression_13_0= ruleExpCS ) ) otherlv_14= '}' ) | (otherlv_15= 'implementedby' ( (otherlv_16= RULE_SINGLE_QUOTED_STRING ) ) otherlv_17= ';' ) ) ) ;
    public final EObject ruleQueryCS() throws RecognitionException {
        EObject current = null;

        Token lv_isTransient_0_0=null;
        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        EObject lv_ownedPathName_2_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_ownedParameters_5_0 = null;

        EObject lv_ownedParameters_7_0 = null;

        EObject lv_ownedType_10_0 = null;

        EObject lv_ownedExpression_13_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:2880:28: ( ( ( (lv_isTransient_0_0= 'transient' ) )? otherlv_1= 'query' ( (lv_ownedPathName_2_0= ruleScopeNameCS ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= '(' ( ( (lv_ownedParameters_5_0= ruleParamDeclarationCS ) ) (otherlv_6= ',' ( (lv_ownedParameters_7_0= ruleParamDeclarationCS ) ) )* )? otherlv_8= ')' otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypeExpCS ) ) (otherlv_11= ';' | (otherlv_12= '{' ( (lv_ownedExpression_13_0= ruleExpCS ) ) otherlv_14= '}' ) | (otherlv_15= 'implementedby' ( (otherlv_16= RULE_SINGLE_QUOTED_STRING ) ) otherlv_17= ';' ) ) ) )
            // InternalQVTimperative.g:2881:1: ( ( (lv_isTransient_0_0= 'transient' ) )? otherlv_1= 'query' ( (lv_ownedPathName_2_0= ruleScopeNameCS ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= '(' ( ( (lv_ownedParameters_5_0= ruleParamDeclarationCS ) ) (otherlv_6= ',' ( (lv_ownedParameters_7_0= ruleParamDeclarationCS ) ) )* )? otherlv_8= ')' otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypeExpCS ) ) (otherlv_11= ';' | (otherlv_12= '{' ( (lv_ownedExpression_13_0= ruleExpCS ) ) otherlv_14= '}' ) | (otherlv_15= 'implementedby' ( (otherlv_16= RULE_SINGLE_QUOTED_STRING ) ) otherlv_17= ';' ) ) )
            {
            // InternalQVTimperative.g:2881:1: ( ( (lv_isTransient_0_0= 'transient' ) )? otherlv_1= 'query' ( (lv_ownedPathName_2_0= ruleScopeNameCS ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= '(' ( ( (lv_ownedParameters_5_0= ruleParamDeclarationCS ) ) (otherlv_6= ',' ( (lv_ownedParameters_7_0= ruleParamDeclarationCS ) ) )* )? otherlv_8= ')' otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypeExpCS ) ) (otherlv_11= ';' | (otherlv_12= '{' ( (lv_ownedExpression_13_0= ruleExpCS ) ) otherlv_14= '}' ) | (otherlv_15= 'implementedby' ( (otherlv_16= RULE_SINGLE_QUOTED_STRING ) ) otherlv_17= ';' ) ) )
            // InternalQVTimperative.g:2881:2: ( (lv_isTransient_0_0= 'transient' ) )? otherlv_1= 'query' ( (lv_ownedPathName_2_0= ruleScopeNameCS ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= '(' ( ( (lv_ownedParameters_5_0= ruleParamDeclarationCS ) ) (otherlv_6= ',' ( (lv_ownedParameters_7_0= ruleParamDeclarationCS ) ) )* )? otherlv_8= ')' otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypeExpCS ) ) (otherlv_11= ';' | (otherlv_12= '{' ( (lv_ownedExpression_13_0= ruleExpCS ) ) otherlv_14= '}' ) | (otherlv_15= 'implementedby' ( (otherlv_16= RULE_SINGLE_QUOTED_STRING ) ) otherlv_17= ';' ) )
            {
            // InternalQVTimperative.g:2881:2: ( (lv_isTransient_0_0= 'transient' ) )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==53) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalQVTimperative.g:2882:1: (lv_isTransient_0_0= 'transient' )
                    {
                    // InternalQVTimperative.g:2882:1: (lv_isTransient_0_0= 'transient' )
                    // InternalQVTimperative.g:2883:3: lv_isTransient_0_0= 'transient'
                    {
                    lv_isTransient_0_0=(Token)match(input,53,FollowSets000.FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isTransient_0_0, grammarAccess.getQueryCSAccess().getIsTransientTransientKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getQueryCSRule());
                      	        }
                             		setWithLastConsumed(current, "isTransient", true, "transient");

                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,54,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getQueryCSAccess().getQueryKeyword_1());

            }
            // InternalQVTimperative.g:2900:1: ( (lv_ownedPathName_2_0= ruleScopeNameCS ) )
            // InternalQVTimperative.g:2901:1: (lv_ownedPathName_2_0= ruleScopeNameCS )
            {
            // InternalQVTimperative.g:2901:1: (lv_ownedPathName_2_0= ruleScopeNameCS )
            // InternalQVTimperative.g:2902:3: lv_ownedPathName_2_0= ruleScopeNameCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getQueryCSAccess().getOwnedPathNameScopeNameCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_5);
            lv_ownedPathName_2_0=ruleScopeNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getQueryCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedPathName",
                      		lv_ownedPathName_2_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.ScopeNameCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:2918:2: ( (lv_name_3_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:2919:1: (lv_name_3_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:2919:1: (lv_name_3_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:2920:3: lv_name_3_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getQueryCSAccess().getNameUnrestrictedNameParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_56);
            lv_name_3_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getQueryCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_3_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_4=(Token)match(input,55,FollowSets000.FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getQueryCSAccess().getLeftParenthesisKeyword_4());

            }
            // InternalQVTimperative.g:2940:1: ( ( (lv_ownedParameters_5_0= ruleParamDeclarationCS ) ) (otherlv_6= ',' ( (lv_ownedParameters_7_0= ruleParamDeclarationCS ) ) )* )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( ((LA69_0>=RULE_SIMPLE_ID && LA69_0<=RULE_ESCAPED_ID)||LA69_0==17||LA69_0==19||(LA69_0>=22 && LA69_0<=23)||(LA69_0>=25 && LA69_0<=26)||(LA69_0>=29 && LA69_0<=33)||LA69_0==39||(LA69_0>=43 && LA69_0<=51)||(LA69_0>=53 && LA69_0<=54)||(LA69_0>=57 && LA69_0<=59)||(LA69_0>=61 && LA69_0<=66)||LA69_0==68||LA69_0==70||LA69_0==72||LA69_0==75||LA69_0==77||LA69_0==79||(LA69_0>=81 && LA69_0<=85)||(LA69_0>=87 && LA69_0<=92)||LA69_0==94||LA69_0==96||(LA69_0>=98 && LA69_0<=101)) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // InternalQVTimperative.g:2940:2: ( (lv_ownedParameters_5_0= ruleParamDeclarationCS ) ) (otherlv_6= ',' ( (lv_ownedParameters_7_0= ruleParamDeclarationCS ) ) )*
                    {
                    // InternalQVTimperative.g:2940:2: ( (lv_ownedParameters_5_0= ruleParamDeclarationCS ) )
                    // InternalQVTimperative.g:2941:1: (lv_ownedParameters_5_0= ruleParamDeclarationCS )
                    {
                    // InternalQVTimperative.g:2941:1: (lv_ownedParameters_5_0= ruleParamDeclarationCS )
                    // InternalQVTimperative.g:2942:3: lv_ownedParameters_5_0= ruleParamDeclarationCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getQueryCSAccess().getOwnedParametersParamDeclarationCSParserRuleCall_5_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_58);
                    lv_ownedParameters_5_0=ruleParamDeclarationCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getQueryCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedParameters",
                              		lv_ownedParameters_5_0,
                              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.ParamDeclarationCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:2958:2: (otherlv_6= ',' ( (lv_ownedParameters_7_0= ruleParamDeclarationCS ) ) )*
                    loop68:
                    do {
                        int alt68=2;
                        int LA68_0 = input.LA(1);

                        if ( (LA68_0==18) ) {
                            alt68=1;
                        }


                        switch (alt68) {
                    	case 1 :
                    	    // InternalQVTimperative.g:2958:4: otherlv_6= ',' ( (lv_ownedParameters_7_0= ruleParamDeclarationCS ) )
                    	    {
                    	    otherlv_6=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_6, grammarAccess.getQueryCSAccess().getCommaKeyword_5_1_0());

                    	    }
                    	    // InternalQVTimperative.g:2962:1: ( (lv_ownedParameters_7_0= ruleParamDeclarationCS ) )
                    	    // InternalQVTimperative.g:2963:1: (lv_ownedParameters_7_0= ruleParamDeclarationCS )
                    	    {
                    	    // InternalQVTimperative.g:2963:1: (lv_ownedParameters_7_0= ruleParamDeclarationCS )
                    	    // InternalQVTimperative.g:2964:3: lv_ownedParameters_7_0= ruleParamDeclarationCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getQueryCSAccess().getOwnedParametersParamDeclarationCSParserRuleCall_5_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_58);
                    	    lv_ownedParameters_7_0=ruleParamDeclarationCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getQueryCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedParameters",
                    	              		lv_ownedParameters_7_0,
                    	              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.ParamDeclarationCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop68;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_8=(Token)match(input,56,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getQueryCSAccess().getRightParenthesisKeyword_6());

            }
            otherlv_9=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getQueryCSAccess().getColonKeyword_7());

            }
            // InternalQVTimperative.g:2988:1: ( (lv_ownedType_10_0= ruleTypeExpCS ) )
            // InternalQVTimperative.g:2989:1: (lv_ownedType_10_0= ruleTypeExpCS )
            {
            // InternalQVTimperative.g:2989:1: (lv_ownedType_10_0= ruleTypeExpCS )
            // InternalQVTimperative.g:2990:3: lv_ownedType_10_0= ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getQueryCSAccess().getOwnedTypeTypeExpCSParserRuleCall_8_0());

            }
            pushFollow(FollowSets000.FOLLOW_59);
            lv_ownedType_10_0=ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getQueryCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedType",
                      		lv_ownedType_10_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:3006:2: (otherlv_11= ';' | (otherlv_12= '{' ( (lv_ownedExpression_13_0= ruleExpCS ) ) otherlv_14= '}' ) | (otherlv_15= 'implementedby' ( (otherlv_16= RULE_SINGLE_QUOTED_STRING ) ) otherlv_17= ';' ) )
            int alt70=3;
            switch ( input.LA(1) ) {
            case 21:
                {
                alt70=1;
                }
                break;
            case 35:
                {
                alt70=2;
                }
                break;
            case 57:
                {
                alt70=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 70, 0, input);

                throw nvae;
            }

            switch (alt70) {
                case 1 :
                    // InternalQVTimperative.g:3006:4: otherlv_11= ';'
                    {
                    otherlv_11=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_11, grammarAccess.getQueryCSAccess().getSemicolonKeyword_9_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:3011:6: (otherlv_12= '{' ( (lv_ownedExpression_13_0= ruleExpCS ) ) otherlv_14= '}' )
                    {
                    // InternalQVTimperative.g:3011:6: (otherlv_12= '{' ( (lv_ownedExpression_13_0= ruleExpCS ) ) otherlv_14= '}' )
                    // InternalQVTimperative.g:3011:8: otherlv_12= '{' ( (lv_ownedExpression_13_0= ruleExpCS ) ) otherlv_14= '}'
                    {
                    otherlv_12=(Token)match(input,35,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getQueryCSAccess().getLeftCurlyBracketKeyword_9_1_0());

                    }
                    // InternalQVTimperative.g:3015:1: ( (lv_ownedExpression_13_0= ruleExpCS ) )
                    // InternalQVTimperative.g:3016:1: (lv_ownedExpression_13_0= ruleExpCS )
                    {
                    // InternalQVTimperative.g:3016:1: (lv_ownedExpression_13_0= ruleExpCS )
                    // InternalQVTimperative.g:3017:3: lv_ownedExpression_13_0= ruleExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getQueryCSAccess().getOwnedExpressionExpCSParserRuleCall_9_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_60);
                    lv_ownedExpression_13_0=ruleExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getQueryCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedExpression",
                              		lv_ownedExpression_13_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    otherlv_14=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_14, grammarAccess.getQueryCSAccess().getRightCurlyBracketKeyword_9_1_2());

                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:3038:6: (otherlv_15= 'implementedby' ( (otherlv_16= RULE_SINGLE_QUOTED_STRING ) ) otherlv_17= ';' )
                    {
                    // InternalQVTimperative.g:3038:6: (otherlv_15= 'implementedby' ( (otherlv_16= RULE_SINGLE_QUOTED_STRING ) ) otherlv_17= ';' )
                    // InternalQVTimperative.g:3038:8: otherlv_15= 'implementedby' ( (otherlv_16= RULE_SINGLE_QUOTED_STRING ) ) otherlv_17= ';'
                    {
                    otherlv_15=(Token)match(input,57,FollowSets000.FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_15, grammarAccess.getQueryCSAccess().getImplementedbyKeyword_9_2_0());

                    }
                    // InternalQVTimperative.g:3042:1: ( (otherlv_16= RULE_SINGLE_QUOTED_STRING ) )
                    // InternalQVTimperative.g:3043:1: (otherlv_16= RULE_SINGLE_QUOTED_STRING )
                    {
                    // InternalQVTimperative.g:3043:1: (otherlv_16= RULE_SINGLE_QUOTED_STRING )
                    // InternalQVTimperative.g:3044:3: otherlv_16= RULE_SINGLE_QUOTED_STRING
                    {
                    if ( state.backtracking==0 ) {

                      		  /* */

                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getQueryCSRule());
                      	        }

                    }
                    otherlv_16=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_16, grammarAccess.getQueryCSAccess().getImplementationJavaClassCSCrossReference_9_2_1_0());

                    }

                    }


                    }

                    otherlv_17=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_17, grammarAccess.getQueryCSAccess().getSemicolonKeyword_9_2_2());

                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQueryCS"


    // $ANTLR start "entryRuleScopeNameCS"
    // InternalQVTimperative.g:3070:1: entryRuleScopeNameCS returns [EObject current=null] : iv_ruleScopeNameCS= ruleScopeNameCS EOF ;
    public final EObject entryRuleScopeNameCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScopeNameCS = null;


        try {
            // InternalQVTimperative.g:3071:2: (iv_ruleScopeNameCS= ruleScopeNameCS EOF )
            // InternalQVTimperative.g:3072:2: iv_ruleScopeNameCS= ruleScopeNameCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScopeNameCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScopeNameCS=ruleScopeNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScopeNameCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScopeNameCS"


    // $ANTLR start "ruleScopeNameCS"
    // InternalQVTimperative.g:3079:1: ruleScopeNameCS returns [EObject current=null] : ( ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) otherlv_1= '::' ( ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) otherlv_3= '::' )* ) ;
    public final EObject ruleScopeNameCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_ownedPathElements_0_0 = null;

        EObject lv_ownedPathElements_2_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:3082:28: ( ( ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) otherlv_1= '::' ( ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) otherlv_3= '::' )* ) )
            // InternalQVTimperative.g:3083:1: ( ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) otherlv_1= '::' ( ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) otherlv_3= '::' )* )
            {
            // InternalQVTimperative.g:3083:1: ( ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) otherlv_1= '::' ( ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) otherlv_3= '::' )* )
            // InternalQVTimperative.g:3083:2: ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) otherlv_1= '::' ( ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) otherlv_3= '::' )*
            {
            // InternalQVTimperative.g:3083:2: ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) )
            // InternalQVTimperative.g:3084:1: (lv_ownedPathElements_0_0= ruleFirstPathElementCS )
            {
            // InternalQVTimperative.g:3084:1: (lv_ownedPathElements_0_0= ruleFirstPathElementCS )
            // InternalQVTimperative.g:3085:3: lv_ownedPathElements_0_0= ruleFirstPathElementCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getScopeNameCSAccess().getOwnedPathElementsFirstPathElementCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_62);
            lv_ownedPathElements_0_0=ruleFirstPathElementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getScopeNameCSRule());
              	        }
                     		add(
                     			current,
                     			"ownedPathElements",
                      		lv_ownedPathElements_0_0,
                      		"org.eclipse.ocl.xtext.base.Base.FirstPathElementCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_63); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getScopeNameCSAccess().getColonColonKeyword_1());

            }
            // InternalQVTimperative.g:3105:1: ( ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) otherlv_3= '::' )*
            loop71:
            do {
                int alt71=2;
                alt71 = dfa71.predict(input);
                switch (alt71) {
            	case 1 :
            	    // InternalQVTimperative.g:3105:2: ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) otherlv_3= '::'
            	    {
            	    // InternalQVTimperative.g:3105:2: ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) )
            	    // InternalQVTimperative.g:3106:1: (lv_ownedPathElements_2_0= ruleNextPathElementCS )
            	    {
            	    // InternalQVTimperative.g:3106:1: (lv_ownedPathElements_2_0= ruleNextPathElementCS )
            	    // InternalQVTimperative.g:3107:3: lv_ownedPathElements_2_0= ruleNextPathElementCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getScopeNameCSAccess().getOwnedPathElementsNextPathElementCSParserRuleCall_2_0_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_62);
            	    lv_ownedPathElements_2_0=ruleNextPathElementCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getScopeNameCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedPathElements",
            	              		lv_ownedPathElements_2_0,
            	              		"org.eclipse.ocl.xtext.base.Base.NextPathElementCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }

            	    otherlv_3=(Token)match(input,41,FollowSets000.FOLLOW_63); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getScopeNameCSAccess().getColonColonKeyword_2_1());

            	    }

            	    }
            	    break;

            	default :
            	    break loop71;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScopeNameCS"


    // $ANTLR start "entryRuleSetStatementCS"
    // InternalQVTimperative.g:3135:1: entryRuleSetStatementCS returns [EObject current=null] : iv_ruleSetStatementCS= ruleSetStatementCS EOF ;
    public final EObject entryRuleSetStatementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSetStatementCS = null;


        try {
            // InternalQVTimperative.g:3136:2: (iv_ruleSetStatementCS= ruleSetStatementCS EOF )
            // InternalQVTimperative.g:3137:2: iv_ruleSetStatementCS= ruleSetStatementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSetStatementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSetStatementCS=ruleSetStatementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSetStatementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSetStatementCS"


    // $ANTLR start "ruleSetStatementCS"
    // InternalQVTimperative.g:3144:1: ruleSetStatementCS returns [EObject current=null] : ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isNotify_4_0= 'notify' ) )? otherlv_5= 'set' ( ( ruleUnrestrictedName ) ) otherlv_7= '.' ( ( ruleUnrestrictedName ) ) (otherlv_9= ':=' | ( (lv_isPartial_10_0= '+=' ) ) ) ( (lv_ownedExpression_11_0= ruleExpCS ) ) otherlv_12= ';' ) ;
    public final EObject ruleSetStatementCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token lv_isNotify_4_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token lv_isPartial_10_0=null;
        Token otherlv_12=null;
        EObject lv_observedProperties_1_0 = null;

        EObject lv_observedProperties_3_0 = null;

        EObject lv_ownedExpression_11_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:3147:28: ( ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isNotify_4_0= 'notify' ) )? otherlv_5= 'set' ( ( ruleUnrestrictedName ) ) otherlv_7= '.' ( ( ruleUnrestrictedName ) ) (otherlv_9= ':=' | ( (lv_isPartial_10_0= '+=' ) ) ) ( (lv_ownedExpression_11_0= ruleExpCS ) ) otherlv_12= ';' ) )
            // InternalQVTimperative.g:3148:1: ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isNotify_4_0= 'notify' ) )? otherlv_5= 'set' ( ( ruleUnrestrictedName ) ) otherlv_7= '.' ( ( ruleUnrestrictedName ) ) (otherlv_9= ':=' | ( (lv_isPartial_10_0= '+=' ) ) ) ( (lv_ownedExpression_11_0= ruleExpCS ) ) otherlv_12= ';' )
            {
            // InternalQVTimperative.g:3148:1: ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isNotify_4_0= 'notify' ) )? otherlv_5= 'set' ( ( ruleUnrestrictedName ) ) otherlv_7= '.' ( ( ruleUnrestrictedName ) ) (otherlv_9= ':=' | ( (lv_isPartial_10_0= '+=' ) ) ) ( (lv_ownedExpression_11_0= ruleExpCS ) ) otherlv_12= ';' )
            // InternalQVTimperative.g:3148:2: (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isNotify_4_0= 'notify' ) )? otherlv_5= 'set' ( ( ruleUnrestrictedName ) ) otherlv_7= '.' ( ( ruleUnrestrictedName ) ) (otherlv_9= ':=' | ( (lv_isPartial_10_0= '+=' ) ) ) ( (lv_ownedExpression_11_0= ruleExpCS ) ) otherlv_12= ';'
            {
            // InternalQVTimperative.g:3148:2: (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==17) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalQVTimperative.g:3148:4: otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )*
                    {
                    otherlv_0=(Token)match(input,17,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getSetStatementCSAccess().getObserveKeyword_0_0());

                    }
                    // InternalQVTimperative.g:3152:1: ( (lv_observedProperties_1_0= rulePathNameCS ) )
                    // InternalQVTimperative.g:3153:1: (lv_observedProperties_1_0= rulePathNameCS )
                    {
                    // InternalQVTimperative.g:3153:1: (lv_observedProperties_1_0= rulePathNameCS )
                    // InternalQVTimperative.g:3154:3: lv_observedProperties_1_0= rulePathNameCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getSetStatementCSAccess().getObservedPropertiesPathNameCSParserRuleCall_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_64);
                    lv_observedProperties_1_0=rulePathNameCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSetStatementCSRule());
                      	        }
                             		add(
                             			current,
                             			"observedProperties",
                              		lv_observedProperties_1_0,
                              		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:3170:2: (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )*
                    loop72:
                    do {
                        int alt72=2;
                        int LA72_0 = input.LA(1);

                        if ( (LA72_0==18) ) {
                            alt72=1;
                        }


                        switch (alt72) {
                    	case 1 :
                    	    // InternalQVTimperative.g:3170:4: otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) )
                    	    {
                    	    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getSetStatementCSAccess().getCommaKeyword_0_2_0());

                    	    }
                    	    // InternalQVTimperative.g:3174:1: ( (lv_observedProperties_3_0= rulePathNameCS ) )
                    	    // InternalQVTimperative.g:3175:1: (lv_observedProperties_3_0= rulePathNameCS )
                    	    {
                    	    // InternalQVTimperative.g:3175:1: (lv_observedProperties_3_0= rulePathNameCS )
                    	    // InternalQVTimperative.g:3176:3: lv_observedProperties_3_0= rulePathNameCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getSetStatementCSAccess().getObservedPropertiesPathNameCSParserRuleCall_0_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_64);
                    	    lv_observedProperties_3_0=rulePathNameCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getSetStatementCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"observedProperties",
                    	              		lv_observedProperties_3_0,
                    	              		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop72;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalQVTimperative.g:3192:6: ( (lv_isNotify_4_0= 'notify' ) )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==58) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // InternalQVTimperative.g:3193:1: (lv_isNotify_4_0= 'notify' )
                    {
                    // InternalQVTimperative.g:3193:1: (lv_isNotify_4_0= 'notify' )
                    // InternalQVTimperative.g:3194:3: lv_isNotify_4_0= 'notify'
                    {
                    lv_isNotify_4_0=(Token)match(input,58,FollowSets000.FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isNotify_4_0, grammarAccess.getSetStatementCSAccess().getIsNotifyNotifyKeyword_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getSetStatementCSRule());
                      	        }
                             		setWithLastConsumed(current, "isNotify", true, "notify");

                    }

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,59,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getSetStatementCSAccess().getSetKeyword_2());

            }
            // InternalQVTimperative.g:3211:1: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:3212:1: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:3212:1: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:3213:3: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              		  /* */

            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getSetStatementCSRule());
              	        }

            }
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getSetStatementCSAccess().getReferredVariableVariableDeclarationCrossReference_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_66);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_7=(Token)match(input,60,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getSetStatementCSAccess().getFullStopKeyword_4());

            }
            // InternalQVTimperative.g:3233:1: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:3234:1: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:3234:1: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:3235:3: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              		  /* */

            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getSetStatementCSRule());
              	        }

            }
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getSetStatementCSAccess().getReferredPropertyPropertyCrossReference_5_0());

            }
            pushFollow(FollowSets000.FOLLOW_67);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:3251:2: (otherlv_9= ':=' | ( (lv_isPartial_10_0= '+=' ) ) )
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==28) ) {
                alt75=1;
            }
            else if ( (LA75_0==20) ) {
                alt75=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 75, 0, input);

                throw nvae;
            }
            switch (alt75) {
                case 1 :
                    // InternalQVTimperative.g:3251:4: otherlv_9= ':='
                    {
                    otherlv_9=(Token)match(input,28,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getSetStatementCSAccess().getColonEqualsSignKeyword_6_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:3256:6: ( (lv_isPartial_10_0= '+=' ) )
                    {
                    // InternalQVTimperative.g:3256:6: ( (lv_isPartial_10_0= '+=' ) )
                    // InternalQVTimperative.g:3257:1: (lv_isPartial_10_0= '+=' )
                    {
                    // InternalQVTimperative.g:3257:1: (lv_isPartial_10_0= '+=' )
                    // InternalQVTimperative.g:3258:3: lv_isPartial_10_0= '+='
                    {
                    lv_isPartial_10_0=(Token)match(input,20,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isPartial_10_0, grammarAccess.getSetStatementCSAccess().getIsPartialPlusSignEqualsSignKeyword_6_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getSetStatementCSRule());
                      	        }
                             		setWithLastConsumed(current, "isPartial", true, "+=");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:3271:3: ( (lv_ownedExpression_11_0= ruleExpCS ) )
            // InternalQVTimperative.g:3272:1: (lv_ownedExpression_11_0= ruleExpCS )
            {
            // InternalQVTimperative.g:3272:1: (lv_ownedExpression_11_0= ruleExpCS )
            // InternalQVTimperative.g:3273:3: lv_ownedExpression_11_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getSetStatementCSAccess().getOwnedExpressionExpCSParserRuleCall_7_0());

            }
            pushFollow(FollowSets000.FOLLOW_9);
            lv_ownedExpression_11_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSetStatementCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedExpression",
                      		lv_ownedExpression_11_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_12=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_12, grammarAccess.getSetStatementCSAccess().getSemicolonKeyword_8());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSetStatementCS"


    // $ANTLR start "entryRuleSimpleParameterBindingCS"
    // InternalQVTimperative.g:3301:1: entryRuleSimpleParameterBindingCS returns [EObject current=null] : iv_ruleSimpleParameterBindingCS= ruleSimpleParameterBindingCS EOF ;
    public final EObject entryRuleSimpleParameterBindingCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleParameterBindingCS = null;


        try {
            // InternalQVTimperative.g:3302:2: (iv_ruleSimpleParameterBindingCS= ruleSimpleParameterBindingCS EOF )
            // InternalQVTimperative.g:3303:2: iv_ruleSimpleParameterBindingCS= ruleSimpleParameterBindingCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleParameterBindingCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSimpleParameterBindingCS=ruleSimpleParameterBindingCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleParameterBindingCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleParameterBindingCS"


    // $ANTLR start "ruleSimpleParameterBindingCS"
    // InternalQVTimperative.g:3310:1: ruleSimpleParameterBindingCS returns [EObject current=null] : ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'uses' ( (lv_ownedValue_3_0= ruleExpCS ) ) otherlv_4= ';' ) ;
    public final EObject ruleSimpleParameterBindingCS() throws RecognitionException {
        EObject current = null;

        Token lv_isCheck_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedValue_3_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:3313:28: ( ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'uses' ( (lv_ownedValue_3_0= ruleExpCS ) ) otherlv_4= ';' ) )
            // InternalQVTimperative.g:3314:1: ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'uses' ( (lv_ownedValue_3_0= ruleExpCS ) ) otherlv_4= ';' )
            {
            // InternalQVTimperative.g:3314:1: ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'uses' ( (lv_ownedValue_3_0= ruleExpCS ) ) otherlv_4= ';' )
            // InternalQVTimperative.g:3314:2: ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'uses' ( (lv_ownedValue_3_0= ruleExpCS ) ) otherlv_4= ';'
            {
            // InternalQVTimperative.g:3314:2: ( (lv_isCheck_0_0= 'check' ) )?
            int alt76=2;
            alt76 = dfa76.predict(input);
            switch (alt76) {
                case 1 :
                    // InternalQVTimperative.g:3315:1: (lv_isCheck_0_0= 'check' )
                    {
                    // InternalQVTimperative.g:3315:1: (lv_isCheck_0_0= 'check' )
                    // InternalQVTimperative.g:3316:3: lv_isCheck_0_0= 'check'
                    {
                    lv_isCheck_0_0=(Token)match(input,29,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isCheck_0_0, grammarAccess.getSimpleParameterBindingCSAccess().getIsCheckCheckKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getSimpleParameterBindingCSRule());
                      	        }
                             		setWithLastConsumed(current, "isCheck", true, "check");

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:3329:3: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:3330:1: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:3330:1: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:3331:3: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              		  /* */

            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getSimpleParameterBindingCSRule());
              	        }

            }
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getSimpleParameterBindingCSAccess().getReferredVariableSimpleParameterCrossReference_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_68);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_2=(Token)match(input,61,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getSimpleParameterBindingCSAccess().getUsesKeyword_2());

            }
            // InternalQVTimperative.g:3351:1: ( (lv_ownedValue_3_0= ruleExpCS ) )
            // InternalQVTimperative.g:3352:1: (lv_ownedValue_3_0= ruleExpCS )
            {
            // InternalQVTimperative.g:3352:1: (lv_ownedValue_3_0= ruleExpCS )
            // InternalQVTimperative.g:3353:3: lv_ownedValue_3_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getSimpleParameterBindingCSAccess().getOwnedValueExpCSParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_9);
            lv_ownedValue_3_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSimpleParameterBindingCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedValue",
                      		lv_ownedValue_3_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_4=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getSimpleParameterBindingCSAccess().getSemicolonKeyword_4());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleParameterBindingCS"


    // $ANTLR start "entryRuleSimpleParameterCS"
    // InternalQVTimperative.g:3381:1: entryRuleSimpleParameterCS returns [EObject current=null] : iv_ruleSimpleParameterCS= ruleSimpleParameterCS EOF ;
    public final EObject entryRuleSimpleParameterCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleParameterCS = null;


        try {
            // InternalQVTimperative.g:3382:2: (iv_ruleSimpleParameterCS= ruleSimpleParameterCS EOF )
            // InternalQVTimperative.g:3383:2: iv_ruleSimpleParameterCS= ruleSimpleParameterCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleParameterCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSimpleParameterCS=ruleSimpleParameterCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleParameterCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleParameterCS"


    // $ANTLR start "ruleSimpleParameterCS"
    // InternalQVTimperative.g:3390:1: ruleSimpleParameterCS returns [EObject current=null] : (otherlv_0= 'in' otherlv_1= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' ( (lv_ownedType_5_0= ruleTypeExpCS ) ) otherlv_6= ';' ) ;
    public final EObject ruleSimpleParameterCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_ownedType_5_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:3393:28: ( (otherlv_0= 'in' otherlv_1= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' ( (lv_ownedType_5_0= ruleTypeExpCS ) ) otherlv_6= ';' ) )
            // InternalQVTimperative.g:3394:1: (otherlv_0= 'in' otherlv_1= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' ( (lv_ownedType_5_0= ruleTypeExpCS ) ) otherlv_6= ';' )
            {
            // InternalQVTimperative.g:3394:1: (otherlv_0= 'in' otherlv_1= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' ( (lv_ownedType_5_0= ruleTypeExpCS ) ) otherlv_6= ';' )
            // InternalQVTimperative.g:3394:3: otherlv_0= 'in' otherlv_1= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' ( (lv_ownedType_5_0= ruleTypeExpCS ) ) otherlv_6= ';'
            {
            otherlv_0=(Token)match(input,34,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getSimpleParameterCSAccess().getInKeyword_0());

            }
            otherlv_1=(Token)match(input,24,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getSimpleParameterCSAccess().getColonKeyword_1());

            }
            // InternalQVTimperative.g:3402:1: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:3403:1: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:3403:1: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:3404:3: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              		  /* */

            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getSimpleParameterCSRule());
              	        }

            }
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getSimpleParameterCSAccess().getReferredTypedModelImperativeTypedModelCrossReference_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_5);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:3420:2: ( (lv_name_3_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:3421:1: (lv_name_3_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:3421:1: (lv_name_3_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:3422:3: lv_name_3_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getSimpleParameterCSAccess().getNameUnrestrictedNameParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_11);
            lv_name_3_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSimpleParameterCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_3_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_4=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getSimpleParameterCSAccess().getColonKeyword_4());

            }
            // InternalQVTimperative.g:3442:1: ( (lv_ownedType_5_0= ruleTypeExpCS ) )
            // InternalQVTimperative.g:3443:1: (lv_ownedType_5_0= ruleTypeExpCS )
            {
            // InternalQVTimperative.g:3443:1: (lv_ownedType_5_0= ruleTypeExpCS )
            // InternalQVTimperative.g:3444:3: lv_ownedType_5_0= ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getSimpleParameterCSAccess().getOwnedTypeTypeExpCSParserRuleCall_5_0());

            }
            pushFollow(FollowSets000.FOLLOW_9);
            lv_ownedType_5_0=ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSimpleParameterCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedType",
                      		lv_ownedType_5_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_6=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getSimpleParameterCSAccess().getSemicolonKeyword_6());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleParameterCS"


    // $ANTLR start "entryRuleTransformationCS"
    // InternalQVTimperative.g:3472:1: entryRuleTransformationCS returns [EObject current=null] : iv_ruleTransformationCS= ruleTransformationCS EOF ;
    public final EObject entryRuleTransformationCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTransformationCS = null;


        try {
            // InternalQVTimperative.g:3473:2: (iv_ruleTransformationCS= ruleTransformationCS EOF )
            // InternalQVTimperative.g:3474:2: iv_ruleTransformationCS= ruleTransformationCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTransformationCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTransformationCS=ruleTransformationCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTransformationCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTransformationCS"


    // $ANTLR start "ruleTransformationCS"
    // InternalQVTimperative.g:3481:1: ruleTransformationCS returns [EObject current=null] : (otherlv_0= 'transformation' ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )? ( (lv_name_2_0= ruleUnreservedName ) ) otherlv_3= '{' ( ( (lv_ownedDirections_4_0= ruleDirectionCS ) ) otherlv_5= ';' )* otherlv_6= '}' ) ;
    public final EObject ruleTransformationCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_ownedPathName_1_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_ownedDirections_4_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:3484:28: ( (otherlv_0= 'transformation' ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )? ( (lv_name_2_0= ruleUnreservedName ) ) otherlv_3= '{' ( ( (lv_ownedDirections_4_0= ruleDirectionCS ) ) otherlv_5= ';' )* otherlv_6= '}' ) )
            // InternalQVTimperative.g:3485:1: (otherlv_0= 'transformation' ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )? ( (lv_name_2_0= ruleUnreservedName ) ) otherlv_3= '{' ( ( (lv_ownedDirections_4_0= ruleDirectionCS ) ) otherlv_5= ';' )* otherlv_6= '}' )
            {
            // InternalQVTimperative.g:3485:1: (otherlv_0= 'transformation' ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )? ( (lv_name_2_0= ruleUnreservedName ) ) otherlv_3= '{' ( ( (lv_ownedDirections_4_0= ruleDirectionCS ) ) otherlv_5= ';' )* otherlv_6= '}' )
            // InternalQVTimperative.g:3485:3: otherlv_0= 'transformation' ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )? ( (lv_name_2_0= ruleUnreservedName ) ) otherlv_3= '{' ( ( (lv_ownedDirections_4_0= ruleDirectionCS ) ) otherlv_5= ';' )* otherlv_6= '}'
            {
            otherlv_0=(Token)match(input,62,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTransformationCSAccess().getTransformationKeyword_0());

            }
            // InternalQVTimperative.g:3489:1: ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )?
            int alt77=2;
            alt77 = dfa77.predict(input);
            switch (alt77) {
                case 1 :
                    // InternalQVTimperative.g:3490:1: (lv_ownedPathName_1_0= ruleScopeNameCS )
                    {
                    // InternalQVTimperative.g:3490:1: (lv_ownedPathName_1_0= ruleScopeNameCS )
                    // InternalQVTimperative.g:3491:3: lv_ownedPathName_1_0= ruleScopeNameCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTransformationCSAccess().getOwnedPathNameScopeNameCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_12);
                    lv_ownedPathName_1_0=ruleScopeNameCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTransformationCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedPathName",
                              		lv_ownedPathName_1_0,
                              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.ScopeNameCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:3507:3: ( (lv_name_2_0= ruleUnreservedName ) )
            // InternalQVTimperative.g:3508:1: (lv_name_2_0= ruleUnreservedName )
            {
            // InternalQVTimperative.g:3508:1: (lv_name_2_0= ruleUnreservedName )
            // InternalQVTimperative.g:3509:3: lv_name_2_0= ruleUnreservedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTransformationCSAccess().getNameUnreservedNameParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_31);
            lv_name_2_0=ruleUnreservedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTransformationCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_2_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.UnreservedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_3=(Token)match(input,35,FollowSets000.FOLLOW_69); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getTransformationCSAccess().getLeftCurlyBracketKeyword_3());

            }
            // InternalQVTimperative.g:3529:1: ( ( (lv_ownedDirections_4_0= ruleDirectionCS ) ) otherlv_5= ';' )*
            loop78:
            do {
                int alt78=2;
                int LA78_0 = input.LA(1);

                if ( (LA78_0==EOF||(LA78_0>=RULE_SIMPLE_ID && LA78_0<=RULE_ESCAPED_ID)||LA78_0==17||LA78_0==19||(LA78_0>=21 && LA78_0<=23)||(LA78_0>=25 && LA78_0<=26)||(LA78_0>=29 && LA78_0<=33)||LA78_0==39||(LA78_0>=43 && LA78_0<=51)||(LA78_0>=53 && LA78_0<=54)||(LA78_0>=57 && LA78_0<=59)||(LA78_0>=61 && LA78_0<=66)||LA78_0==68||LA78_0==70||LA78_0==72||LA78_0==75||LA78_0==77||LA78_0==79||(LA78_0>=81 && LA78_0<=85)||(LA78_0>=87 && LA78_0<=92)||LA78_0==94||LA78_0==96||(LA78_0>=98 && LA78_0<=101)) ) {
                    alt78=1;
                }


                switch (alt78) {
            	case 1 :
            	    // InternalQVTimperative.g:3529:2: ( (lv_ownedDirections_4_0= ruleDirectionCS ) ) otherlv_5= ';'
            	    {
            	    // InternalQVTimperative.g:3529:2: ( (lv_ownedDirections_4_0= ruleDirectionCS ) )
            	    // InternalQVTimperative.g:3530:1: (lv_ownedDirections_4_0= ruleDirectionCS )
            	    {
            	    // InternalQVTimperative.g:3530:1: (lv_ownedDirections_4_0= ruleDirectionCS )
            	    // InternalQVTimperative.g:3531:3: lv_ownedDirections_4_0= ruleDirectionCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getTransformationCSAccess().getOwnedDirectionsDirectionCSParserRuleCall_4_0_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_9);
            	    lv_ownedDirections_4_0=ruleDirectionCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTransformationCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedDirections",
            	              		lv_ownedDirections_4_0,
            	              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.DirectionCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }

            	    otherlv_5=(Token)match(input,21,FollowSets000.FOLLOW_69); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_5, grammarAccess.getTransformationCSAccess().getSemicolonKeyword_4_1());

            	    }

            	    }
            	    break;

            	default :
            	    break loop78;
                }
            } while (true);

            otherlv_6=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getTransformationCSAccess().getRightCurlyBracketKeyword_5());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTransformationCS"


    // $ANTLR start "entryRuleQVTimperativeUnrestrictedName"
    // InternalQVTimperative.g:3563:1: entryRuleQVTimperativeUnrestrictedName returns [String current=null] : iv_ruleQVTimperativeUnrestrictedName= ruleQVTimperativeUnrestrictedName EOF ;
    public final String entryRuleQVTimperativeUnrestrictedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQVTimperativeUnrestrictedName = null;


        try {
            // InternalQVTimperative.g:3564:2: (iv_ruleQVTimperativeUnrestrictedName= ruleQVTimperativeUnrestrictedName EOF )
            // InternalQVTimperative.g:3565:2: iv_ruleQVTimperativeUnrestrictedName= ruleQVTimperativeUnrestrictedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQVTimperativeUnrestrictedNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQVTimperativeUnrestrictedName=ruleQVTimperativeUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQVTimperativeUnrestrictedName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQVTimperativeUnrestrictedName"


    // $ANTLR start "ruleQVTimperativeUnrestrictedName"
    // InternalQVTimperative.g:3572:1: ruleQVTimperativeUnrestrictedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'add' | kw= 'append' | kw= 'appendsTo' | kw= 'buffer' | kw= 'call' | kw= 'check' | kw= 'contained' | kw= 'enforce' | kw= 'entry' | kw= 'for' | kw= 'implementedby' | kw= 'imports' | kw= 'install' | kw= 'invoke' | kw= 'iterates' | kw= 'map' | kw= 'new' | kw= 'notify' | kw= 'observe' | kw= 'package' | kw= 'query' | kw= 'set' | kw= 'strict' | kw= 'success' | kw= 'transformation' | kw= 'transient' | kw= 'uses' | kw= 'var' ) ;
    public final AntlrDatatypeRuleToken ruleQVTimperativeUnrestrictedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule();

        try {
            // InternalQVTimperative.g:3575:28: ( (kw= 'add' | kw= 'append' | kw= 'appendsTo' | kw= 'buffer' | kw= 'call' | kw= 'check' | kw= 'contained' | kw= 'enforce' | kw= 'entry' | kw= 'for' | kw= 'implementedby' | kw= 'imports' | kw= 'install' | kw= 'invoke' | kw= 'iterates' | kw= 'map' | kw= 'new' | kw= 'notify' | kw= 'observe' | kw= 'package' | kw= 'query' | kw= 'set' | kw= 'strict' | kw= 'success' | kw= 'transformation' | kw= 'transient' | kw= 'uses' | kw= 'var' ) )
            // InternalQVTimperative.g:3576:1: (kw= 'add' | kw= 'append' | kw= 'appendsTo' | kw= 'buffer' | kw= 'call' | kw= 'check' | kw= 'contained' | kw= 'enforce' | kw= 'entry' | kw= 'for' | kw= 'implementedby' | kw= 'imports' | kw= 'install' | kw= 'invoke' | kw= 'iterates' | kw= 'map' | kw= 'new' | kw= 'notify' | kw= 'observe' | kw= 'package' | kw= 'query' | kw= 'set' | kw= 'strict' | kw= 'success' | kw= 'transformation' | kw= 'transient' | kw= 'uses' | kw= 'var' )
            {
            // InternalQVTimperative.g:3576:1: (kw= 'add' | kw= 'append' | kw= 'appendsTo' | kw= 'buffer' | kw= 'call' | kw= 'check' | kw= 'contained' | kw= 'enforce' | kw= 'entry' | kw= 'for' | kw= 'implementedby' | kw= 'imports' | kw= 'install' | kw= 'invoke' | kw= 'iterates' | kw= 'map' | kw= 'new' | kw= 'notify' | kw= 'observe' | kw= 'package' | kw= 'query' | kw= 'set' | kw= 'strict' | kw= 'success' | kw= 'transformation' | kw= 'transient' | kw= 'uses' | kw= 'var' )
            int alt79=28;
            switch ( input.LA(1) ) {
            case 19:
                {
                alt79=1;
                }
                break;
            case 23:
                {
                alt79=2;
                }
                break;
            case 22:
                {
                alt79=3;
                }
                break;
            case 26:
                {
                alt79=4;
                }
                break;
            case 45:
                {
                alt79=5;
                }
                break;
            case 29:
                {
                alt79=6;
                }
                break;
            case 49:
                {
                alt79=7;
                }
                break;
            case 31:
                {
                alt79=8;
                }
                break;
            case 33:
                {
                alt79=9;
                }
                break;
            case 48:
                {
                alt79=10;
                }
                break;
            case 57:
                {
                alt79=11;
                }
                break;
            case 32:
                {
                alt79=12;
                }
                break;
            case 46:
                {
                alt79=13;
                }
                break;
            case 47:
                {
                alt79=14;
                }
                break;
            case 43:
                {
                alt79=15;
                }
                break;
            case 44:
                {
                alt79=16;
                }
                break;
            case 50:
                {
                alt79=17;
                }
                break;
            case 58:
                {
                alt79=18;
                }
                break;
            case 17:
                {
                alt79=19;
                }
                break;
            case 51:
                {
                alt79=20;
                }
                break;
            case 54:
                {
                alt79=21;
                }
                break;
            case 59:
                {
                alt79=22;
                }
                break;
            case 25:
                {
                alt79=23;
                }
                break;
            case 39:
                {
                alt79=24;
                }
                break;
            case 62:
                {
                alt79=25;
                }
                break;
            case 53:
                {
                alt79=26;
                }
                break;
            case 61:
                {
                alt79=27;
                }
                break;
            case 30:
                {
                alt79=28;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 79, 0, input);

                throw nvae;
            }

            switch (alt79) {
                case 1 :
                    // InternalQVTimperative.g:3577:2: kw= 'add'
                    {
                    kw=(Token)match(input,19,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getAddKeyword_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:3584:2: kw= 'append'
                    {
                    kw=(Token)match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getAppendKeyword_1());

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:3591:2: kw= 'appendsTo'
                    {
                    kw=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getAppendsToKeyword_2());

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:3598:2: kw= 'buffer'
                    {
                    kw=(Token)match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getBufferKeyword_3());

                    }

                    }
                    break;
                case 5 :
                    // InternalQVTimperative.g:3605:2: kw= 'call'
                    {
                    kw=(Token)match(input,45,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getCallKeyword_4());

                    }

                    }
                    break;
                case 6 :
                    // InternalQVTimperative.g:3612:2: kw= 'check'
                    {
                    kw=(Token)match(input,29,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getCheckKeyword_5());

                    }

                    }
                    break;
                case 7 :
                    // InternalQVTimperative.g:3619:2: kw= 'contained'
                    {
                    kw=(Token)match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getContainedKeyword_6());

                    }

                    }
                    break;
                case 8 :
                    // InternalQVTimperative.g:3626:2: kw= 'enforce'
                    {
                    kw=(Token)match(input,31,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getEnforceKeyword_7());

                    }

                    }
                    break;
                case 9 :
                    // InternalQVTimperative.g:3633:2: kw= 'entry'
                    {
                    kw=(Token)match(input,33,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getEntryKeyword_8());

                    }

                    }
                    break;
                case 10 :
                    // InternalQVTimperative.g:3640:2: kw= 'for'
                    {
                    kw=(Token)match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getForKeyword_9());

                    }

                    }
                    break;
                case 11 :
                    // InternalQVTimperative.g:3647:2: kw= 'implementedby'
                    {
                    kw=(Token)match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getImplementedbyKeyword_10());

                    }

                    }
                    break;
                case 12 :
                    // InternalQVTimperative.g:3654:2: kw= 'imports'
                    {
                    kw=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getImportsKeyword_11());

                    }

                    }
                    break;
                case 13 :
                    // InternalQVTimperative.g:3661:2: kw= 'install'
                    {
                    kw=(Token)match(input,46,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getInstallKeyword_12());

                    }

                    }
                    break;
                case 14 :
                    // InternalQVTimperative.g:3668:2: kw= 'invoke'
                    {
                    kw=(Token)match(input,47,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getInvokeKeyword_13());

                    }

                    }
                    break;
                case 15 :
                    // InternalQVTimperative.g:3675:2: kw= 'iterates'
                    {
                    kw=(Token)match(input,43,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getIteratesKeyword_14());

                    }

                    }
                    break;
                case 16 :
                    // InternalQVTimperative.g:3682:2: kw= 'map'
                    {
                    kw=(Token)match(input,44,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getMapKeyword_15());

                    }

                    }
                    break;
                case 17 :
                    // InternalQVTimperative.g:3689:2: kw= 'new'
                    {
                    kw=(Token)match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getNewKeyword_16());

                    }

                    }
                    break;
                case 18 :
                    // InternalQVTimperative.g:3696:2: kw= 'notify'
                    {
                    kw=(Token)match(input,58,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getNotifyKeyword_17());

                    }

                    }
                    break;
                case 19 :
                    // InternalQVTimperative.g:3703:2: kw= 'observe'
                    {
                    kw=(Token)match(input,17,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getObserveKeyword_18());

                    }

                    }
                    break;
                case 20 :
                    // InternalQVTimperative.g:3710:2: kw= 'package'
                    {
                    kw=(Token)match(input,51,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getPackageKeyword_19());

                    }

                    }
                    break;
                case 21 :
                    // InternalQVTimperative.g:3717:2: kw= 'query'
                    {
                    kw=(Token)match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getQueryKeyword_20());

                    }

                    }
                    break;
                case 22 :
                    // InternalQVTimperative.g:3724:2: kw= 'set'
                    {
                    kw=(Token)match(input,59,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getSetKeyword_21());

                    }

                    }
                    break;
                case 23 :
                    // InternalQVTimperative.g:3731:2: kw= 'strict'
                    {
                    kw=(Token)match(input,25,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getStrictKeyword_22());

                    }

                    }
                    break;
                case 24 :
                    // InternalQVTimperative.g:3738:2: kw= 'success'
                    {
                    kw=(Token)match(input,39,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getSuccessKeyword_23());

                    }

                    }
                    break;
                case 25 :
                    // InternalQVTimperative.g:3745:2: kw= 'transformation'
                    {
                    kw=(Token)match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getTransformationKeyword_24());

                    }

                    }
                    break;
                case 26 :
                    // InternalQVTimperative.g:3752:2: kw= 'transient'
                    {
                    kw=(Token)match(input,53,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getTransientKeyword_25());

                    }

                    }
                    break;
                case 27 :
                    // InternalQVTimperative.g:3759:2: kw= 'uses'
                    {
                    kw=(Token)match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getUsesKeyword_26());

                    }

                    }
                    break;
                case 28 :
                    // InternalQVTimperative.g:3766:2: kw= 'var'
                    {
                    kw=(Token)match(input,30,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getVarKeyword_27());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQVTimperativeUnrestrictedName"


    // $ANTLR start "entryRuleUnrestrictedName"
    // InternalQVTimperative.g:3779:1: entryRuleUnrestrictedName returns [String current=null] : iv_ruleUnrestrictedName= ruleUnrestrictedName EOF ;
    public final String entryRuleUnrestrictedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUnrestrictedName = null;


        try {
            // InternalQVTimperative.g:3780:2: (iv_ruleUnrestrictedName= ruleUnrestrictedName EOF )
            // InternalQVTimperative.g:3781:2: iv_ruleUnrestrictedName= ruleUnrestrictedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnrestrictedNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleUnrestrictedName=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnrestrictedName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnrestrictedName"


    // $ANTLR start "ruleUnrestrictedName"
    // InternalQVTimperative.g:3788:1: ruleUnrestrictedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_EssentialOCLUnrestrictedName_0= ruleEssentialOCLUnrestrictedName | this_QVTbaseUnrestrictedName_1= ruleQVTbaseUnrestrictedName | this_QVTimperativeUnrestrictedName_2= ruleQVTimperativeUnrestrictedName ) ;
    public final AntlrDatatypeRuleToken ruleUnrestrictedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_EssentialOCLUnrestrictedName_0 = null;

        AntlrDatatypeRuleToken this_QVTbaseUnrestrictedName_1 = null;

        AntlrDatatypeRuleToken this_QVTimperativeUnrestrictedName_2 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:3791:28: ( (this_EssentialOCLUnrestrictedName_0= ruleEssentialOCLUnrestrictedName | this_QVTbaseUnrestrictedName_1= ruleQVTbaseUnrestrictedName | this_QVTimperativeUnrestrictedName_2= ruleQVTimperativeUnrestrictedName ) )
            // InternalQVTimperative.g:3792:1: (this_EssentialOCLUnrestrictedName_0= ruleEssentialOCLUnrestrictedName | this_QVTbaseUnrestrictedName_1= ruleQVTbaseUnrestrictedName | this_QVTimperativeUnrestrictedName_2= ruleQVTimperativeUnrestrictedName )
            {
            // InternalQVTimperative.g:3792:1: (this_EssentialOCLUnrestrictedName_0= ruleEssentialOCLUnrestrictedName | this_QVTbaseUnrestrictedName_1= ruleQVTbaseUnrestrictedName | this_QVTimperativeUnrestrictedName_2= ruleQVTimperativeUnrestrictedName )
            int alt80=3;
            switch ( input.LA(1) ) {
            case RULE_SIMPLE_ID:
            case RULE_ESCAPED_ID:
                {
                alt80=1;
                }
                break;
            case 63:
            case 64:
            case 65:
            case 66:
            case 68:
            case 70:
            case 72:
            case 75:
            case 77:
            case 79:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 87:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
            case 94:
            case 96:
            case 98:
            case 99:
            case 100:
            case 101:
                {
                alt80=2;
                }
                break;
            case 53:
                {
                int LA80_3 = input.LA(2);

                if ( (synpred120_InternalQVTimperative()) ) {
                    alt80=2;
                }
                else if ( (true) ) {
                    alt80=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 80, 3, input);

                    throw nvae;
                }
                }
                break;
            case 17:
            case 19:
            case 22:
            case 23:
            case 25:
            case 26:
            case 29:
            case 30:
            case 31:
            case 32:
            case 33:
            case 39:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
            case 50:
            case 51:
            case 54:
            case 57:
            case 58:
            case 59:
            case 61:
            case 62:
                {
                alt80=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 80, 0, input);

                throw nvae;
            }

            switch (alt80) {
                case 1 :
                    // InternalQVTimperative.g:3793:5: this_EssentialOCLUnrestrictedName_0= ruleEssentialOCLUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getUnrestrictedNameAccess().getEssentialOCLUnrestrictedNameParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EssentialOCLUnrestrictedName_0=ruleEssentialOCLUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_EssentialOCLUnrestrictedName_0);

                    }
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:3805:5: this_QVTbaseUnrestrictedName_1= ruleQVTbaseUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getUnrestrictedNameAccess().getQVTbaseUnrestrictedNameParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_QVTbaseUnrestrictedName_1=ruleQVTbaseUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_QVTbaseUnrestrictedName_1);

                    }
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:3817:5: this_QVTimperativeUnrestrictedName_2= ruleQVTimperativeUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getUnrestrictedNameAccess().getQVTimperativeUnrestrictedNameParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_QVTimperativeUnrestrictedName_2=ruleQVTimperativeUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_QVTimperativeUnrestrictedName_2);

                    }
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnrestrictedName"


    // $ANTLR start "entryRuleAttributeCS"
    // InternalQVTimperative.g:3835:1: entryRuleAttributeCS returns [EObject current=null] : iv_ruleAttributeCS= ruleAttributeCS EOF ;
    public final EObject entryRuleAttributeCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAttributeCS = null;


        try {
            // InternalQVTimperative.g:3836:2: (iv_ruleAttributeCS= ruleAttributeCS EOF )
            // InternalQVTimperative.g:3837:2: iv_ruleAttributeCS= ruleAttributeCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAttributeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAttributeCS=ruleAttributeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAttributeCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAttributeCS"


    // $ANTLR start "ruleAttributeCS"
    // InternalQVTimperative.g:3844:1: ruleAttributeCS returns [EObject current=null] : ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'attribute' ( (lv_name_5_0= ruleUnrestrictedName ) ) (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_8= '=' ( (lv_default_9_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_10= '{' ( ( ( (lv_qualifiers_11_0= 'derived' ) ) | ( (lv_qualifiers_12_0= '!derived' ) ) | ( (lv_qualifiers_13_0= 'id' ) ) | ( (lv_qualifiers_14_0= '!id' ) ) | ( (lv_qualifiers_15_0= 'ordered' ) ) | ( (lv_qualifiers_16_0= '!ordered' ) ) | ( (lv_qualifiers_17_0= 'readonly' ) ) | ( (lv_qualifiers_18_0= '!readonly' ) ) | ( (lv_qualifiers_19_0= 'transient' ) ) | ( (lv_qualifiers_20_0= '!transient' ) ) | ( (lv_qualifiers_21_0= 'unique' ) ) | ( (lv_qualifiers_22_0= '!unique' ) ) | ( (lv_qualifiers_23_0= 'unsettable' ) ) | ( (lv_qualifiers_24_0= '!unsettable' ) ) | ( (lv_qualifiers_25_0= 'volatile' ) ) | ( (lv_qualifiers_26_0= '!volatile' ) ) ) (otherlv_27= ',' )? )+ otherlv_28= '}' )? ( (otherlv_29= '{' ( (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' ) | (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' ) )* otherlv_40= '}' ) | otherlv_41= ';' ) ) ;
    public final EObject ruleAttributeCS() throws RecognitionException {
        EObject current = null;

        Token lv_qualifiers_0_0=null;
        Token lv_qualifiers_1_0=null;
        Token lv_qualifiers_2_0=null;
        Token lv_qualifiers_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_default_9_0=null;
        Token otherlv_10=null;
        Token lv_qualifiers_11_0=null;
        Token lv_qualifiers_12_0=null;
        Token lv_qualifiers_13_0=null;
        Token lv_qualifiers_14_0=null;
        Token lv_qualifiers_15_0=null;
        Token lv_qualifiers_16_0=null;
        Token lv_qualifiers_17_0=null;
        Token lv_qualifiers_18_0=null;
        Token lv_qualifiers_19_0=null;
        Token lv_qualifiers_20_0=null;
        Token lv_qualifiers_21_0=null;
        Token lv_qualifiers_22_0=null;
        Token lv_qualifiers_23_0=null;
        Token lv_qualifiers_24_0=null;
        Token lv_qualifiers_25_0=null;
        Token lv_qualifiers_26_0=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token otherlv_30=null;
        Token otherlv_32=null;
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token otherlv_37=null;
        Token otherlv_39=null;
        Token otherlv_40=null;
        Token otherlv_41=null;
        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_ownedType_7_0 = null;

        EObject lv_ownedDefaultExpressions_33_0 = null;

        EObject lv_ownedDefaultExpressions_38_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:3847:28: ( ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'attribute' ( (lv_name_5_0= ruleUnrestrictedName ) ) (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_8= '=' ( (lv_default_9_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_10= '{' ( ( ( (lv_qualifiers_11_0= 'derived' ) ) | ( (lv_qualifiers_12_0= '!derived' ) ) | ( (lv_qualifiers_13_0= 'id' ) ) | ( (lv_qualifiers_14_0= '!id' ) ) | ( (lv_qualifiers_15_0= 'ordered' ) ) | ( (lv_qualifiers_16_0= '!ordered' ) ) | ( (lv_qualifiers_17_0= 'readonly' ) ) | ( (lv_qualifiers_18_0= '!readonly' ) ) | ( (lv_qualifiers_19_0= 'transient' ) ) | ( (lv_qualifiers_20_0= '!transient' ) ) | ( (lv_qualifiers_21_0= 'unique' ) ) | ( (lv_qualifiers_22_0= '!unique' ) ) | ( (lv_qualifiers_23_0= 'unsettable' ) ) | ( (lv_qualifiers_24_0= '!unsettable' ) ) | ( (lv_qualifiers_25_0= 'volatile' ) ) | ( (lv_qualifiers_26_0= '!volatile' ) ) ) (otherlv_27= ',' )? )+ otherlv_28= '}' )? ( (otherlv_29= '{' ( (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' ) | (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' ) )* otherlv_40= '}' ) | otherlv_41= ';' ) ) )
            // InternalQVTimperative.g:3848:1: ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'attribute' ( (lv_name_5_0= ruleUnrestrictedName ) ) (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_8= '=' ( (lv_default_9_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_10= '{' ( ( ( (lv_qualifiers_11_0= 'derived' ) ) | ( (lv_qualifiers_12_0= '!derived' ) ) | ( (lv_qualifiers_13_0= 'id' ) ) | ( (lv_qualifiers_14_0= '!id' ) ) | ( (lv_qualifiers_15_0= 'ordered' ) ) | ( (lv_qualifiers_16_0= '!ordered' ) ) | ( (lv_qualifiers_17_0= 'readonly' ) ) | ( (lv_qualifiers_18_0= '!readonly' ) ) | ( (lv_qualifiers_19_0= 'transient' ) ) | ( (lv_qualifiers_20_0= '!transient' ) ) | ( (lv_qualifiers_21_0= 'unique' ) ) | ( (lv_qualifiers_22_0= '!unique' ) ) | ( (lv_qualifiers_23_0= 'unsettable' ) ) | ( (lv_qualifiers_24_0= '!unsettable' ) ) | ( (lv_qualifiers_25_0= 'volatile' ) ) | ( (lv_qualifiers_26_0= '!volatile' ) ) ) (otherlv_27= ',' )? )+ otherlv_28= '}' )? ( (otherlv_29= '{' ( (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' ) | (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' ) )* otherlv_40= '}' ) | otherlv_41= ';' ) )
            {
            // InternalQVTimperative.g:3848:1: ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'attribute' ( (lv_name_5_0= ruleUnrestrictedName ) ) (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_8= '=' ( (lv_default_9_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_10= '{' ( ( ( (lv_qualifiers_11_0= 'derived' ) ) | ( (lv_qualifiers_12_0= '!derived' ) ) | ( (lv_qualifiers_13_0= 'id' ) ) | ( (lv_qualifiers_14_0= '!id' ) ) | ( (lv_qualifiers_15_0= 'ordered' ) ) | ( (lv_qualifiers_16_0= '!ordered' ) ) | ( (lv_qualifiers_17_0= 'readonly' ) ) | ( (lv_qualifiers_18_0= '!readonly' ) ) | ( (lv_qualifiers_19_0= 'transient' ) ) | ( (lv_qualifiers_20_0= '!transient' ) ) | ( (lv_qualifiers_21_0= 'unique' ) ) | ( (lv_qualifiers_22_0= '!unique' ) ) | ( (lv_qualifiers_23_0= 'unsettable' ) ) | ( (lv_qualifiers_24_0= '!unsettable' ) ) | ( (lv_qualifiers_25_0= 'volatile' ) ) | ( (lv_qualifiers_26_0= '!volatile' ) ) ) (otherlv_27= ',' )? )+ otherlv_28= '}' )? ( (otherlv_29= '{' ( (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' ) | (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' ) )* otherlv_40= '}' ) | otherlv_41= ';' ) )
            // InternalQVTimperative.g:3848:2: ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'attribute' ( (lv_name_5_0= ruleUnrestrictedName ) ) (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_8= '=' ( (lv_default_9_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_10= '{' ( ( ( (lv_qualifiers_11_0= 'derived' ) ) | ( (lv_qualifiers_12_0= '!derived' ) ) | ( (lv_qualifiers_13_0= 'id' ) ) | ( (lv_qualifiers_14_0= '!id' ) ) | ( (lv_qualifiers_15_0= 'ordered' ) ) | ( (lv_qualifiers_16_0= '!ordered' ) ) | ( (lv_qualifiers_17_0= 'readonly' ) ) | ( (lv_qualifiers_18_0= '!readonly' ) ) | ( (lv_qualifiers_19_0= 'transient' ) ) | ( (lv_qualifiers_20_0= '!transient' ) ) | ( (lv_qualifiers_21_0= 'unique' ) ) | ( (lv_qualifiers_22_0= '!unique' ) ) | ( (lv_qualifiers_23_0= 'unsettable' ) ) | ( (lv_qualifiers_24_0= '!unsettable' ) ) | ( (lv_qualifiers_25_0= 'volatile' ) ) | ( (lv_qualifiers_26_0= '!volatile' ) ) ) (otherlv_27= ',' )? )+ otherlv_28= '}' )? ( (otherlv_29= '{' ( (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' ) | (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' ) )* otherlv_40= '}' ) | otherlv_41= ';' )
            {
            // InternalQVTimperative.g:3848:2: ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )?
            int alt83=3;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==63) ) {
                alt83=1;
            }
            else if ( (LA83_0==64) ) {
                alt83=2;
            }
            switch (alt83) {
                case 1 :
                    // InternalQVTimperative.g:3848:3: ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? )
                    {
                    // InternalQVTimperative.g:3848:3: ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? )
                    // InternalQVTimperative.g:3848:4: ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )?
                    {
                    // InternalQVTimperative.g:3848:4: ( (lv_qualifiers_0_0= 'static' ) )
                    // InternalQVTimperative.g:3849:1: (lv_qualifiers_0_0= 'static' )
                    {
                    // InternalQVTimperative.g:3849:1: (lv_qualifiers_0_0= 'static' )
                    // InternalQVTimperative.g:3850:3: lv_qualifiers_0_0= 'static'
                    {
                    lv_qualifiers_0_0=(Token)match(input,63,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_qualifiers_0_0, grammarAccess.getAttributeCSAccess().getQualifiersStaticKeyword_0_0_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getAttributeCSRule());
                      	        }
                             		addWithLastConsumed(current, "qualifiers", lv_qualifiers_0_0, "static");

                    }

                    }


                    }

                    // InternalQVTimperative.g:3863:2: ( (lv_qualifiers_1_0= 'definition' ) )?
                    int alt81=2;
                    int LA81_0 = input.LA(1);

                    if ( (LA81_0==64) ) {
                        alt81=1;
                    }
                    switch (alt81) {
                        case 1 :
                            // InternalQVTimperative.g:3864:1: (lv_qualifiers_1_0= 'definition' )
                            {
                            // InternalQVTimperative.g:3864:1: (lv_qualifiers_1_0= 'definition' )
                            // InternalQVTimperative.g:3865:3: lv_qualifiers_1_0= 'definition'
                            {
                            lv_qualifiers_1_0=(Token)match(input,64,FollowSets000.FOLLOW_71); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_qualifiers_1_0, grammarAccess.getAttributeCSAccess().getQualifiersDefinitionKeyword_0_0_1_0());

                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                              	        }
                                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_1_0, "definition");

                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:3879:6: ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? )
                    {
                    // InternalQVTimperative.g:3879:6: ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? )
                    // InternalQVTimperative.g:3879:7: ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )?
                    {
                    // InternalQVTimperative.g:3879:7: ( (lv_qualifiers_2_0= 'definition' ) )
                    // InternalQVTimperative.g:3880:1: (lv_qualifiers_2_0= 'definition' )
                    {
                    // InternalQVTimperative.g:3880:1: (lv_qualifiers_2_0= 'definition' )
                    // InternalQVTimperative.g:3881:3: lv_qualifiers_2_0= 'definition'
                    {
                    lv_qualifiers_2_0=(Token)match(input,64,FollowSets000.FOLLOW_72); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_qualifiers_2_0, grammarAccess.getAttributeCSAccess().getQualifiersDefinitionKeyword_0_1_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getAttributeCSRule());
                      	        }
                             		addWithLastConsumed(current, "qualifiers", lv_qualifiers_2_0, "definition");

                    }

                    }


                    }

                    // InternalQVTimperative.g:3894:2: ( (lv_qualifiers_3_0= 'static' ) )?
                    int alt82=2;
                    int LA82_0 = input.LA(1);

                    if ( (LA82_0==63) ) {
                        alt82=1;
                    }
                    switch (alt82) {
                        case 1 :
                            // InternalQVTimperative.g:3895:1: (lv_qualifiers_3_0= 'static' )
                            {
                            // InternalQVTimperative.g:3895:1: (lv_qualifiers_3_0= 'static' )
                            // InternalQVTimperative.g:3896:3: lv_qualifiers_3_0= 'static'
                            {
                            lv_qualifiers_3_0=(Token)match(input,63,FollowSets000.FOLLOW_71); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_qualifiers_3_0, grammarAccess.getAttributeCSAccess().getQualifiersStaticKeyword_0_1_1_0());

                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                              	        }
                                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_3_0, "static");

                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,65,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getAttributeCSAccess().getAttributeKeyword_1());

            }
            // InternalQVTimperative.g:3913:1: ( (lv_name_5_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:3914:1: (lv_name_5_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:3914:1: (lv_name_5_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:3915:3: lv_name_5_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getAttributeCSAccess().getNameUnrestrictedNameParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_51);
            lv_name_5_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAttributeCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_5_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:3931:2: (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypedMultiplicityRefCS ) ) )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==24) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalQVTimperative.g:3931:4: otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypedMultiplicityRefCS ) )
                    {
                    otherlv_6=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getAttributeCSAccess().getColonKeyword_3_0());

                    }
                    // InternalQVTimperative.g:3935:1: ( (lv_ownedType_7_0= ruleTypedMultiplicityRefCS ) )
                    // InternalQVTimperative.g:3936:1: (lv_ownedType_7_0= ruleTypedMultiplicityRefCS )
                    {
                    // InternalQVTimperative.g:3936:1: (lv_ownedType_7_0= ruleTypedMultiplicityRefCS )
                    // InternalQVTimperative.g:3937:3: lv_ownedType_7_0= ruleTypedMultiplicityRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getAttributeCSAccess().getOwnedTypeTypedMultiplicityRefCSParserRuleCall_3_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_52);
                    lv_ownedType_7_0=ruleTypedMultiplicityRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAttributeCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_7_0,
                              		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.TypedMultiplicityRefCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:3953:4: (otherlv_8= '=' ( (lv_default_9_0= RULE_SINGLE_QUOTED_STRING ) ) )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==52) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalQVTimperative.g:3953:6: otherlv_8= '=' ( (lv_default_9_0= RULE_SINGLE_QUOTED_STRING ) )
                    {
                    otherlv_8=(Token)match(input,52,FollowSets000.FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getAttributeCSAccess().getEqualsSignKeyword_4_0());

                    }
                    // InternalQVTimperative.g:3957:1: ( (lv_default_9_0= RULE_SINGLE_QUOTED_STRING ) )
                    // InternalQVTimperative.g:3958:1: (lv_default_9_0= RULE_SINGLE_QUOTED_STRING )
                    {
                    // InternalQVTimperative.g:3958:1: (lv_default_9_0= RULE_SINGLE_QUOTED_STRING )
                    // InternalQVTimperative.g:3959:3: lv_default_9_0= RULE_SINGLE_QUOTED_STRING
                    {
                    lv_default_9_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_default_9_0, grammarAccess.getAttributeCSAccess().getDefaultSINGLE_QUOTED_STRINGTerminalRuleCall_4_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getAttributeCSRule());
                      	        }
                             		setWithLastConsumed(
                             			current,
                             			"default",
                              		lv_default_9_0,
                              		"org.eclipse.ocl.xtext.base.Base.SINGLE_QUOTED_STRING");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:3975:4: (otherlv_10= '{' ( ( ( (lv_qualifiers_11_0= 'derived' ) ) | ( (lv_qualifiers_12_0= '!derived' ) ) | ( (lv_qualifiers_13_0= 'id' ) ) | ( (lv_qualifiers_14_0= '!id' ) ) | ( (lv_qualifiers_15_0= 'ordered' ) ) | ( (lv_qualifiers_16_0= '!ordered' ) ) | ( (lv_qualifiers_17_0= 'readonly' ) ) | ( (lv_qualifiers_18_0= '!readonly' ) ) | ( (lv_qualifiers_19_0= 'transient' ) ) | ( (lv_qualifiers_20_0= '!transient' ) ) | ( (lv_qualifiers_21_0= 'unique' ) ) | ( (lv_qualifiers_22_0= '!unique' ) ) | ( (lv_qualifiers_23_0= 'unsettable' ) ) | ( (lv_qualifiers_24_0= '!unsettable' ) ) | ( (lv_qualifiers_25_0= 'volatile' ) ) | ( (lv_qualifiers_26_0= '!volatile' ) ) ) (otherlv_27= ',' )? )+ otherlv_28= '}' )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==35) ) {
                int LA89_1 = input.LA(2);

                if ( (LA89_1==53||(LA89_1>=66 && LA89_1<=80)) ) {
                    alt89=1;
                }
            }
            switch (alt89) {
                case 1 :
                    // InternalQVTimperative.g:3975:6: otherlv_10= '{' ( ( ( (lv_qualifiers_11_0= 'derived' ) ) | ( (lv_qualifiers_12_0= '!derived' ) ) | ( (lv_qualifiers_13_0= 'id' ) ) | ( (lv_qualifiers_14_0= '!id' ) ) | ( (lv_qualifiers_15_0= 'ordered' ) ) | ( (lv_qualifiers_16_0= '!ordered' ) ) | ( (lv_qualifiers_17_0= 'readonly' ) ) | ( (lv_qualifiers_18_0= '!readonly' ) ) | ( (lv_qualifiers_19_0= 'transient' ) ) | ( (lv_qualifiers_20_0= '!transient' ) ) | ( (lv_qualifiers_21_0= 'unique' ) ) | ( (lv_qualifiers_22_0= '!unique' ) ) | ( (lv_qualifiers_23_0= 'unsettable' ) ) | ( (lv_qualifiers_24_0= '!unsettable' ) ) | ( (lv_qualifiers_25_0= 'volatile' ) ) | ( (lv_qualifiers_26_0= '!volatile' ) ) ) (otherlv_27= ',' )? )+ otherlv_28= '}'
                    {
                    otherlv_10=(Token)match(input,35,FollowSets000.FOLLOW_73); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getAttributeCSAccess().getLeftCurlyBracketKeyword_5_0());

                    }
                    // InternalQVTimperative.g:3979:1: ( ( ( (lv_qualifiers_11_0= 'derived' ) ) | ( (lv_qualifiers_12_0= '!derived' ) ) | ( (lv_qualifiers_13_0= 'id' ) ) | ( (lv_qualifiers_14_0= '!id' ) ) | ( (lv_qualifiers_15_0= 'ordered' ) ) | ( (lv_qualifiers_16_0= '!ordered' ) ) | ( (lv_qualifiers_17_0= 'readonly' ) ) | ( (lv_qualifiers_18_0= '!readonly' ) ) | ( (lv_qualifiers_19_0= 'transient' ) ) | ( (lv_qualifiers_20_0= '!transient' ) ) | ( (lv_qualifiers_21_0= 'unique' ) ) | ( (lv_qualifiers_22_0= '!unique' ) ) | ( (lv_qualifiers_23_0= 'unsettable' ) ) | ( (lv_qualifiers_24_0= '!unsettable' ) ) | ( (lv_qualifiers_25_0= 'volatile' ) ) | ( (lv_qualifiers_26_0= '!volatile' ) ) ) (otherlv_27= ',' )? )+
                    int cnt88=0;
                    loop88:
                    do {
                        int alt88=2;
                        int LA88_0 = input.LA(1);

                        if ( (LA88_0==53||(LA88_0>=66 && LA88_0<=80)) ) {
                            alt88=1;
                        }


                        switch (alt88) {
                    	case 1 :
                    	    // InternalQVTimperative.g:3979:2: ( ( (lv_qualifiers_11_0= 'derived' ) ) | ( (lv_qualifiers_12_0= '!derived' ) ) | ( (lv_qualifiers_13_0= 'id' ) ) | ( (lv_qualifiers_14_0= '!id' ) ) | ( (lv_qualifiers_15_0= 'ordered' ) ) | ( (lv_qualifiers_16_0= '!ordered' ) ) | ( (lv_qualifiers_17_0= 'readonly' ) ) | ( (lv_qualifiers_18_0= '!readonly' ) ) | ( (lv_qualifiers_19_0= 'transient' ) ) | ( (lv_qualifiers_20_0= '!transient' ) ) | ( (lv_qualifiers_21_0= 'unique' ) ) | ( (lv_qualifiers_22_0= '!unique' ) ) | ( (lv_qualifiers_23_0= 'unsettable' ) ) | ( (lv_qualifiers_24_0= '!unsettable' ) ) | ( (lv_qualifiers_25_0= 'volatile' ) ) | ( (lv_qualifiers_26_0= '!volatile' ) ) ) (otherlv_27= ',' )?
                    	    {
                    	    // InternalQVTimperative.g:3979:2: ( ( (lv_qualifiers_11_0= 'derived' ) ) | ( (lv_qualifiers_12_0= '!derived' ) ) | ( (lv_qualifiers_13_0= 'id' ) ) | ( (lv_qualifiers_14_0= '!id' ) ) | ( (lv_qualifiers_15_0= 'ordered' ) ) | ( (lv_qualifiers_16_0= '!ordered' ) ) | ( (lv_qualifiers_17_0= 'readonly' ) ) | ( (lv_qualifiers_18_0= '!readonly' ) ) | ( (lv_qualifiers_19_0= 'transient' ) ) | ( (lv_qualifiers_20_0= '!transient' ) ) | ( (lv_qualifiers_21_0= 'unique' ) ) | ( (lv_qualifiers_22_0= '!unique' ) ) | ( (lv_qualifiers_23_0= 'unsettable' ) ) | ( (lv_qualifiers_24_0= '!unsettable' ) ) | ( (lv_qualifiers_25_0= 'volatile' ) ) | ( (lv_qualifiers_26_0= '!volatile' ) ) )
                    	    int alt86=16;
                    	    switch ( input.LA(1) ) {
                    	    case 66:
                    	        {
                    	        alt86=1;
                    	        }
                    	        break;
                    	    case 67:
                    	        {
                    	        alt86=2;
                    	        }
                    	        break;
                    	    case 68:
                    	        {
                    	        alt86=3;
                    	        }
                    	        break;
                    	    case 69:
                    	        {
                    	        alt86=4;
                    	        }
                    	        break;
                    	    case 70:
                    	        {
                    	        alt86=5;
                    	        }
                    	        break;
                    	    case 71:
                    	        {
                    	        alt86=6;
                    	        }
                    	        break;
                    	    case 72:
                    	        {
                    	        alt86=7;
                    	        }
                    	        break;
                    	    case 73:
                    	        {
                    	        alt86=8;
                    	        }
                    	        break;
                    	    case 53:
                    	        {
                    	        alt86=9;
                    	        }
                    	        break;
                    	    case 74:
                    	        {
                    	        alt86=10;
                    	        }
                    	        break;
                    	    case 75:
                    	        {
                    	        alt86=11;
                    	        }
                    	        break;
                    	    case 76:
                    	        {
                    	        alt86=12;
                    	        }
                    	        break;
                    	    case 77:
                    	        {
                    	        alt86=13;
                    	        }
                    	        break;
                    	    case 78:
                    	        {
                    	        alt86=14;
                    	        }
                    	        break;
                    	    case 79:
                    	        {
                    	        alt86=15;
                    	        }
                    	        break;
                    	    case 80:
                    	        {
                    	        alt86=16;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 86, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt86) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:3979:3: ( (lv_qualifiers_11_0= 'derived' ) )
                    	            {
                    	            // InternalQVTimperative.g:3979:3: ( (lv_qualifiers_11_0= 'derived' ) )
                    	            // InternalQVTimperative.g:3980:1: (lv_qualifiers_11_0= 'derived' )
                    	            {
                    	            // InternalQVTimperative.g:3980:1: (lv_qualifiers_11_0= 'derived' )
                    	            // InternalQVTimperative.g:3981:3: lv_qualifiers_11_0= 'derived'
                    	            {
                    	            lv_qualifiers_11_0=(Token)match(input,66,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_11_0, grammarAccess.getAttributeCSAccess().getQualifiersDerivedKeyword_5_1_0_0_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_11_0, "derived");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalQVTimperative.g:3995:6: ( (lv_qualifiers_12_0= '!derived' ) )
                    	            {
                    	            // InternalQVTimperative.g:3995:6: ( (lv_qualifiers_12_0= '!derived' ) )
                    	            // InternalQVTimperative.g:3996:1: (lv_qualifiers_12_0= '!derived' )
                    	            {
                    	            // InternalQVTimperative.g:3996:1: (lv_qualifiers_12_0= '!derived' )
                    	            // InternalQVTimperative.g:3997:3: lv_qualifiers_12_0= '!derived'
                    	            {
                    	            lv_qualifiers_12_0=(Token)match(input,67,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_12_0, grammarAccess.getAttributeCSAccess().getQualifiersDerivedKeyword_5_1_0_1_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_12_0, "!derived");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 3 :
                    	            // InternalQVTimperative.g:4011:6: ( (lv_qualifiers_13_0= 'id' ) )
                    	            {
                    	            // InternalQVTimperative.g:4011:6: ( (lv_qualifiers_13_0= 'id' ) )
                    	            // InternalQVTimperative.g:4012:1: (lv_qualifiers_13_0= 'id' )
                    	            {
                    	            // InternalQVTimperative.g:4012:1: (lv_qualifiers_13_0= 'id' )
                    	            // InternalQVTimperative.g:4013:3: lv_qualifiers_13_0= 'id'
                    	            {
                    	            lv_qualifiers_13_0=(Token)match(input,68,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_13_0, grammarAccess.getAttributeCSAccess().getQualifiersIdKeyword_5_1_0_2_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_13_0, "id");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 4 :
                    	            // InternalQVTimperative.g:4027:6: ( (lv_qualifiers_14_0= '!id' ) )
                    	            {
                    	            // InternalQVTimperative.g:4027:6: ( (lv_qualifiers_14_0= '!id' ) )
                    	            // InternalQVTimperative.g:4028:1: (lv_qualifiers_14_0= '!id' )
                    	            {
                    	            // InternalQVTimperative.g:4028:1: (lv_qualifiers_14_0= '!id' )
                    	            // InternalQVTimperative.g:4029:3: lv_qualifiers_14_0= '!id'
                    	            {
                    	            lv_qualifiers_14_0=(Token)match(input,69,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_14_0, grammarAccess.getAttributeCSAccess().getQualifiersIdKeyword_5_1_0_3_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_14_0, "!id");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 5 :
                    	            // InternalQVTimperative.g:4043:6: ( (lv_qualifiers_15_0= 'ordered' ) )
                    	            {
                    	            // InternalQVTimperative.g:4043:6: ( (lv_qualifiers_15_0= 'ordered' ) )
                    	            // InternalQVTimperative.g:4044:1: (lv_qualifiers_15_0= 'ordered' )
                    	            {
                    	            // InternalQVTimperative.g:4044:1: (lv_qualifiers_15_0= 'ordered' )
                    	            // InternalQVTimperative.g:4045:3: lv_qualifiers_15_0= 'ordered'
                    	            {
                    	            lv_qualifiers_15_0=(Token)match(input,70,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_15_0, grammarAccess.getAttributeCSAccess().getQualifiersOrderedKeyword_5_1_0_4_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_15_0, "ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 6 :
                    	            // InternalQVTimperative.g:4059:6: ( (lv_qualifiers_16_0= '!ordered' ) )
                    	            {
                    	            // InternalQVTimperative.g:4059:6: ( (lv_qualifiers_16_0= '!ordered' ) )
                    	            // InternalQVTimperative.g:4060:1: (lv_qualifiers_16_0= '!ordered' )
                    	            {
                    	            // InternalQVTimperative.g:4060:1: (lv_qualifiers_16_0= '!ordered' )
                    	            // InternalQVTimperative.g:4061:3: lv_qualifiers_16_0= '!ordered'
                    	            {
                    	            lv_qualifiers_16_0=(Token)match(input,71,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_16_0, grammarAccess.getAttributeCSAccess().getQualifiersOrderedKeyword_5_1_0_5_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_16_0, "!ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 7 :
                    	            // InternalQVTimperative.g:4075:6: ( (lv_qualifiers_17_0= 'readonly' ) )
                    	            {
                    	            // InternalQVTimperative.g:4075:6: ( (lv_qualifiers_17_0= 'readonly' ) )
                    	            // InternalQVTimperative.g:4076:1: (lv_qualifiers_17_0= 'readonly' )
                    	            {
                    	            // InternalQVTimperative.g:4076:1: (lv_qualifiers_17_0= 'readonly' )
                    	            // InternalQVTimperative.g:4077:3: lv_qualifiers_17_0= 'readonly'
                    	            {
                    	            lv_qualifiers_17_0=(Token)match(input,72,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_17_0, grammarAccess.getAttributeCSAccess().getQualifiersReadonlyKeyword_5_1_0_6_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_17_0, "readonly");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 8 :
                    	            // InternalQVTimperative.g:4091:6: ( (lv_qualifiers_18_0= '!readonly' ) )
                    	            {
                    	            // InternalQVTimperative.g:4091:6: ( (lv_qualifiers_18_0= '!readonly' ) )
                    	            // InternalQVTimperative.g:4092:1: (lv_qualifiers_18_0= '!readonly' )
                    	            {
                    	            // InternalQVTimperative.g:4092:1: (lv_qualifiers_18_0= '!readonly' )
                    	            // InternalQVTimperative.g:4093:3: lv_qualifiers_18_0= '!readonly'
                    	            {
                    	            lv_qualifiers_18_0=(Token)match(input,73,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_18_0, grammarAccess.getAttributeCSAccess().getQualifiersReadonlyKeyword_5_1_0_7_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_18_0, "!readonly");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 9 :
                    	            // InternalQVTimperative.g:4107:6: ( (lv_qualifiers_19_0= 'transient' ) )
                    	            {
                    	            // InternalQVTimperative.g:4107:6: ( (lv_qualifiers_19_0= 'transient' ) )
                    	            // InternalQVTimperative.g:4108:1: (lv_qualifiers_19_0= 'transient' )
                    	            {
                    	            // InternalQVTimperative.g:4108:1: (lv_qualifiers_19_0= 'transient' )
                    	            // InternalQVTimperative.g:4109:3: lv_qualifiers_19_0= 'transient'
                    	            {
                    	            lv_qualifiers_19_0=(Token)match(input,53,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_19_0, grammarAccess.getAttributeCSAccess().getQualifiersTransientKeyword_5_1_0_8_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_19_0, "transient");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 10 :
                    	            // InternalQVTimperative.g:4123:6: ( (lv_qualifiers_20_0= '!transient' ) )
                    	            {
                    	            // InternalQVTimperative.g:4123:6: ( (lv_qualifiers_20_0= '!transient' ) )
                    	            // InternalQVTimperative.g:4124:1: (lv_qualifiers_20_0= '!transient' )
                    	            {
                    	            // InternalQVTimperative.g:4124:1: (lv_qualifiers_20_0= '!transient' )
                    	            // InternalQVTimperative.g:4125:3: lv_qualifiers_20_0= '!transient'
                    	            {
                    	            lv_qualifiers_20_0=(Token)match(input,74,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_20_0, grammarAccess.getAttributeCSAccess().getQualifiersTransientKeyword_5_1_0_9_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_20_0, "!transient");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 11 :
                    	            // InternalQVTimperative.g:4139:6: ( (lv_qualifiers_21_0= 'unique' ) )
                    	            {
                    	            // InternalQVTimperative.g:4139:6: ( (lv_qualifiers_21_0= 'unique' ) )
                    	            // InternalQVTimperative.g:4140:1: (lv_qualifiers_21_0= 'unique' )
                    	            {
                    	            // InternalQVTimperative.g:4140:1: (lv_qualifiers_21_0= 'unique' )
                    	            // InternalQVTimperative.g:4141:3: lv_qualifiers_21_0= 'unique'
                    	            {
                    	            lv_qualifiers_21_0=(Token)match(input,75,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_21_0, grammarAccess.getAttributeCSAccess().getQualifiersUniqueKeyword_5_1_0_10_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_21_0, "unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 12 :
                    	            // InternalQVTimperative.g:4155:6: ( (lv_qualifiers_22_0= '!unique' ) )
                    	            {
                    	            // InternalQVTimperative.g:4155:6: ( (lv_qualifiers_22_0= '!unique' ) )
                    	            // InternalQVTimperative.g:4156:1: (lv_qualifiers_22_0= '!unique' )
                    	            {
                    	            // InternalQVTimperative.g:4156:1: (lv_qualifiers_22_0= '!unique' )
                    	            // InternalQVTimperative.g:4157:3: lv_qualifiers_22_0= '!unique'
                    	            {
                    	            lv_qualifiers_22_0=(Token)match(input,76,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_22_0, grammarAccess.getAttributeCSAccess().getQualifiersUniqueKeyword_5_1_0_11_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_22_0, "!unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 13 :
                    	            // InternalQVTimperative.g:4171:6: ( (lv_qualifiers_23_0= 'unsettable' ) )
                    	            {
                    	            // InternalQVTimperative.g:4171:6: ( (lv_qualifiers_23_0= 'unsettable' ) )
                    	            // InternalQVTimperative.g:4172:1: (lv_qualifiers_23_0= 'unsettable' )
                    	            {
                    	            // InternalQVTimperative.g:4172:1: (lv_qualifiers_23_0= 'unsettable' )
                    	            // InternalQVTimperative.g:4173:3: lv_qualifiers_23_0= 'unsettable'
                    	            {
                    	            lv_qualifiers_23_0=(Token)match(input,77,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_23_0, grammarAccess.getAttributeCSAccess().getQualifiersUnsettableKeyword_5_1_0_12_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_23_0, "unsettable");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 14 :
                    	            // InternalQVTimperative.g:4187:6: ( (lv_qualifiers_24_0= '!unsettable' ) )
                    	            {
                    	            // InternalQVTimperative.g:4187:6: ( (lv_qualifiers_24_0= '!unsettable' ) )
                    	            // InternalQVTimperative.g:4188:1: (lv_qualifiers_24_0= '!unsettable' )
                    	            {
                    	            // InternalQVTimperative.g:4188:1: (lv_qualifiers_24_0= '!unsettable' )
                    	            // InternalQVTimperative.g:4189:3: lv_qualifiers_24_0= '!unsettable'
                    	            {
                    	            lv_qualifiers_24_0=(Token)match(input,78,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_24_0, grammarAccess.getAttributeCSAccess().getQualifiersUnsettableKeyword_5_1_0_13_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_24_0, "!unsettable");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 15 :
                    	            // InternalQVTimperative.g:4203:6: ( (lv_qualifiers_25_0= 'volatile' ) )
                    	            {
                    	            // InternalQVTimperative.g:4203:6: ( (lv_qualifiers_25_0= 'volatile' ) )
                    	            // InternalQVTimperative.g:4204:1: (lv_qualifiers_25_0= 'volatile' )
                    	            {
                    	            // InternalQVTimperative.g:4204:1: (lv_qualifiers_25_0= 'volatile' )
                    	            // InternalQVTimperative.g:4205:3: lv_qualifiers_25_0= 'volatile'
                    	            {
                    	            lv_qualifiers_25_0=(Token)match(input,79,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_25_0, grammarAccess.getAttributeCSAccess().getQualifiersVolatileKeyword_5_1_0_14_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_25_0, "volatile");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 16 :
                    	            // InternalQVTimperative.g:4219:6: ( (lv_qualifiers_26_0= '!volatile' ) )
                    	            {
                    	            // InternalQVTimperative.g:4219:6: ( (lv_qualifiers_26_0= '!volatile' ) )
                    	            // InternalQVTimperative.g:4220:1: (lv_qualifiers_26_0= '!volatile' )
                    	            {
                    	            // InternalQVTimperative.g:4220:1: (lv_qualifiers_26_0= '!volatile' )
                    	            // InternalQVTimperative.g:4221:3: lv_qualifiers_26_0= '!volatile'
                    	            {
                    	            lv_qualifiers_26_0=(Token)match(input,80,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_26_0, grammarAccess.getAttributeCSAccess().getQualifiersVolatileKeyword_5_1_0_15_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_26_0, "!volatile");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalQVTimperative.g:4234:3: (otherlv_27= ',' )?
                    	    int alt87=2;
                    	    int LA87_0 = input.LA(1);

                    	    if ( (LA87_0==18) ) {
                    	        alt87=1;
                    	    }
                    	    switch (alt87) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:4234:5: otherlv_27= ','
                    	            {
                    	            otherlv_27=(Token)match(input,18,FollowSets000.FOLLOW_75); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                  	newLeafNode(otherlv_27, grammarAccess.getAttributeCSAccess().getCommaKeyword_5_1_1());

                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt88 >= 1 ) break loop88;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(88, input);
                                throw eee;
                        }
                        cnt88++;
                    } while (true);

                    otherlv_28=(Token)match(input,36,FollowSets000.FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_28, grammarAccess.getAttributeCSAccess().getRightCurlyBracketKeyword_5_2());

                    }

                    }
                    break;

            }

            // InternalQVTimperative.g:4242:3: ( (otherlv_29= '{' ( (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' ) | (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' ) )* otherlv_40= '}' ) | otherlv_41= ';' )
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==35) ) {
                alt95=1;
            }
            else if ( (LA95_0==21) ) {
                alt95=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 95, 0, input);

                throw nvae;
            }
            switch (alt95) {
                case 1 :
                    // InternalQVTimperative.g:4242:4: (otherlv_29= '{' ( (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' ) | (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' ) )* otherlv_40= '}' )
                    {
                    // InternalQVTimperative.g:4242:4: (otherlv_29= '{' ( (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' ) | (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' ) )* otherlv_40= '}' )
                    // InternalQVTimperative.g:4242:6: otherlv_29= '{' ( (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' ) | (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' ) )* otherlv_40= '}'
                    {
                    otherlv_29=(Token)match(input,35,FollowSets000.FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_29, grammarAccess.getAttributeCSAccess().getLeftCurlyBracketKeyword_6_0_0());

                    }
                    // InternalQVTimperative.g:4246:1: ( (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' ) | (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' ) )*
                    loop94:
                    do {
                        int alt94=3;
                        int LA94_0 = input.LA(1);

                        if ( (LA94_0==81) ) {
                            alt94=1;
                        }
                        else if ( (LA94_0==82) ) {
                            alt94=2;
                        }


                        switch (alt94) {
                    	case 1 :
                    	    // InternalQVTimperative.g:4246:2: (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' )
                    	    {
                    	    // InternalQVTimperative.g:4246:2: (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' )
                    	    // InternalQVTimperative.g:4246:4: otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';'
                    	    {
                    	    otherlv_30=(Token)match(input,81,FollowSets000.FOLLOW_14); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_30, grammarAccess.getAttributeCSAccess().getInitialKeyword_6_0_1_0_0());

                    	    }
                    	    // InternalQVTimperative.g:4250:1: ( ruleUnrestrictedName )?
                    	    int alt90=2;
                    	    int LA90_0 = input.LA(1);

                    	    if ( ((LA90_0>=RULE_SIMPLE_ID && LA90_0<=RULE_ESCAPED_ID)||LA90_0==17||LA90_0==19||(LA90_0>=22 && LA90_0<=23)||(LA90_0>=25 && LA90_0<=26)||(LA90_0>=29 && LA90_0<=33)||LA90_0==39||(LA90_0>=43 && LA90_0<=51)||(LA90_0>=53 && LA90_0<=54)||(LA90_0>=57 && LA90_0<=59)||(LA90_0>=61 && LA90_0<=66)||LA90_0==68||LA90_0==70||LA90_0==72||LA90_0==75||LA90_0==77||LA90_0==79||(LA90_0>=81 && LA90_0<=85)||(LA90_0>=87 && LA90_0<=92)||LA90_0==94||LA90_0==96||(LA90_0>=98 && LA90_0<=101)) ) {
                    	        alt90=1;
                    	    }
                    	    switch (alt90) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:4251:2: ruleUnrestrictedName
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	  /* */

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	                      newCompositeNode(grammarAccess.getAttributeCSAccess().getUnrestrictedNameParserRuleCall_6_0_1_0_1());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_11);
                    	            ruleUnrestrictedName();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;

                    	    }

                    	    otherlv_32=(Token)match(input,24,FollowSets000.FOLLOW_77); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_32, grammarAccess.getAttributeCSAccess().getColonKeyword_6_0_1_0_2());

                    	    }
                    	    // InternalQVTimperative.g:4265:1: ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )?
                    	    int alt91=2;
                    	    int LA91_0 = input.LA(1);

                    	    if ( ((LA91_0>=RULE_SINGLE_QUOTED_STRING && LA91_0<=RULE_ESCAPED_ID)||LA91_0==17||LA91_0==19||(LA91_0>=22 && LA91_0<=23)||(LA91_0>=25 && LA91_0<=26)||(LA91_0>=29 && LA91_0<=33)||LA91_0==39||(LA91_0>=42 && LA91_0<=51)||(LA91_0>=53 && LA91_0<=55)||(LA91_0>=57 && LA91_0<=59)||(LA91_0>=61 && LA91_0<=66)||LA91_0==68||LA91_0==70||LA91_0==72||LA91_0==75||LA91_0==77||LA91_0==79||(LA91_0>=81 && LA91_0<=85)||(LA91_0>=87 && LA91_0<=92)||LA91_0==94||LA91_0==96||(LA91_0>=98 && LA91_0<=103)||(LA91_0>=118 && LA91_0<=132)||LA91_0==134||(LA91_0>=136 && LA91_0<=139)||LA91_0==145||(LA91_0>=150 && LA91_0<=151)) ) {
                    	        alt91=1;
                    	    }
                    	    switch (alt91) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:4266:1: (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS )
                    	            {
                    	            // InternalQVTimperative.g:4266:1: (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS )
                    	            // InternalQVTimperative.g:4267:3: lv_ownedDefaultExpressions_33_0= ruleSpecificationCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	        newCompositeNode(grammarAccess.getAttributeCSAccess().getOwnedDefaultExpressionsSpecificationCSParserRuleCall_6_0_1_0_3_0());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_9);
                    	            lv_ownedDefaultExpressions_33_0=ruleSpecificationCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		add(
                    	                     			current,
                    	                     			"ownedDefaultExpressions",
                    	                      		lv_ownedDefaultExpressions_33_0,
                    	                      		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.SpecificationCS");
                    	              	        afterParserOrEnumRuleCall();

                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    otherlv_34=(Token)match(input,21,FollowSets000.FOLLOW_76); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_34, grammarAccess.getAttributeCSAccess().getSemicolonKeyword_6_0_1_0_4());

                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQVTimperative.g:4288:6: (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' )
                    	    {
                    	    // InternalQVTimperative.g:4288:6: (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' )
                    	    // InternalQVTimperative.g:4288:8: otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';'
                    	    {
                    	    otherlv_35=(Token)match(input,82,FollowSets000.FOLLOW_14); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_35, grammarAccess.getAttributeCSAccess().getDerivationKeyword_6_0_1_1_0());

                    	    }
                    	    // InternalQVTimperative.g:4292:1: ( ruleUnrestrictedName )?
                    	    int alt92=2;
                    	    int LA92_0 = input.LA(1);

                    	    if ( ((LA92_0>=RULE_SIMPLE_ID && LA92_0<=RULE_ESCAPED_ID)||LA92_0==17||LA92_0==19||(LA92_0>=22 && LA92_0<=23)||(LA92_0>=25 && LA92_0<=26)||(LA92_0>=29 && LA92_0<=33)||LA92_0==39||(LA92_0>=43 && LA92_0<=51)||(LA92_0>=53 && LA92_0<=54)||(LA92_0>=57 && LA92_0<=59)||(LA92_0>=61 && LA92_0<=66)||LA92_0==68||LA92_0==70||LA92_0==72||LA92_0==75||LA92_0==77||LA92_0==79||(LA92_0>=81 && LA92_0<=85)||(LA92_0>=87 && LA92_0<=92)||LA92_0==94||LA92_0==96||(LA92_0>=98 && LA92_0<=101)) ) {
                    	        alt92=1;
                    	    }
                    	    switch (alt92) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:4293:2: ruleUnrestrictedName
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	  /* */

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	                      newCompositeNode(grammarAccess.getAttributeCSAccess().getUnrestrictedNameParserRuleCall_6_0_1_1_1());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_11);
                    	            ruleUnrestrictedName();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;

                    	    }

                    	    otherlv_37=(Token)match(input,24,FollowSets000.FOLLOW_77); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_37, grammarAccess.getAttributeCSAccess().getColonKeyword_6_0_1_1_2());

                    	    }
                    	    // InternalQVTimperative.g:4307:1: ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )?
                    	    int alt93=2;
                    	    int LA93_0 = input.LA(1);

                    	    if ( ((LA93_0>=RULE_SINGLE_QUOTED_STRING && LA93_0<=RULE_ESCAPED_ID)||LA93_0==17||LA93_0==19||(LA93_0>=22 && LA93_0<=23)||(LA93_0>=25 && LA93_0<=26)||(LA93_0>=29 && LA93_0<=33)||LA93_0==39||(LA93_0>=42 && LA93_0<=51)||(LA93_0>=53 && LA93_0<=55)||(LA93_0>=57 && LA93_0<=59)||(LA93_0>=61 && LA93_0<=66)||LA93_0==68||LA93_0==70||LA93_0==72||LA93_0==75||LA93_0==77||LA93_0==79||(LA93_0>=81 && LA93_0<=85)||(LA93_0>=87 && LA93_0<=92)||LA93_0==94||LA93_0==96||(LA93_0>=98 && LA93_0<=103)||(LA93_0>=118 && LA93_0<=132)||LA93_0==134||(LA93_0>=136 && LA93_0<=139)||LA93_0==145||(LA93_0>=150 && LA93_0<=151)) ) {
                    	        alt93=1;
                    	    }
                    	    switch (alt93) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:4308:1: (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS )
                    	            {
                    	            // InternalQVTimperative.g:4308:1: (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS )
                    	            // InternalQVTimperative.g:4309:3: lv_ownedDefaultExpressions_38_0= ruleSpecificationCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	        newCompositeNode(grammarAccess.getAttributeCSAccess().getOwnedDefaultExpressionsSpecificationCSParserRuleCall_6_0_1_1_3_0());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_9);
                    	            lv_ownedDefaultExpressions_38_0=ruleSpecificationCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		add(
                    	                     			current,
                    	                     			"ownedDefaultExpressions",
                    	                      		lv_ownedDefaultExpressions_38_0,
                    	                      		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.SpecificationCS");
                    	              	        afterParserOrEnumRuleCall();

                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    otherlv_39=(Token)match(input,21,FollowSets000.FOLLOW_76); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_39, grammarAccess.getAttributeCSAccess().getSemicolonKeyword_6_0_1_1_4());

                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop94;
                        }
                    } while (true);

                    otherlv_40=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_40, grammarAccess.getAttributeCSAccess().getRightCurlyBracketKeyword_6_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:4334:7: otherlv_41= ';'
                    {
                    otherlv_41=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_41, grammarAccess.getAttributeCSAccess().getSemicolonKeyword_6_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAttributeCS"


    // $ANTLR start "entryRuleClassCS"
    // InternalQVTimperative.g:4346:1: entryRuleClassCS returns [EObject current=null] : iv_ruleClassCS= ruleClassCS EOF ;
    public final EObject entryRuleClassCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassCS = null;


        try {
            // InternalQVTimperative.g:4347:2: (iv_ruleClassCS= ruleClassCS EOF )
            // InternalQVTimperative.g:4348:2: iv_ruleClassCS= ruleClassCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleClassCS=ruleClassCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassCS"


    // $ANTLR start "ruleClassCS"
    // InternalQVTimperative.g:4355:1: ruleClassCS returns [EObject current=null] : (this_StructuredClassCS_0= ruleStructuredClassCS | this_DataTypeCS_1= ruleDataTypeCS | this_EnumerationCS_2= ruleEnumerationCS ) ;
    public final EObject ruleClassCS() throws RecognitionException {
        EObject current = null;

        EObject this_StructuredClassCS_0 = null;

        EObject this_DataTypeCS_1 = null;

        EObject this_EnumerationCS_2 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:4358:28: ( (this_StructuredClassCS_0= ruleStructuredClassCS | this_DataTypeCS_1= ruleDataTypeCS | this_EnumerationCS_2= ruleEnumerationCS ) )
            // InternalQVTimperative.g:4359:1: (this_StructuredClassCS_0= ruleStructuredClassCS | this_DataTypeCS_1= ruleDataTypeCS | this_EnumerationCS_2= ruleEnumerationCS )
            {
            // InternalQVTimperative.g:4359:1: (this_StructuredClassCS_0= ruleStructuredClassCS | this_DataTypeCS_1= ruleDataTypeCS | this_EnumerationCS_2= ruleEnumerationCS )
            int alt96=3;
            switch ( input.LA(1) ) {
            case 98:
            case 99:
                {
                alt96=1;
                }
                break;
            case 83:
            case 84:
                {
                alt96=2;
                }
                break;
            case 87:
                {
                alt96=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 96, 0, input);

                throw nvae;
            }

            switch (alt96) {
                case 1 :
                    // InternalQVTimperative.g:4360:2: this_StructuredClassCS_0= ruleStructuredClassCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getClassCSAccess().getStructuredClassCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StructuredClassCS_0=ruleStructuredClassCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_StructuredClassCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:4373:2: this_DataTypeCS_1= ruleDataTypeCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getClassCSAccess().getDataTypeCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DataTypeCS_1=ruleDataTypeCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_DataTypeCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:4386:2: this_EnumerationCS_2= ruleEnumerationCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getClassCSAccess().getEnumerationCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EnumerationCS_2=ruleEnumerationCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_EnumerationCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassCS"


    // $ANTLR start "entryRuleDataTypeCS"
    // InternalQVTimperative.g:4405:1: entryRuleDataTypeCS returns [EObject current=null] : iv_ruleDataTypeCS= ruleDataTypeCS EOF ;
    public final EObject entryRuleDataTypeCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDataTypeCS = null;


        try {
            // InternalQVTimperative.g:4406:2: (iv_ruleDataTypeCS= ruleDataTypeCS EOF )
            // InternalQVTimperative.g:4407:2: iv_ruleDataTypeCS= ruleDataTypeCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDataTypeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDataTypeCS=ruleDataTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDataTypeCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDataTypeCS"


    // $ANTLR start "ruleDataTypeCS"
    // InternalQVTimperative.g:4414:1: ruleDataTypeCS returns [EObject current=null] : ( ( (lv_isPrimitive_0_0= 'primitive' ) )? otherlv_1= 'datatype' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= ':' ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_6= '{' ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )? otherlv_9= '}' )? ( (otherlv_10= '{' otherlv_11= '}' ) | otherlv_12= ';' ) ) ;
    public final EObject ruleDataTypeCS() throws RecognitionException {
        EObject current = null;

        Token lv_isPrimitive_0_0=null;
        Token otherlv_1=null;
        Token otherlv_4=null;
        Token lv_instanceClassName_5_0=null;
        Token otherlv_6=null;
        Token lv_isSerializable_7_0=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_ownedSignature_3_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:4417:28: ( ( ( (lv_isPrimitive_0_0= 'primitive' ) )? otherlv_1= 'datatype' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= ':' ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_6= '{' ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )? otherlv_9= '}' )? ( (otherlv_10= '{' otherlv_11= '}' ) | otherlv_12= ';' ) ) )
            // InternalQVTimperative.g:4418:1: ( ( (lv_isPrimitive_0_0= 'primitive' ) )? otherlv_1= 'datatype' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= ':' ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_6= '{' ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )? otherlv_9= '}' )? ( (otherlv_10= '{' otherlv_11= '}' ) | otherlv_12= ';' ) )
            {
            // InternalQVTimperative.g:4418:1: ( ( (lv_isPrimitive_0_0= 'primitive' ) )? otherlv_1= 'datatype' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= ':' ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_6= '{' ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )? otherlv_9= '}' )? ( (otherlv_10= '{' otherlv_11= '}' ) | otherlv_12= ';' ) )
            // InternalQVTimperative.g:4418:2: ( (lv_isPrimitive_0_0= 'primitive' ) )? otherlv_1= 'datatype' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= ':' ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_6= '{' ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )? otherlv_9= '}' )? ( (otherlv_10= '{' otherlv_11= '}' ) | otherlv_12= ';' )
            {
            // InternalQVTimperative.g:4418:2: ( (lv_isPrimitive_0_0= 'primitive' ) )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==83) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // InternalQVTimperative.g:4419:1: (lv_isPrimitive_0_0= 'primitive' )
                    {
                    // InternalQVTimperative.g:4419:1: (lv_isPrimitive_0_0= 'primitive' )
                    // InternalQVTimperative.g:4420:3: lv_isPrimitive_0_0= 'primitive'
                    {
                    lv_isPrimitive_0_0=(Token)match(input,83,FollowSets000.FOLLOW_78); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isPrimitive_0_0, grammarAccess.getDataTypeCSAccess().getIsPrimitivePrimitiveKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDataTypeCSRule());
                      	        }
                             		setWithLastConsumed(current, "isPrimitive", true, "primitive");

                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,84,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getDataTypeCSAccess().getDatatypeKeyword_1());

            }
            // InternalQVTimperative.g:4437:1: ( (lv_name_2_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:4438:1: (lv_name_2_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:4438:1: (lv_name_2_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:4439:3: lv_name_2_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getDataTypeCSAccess().getNameUnrestrictedNameParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_79);
            lv_name_2_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDataTypeCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_2_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:4455:2: ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==55) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // InternalQVTimperative.g:4456:1: (lv_ownedSignature_3_0= ruleTemplateSignatureCS )
                    {
                    // InternalQVTimperative.g:4456:1: (lv_ownedSignature_3_0= ruleTemplateSignatureCS )
                    // InternalQVTimperative.g:4457:3: lv_ownedSignature_3_0= ruleTemplateSignatureCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getDataTypeCSAccess().getOwnedSignatureTemplateSignatureCSParserRuleCall_3_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_80);
                    lv_ownedSignature_3_0=ruleTemplateSignatureCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDataTypeCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedSignature",
                              		lv_ownedSignature_3_0,
                              		"org.eclipse.ocl.xtext.base.Base.TemplateSignatureCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:4473:3: (otherlv_4= ':' ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) ) )?
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==24) ) {
                alt99=1;
            }
            switch (alt99) {
                case 1 :
                    // InternalQVTimperative.g:4473:5: otherlv_4= ':' ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) )
                    {
                    otherlv_4=(Token)match(input,24,FollowSets000.FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getDataTypeCSAccess().getColonKeyword_4_0());

                    }
                    // InternalQVTimperative.g:4477:1: ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) )
                    // InternalQVTimperative.g:4478:1: (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING )
                    {
                    // InternalQVTimperative.g:4478:1: (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING )
                    // InternalQVTimperative.g:4479:3: lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING
                    {
                    lv_instanceClassName_5_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_instanceClassName_5_0, grammarAccess.getDataTypeCSAccess().getInstanceClassNameSINGLE_QUOTED_STRINGTerminalRuleCall_4_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDataTypeCSRule());
                      	        }
                             		setWithLastConsumed(
                             			current,
                             			"instanceClassName",
                              		lv_instanceClassName_5_0,
                              		"org.eclipse.ocl.xtext.base.Base.SINGLE_QUOTED_STRING");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:4495:4: (otherlv_6= '{' ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )? otherlv_9= '}' )?
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==35) ) {
                int LA101_1 = input.LA(2);

                if ( ((LA101_1>=85 && LA101_1<=86)) ) {
                    alt101=1;
                }
                else if ( (LA101_1==36) ) {
                    int LA101_4 = input.LA(3);

                    if ( (LA101_4==21||LA101_4==35) ) {
                        alt101=1;
                    }
                }
            }
            switch (alt101) {
                case 1 :
                    // InternalQVTimperative.g:4495:6: otherlv_6= '{' ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )? otherlv_9= '}'
                    {
                    otherlv_6=(Token)match(input,35,FollowSets000.FOLLOW_81); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getDataTypeCSAccess().getLeftCurlyBracketKeyword_5_0());

                    }
                    // InternalQVTimperative.g:4499:1: ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )?
                    int alt100=3;
                    int LA100_0 = input.LA(1);

                    if ( (LA100_0==85) ) {
                        alt100=1;
                    }
                    else if ( (LA100_0==86) ) {
                        alt100=2;
                    }
                    switch (alt100) {
                        case 1 :
                            // InternalQVTimperative.g:4499:2: ( (lv_isSerializable_7_0= 'serializable' ) )
                            {
                            // InternalQVTimperative.g:4499:2: ( (lv_isSerializable_7_0= 'serializable' ) )
                            // InternalQVTimperative.g:4500:1: (lv_isSerializable_7_0= 'serializable' )
                            {
                            // InternalQVTimperative.g:4500:1: (lv_isSerializable_7_0= 'serializable' )
                            // InternalQVTimperative.g:4501:3: lv_isSerializable_7_0= 'serializable'
                            {
                            lv_isSerializable_7_0=(Token)match(input,85,FollowSets000.FOLLOW_60); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_isSerializable_7_0, grammarAccess.getDataTypeCSAccess().getIsSerializableSerializableKeyword_5_1_0_0());

                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getDataTypeCSRule());
                              	        }
                                     		setWithLastConsumed(current, "isSerializable", true, "serializable");

                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalQVTimperative.g:4515:7: otherlv_8= '!serializable'
                            {
                            otherlv_8=(Token)match(input,86,FollowSets000.FOLLOW_60); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_8, grammarAccess.getDataTypeCSAccess().getSerializableKeyword_5_1_1());

                            }

                            }
                            break;

                    }

                    otherlv_9=(Token)match(input,36,FollowSets000.FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getDataTypeCSAccess().getRightCurlyBracketKeyword_5_2());

                    }

                    }
                    break;

            }

            // InternalQVTimperative.g:4523:3: ( (otherlv_10= '{' otherlv_11= '}' ) | otherlv_12= ';' )
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==35) ) {
                alt102=1;
            }
            else if ( (LA102_0==21) ) {
                alt102=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 102, 0, input);

                throw nvae;
            }
            switch (alt102) {
                case 1 :
                    // InternalQVTimperative.g:4523:4: (otherlv_10= '{' otherlv_11= '}' )
                    {
                    // InternalQVTimperative.g:4523:4: (otherlv_10= '{' otherlv_11= '}' )
                    // InternalQVTimperative.g:4523:6: otherlv_10= '{' otherlv_11= '}'
                    {
                    otherlv_10=(Token)match(input,35,FollowSets000.FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getDataTypeCSAccess().getLeftCurlyBracketKeyword_6_0_0());

                    }
                    otherlv_11=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_11, grammarAccess.getDataTypeCSAccess().getRightCurlyBracketKeyword_6_0_1());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:4532:7: otherlv_12= ';'
                    {
                    otherlv_12=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getDataTypeCSAccess().getSemicolonKeyword_6_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDataTypeCS"


    // $ANTLR start "entryRuleEnumerationCS"
    // InternalQVTimperative.g:4544:1: entryRuleEnumerationCS returns [EObject current=null] : iv_ruleEnumerationCS= ruleEnumerationCS EOF ;
    public final EObject entryRuleEnumerationCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnumerationCS = null;


        try {
            // InternalQVTimperative.g:4545:2: (iv_ruleEnumerationCS= ruleEnumerationCS EOF )
            // InternalQVTimperative.g:4546:2: iv_ruleEnumerationCS= ruleEnumerationCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumerationCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEnumerationCS=ruleEnumerationCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumerationCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumerationCS"


    // $ANTLR start "ruleEnumerationCS"
    // InternalQVTimperative.g:4553:1: ruleEnumerationCS returns [EObject current=null] : (otherlv_0= 'enum' ( (lv_name_1_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_2_0= ruleTemplateSignatureCS ) )? (otherlv_3= ':' ( (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_5= '{' ( ( (lv_isSerializable_6_0= 'serializable' ) ) | otherlv_7= '!serializable' )? otherlv_8= '}' )? ( (otherlv_9= '{' ( (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS ) )* otherlv_11= '}' ) | otherlv_12= ';' ) ) ;
    public final EObject ruleEnumerationCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token lv_instanceClassName_4_0=null;
        Token otherlv_5=null;
        Token lv_isSerializable_6_0=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_ownedSignature_2_0 = null;

        EObject lv_ownedLiterals_10_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:4556:28: ( (otherlv_0= 'enum' ( (lv_name_1_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_2_0= ruleTemplateSignatureCS ) )? (otherlv_3= ':' ( (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_5= '{' ( ( (lv_isSerializable_6_0= 'serializable' ) ) | otherlv_7= '!serializable' )? otherlv_8= '}' )? ( (otherlv_9= '{' ( (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS ) )* otherlv_11= '}' ) | otherlv_12= ';' ) ) )
            // InternalQVTimperative.g:4557:1: (otherlv_0= 'enum' ( (lv_name_1_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_2_0= ruleTemplateSignatureCS ) )? (otherlv_3= ':' ( (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_5= '{' ( ( (lv_isSerializable_6_0= 'serializable' ) ) | otherlv_7= '!serializable' )? otherlv_8= '}' )? ( (otherlv_9= '{' ( (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS ) )* otherlv_11= '}' ) | otherlv_12= ';' ) )
            {
            // InternalQVTimperative.g:4557:1: (otherlv_0= 'enum' ( (lv_name_1_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_2_0= ruleTemplateSignatureCS ) )? (otherlv_3= ':' ( (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_5= '{' ( ( (lv_isSerializable_6_0= 'serializable' ) ) | otherlv_7= '!serializable' )? otherlv_8= '}' )? ( (otherlv_9= '{' ( (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS ) )* otherlv_11= '}' ) | otherlv_12= ';' ) )
            // InternalQVTimperative.g:4557:3: otherlv_0= 'enum' ( (lv_name_1_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_2_0= ruleTemplateSignatureCS ) )? (otherlv_3= ':' ( (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_5= '{' ( ( (lv_isSerializable_6_0= 'serializable' ) ) | otherlv_7= '!serializable' )? otherlv_8= '}' )? ( (otherlv_9= '{' ( (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS ) )* otherlv_11= '}' ) | otherlv_12= ';' )
            {
            otherlv_0=(Token)match(input,87,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getEnumerationCSAccess().getEnumKeyword_0());

            }
            // InternalQVTimperative.g:4561:1: ( (lv_name_1_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:4562:1: (lv_name_1_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:4562:1: (lv_name_1_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:4563:3: lv_name_1_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getEnumerationCSAccess().getNameUnrestrictedNameParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_79);
            lv_name_1_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getEnumerationCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_1_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:4579:2: ( (lv_ownedSignature_2_0= ruleTemplateSignatureCS ) )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==55) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // InternalQVTimperative.g:4580:1: (lv_ownedSignature_2_0= ruleTemplateSignatureCS )
                    {
                    // InternalQVTimperative.g:4580:1: (lv_ownedSignature_2_0= ruleTemplateSignatureCS )
                    // InternalQVTimperative.g:4581:3: lv_ownedSignature_2_0= ruleTemplateSignatureCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getEnumerationCSAccess().getOwnedSignatureTemplateSignatureCSParserRuleCall_2_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_80);
                    lv_ownedSignature_2_0=ruleTemplateSignatureCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getEnumerationCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedSignature",
                              		lv_ownedSignature_2_0,
                              		"org.eclipse.ocl.xtext.base.Base.TemplateSignatureCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:4597:3: (otherlv_3= ':' ( (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING ) ) )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==24) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalQVTimperative.g:4597:5: otherlv_3= ':' ( (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING ) )
                    {
                    otherlv_3=(Token)match(input,24,FollowSets000.FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getEnumerationCSAccess().getColonKeyword_3_0());

                    }
                    // InternalQVTimperative.g:4601:1: ( (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING ) )
                    // InternalQVTimperative.g:4602:1: (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING )
                    {
                    // InternalQVTimperative.g:4602:1: (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING )
                    // InternalQVTimperative.g:4603:3: lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING
                    {
                    lv_instanceClassName_4_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_instanceClassName_4_0, grammarAccess.getEnumerationCSAccess().getInstanceClassNameSINGLE_QUOTED_STRINGTerminalRuleCall_3_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getEnumerationCSRule());
                      	        }
                             		setWithLastConsumed(
                             			current,
                             			"instanceClassName",
                              		lv_instanceClassName_4_0,
                              		"org.eclipse.ocl.xtext.base.Base.SINGLE_QUOTED_STRING");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:4619:4: (otherlv_5= '{' ( ( (lv_isSerializable_6_0= 'serializable' ) ) | otherlv_7= '!serializable' )? otherlv_8= '}' )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==35) ) {
                int LA106_1 = input.LA(2);

                if ( ((LA106_1>=85 && LA106_1<=86)) ) {
                    alt106=1;
                }
                else if ( (LA106_1==36) ) {
                    int LA106_4 = input.LA(3);

                    if ( (LA106_4==21||LA106_4==35) ) {
                        alt106=1;
                    }
                }
            }
            switch (alt106) {
                case 1 :
                    // InternalQVTimperative.g:4619:6: otherlv_5= '{' ( ( (lv_isSerializable_6_0= 'serializable' ) ) | otherlv_7= '!serializable' )? otherlv_8= '}'
                    {
                    otherlv_5=(Token)match(input,35,FollowSets000.FOLLOW_81); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getEnumerationCSAccess().getLeftCurlyBracketKeyword_4_0());

                    }
                    // InternalQVTimperative.g:4623:1: ( ( (lv_isSerializable_6_0= 'serializable' ) ) | otherlv_7= '!serializable' )?
                    int alt105=3;
                    int LA105_0 = input.LA(1);

                    if ( (LA105_0==85) ) {
                        alt105=1;
                    }
                    else if ( (LA105_0==86) ) {
                        alt105=2;
                    }
                    switch (alt105) {
                        case 1 :
                            // InternalQVTimperative.g:4623:2: ( (lv_isSerializable_6_0= 'serializable' ) )
                            {
                            // InternalQVTimperative.g:4623:2: ( (lv_isSerializable_6_0= 'serializable' ) )
                            // InternalQVTimperative.g:4624:1: (lv_isSerializable_6_0= 'serializable' )
                            {
                            // InternalQVTimperative.g:4624:1: (lv_isSerializable_6_0= 'serializable' )
                            // InternalQVTimperative.g:4625:3: lv_isSerializable_6_0= 'serializable'
                            {
                            lv_isSerializable_6_0=(Token)match(input,85,FollowSets000.FOLLOW_60); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_isSerializable_6_0, grammarAccess.getEnumerationCSAccess().getIsSerializableSerializableKeyword_4_1_0_0());

                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getEnumerationCSRule());
                              	        }
                                     		setWithLastConsumed(current, "isSerializable", true, "serializable");

                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalQVTimperative.g:4639:7: otherlv_7= '!serializable'
                            {
                            otherlv_7=(Token)match(input,86,FollowSets000.FOLLOW_60); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_7, grammarAccess.getEnumerationCSAccess().getSerializableKeyword_4_1_1());

                            }

                            }
                            break;

                    }

                    otherlv_8=(Token)match(input,36,FollowSets000.FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getEnumerationCSAccess().getRightCurlyBracketKeyword_4_2());

                    }

                    }
                    break;

            }

            // InternalQVTimperative.g:4647:3: ( (otherlv_9= '{' ( (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS ) )* otherlv_11= '}' ) | otherlv_12= ';' )
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==35) ) {
                alt108=1;
            }
            else if ( (LA108_0==21) ) {
                alt108=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 108, 0, input);

                throw nvae;
            }
            switch (alt108) {
                case 1 :
                    // InternalQVTimperative.g:4647:4: (otherlv_9= '{' ( (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS ) )* otherlv_11= '}' )
                    {
                    // InternalQVTimperative.g:4647:4: (otherlv_9= '{' ( (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS ) )* otherlv_11= '}' )
                    // InternalQVTimperative.g:4647:6: otherlv_9= '{' ( (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS ) )* otherlv_11= '}'
                    {
                    otherlv_9=(Token)match(input,35,FollowSets000.FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getEnumerationCSAccess().getLeftCurlyBracketKeyword_5_0_0());

                    }
                    // InternalQVTimperative.g:4651:1: ( (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS ) )*
                    loop107:
                    do {
                        int alt107=2;
                        int LA107_0 = input.LA(1);

                        if ( ((LA107_0>=RULE_SIMPLE_ID && LA107_0<=RULE_ESCAPED_ID)||LA107_0==88) ) {
                            alt107=1;
                        }


                        switch (alt107) {
                    	case 1 :
                    	    // InternalQVTimperative.g:4652:1: (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS )
                    	    {
                    	    // InternalQVTimperative.g:4652:1: (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS )
                    	    // InternalQVTimperative.g:4653:3: lv_ownedLiterals_10_0= ruleEnumerationLiteralCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getEnumerationCSAccess().getOwnedLiteralsEnumerationLiteralCSParserRuleCall_5_0_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_82);
                    	    lv_ownedLiterals_10_0=ruleEnumerationLiteralCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getEnumerationCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedLiterals",
                    	              		lv_ownedLiterals_10_0,
                    	              		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.EnumerationLiteralCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop107;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_11, grammarAccess.getEnumerationCSAccess().getRightCurlyBracketKeyword_5_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:4674:7: otherlv_12= ';'
                    {
                    otherlv_12=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getEnumerationCSAccess().getSemicolonKeyword_5_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumerationCS"


    // $ANTLR start "entryRuleEnumerationLiteralCS"
    // InternalQVTimperative.g:4686:1: entryRuleEnumerationLiteralCS returns [EObject current=null] : iv_ruleEnumerationLiteralCS= ruleEnumerationLiteralCS EOF ;
    public final EObject entryRuleEnumerationLiteralCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnumerationLiteralCS = null;


        try {
            // InternalQVTimperative.g:4687:2: (iv_ruleEnumerationLiteralCS= ruleEnumerationLiteralCS EOF )
            // InternalQVTimperative.g:4688:2: iv_ruleEnumerationLiteralCS= ruleEnumerationLiteralCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumerationLiteralCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEnumerationLiteralCS=ruleEnumerationLiteralCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumerationLiteralCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumerationLiteralCS"


    // $ANTLR start "ruleEnumerationLiteralCS"
    // InternalQVTimperative.g:4695:1: ruleEnumerationLiteralCS returns [EObject current=null] : ( ( (otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) ) ) | ( (lv_name_2_0= ruleEnumerationLiteralName ) ) ) (otherlv_3= '=' ( (lv_value_4_0= ruleSIGNED ) ) )? ( (otherlv_5= '{' otherlv_6= '}' ) | otherlv_7= ';' ) ) ;
    public final EObject ruleEnumerationLiteralCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        AntlrDatatypeRuleToken lv_value_4_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:4698:28: ( ( ( (otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) ) ) | ( (lv_name_2_0= ruleEnumerationLiteralName ) ) ) (otherlv_3= '=' ( (lv_value_4_0= ruleSIGNED ) ) )? ( (otherlv_5= '{' otherlv_6= '}' ) | otherlv_7= ';' ) ) )
            // InternalQVTimperative.g:4699:1: ( ( (otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) ) ) | ( (lv_name_2_0= ruleEnumerationLiteralName ) ) ) (otherlv_3= '=' ( (lv_value_4_0= ruleSIGNED ) ) )? ( (otherlv_5= '{' otherlv_6= '}' ) | otherlv_7= ';' ) )
            {
            // InternalQVTimperative.g:4699:1: ( ( (otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) ) ) | ( (lv_name_2_0= ruleEnumerationLiteralName ) ) ) (otherlv_3= '=' ( (lv_value_4_0= ruleSIGNED ) ) )? ( (otherlv_5= '{' otherlv_6= '}' ) | otherlv_7= ';' ) )
            // InternalQVTimperative.g:4699:2: ( (otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) ) ) | ( (lv_name_2_0= ruleEnumerationLiteralName ) ) ) (otherlv_3= '=' ( (lv_value_4_0= ruleSIGNED ) ) )? ( (otherlv_5= '{' otherlv_6= '}' ) | otherlv_7= ';' )
            {
            // InternalQVTimperative.g:4699:2: ( (otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) ) ) | ( (lv_name_2_0= ruleEnumerationLiteralName ) ) )
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==88) ) {
                alt109=1;
            }
            else if ( ((LA109_0>=RULE_SIMPLE_ID && LA109_0<=RULE_ESCAPED_ID)) ) {
                alt109=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 109, 0, input);

                throw nvae;
            }
            switch (alt109) {
                case 1 :
                    // InternalQVTimperative.g:4699:3: (otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) ) )
                    {
                    // InternalQVTimperative.g:4699:3: (otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) ) )
                    // InternalQVTimperative.g:4699:5: otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) )
                    {
                    otherlv_0=(Token)match(input,88,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getEnumerationLiteralCSAccess().getLiteralKeyword_0_0_0());

                    }
                    // InternalQVTimperative.g:4703:1: ( (lv_name_1_0= ruleUnrestrictedName ) )
                    // InternalQVTimperative.g:4704:1: (lv_name_1_0= ruleUnrestrictedName )
                    {
                    // InternalQVTimperative.g:4704:1: (lv_name_1_0= ruleUnrestrictedName )
                    // InternalQVTimperative.g:4705:3: lv_name_1_0= ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getEnumerationLiteralCSAccess().getNameUnrestrictedNameParserRuleCall_0_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_52);
                    lv_name_1_0=ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getEnumerationLiteralCSRule());
                      	        }
                             		set(
                             			current,
                             			"name",
                              		lv_name_1_0,
                              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:4722:6: ( (lv_name_2_0= ruleEnumerationLiteralName ) )
                    {
                    // InternalQVTimperative.g:4722:6: ( (lv_name_2_0= ruleEnumerationLiteralName ) )
                    // InternalQVTimperative.g:4723:1: (lv_name_2_0= ruleEnumerationLiteralName )
                    {
                    // InternalQVTimperative.g:4723:1: (lv_name_2_0= ruleEnumerationLiteralName )
                    // InternalQVTimperative.g:4724:3: lv_name_2_0= ruleEnumerationLiteralName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getEnumerationLiteralCSAccess().getNameEnumerationLiteralNameParserRuleCall_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_52);
                    lv_name_2_0=ruleEnumerationLiteralName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getEnumerationLiteralCSRule());
                      	        }
                             		set(
                             			current,
                             			"name",
                              		lv_name_2_0,
                              		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.EnumerationLiteralName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:4740:3: (otherlv_3= '=' ( (lv_value_4_0= ruleSIGNED ) ) )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==52) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // InternalQVTimperative.g:4740:5: otherlv_3= '=' ( (lv_value_4_0= ruleSIGNED ) )
                    {
                    otherlv_3=(Token)match(input,52,FollowSets000.FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getEnumerationLiteralCSAccess().getEqualsSignKeyword_1_0());

                    }
                    // InternalQVTimperative.g:4744:1: ( (lv_value_4_0= ruleSIGNED ) )
                    // InternalQVTimperative.g:4745:1: (lv_value_4_0= ruleSIGNED )
                    {
                    // InternalQVTimperative.g:4745:1: (lv_value_4_0= ruleSIGNED )
                    // InternalQVTimperative.g:4746:3: lv_value_4_0= ruleSIGNED
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getEnumerationLiteralCSAccess().getValueSIGNEDParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_53);
                    lv_value_4_0=ruleSIGNED();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getEnumerationLiteralCSRule());
                      	        }
                             		set(
                             			current,
                             			"value",
                              		lv_value_4_0,
                              		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.SIGNED");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:4762:4: ( (otherlv_5= '{' otherlv_6= '}' ) | otherlv_7= ';' )
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==35) ) {
                alt111=1;
            }
            else if ( (LA111_0==21) ) {
                alt111=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 111, 0, input);

                throw nvae;
            }
            switch (alt111) {
                case 1 :
                    // InternalQVTimperative.g:4762:5: (otherlv_5= '{' otherlv_6= '}' )
                    {
                    // InternalQVTimperative.g:4762:5: (otherlv_5= '{' otherlv_6= '}' )
                    // InternalQVTimperative.g:4762:7: otherlv_5= '{' otherlv_6= '}'
                    {
                    otherlv_5=(Token)match(input,35,FollowSets000.FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getEnumerationLiteralCSAccess().getLeftCurlyBracketKeyword_2_0_0());

                    }
                    otherlv_6=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getEnumerationLiteralCSAccess().getRightCurlyBracketKeyword_2_0_1());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:4771:7: otherlv_7= ';'
                    {
                    otherlv_7=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getEnumerationLiteralCSAccess().getSemicolonKeyword_2_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumerationLiteralCS"


    // $ANTLR start "entryRuleOperationCS"
    // InternalQVTimperative.g:4783:1: entryRuleOperationCS returns [EObject current=null] : iv_ruleOperationCS= ruleOperationCS EOF ;
    public final EObject entryRuleOperationCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOperationCS = null;


        try {
            // InternalQVTimperative.g:4784:2: (iv_ruleOperationCS= ruleOperationCS EOF )
            // InternalQVTimperative.g:4785:2: iv_ruleOperationCS= ruleOperationCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOperationCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOperationCS=ruleOperationCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOperationCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOperationCS"


    // $ANTLR start "ruleOperationCS"
    // InternalQVTimperative.g:4792:1: ruleOperationCS returns [EObject current=null] : ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'operation' ( (lv_ownedSignature_5_0= ruleTemplateSignatureCS ) )? ( (lv_name_6_0= ruleUnrestrictedName ) ) otherlv_7= '(' ( ( (lv_ownedParameters_8_0= ruleParameterCS ) ) (otherlv_9= ',' ( (lv_ownedParameters_10_0= ruleParameterCS ) ) )* )? otherlv_11= ')' (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_14= 'throws' ( (lv_ownedExceptions_15_0= ruleTypedRefCS ) ) (otherlv_16= ',' ( (lv_ownedExceptions_17_0= ruleTypedRefCS ) ) )* )? (otherlv_18= '{' ( ( ( (lv_qualifiers_19_0= 'derived' ) ) | ( (lv_qualifiers_20_0= '!derived' ) ) | ( (lv_qualifiers_21_0= 'ordered' ) ) | ( (lv_qualifiers_22_0= '!ordered' ) ) | ( (lv_qualifiers_23_0= 'unique' ) ) | ( (lv_qualifiers_24_0= '!unique' ) ) ) (otherlv_25= ',' )? )+ otherlv_26= '}' )? ( (otherlv_27= '{' (otherlv_28= 'body' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' )* otherlv_33= '}' ) | otherlv_34= ';' ) ) ;
    public final EObject ruleOperationCS() throws RecognitionException {
        EObject current = null;

        Token lv_qualifiers_0_0=null;
        Token lv_qualifiers_1_0=null;
        Token lv_qualifiers_2_0=null;
        Token lv_qualifiers_3_0=null;
        Token otherlv_4=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token lv_qualifiers_19_0=null;
        Token lv_qualifiers_20_0=null;
        Token lv_qualifiers_21_0=null;
        Token lv_qualifiers_22_0=null;
        Token lv_qualifiers_23_0=null;
        Token lv_qualifiers_24_0=null;
        Token otherlv_25=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token otherlv_30=null;
        Token otherlv_32=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        EObject lv_ownedSignature_5_0 = null;

        AntlrDatatypeRuleToken lv_name_6_0 = null;

        EObject lv_ownedParameters_8_0 = null;

        EObject lv_ownedParameters_10_0 = null;

        EObject lv_ownedType_13_0 = null;

        EObject lv_ownedExceptions_15_0 = null;

        EObject lv_ownedExceptions_17_0 = null;

        EObject lv_ownedBodyExpressions_31_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:4795:28: ( ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'operation' ( (lv_ownedSignature_5_0= ruleTemplateSignatureCS ) )? ( (lv_name_6_0= ruleUnrestrictedName ) ) otherlv_7= '(' ( ( (lv_ownedParameters_8_0= ruleParameterCS ) ) (otherlv_9= ',' ( (lv_ownedParameters_10_0= ruleParameterCS ) ) )* )? otherlv_11= ')' (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_14= 'throws' ( (lv_ownedExceptions_15_0= ruleTypedRefCS ) ) (otherlv_16= ',' ( (lv_ownedExceptions_17_0= ruleTypedRefCS ) ) )* )? (otherlv_18= '{' ( ( ( (lv_qualifiers_19_0= 'derived' ) ) | ( (lv_qualifiers_20_0= '!derived' ) ) | ( (lv_qualifiers_21_0= 'ordered' ) ) | ( (lv_qualifiers_22_0= '!ordered' ) ) | ( (lv_qualifiers_23_0= 'unique' ) ) | ( (lv_qualifiers_24_0= '!unique' ) ) ) (otherlv_25= ',' )? )+ otherlv_26= '}' )? ( (otherlv_27= '{' (otherlv_28= 'body' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' )* otherlv_33= '}' ) | otherlv_34= ';' ) ) )
            // InternalQVTimperative.g:4796:1: ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'operation' ( (lv_ownedSignature_5_0= ruleTemplateSignatureCS ) )? ( (lv_name_6_0= ruleUnrestrictedName ) ) otherlv_7= '(' ( ( (lv_ownedParameters_8_0= ruleParameterCS ) ) (otherlv_9= ',' ( (lv_ownedParameters_10_0= ruleParameterCS ) ) )* )? otherlv_11= ')' (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_14= 'throws' ( (lv_ownedExceptions_15_0= ruleTypedRefCS ) ) (otherlv_16= ',' ( (lv_ownedExceptions_17_0= ruleTypedRefCS ) ) )* )? (otherlv_18= '{' ( ( ( (lv_qualifiers_19_0= 'derived' ) ) | ( (lv_qualifiers_20_0= '!derived' ) ) | ( (lv_qualifiers_21_0= 'ordered' ) ) | ( (lv_qualifiers_22_0= '!ordered' ) ) | ( (lv_qualifiers_23_0= 'unique' ) ) | ( (lv_qualifiers_24_0= '!unique' ) ) ) (otherlv_25= ',' )? )+ otherlv_26= '}' )? ( (otherlv_27= '{' (otherlv_28= 'body' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' )* otherlv_33= '}' ) | otherlv_34= ';' ) )
            {
            // InternalQVTimperative.g:4796:1: ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'operation' ( (lv_ownedSignature_5_0= ruleTemplateSignatureCS ) )? ( (lv_name_6_0= ruleUnrestrictedName ) ) otherlv_7= '(' ( ( (lv_ownedParameters_8_0= ruleParameterCS ) ) (otherlv_9= ',' ( (lv_ownedParameters_10_0= ruleParameterCS ) ) )* )? otherlv_11= ')' (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_14= 'throws' ( (lv_ownedExceptions_15_0= ruleTypedRefCS ) ) (otherlv_16= ',' ( (lv_ownedExceptions_17_0= ruleTypedRefCS ) ) )* )? (otherlv_18= '{' ( ( ( (lv_qualifiers_19_0= 'derived' ) ) | ( (lv_qualifiers_20_0= '!derived' ) ) | ( (lv_qualifiers_21_0= 'ordered' ) ) | ( (lv_qualifiers_22_0= '!ordered' ) ) | ( (lv_qualifiers_23_0= 'unique' ) ) | ( (lv_qualifiers_24_0= '!unique' ) ) ) (otherlv_25= ',' )? )+ otherlv_26= '}' )? ( (otherlv_27= '{' (otherlv_28= 'body' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' )* otherlv_33= '}' ) | otherlv_34= ';' ) )
            // InternalQVTimperative.g:4796:2: ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'operation' ( (lv_ownedSignature_5_0= ruleTemplateSignatureCS ) )? ( (lv_name_6_0= ruleUnrestrictedName ) ) otherlv_7= '(' ( ( (lv_ownedParameters_8_0= ruleParameterCS ) ) (otherlv_9= ',' ( (lv_ownedParameters_10_0= ruleParameterCS ) ) )* )? otherlv_11= ')' (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_14= 'throws' ( (lv_ownedExceptions_15_0= ruleTypedRefCS ) ) (otherlv_16= ',' ( (lv_ownedExceptions_17_0= ruleTypedRefCS ) ) )* )? (otherlv_18= '{' ( ( ( (lv_qualifiers_19_0= 'derived' ) ) | ( (lv_qualifiers_20_0= '!derived' ) ) | ( (lv_qualifiers_21_0= 'ordered' ) ) | ( (lv_qualifiers_22_0= '!ordered' ) ) | ( (lv_qualifiers_23_0= 'unique' ) ) | ( (lv_qualifiers_24_0= '!unique' ) ) ) (otherlv_25= ',' )? )+ otherlv_26= '}' )? ( (otherlv_27= '{' (otherlv_28= 'body' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' )* otherlv_33= '}' ) | otherlv_34= ';' )
            {
            // InternalQVTimperative.g:4796:2: ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )?
            int alt114=3;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==63) ) {
                alt114=1;
            }
            else if ( (LA114_0==64) ) {
                alt114=2;
            }
            switch (alt114) {
                case 1 :
                    // InternalQVTimperative.g:4796:3: ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? )
                    {
                    // InternalQVTimperative.g:4796:3: ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? )
                    // InternalQVTimperative.g:4796:4: ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )?
                    {
                    // InternalQVTimperative.g:4796:4: ( (lv_qualifiers_0_0= 'static' ) )
                    // InternalQVTimperative.g:4797:1: (lv_qualifiers_0_0= 'static' )
                    {
                    // InternalQVTimperative.g:4797:1: (lv_qualifiers_0_0= 'static' )
                    // InternalQVTimperative.g:4798:3: lv_qualifiers_0_0= 'static'
                    {
                    lv_qualifiers_0_0=(Token)match(input,63,FollowSets000.FOLLOW_84); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_qualifiers_0_0, grammarAccess.getOperationCSAccess().getQualifiersStaticKeyword_0_0_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getOperationCSRule());
                      	        }
                             		addWithLastConsumed(current, "qualifiers", lv_qualifiers_0_0, "static");

                    }

                    }


                    }

                    // InternalQVTimperative.g:4811:2: ( (lv_qualifiers_1_0= 'definition' ) )?
                    int alt112=2;
                    int LA112_0 = input.LA(1);

                    if ( (LA112_0==64) ) {
                        alt112=1;
                    }
                    switch (alt112) {
                        case 1 :
                            // InternalQVTimperative.g:4812:1: (lv_qualifiers_1_0= 'definition' )
                            {
                            // InternalQVTimperative.g:4812:1: (lv_qualifiers_1_0= 'definition' )
                            // InternalQVTimperative.g:4813:3: lv_qualifiers_1_0= 'definition'
                            {
                            lv_qualifiers_1_0=(Token)match(input,64,FollowSets000.FOLLOW_85); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_qualifiers_1_0, grammarAccess.getOperationCSAccess().getQualifiersDefinitionKeyword_0_0_1_0());

                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getOperationCSRule());
                              	        }
                                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_1_0, "definition");

                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:4827:6: ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? )
                    {
                    // InternalQVTimperative.g:4827:6: ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? )
                    // InternalQVTimperative.g:4827:7: ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )?
                    {
                    // InternalQVTimperative.g:4827:7: ( (lv_qualifiers_2_0= 'definition' ) )
                    // InternalQVTimperative.g:4828:1: (lv_qualifiers_2_0= 'definition' )
                    {
                    // InternalQVTimperative.g:4828:1: (lv_qualifiers_2_0= 'definition' )
                    // InternalQVTimperative.g:4829:3: lv_qualifiers_2_0= 'definition'
                    {
                    lv_qualifiers_2_0=(Token)match(input,64,FollowSets000.FOLLOW_86); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_qualifiers_2_0, grammarAccess.getOperationCSAccess().getQualifiersDefinitionKeyword_0_1_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getOperationCSRule());
                      	        }
                             		addWithLastConsumed(current, "qualifiers", lv_qualifiers_2_0, "definition");

                    }

                    }


                    }

                    // InternalQVTimperative.g:4842:2: ( (lv_qualifiers_3_0= 'static' ) )?
                    int alt113=2;
                    int LA113_0 = input.LA(1);

                    if ( (LA113_0==63) ) {
                        alt113=1;
                    }
                    switch (alt113) {
                        case 1 :
                            // InternalQVTimperative.g:4843:1: (lv_qualifiers_3_0= 'static' )
                            {
                            // InternalQVTimperative.g:4843:1: (lv_qualifiers_3_0= 'static' )
                            // InternalQVTimperative.g:4844:3: lv_qualifiers_3_0= 'static'
                            {
                            lv_qualifiers_3_0=(Token)match(input,63,FollowSets000.FOLLOW_85); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_qualifiers_3_0, grammarAccess.getOperationCSAccess().getQualifiersStaticKeyword_0_1_1_0());

                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getOperationCSRule());
                              	        }
                                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_3_0, "static");

                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,89,FollowSets000.FOLLOW_87); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getOperationCSAccess().getOperationKeyword_1());

            }
            // InternalQVTimperative.g:4861:1: ( (lv_ownedSignature_5_0= ruleTemplateSignatureCS ) )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==55) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    // InternalQVTimperative.g:4862:1: (lv_ownedSignature_5_0= ruleTemplateSignatureCS )
                    {
                    // InternalQVTimperative.g:4862:1: (lv_ownedSignature_5_0= ruleTemplateSignatureCS )
                    // InternalQVTimperative.g:4863:3: lv_ownedSignature_5_0= ruleTemplateSignatureCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedSignatureTemplateSignatureCSParserRuleCall_2_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_5);
                    lv_ownedSignature_5_0=ruleTemplateSignatureCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedSignature",
                              		lv_ownedSignature_5_0,
                              		"org.eclipse.ocl.xtext.base.Base.TemplateSignatureCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:4879:3: ( (lv_name_6_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:4880:1: (lv_name_6_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:4880:1: (lv_name_6_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:4881:3: lv_name_6_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getOperationCSAccess().getNameUnrestrictedNameParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_56);
            lv_name_6_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_6_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_7=(Token)match(input,55,FollowSets000.FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getOperationCSAccess().getLeftParenthesisKeyword_4());

            }
            // InternalQVTimperative.g:4901:1: ( ( (lv_ownedParameters_8_0= ruleParameterCS ) ) (otherlv_9= ',' ( (lv_ownedParameters_10_0= ruleParameterCS ) ) )* )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( ((LA117_0>=RULE_SIMPLE_ID && LA117_0<=RULE_ESCAPED_ID)||LA117_0==17||LA117_0==19||(LA117_0>=22 && LA117_0<=23)||(LA117_0>=25 && LA117_0<=26)||(LA117_0>=29 && LA117_0<=33)||LA117_0==39||(LA117_0>=43 && LA117_0<=51)||(LA117_0>=53 && LA117_0<=54)||(LA117_0>=57 && LA117_0<=59)||(LA117_0>=61 && LA117_0<=66)||LA117_0==68||LA117_0==70||LA117_0==72||LA117_0==75||LA117_0==77||LA117_0==79||(LA117_0>=81 && LA117_0<=85)||(LA117_0>=87 && LA117_0<=92)||LA117_0==94||LA117_0==96||(LA117_0>=98 && LA117_0<=101)) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalQVTimperative.g:4901:2: ( (lv_ownedParameters_8_0= ruleParameterCS ) ) (otherlv_9= ',' ( (lv_ownedParameters_10_0= ruleParameterCS ) ) )*
                    {
                    // InternalQVTimperative.g:4901:2: ( (lv_ownedParameters_8_0= ruleParameterCS ) )
                    // InternalQVTimperative.g:4902:1: (lv_ownedParameters_8_0= ruleParameterCS )
                    {
                    // InternalQVTimperative.g:4902:1: (lv_ownedParameters_8_0= ruleParameterCS )
                    // InternalQVTimperative.g:4903:3: lv_ownedParameters_8_0= ruleParameterCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedParametersParameterCSParserRuleCall_5_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_58);
                    lv_ownedParameters_8_0=ruleParameterCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedParameters",
                              		lv_ownedParameters_8_0,
                              		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.ParameterCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:4919:2: (otherlv_9= ',' ( (lv_ownedParameters_10_0= ruleParameterCS ) ) )*
                    loop116:
                    do {
                        int alt116=2;
                        int LA116_0 = input.LA(1);

                        if ( (LA116_0==18) ) {
                            alt116=1;
                        }


                        switch (alt116) {
                    	case 1 :
                    	    // InternalQVTimperative.g:4919:4: otherlv_9= ',' ( (lv_ownedParameters_10_0= ruleParameterCS ) )
                    	    {
                    	    otherlv_9=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_9, grammarAccess.getOperationCSAccess().getCommaKeyword_5_1_0());

                    	    }
                    	    // InternalQVTimperative.g:4923:1: ( (lv_ownedParameters_10_0= ruleParameterCS ) )
                    	    // InternalQVTimperative.g:4924:1: (lv_ownedParameters_10_0= ruleParameterCS )
                    	    {
                    	    // InternalQVTimperative.g:4924:1: (lv_ownedParameters_10_0= ruleParameterCS )
                    	    // InternalQVTimperative.g:4925:3: lv_ownedParameters_10_0= ruleParameterCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedParametersParameterCSParserRuleCall_5_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_58);
                    	    lv_ownedParameters_10_0=ruleParameterCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedParameters",
                    	              		lv_ownedParameters_10_0,
                    	              		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.ParameterCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop116;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_11=(Token)match(input,56,FollowSets000.FOLLOW_88); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_11, grammarAccess.getOperationCSAccess().getRightParenthesisKeyword_6());

            }
            // InternalQVTimperative.g:4945:1: (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypedMultiplicityRefCS ) ) )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==24) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // InternalQVTimperative.g:4945:3: otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypedMultiplicityRefCS ) )
                    {
                    otherlv_12=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getOperationCSAccess().getColonKeyword_7_0());

                    }
                    // InternalQVTimperative.g:4949:1: ( (lv_ownedType_13_0= ruleTypedMultiplicityRefCS ) )
                    // InternalQVTimperative.g:4950:1: (lv_ownedType_13_0= ruleTypedMultiplicityRefCS )
                    {
                    // InternalQVTimperative.g:4950:1: (lv_ownedType_13_0= ruleTypedMultiplicityRefCS )
                    // InternalQVTimperative.g:4951:3: lv_ownedType_13_0= ruleTypedMultiplicityRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedTypeTypedMultiplicityRefCSParserRuleCall_7_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_89);
                    lv_ownedType_13_0=ruleTypedMultiplicityRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_13_0,
                              		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.TypedMultiplicityRefCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:4967:4: (otherlv_14= 'throws' ( (lv_ownedExceptions_15_0= ruleTypedRefCS ) ) (otherlv_16= ',' ( (lv_ownedExceptions_17_0= ruleTypedRefCS ) ) )* )?
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==90) ) {
                alt120=1;
            }
            switch (alt120) {
                case 1 :
                    // InternalQVTimperative.g:4967:6: otherlv_14= 'throws' ( (lv_ownedExceptions_15_0= ruleTypedRefCS ) ) (otherlv_16= ',' ( (lv_ownedExceptions_17_0= ruleTypedRefCS ) ) )*
                    {
                    otherlv_14=(Token)match(input,90,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_14, grammarAccess.getOperationCSAccess().getThrowsKeyword_8_0());

                    }
                    // InternalQVTimperative.g:4971:1: ( (lv_ownedExceptions_15_0= ruleTypedRefCS ) )
                    // InternalQVTimperative.g:4972:1: (lv_ownedExceptions_15_0= ruleTypedRefCS )
                    {
                    // InternalQVTimperative.g:4972:1: (lv_ownedExceptions_15_0= ruleTypedRefCS )
                    // InternalQVTimperative.g:4973:3: lv_ownedExceptions_15_0= ruleTypedRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedExceptionsTypedRefCSParserRuleCall_8_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_90);
                    lv_ownedExceptions_15_0=ruleTypedRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedExceptions",
                              		lv_ownedExceptions_15_0,
                              		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.TypedRefCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:4989:2: (otherlv_16= ',' ( (lv_ownedExceptions_17_0= ruleTypedRefCS ) ) )*
                    loop119:
                    do {
                        int alt119=2;
                        int LA119_0 = input.LA(1);

                        if ( (LA119_0==18) ) {
                            alt119=1;
                        }


                        switch (alt119) {
                    	case 1 :
                    	    // InternalQVTimperative.g:4989:4: otherlv_16= ',' ( (lv_ownedExceptions_17_0= ruleTypedRefCS ) )
                    	    {
                    	    otherlv_16=(Token)match(input,18,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_16, grammarAccess.getOperationCSAccess().getCommaKeyword_8_2_0());

                    	    }
                    	    // InternalQVTimperative.g:4993:1: ( (lv_ownedExceptions_17_0= ruleTypedRefCS ) )
                    	    // InternalQVTimperative.g:4994:1: (lv_ownedExceptions_17_0= ruleTypedRefCS )
                    	    {
                    	    // InternalQVTimperative.g:4994:1: (lv_ownedExceptions_17_0= ruleTypedRefCS )
                    	    // InternalQVTimperative.g:4995:3: lv_ownedExceptions_17_0= ruleTypedRefCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedExceptionsTypedRefCSParserRuleCall_8_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_90);
                    	    lv_ownedExceptions_17_0=ruleTypedRefCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedExceptions",
                    	              		lv_ownedExceptions_17_0,
                    	              		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.TypedRefCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop119;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalQVTimperative.g:5011:6: (otherlv_18= '{' ( ( ( (lv_qualifiers_19_0= 'derived' ) ) | ( (lv_qualifiers_20_0= '!derived' ) ) | ( (lv_qualifiers_21_0= 'ordered' ) ) | ( (lv_qualifiers_22_0= '!ordered' ) ) | ( (lv_qualifiers_23_0= 'unique' ) ) | ( (lv_qualifiers_24_0= '!unique' ) ) ) (otherlv_25= ',' )? )+ otherlv_26= '}' )?
            int alt124=2;
            int LA124_0 = input.LA(1);

            if ( (LA124_0==35) ) {
                int LA124_1 = input.LA(2);

                if ( ((LA124_1>=66 && LA124_1<=67)||(LA124_1>=70 && LA124_1<=71)||(LA124_1>=75 && LA124_1<=76)) ) {
                    alt124=1;
                }
            }
            switch (alt124) {
                case 1 :
                    // InternalQVTimperative.g:5011:8: otherlv_18= '{' ( ( ( (lv_qualifiers_19_0= 'derived' ) ) | ( (lv_qualifiers_20_0= '!derived' ) ) | ( (lv_qualifiers_21_0= 'ordered' ) ) | ( (lv_qualifiers_22_0= '!ordered' ) ) | ( (lv_qualifiers_23_0= 'unique' ) ) | ( (lv_qualifiers_24_0= '!unique' ) ) ) (otherlv_25= ',' )? )+ otherlv_26= '}'
                    {
                    otherlv_18=(Token)match(input,35,FollowSets000.FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_18, grammarAccess.getOperationCSAccess().getLeftCurlyBracketKeyword_9_0());

                    }
                    // InternalQVTimperative.g:5015:1: ( ( ( (lv_qualifiers_19_0= 'derived' ) ) | ( (lv_qualifiers_20_0= '!derived' ) ) | ( (lv_qualifiers_21_0= 'ordered' ) ) | ( (lv_qualifiers_22_0= '!ordered' ) ) | ( (lv_qualifiers_23_0= 'unique' ) ) | ( (lv_qualifiers_24_0= '!unique' ) ) ) (otherlv_25= ',' )? )+
                    int cnt123=0;
                    loop123:
                    do {
                        int alt123=2;
                        int LA123_0 = input.LA(1);

                        if ( ((LA123_0>=66 && LA123_0<=67)||(LA123_0>=70 && LA123_0<=71)||(LA123_0>=75 && LA123_0<=76)) ) {
                            alt123=1;
                        }


                        switch (alt123) {
                    	case 1 :
                    	    // InternalQVTimperative.g:5015:2: ( ( (lv_qualifiers_19_0= 'derived' ) ) | ( (lv_qualifiers_20_0= '!derived' ) ) | ( (lv_qualifiers_21_0= 'ordered' ) ) | ( (lv_qualifiers_22_0= '!ordered' ) ) | ( (lv_qualifiers_23_0= 'unique' ) ) | ( (lv_qualifiers_24_0= '!unique' ) ) ) (otherlv_25= ',' )?
                    	    {
                    	    // InternalQVTimperative.g:5015:2: ( ( (lv_qualifiers_19_0= 'derived' ) ) | ( (lv_qualifiers_20_0= '!derived' ) ) | ( (lv_qualifiers_21_0= 'ordered' ) ) | ( (lv_qualifiers_22_0= '!ordered' ) ) | ( (lv_qualifiers_23_0= 'unique' ) ) | ( (lv_qualifiers_24_0= '!unique' ) ) )
                    	    int alt121=6;
                    	    switch ( input.LA(1) ) {
                    	    case 66:
                    	        {
                    	        alt121=1;
                    	        }
                    	        break;
                    	    case 67:
                    	        {
                    	        alt121=2;
                    	        }
                    	        break;
                    	    case 70:
                    	        {
                    	        alt121=3;
                    	        }
                    	        break;
                    	    case 71:
                    	        {
                    	        alt121=4;
                    	        }
                    	        break;
                    	    case 75:
                    	        {
                    	        alt121=5;
                    	        }
                    	        break;
                    	    case 76:
                    	        {
                    	        alt121=6;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 121, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt121) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:5015:3: ( (lv_qualifiers_19_0= 'derived' ) )
                    	            {
                    	            // InternalQVTimperative.g:5015:3: ( (lv_qualifiers_19_0= 'derived' ) )
                    	            // InternalQVTimperative.g:5016:1: (lv_qualifiers_19_0= 'derived' )
                    	            {
                    	            // InternalQVTimperative.g:5016:1: (lv_qualifiers_19_0= 'derived' )
                    	            // InternalQVTimperative.g:5017:3: lv_qualifiers_19_0= 'derived'
                    	            {
                    	            lv_qualifiers_19_0=(Token)match(input,66,FollowSets000.FOLLOW_92); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_19_0, grammarAccess.getOperationCSAccess().getQualifiersDerivedKeyword_9_1_0_0_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getOperationCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_19_0, "derived");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalQVTimperative.g:5031:6: ( (lv_qualifiers_20_0= '!derived' ) )
                    	            {
                    	            // InternalQVTimperative.g:5031:6: ( (lv_qualifiers_20_0= '!derived' ) )
                    	            // InternalQVTimperative.g:5032:1: (lv_qualifiers_20_0= '!derived' )
                    	            {
                    	            // InternalQVTimperative.g:5032:1: (lv_qualifiers_20_0= '!derived' )
                    	            // InternalQVTimperative.g:5033:3: lv_qualifiers_20_0= '!derived'
                    	            {
                    	            lv_qualifiers_20_0=(Token)match(input,67,FollowSets000.FOLLOW_92); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_20_0, grammarAccess.getOperationCSAccess().getQualifiersDerivedKeyword_9_1_0_1_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getOperationCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_20_0, "!derived");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 3 :
                    	            // InternalQVTimperative.g:5047:6: ( (lv_qualifiers_21_0= 'ordered' ) )
                    	            {
                    	            // InternalQVTimperative.g:5047:6: ( (lv_qualifiers_21_0= 'ordered' ) )
                    	            // InternalQVTimperative.g:5048:1: (lv_qualifiers_21_0= 'ordered' )
                    	            {
                    	            // InternalQVTimperative.g:5048:1: (lv_qualifiers_21_0= 'ordered' )
                    	            // InternalQVTimperative.g:5049:3: lv_qualifiers_21_0= 'ordered'
                    	            {
                    	            lv_qualifiers_21_0=(Token)match(input,70,FollowSets000.FOLLOW_92); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_21_0, grammarAccess.getOperationCSAccess().getQualifiersOrderedKeyword_9_1_0_2_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getOperationCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_21_0, "ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 4 :
                    	            // InternalQVTimperative.g:5063:6: ( (lv_qualifiers_22_0= '!ordered' ) )
                    	            {
                    	            // InternalQVTimperative.g:5063:6: ( (lv_qualifiers_22_0= '!ordered' ) )
                    	            // InternalQVTimperative.g:5064:1: (lv_qualifiers_22_0= '!ordered' )
                    	            {
                    	            // InternalQVTimperative.g:5064:1: (lv_qualifiers_22_0= '!ordered' )
                    	            // InternalQVTimperative.g:5065:3: lv_qualifiers_22_0= '!ordered'
                    	            {
                    	            lv_qualifiers_22_0=(Token)match(input,71,FollowSets000.FOLLOW_92); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_22_0, grammarAccess.getOperationCSAccess().getQualifiersOrderedKeyword_9_1_0_3_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getOperationCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_22_0, "!ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 5 :
                    	            // InternalQVTimperative.g:5079:6: ( (lv_qualifiers_23_0= 'unique' ) )
                    	            {
                    	            // InternalQVTimperative.g:5079:6: ( (lv_qualifiers_23_0= 'unique' ) )
                    	            // InternalQVTimperative.g:5080:1: (lv_qualifiers_23_0= 'unique' )
                    	            {
                    	            // InternalQVTimperative.g:5080:1: (lv_qualifiers_23_0= 'unique' )
                    	            // InternalQVTimperative.g:5081:3: lv_qualifiers_23_0= 'unique'
                    	            {
                    	            lv_qualifiers_23_0=(Token)match(input,75,FollowSets000.FOLLOW_92); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_23_0, grammarAccess.getOperationCSAccess().getQualifiersUniqueKeyword_9_1_0_4_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getOperationCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_23_0, "unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 6 :
                    	            // InternalQVTimperative.g:5095:6: ( (lv_qualifiers_24_0= '!unique' ) )
                    	            {
                    	            // InternalQVTimperative.g:5095:6: ( (lv_qualifiers_24_0= '!unique' ) )
                    	            // InternalQVTimperative.g:5096:1: (lv_qualifiers_24_0= '!unique' )
                    	            {
                    	            // InternalQVTimperative.g:5096:1: (lv_qualifiers_24_0= '!unique' )
                    	            // InternalQVTimperative.g:5097:3: lv_qualifiers_24_0= '!unique'
                    	            {
                    	            lv_qualifiers_24_0=(Token)match(input,76,FollowSets000.FOLLOW_92); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_24_0, grammarAccess.getOperationCSAccess().getQualifiersUniqueKeyword_9_1_0_5_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getOperationCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_24_0, "!unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalQVTimperative.g:5110:3: (otherlv_25= ',' )?
                    	    int alt122=2;
                    	    int LA122_0 = input.LA(1);

                    	    if ( (LA122_0==18) ) {
                    	        alt122=1;
                    	    }
                    	    switch (alt122) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:5110:5: otherlv_25= ','
                    	            {
                    	            otherlv_25=(Token)match(input,18,FollowSets000.FOLLOW_93); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                  	newLeafNode(otherlv_25, grammarAccess.getOperationCSAccess().getCommaKeyword_9_1_1());

                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt123 >= 1 ) break loop123;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(123, input);
                                throw eee;
                        }
                        cnt123++;
                    } while (true);

                    otherlv_26=(Token)match(input,36,FollowSets000.FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_26, grammarAccess.getOperationCSAccess().getRightCurlyBracketKeyword_9_2());

                    }

                    }
                    break;

            }

            // InternalQVTimperative.g:5118:3: ( (otherlv_27= '{' (otherlv_28= 'body' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' )* otherlv_33= '}' ) | otherlv_34= ';' )
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==35) ) {
                alt128=1;
            }
            else if ( (LA128_0==21) ) {
                alt128=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 128, 0, input);

                throw nvae;
            }
            switch (alt128) {
                case 1 :
                    // InternalQVTimperative.g:5118:4: (otherlv_27= '{' (otherlv_28= 'body' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' )* otherlv_33= '}' )
                    {
                    // InternalQVTimperative.g:5118:4: (otherlv_27= '{' (otherlv_28= 'body' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' )* otherlv_33= '}' )
                    // InternalQVTimperative.g:5118:6: otherlv_27= '{' (otherlv_28= 'body' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' )* otherlv_33= '}'
                    {
                    otherlv_27=(Token)match(input,35,FollowSets000.FOLLOW_94); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_27, grammarAccess.getOperationCSAccess().getLeftCurlyBracketKeyword_10_0_0());

                    }
                    // InternalQVTimperative.g:5122:1: (otherlv_28= 'body' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' )*
                    loop127:
                    do {
                        int alt127=2;
                        int LA127_0 = input.LA(1);

                        if ( (LA127_0==91) ) {
                            alt127=1;
                        }


                        switch (alt127) {
                    	case 1 :
                    	    // InternalQVTimperative.g:5122:3: otherlv_28= 'body' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';'
                    	    {
                    	    otherlv_28=(Token)match(input,91,FollowSets000.FOLLOW_14); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_28, grammarAccess.getOperationCSAccess().getBodyKeyword_10_0_1_0());

                    	    }
                    	    // InternalQVTimperative.g:5126:1: ( ruleUnrestrictedName )?
                    	    int alt125=2;
                    	    int LA125_0 = input.LA(1);

                    	    if ( ((LA125_0>=RULE_SIMPLE_ID && LA125_0<=RULE_ESCAPED_ID)||LA125_0==17||LA125_0==19||(LA125_0>=22 && LA125_0<=23)||(LA125_0>=25 && LA125_0<=26)||(LA125_0>=29 && LA125_0<=33)||LA125_0==39||(LA125_0>=43 && LA125_0<=51)||(LA125_0>=53 && LA125_0<=54)||(LA125_0>=57 && LA125_0<=59)||(LA125_0>=61 && LA125_0<=66)||LA125_0==68||LA125_0==70||LA125_0==72||LA125_0==75||LA125_0==77||LA125_0==79||(LA125_0>=81 && LA125_0<=85)||(LA125_0>=87 && LA125_0<=92)||LA125_0==94||LA125_0==96||(LA125_0>=98 && LA125_0<=101)) ) {
                    	        alt125=1;
                    	    }
                    	    switch (alt125) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:5127:2: ruleUnrestrictedName
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	  /* */

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	                      newCompositeNode(grammarAccess.getOperationCSAccess().getUnrestrictedNameParserRuleCall_10_0_1_1());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_11);
                    	            ruleUnrestrictedName();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;

                    	    }

                    	    otherlv_30=(Token)match(input,24,FollowSets000.FOLLOW_77); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_30, grammarAccess.getOperationCSAccess().getColonKeyword_10_0_1_2());

                    	    }
                    	    // InternalQVTimperative.g:5141:1: ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )?
                    	    int alt126=2;
                    	    int LA126_0 = input.LA(1);

                    	    if ( ((LA126_0>=RULE_SINGLE_QUOTED_STRING && LA126_0<=RULE_ESCAPED_ID)||LA126_0==17||LA126_0==19||(LA126_0>=22 && LA126_0<=23)||(LA126_0>=25 && LA126_0<=26)||(LA126_0>=29 && LA126_0<=33)||LA126_0==39||(LA126_0>=42 && LA126_0<=51)||(LA126_0>=53 && LA126_0<=55)||(LA126_0>=57 && LA126_0<=59)||(LA126_0>=61 && LA126_0<=66)||LA126_0==68||LA126_0==70||LA126_0==72||LA126_0==75||LA126_0==77||LA126_0==79||(LA126_0>=81 && LA126_0<=85)||(LA126_0>=87 && LA126_0<=92)||LA126_0==94||LA126_0==96||(LA126_0>=98 && LA126_0<=103)||(LA126_0>=118 && LA126_0<=132)||LA126_0==134||(LA126_0>=136 && LA126_0<=139)||LA126_0==145||(LA126_0>=150 && LA126_0<=151)) ) {
                    	        alt126=1;
                    	    }
                    	    switch (alt126) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:5142:1: (lv_ownedBodyExpressions_31_0= ruleSpecificationCS )
                    	            {
                    	            // InternalQVTimperative.g:5142:1: (lv_ownedBodyExpressions_31_0= ruleSpecificationCS )
                    	            // InternalQVTimperative.g:5143:3: lv_ownedBodyExpressions_31_0= ruleSpecificationCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	        newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedBodyExpressionsSpecificationCSParserRuleCall_10_0_1_3_0());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_9);
                    	            lv_ownedBodyExpressions_31_0=ruleSpecificationCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
                    	              	        }
                    	                     		add(
                    	                     			current,
                    	                     			"ownedBodyExpressions",
                    	                      		lv_ownedBodyExpressions_31_0,
                    	                      		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.SpecificationCS");
                    	              	        afterParserOrEnumRuleCall();

                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    otherlv_32=(Token)match(input,21,FollowSets000.FOLLOW_94); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_32, grammarAccess.getOperationCSAccess().getSemicolonKeyword_10_0_1_4());

                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop127;
                        }
                    } while (true);

                    otherlv_33=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_33, grammarAccess.getOperationCSAccess().getRightCurlyBracketKeyword_10_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:5168:7: otherlv_34= ';'
                    {
                    otherlv_34=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_34, grammarAccess.getOperationCSAccess().getSemicolonKeyword_10_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOperationCS"


    // $ANTLR start "entryRuleParameterCS"
    // InternalQVTimperative.g:5180:1: entryRuleParameterCS returns [EObject current=null] : iv_ruleParameterCS= ruleParameterCS EOF ;
    public final EObject entryRuleParameterCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterCS = null;


        try {
            // InternalQVTimperative.g:5181:2: (iv_ruleParameterCS= ruleParameterCS EOF )
            // InternalQVTimperative.g:5182:2: iv_ruleParameterCS= ruleParameterCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleParameterCS=ruleParameterCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameterCS"


    // $ANTLR start "ruleParameterCS"
    // InternalQVTimperative.g:5189:1: ruleParameterCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_3= '{' ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+ otherlv_9= '}' )? (otherlv_10= '{' otherlv_11= '}' )? ) ;
    public final EObject ruleParameterCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_qualifiers_4_0=null;
        Token lv_qualifiers_5_0=null;
        Token lv_qualifiers_6_0=null;
        Token lv_qualifiers_7_0=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedType_2_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:5192:28: ( ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_3= '{' ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+ otherlv_9= '}' )? (otherlv_10= '{' otherlv_11= '}' )? ) )
            // InternalQVTimperative.g:5193:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_3= '{' ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+ otherlv_9= '}' )? (otherlv_10= '{' otherlv_11= '}' )? )
            {
            // InternalQVTimperative.g:5193:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_3= '{' ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+ otherlv_9= '}' )? (otherlv_10= '{' otherlv_11= '}' )? )
            // InternalQVTimperative.g:5193:2: ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_3= '{' ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+ otherlv_9= '}' )? (otherlv_10= '{' otherlv_11= '}' )?
            {
            // InternalQVTimperative.g:5193:2: ( (lv_name_0_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:5194:1: (lv_name_0_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:5194:1: (lv_name_0_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:5195:3: lv_name_0_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getParameterCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_95);
            lv_name_0_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParameterCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_0_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:5211:2: (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) ) )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==24) ) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    // InternalQVTimperative.g:5211:4: otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) )
                    {
                    otherlv_1=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getParameterCSAccess().getColonKeyword_1_0());

                    }
                    // InternalQVTimperative.g:5215:1: ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) )
                    // InternalQVTimperative.g:5216:1: (lv_ownedType_2_0= ruleTypedMultiplicityRefCS )
                    {
                    // InternalQVTimperative.g:5216:1: (lv_ownedType_2_0= ruleTypedMultiplicityRefCS )
                    // InternalQVTimperative.g:5217:3: lv_ownedType_2_0= ruleTypedMultiplicityRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getParameterCSAccess().getOwnedTypeTypedMultiplicityRefCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_96);
                    lv_ownedType_2_0=ruleTypedMultiplicityRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getParameterCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_2_0,
                              		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.TypedMultiplicityRefCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:5233:4: (otherlv_3= '{' ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+ otherlv_9= '}' )?
            int alt133=2;
            int LA133_0 = input.LA(1);

            if ( (LA133_0==35) ) {
                int LA133_1 = input.LA(2);

                if ( ((LA133_1>=70 && LA133_1<=71)||(LA133_1>=75 && LA133_1<=76)) ) {
                    alt133=1;
                }
            }
            switch (alt133) {
                case 1 :
                    // InternalQVTimperative.g:5233:6: otherlv_3= '{' ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+ otherlv_9= '}'
                    {
                    otherlv_3=(Token)match(input,35,FollowSets000.FOLLOW_97); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getParameterCSAccess().getLeftCurlyBracketKeyword_2_0());

                    }
                    // InternalQVTimperative.g:5237:1: ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+
                    int cnt132=0;
                    loop132:
                    do {
                        int alt132=2;
                        int LA132_0 = input.LA(1);

                        if ( ((LA132_0>=70 && LA132_0<=71)||(LA132_0>=75 && LA132_0<=76)) ) {
                            alt132=1;
                        }


                        switch (alt132) {
                    	case 1 :
                    	    // InternalQVTimperative.g:5237:2: ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )?
                    	    {
                    	    // InternalQVTimperative.g:5237:2: ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) )
                    	    int alt130=4;
                    	    switch ( input.LA(1) ) {
                    	    case 70:
                    	        {
                    	        alt130=1;
                    	        }
                    	        break;
                    	    case 71:
                    	        {
                    	        alt130=2;
                    	        }
                    	        break;
                    	    case 75:
                    	        {
                    	        alt130=3;
                    	        }
                    	        break;
                    	    case 76:
                    	        {
                    	        alt130=4;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 130, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt130) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:5237:3: ( (lv_qualifiers_4_0= 'ordered' ) )
                    	            {
                    	            // InternalQVTimperative.g:5237:3: ( (lv_qualifiers_4_0= 'ordered' ) )
                    	            // InternalQVTimperative.g:5238:1: (lv_qualifiers_4_0= 'ordered' )
                    	            {
                    	            // InternalQVTimperative.g:5238:1: (lv_qualifiers_4_0= 'ordered' )
                    	            // InternalQVTimperative.g:5239:3: lv_qualifiers_4_0= 'ordered'
                    	            {
                    	            lv_qualifiers_4_0=(Token)match(input,70,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_4_0, grammarAccess.getParameterCSAccess().getQualifiersOrderedKeyword_2_1_0_0_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getParameterCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_4_0, "ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalQVTimperative.g:5253:6: ( (lv_qualifiers_5_0= '!ordered' ) )
                    	            {
                    	            // InternalQVTimperative.g:5253:6: ( (lv_qualifiers_5_0= '!ordered' ) )
                    	            // InternalQVTimperative.g:5254:1: (lv_qualifiers_5_0= '!ordered' )
                    	            {
                    	            // InternalQVTimperative.g:5254:1: (lv_qualifiers_5_0= '!ordered' )
                    	            // InternalQVTimperative.g:5255:3: lv_qualifiers_5_0= '!ordered'
                    	            {
                    	            lv_qualifiers_5_0=(Token)match(input,71,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_5_0, grammarAccess.getParameterCSAccess().getQualifiersOrderedKeyword_2_1_0_1_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getParameterCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_5_0, "!ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 3 :
                    	            // InternalQVTimperative.g:5269:6: ( (lv_qualifiers_6_0= 'unique' ) )
                    	            {
                    	            // InternalQVTimperative.g:5269:6: ( (lv_qualifiers_6_0= 'unique' ) )
                    	            // InternalQVTimperative.g:5270:1: (lv_qualifiers_6_0= 'unique' )
                    	            {
                    	            // InternalQVTimperative.g:5270:1: (lv_qualifiers_6_0= 'unique' )
                    	            // InternalQVTimperative.g:5271:3: lv_qualifiers_6_0= 'unique'
                    	            {
                    	            lv_qualifiers_6_0=(Token)match(input,75,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_6_0, grammarAccess.getParameterCSAccess().getQualifiersUniqueKeyword_2_1_0_2_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getParameterCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_6_0, "unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 4 :
                    	            // InternalQVTimperative.g:5285:6: ( (lv_qualifiers_7_0= '!unique' ) )
                    	            {
                    	            // InternalQVTimperative.g:5285:6: ( (lv_qualifiers_7_0= '!unique' ) )
                    	            // InternalQVTimperative.g:5286:1: (lv_qualifiers_7_0= '!unique' )
                    	            {
                    	            // InternalQVTimperative.g:5286:1: (lv_qualifiers_7_0= '!unique' )
                    	            // InternalQVTimperative.g:5287:3: lv_qualifiers_7_0= '!unique'
                    	            {
                    	            lv_qualifiers_7_0=(Token)match(input,76,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_7_0, grammarAccess.getParameterCSAccess().getQualifiersUniqueKeyword_2_1_0_3_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getParameterCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_7_0, "!unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalQVTimperative.g:5300:3: (otherlv_8= ',' )?
                    	    int alt131=2;
                    	    int LA131_0 = input.LA(1);

                    	    if ( (LA131_0==18) ) {
                    	        alt131=1;
                    	    }
                    	    switch (alt131) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:5300:5: otherlv_8= ','
                    	            {
                    	            otherlv_8=(Token)match(input,18,FollowSets000.FOLLOW_99); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                  	newLeafNode(otherlv_8, grammarAccess.getParameterCSAccess().getCommaKeyword_2_1_1());

                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt132 >= 1 ) break loop132;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(132, input);
                                throw eee;
                        }
                        cnt132++;
                    } while (true);

                    otherlv_9=(Token)match(input,36,FollowSets000.FOLLOW_96); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getParameterCSAccess().getRightCurlyBracketKeyword_2_2());

                    }

                    }
                    break;

            }

            // InternalQVTimperative.g:5308:3: (otherlv_10= '{' otherlv_11= '}' )?
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==35) ) {
                alt134=1;
            }
            switch (alt134) {
                case 1 :
                    // InternalQVTimperative.g:5308:5: otherlv_10= '{' otherlv_11= '}'
                    {
                    otherlv_10=(Token)match(input,35,FollowSets000.FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getParameterCSAccess().getLeftCurlyBracketKeyword_3_0());

                    }
                    otherlv_11=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_11, grammarAccess.getParameterCSAccess().getRightCurlyBracketKeyword_3_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterCS"


    // $ANTLR start "entryRuleReferenceCS"
    // InternalQVTimperative.g:5324:1: entryRuleReferenceCS returns [EObject current=null] : iv_ruleReferenceCS= ruleReferenceCS EOF ;
    public final EObject entryRuleReferenceCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceCS = null;


        try {
            // InternalQVTimperative.g:5325:2: (iv_ruleReferenceCS= ruleReferenceCS EOF )
            // InternalQVTimperative.g:5326:2: iv_ruleReferenceCS= ruleReferenceCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceCS=ruleReferenceCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceCS"


    // $ANTLR start "ruleReferenceCS"
    // InternalQVTimperative.g:5333:1: ruleReferenceCS returns [EObject current=null] : ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'property' ( (lv_name_5_0= ruleUnrestrictedName ) ) (otherlv_6= '#' ( ( ruleUnrestrictedName ) ) )? (otherlv_8= ':' ( (lv_ownedType_9_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_10= '=' ( (lv_default_11_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_12= '{' ( ( ( (lv_qualifiers_13_0= 'composes' ) ) | ( (lv_qualifiers_14_0= '!composes' ) ) | ( (lv_qualifiers_15_0= 'derived' ) ) | ( (lv_qualifiers_16_0= '!derived' ) ) | ( (lv_qualifiers_17_0= 'ordered' ) ) | ( (lv_qualifiers_18_0= '!ordered' ) ) | ( (lv_qualifiers_19_0= 'readonly' ) ) | ( (lv_qualifiers_20_0= '!readonly' ) ) | ( (lv_qualifiers_21_0= 'resolve' ) ) | ( (lv_qualifiers_22_0= '!resolve' ) ) | ( (lv_qualifiers_23_0= 'transient' ) ) | ( (lv_qualifiers_24_0= '!transient' ) ) | ( (lv_qualifiers_25_0= 'unique' ) ) | ( (lv_qualifiers_26_0= '!unique' ) ) | ( (lv_qualifiers_27_0= 'unsettable' ) ) | ( (lv_qualifiers_28_0= '!unsettable' ) ) | ( (lv_qualifiers_29_0= 'volatile' ) ) | ( (lv_qualifiers_30_0= '!volatile' ) ) ) (otherlv_31= ',' )? )+ otherlv_32= '}' )? ( (otherlv_33= '{' ( (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' ) | (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' ) )* otherlv_44= '}' ) | otherlv_45= ';' ) ) ;
    public final EObject ruleReferenceCS() throws RecognitionException {
        EObject current = null;

        Token lv_qualifiers_0_0=null;
        Token lv_qualifiers_1_0=null;
        Token lv_qualifiers_2_0=null;
        Token lv_qualifiers_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token lv_default_11_0=null;
        Token otherlv_12=null;
        Token lv_qualifiers_13_0=null;
        Token lv_qualifiers_14_0=null;
        Token lv_qualifiers_15_0=null;
        Token lv_qualifiers_16_0=null;
        Token lv_qualifiers_17_0=null;
        Token lv_qualifiers_18_0=null;
        Token lv_qualifiers_19_0=null;
        Token lv_qualifiers_20_0=null;
        Token lv_qualifiers_21_0=null;
        Token lv_qualifiers_22_0=null;
        Token lv_qualifiers_23_0=null;
        Token lv_qualifiers_24_0=null;
        Token lv_qualifiers_25_0=null;
        Token lv_qualifiers_26_0=null;
        Token lv_qualifiers_27_0=null;
        Token lv_qualifiers_28_0=null;
        Token lv_qualifiers_29_0=null;
        Token lv_qualifiers_30_0=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        Token otherlv_36=null;
        Token otherlv_38=null;
        Token otherlv_39=null;
        Token otherlv_41=null;
        Token otherlv_43=null;
        Token otherlv_44=null;
        Token otherlv_45=null;
        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_ownedType_9_0 = null;

        EObject lv_ownedDefaultExpressions_37_0 = null;

        EObject lv_ownedDefaultExpressions_42_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:5336:28: ( ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'property' ( (lv_name_5_0= ruleUnrestrictedName ) ) (otherlv_6= '#' ( ( ruleUnrestrictedName ) ) )? (otherlv_8= ':' ( (lv_ownedType_9_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_10= '=' ( (lv_default_11_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_12= '{' ( ( ( (lv_qualifiers_13_0= 'composes' ) ) | ( (lv_qualifiers_14_0= '!composes' ) ) | ( (lv_qualifiers_15_0= 'derived' ) ) | ( (lv_qualifiers_16_0= '!derived' ) ) | ( (lv_qualifiers_17_0= 'ordered' ) ) | ( (lv_qualifiers_18_0= '!ordered' ) ) | ( (lv_qualifiers_19_0= 'readonly' ) ) | ( (lv_qualifiers_20_0= '!readonly' ) ) | ( (lv_qualifiers_21_0= 'resolve' ) ) | ( (lv_qualifiers_22_0= '!resolve' ) ) | ( (lv_qualifiers_23_0= 'transient' ) ) | ( (lv_qualifiers_24_0= '!transient' ) ) | ( (lv_qualifiers_25_0= 'unique' ) ) | ( (lv_qualifiers_26_0= '!unique' ) ) | ( (lv_qualifiers_27_0= 'unsettable' ) ) | ( (lv_qualifiers_28_0= '!unsettable' ) ) | ( (lv_qualifiers_29_0= 'volatile' ) ) | ( (lv_qualifiers_30_0= '!volatile' ) ) ) (otherlv_31= ',' )? )+ otherlv_32= '}' )? ( (otherlv_33= '{' ( (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' ) | (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' ) )* otherlv_44= '}' ) | otherlv_45= ';' ) ) )
            // InternalQVTimperative.g:5337:1: ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'property' ( (lv_name_5_0= ruleUnrestrictedName ) ) (otherlv_6= '#' ( ( ruleUnrestrictedName ) ) )? (otherlv_8= ':' ( (lv_ownedType_9_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_10= '=' ( (lv_default_11_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_12= '{' ( ( ( (lv_qualifiers_13_0= 'composes' ) ) | ( (lv_qualifiers_14_0= '!composes' ) ) | ( (lv_qualifiers_15_0= 'derived' ) ) | ( (lv_qualifiers_16_0= '!derived' ) ) | ( (lv_qualifiers_17_0= 'ordered' ) ) | ( (lv_qualifiers_18_0= '!ordered' ) ) | ( (lv_qualifiers_19_0= 'readonly' ) ) | ( (lv_qualifiers_20_0= '!readonly' ) ) | ( (lv_qualifiers_21_0= 'resolve' ) ) | ( (lv_qualifiers_22_0= '!resolve' ) ) | ( (lv_qualifiers_23_0= 'transient' ) ) | ( (lv_qualifiers_24_0= '!transient' ) ) | ( (lv_qualifiers_25_0= 'unique' ) ) | ( (lv_qualifiers_26_0= '!unique' ) ) | ( (lv_qualifiers_27_0= 'unsettable' ) ) | ( (lv_qualifiers_28_0= '!unsettable' ) ) | ( (lv_qualifiers_29_0= 'volatile' ) ) | ( (lv_qualifiers_30_0= '!volatile' ) ) ) (otherlv_31= ',' )? )+ otherlv_32= '}' )? ( (otherlv_33= '{' ( (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' ) | (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' ) )* otherlv_44= '}' ) | otherlv_45= ';' ) )
            {
            // InternalQVTimperative.g:5337:1: ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'property' ( (lv_name_5_0= ruleUnrestrictedName ) ) (otherlv_6= '#' ( ( ruleUnrestrictedName ) ) )? (otherlv_8= ':' ( (lv_ownedType_9_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_10= '=' ( (lv_default_11_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_12= '{' ( ( ( (lv_qualifiers_13_0= 'composes' ) ) | ( (lv_qualifiers_14_0= '!composes' ) ) | ( (lv_qualifiers_15_0= 'derived' ) ) | ( (lv_qualifiers_16_0= '!derived' ) ) | ( (lv_qualifiers_17_0= 'ordered' ) ) | ( (lv_qualifiers_18_0= '!ordered' ) ) | ( (lv_qualifiers_19_0= 'readonly' ) ) | ( (lv_qualifiers_20_0= '!readonly' ) ) | ( (lv_qualifiers_21_0= 'resolve' ) ) | ( (lv_qualifiers_22_0= '!resolve' ) ) | ( (lv_qualifiers_23_0= 'transient' ) ) | ( (lv_qualifiers_24_0= '!transient' ) ) | ( (lv_qualifiers_25_0= 'unique' ) ) | ( (lv_qualifiers_26_0= '!unique' ) ) | ( (lv_qualifiers_27_0= 'unsettable' ) ) | ( (lv_qualifiers_28_0= '!unsettable' ) ) | ( (lv_qualifiers_29_0= 'volatile' ) ) | ( (lv_qualifiers_30_0= '!volatile' ) ) ) (otherlv_31= ',' )? )+ otherlv_32= '}' )? ( (otherlv_33= '{' ( (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' ) | (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' ) )* otherlv_44= '}' ) | otherlv_45= ';' ) )
            // InternalQVTimperative.g:5337:2: ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'property' ( (lv_name_5_0= ruleUnrestrictedName ) ) (otherlv_6= '#' ( ( ruleUnrestrictedName ) ) )? (otherlv_8= ':' ( (lv_ownedType_9_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_10= '=' ( (lv_default_11_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_12= '{' ( ( ( (lv_qualifiers_13_0= 'composes' ) ) | ( (lv_qualifiers_14_0= '!composes' ) ) | ( (lv_qualifiers_15_0= 'derived' ) ) | ( (lv_qualifiers_16_0= '!derived' ) ) | ( (lv_qualifiers_17_0= 'ordered' ) ) | ( (lv_qualifiers_18_0= '!ordered' ) ) | ( (lv_qualifiers_19_0= 'readonly' ) ) | ( (lv_qualifiers_20_0= '!readonly' ) ) | ( (lv_qualifiers_21_0= 'resolve' ) ) | ( (lv_qualifiers_22_0= '!resolve' ) ) | ( (lv_qualifiers_23_0= 'transient' ) ) | ( (lv_qualifiers_24_0= '!transient' ) ) | ( (lv_qualifiers_25_0= 'unique' ) ) | ( (lv_qualifiers_26_0= '!unique' ) ) | ( (lv_qualifiers_27_0= 'unsettable' ) ) | ( (lv_qualifiers_28_0= '!unsettable' ) ) | ( (lv_qualifiers_29_0= 'volatile' ) ) | ( (lv_qualifiers_30_0= '!volatile' ) ) ) (otherlv_31= ',' )? )+ otherlv_32= '}' )? ( (otherlv_33= '{' ( (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' ) | (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' ) )* otherlv_44= '}' ) | otherlv_45= ';' )
            {
            // InternalQVTimperative.g:5337:2: ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )?
            int alt137=3;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==63) ) {
                alt137=1;
            }
            else if ( (LA137_0==64) ) {
                alt137=2;
            }
            switch (alt137) {
                case 1 :
                    // InternalQVTimperative.g:5337:3: ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? )
                    {
                    // InternalQVTimperative.g:5337:3: ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? )
                    // InternalQVTimperative.g:5337:4: ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )?
                    {
                    // InternalQVTimperative.g:5337:4: ( (lv_qualifiers_0_0= 'static' ) )
                    // InternalQVTimperative.g:5338:1: (lv_qualifiers_0_0= 'static' )
                    {
                    // InternalQVTimperative.g:5338:1: (lv_qualifiers_0_0= 'static' )
                    // InternalQVTimperative.g:5339:3: lv_qualifiers_0_0= 'static'
                    {
                    lv_qualifiers_0_0=(Token)match(input,63,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_qualifiers_0_0, grammarAccess.getReferenceCSAccess().getQualifiersStaticKeyword_0_0_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getReferenceCSRule());
                      	        }
                             		addWithLastConsumed(current, "qualifiers", lv_qualifiers_0_0, "static");

                    }

                    }


                    }

                    // InternalQVTimperative.g:5352:2: ( (lv_qualifiers_1_0= 'definition' ) )?
                    int alt135=2;
                    int LA135_0 = input.LA(1);

                    if ( (LA135_0==64) ) {
                        alt135=1;
                    }
                    switch (alt135) {
                        case 1 :
                            // InternalQVTimperative.g:5353:1: (lv_qualifiers_1_0= 'definition' )
                            {
                            // InternalQVTimperative.g:5353:1: (lv_qualifiers_1_0= 'definition' )
                            // InternalQVTimperative.g:5354:3: lv_qualifiers_1_0= 'definition'
                            {
                            lv_qualifiers_1_0=(Token)match(input,64,FollowSets000.FOLLOW_101); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_qualifiers_1_0, grammarAccess.getReferenceCSAccess().getQualifiersDefinitionKeyword_0_0_1_0());

                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                              	        }
                                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_1_0, "definition");

                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:5368:6: ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? )
                    {
                    // InternalQVTimperative.g:5368:6: ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? )
                    // InternalQVTimperative.g:5368:7: ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )?
                    {
                    // InternalQVTimperative.g:5368:7: ( (lv_qualifiers_2_0= 'definition' ) )
                    // InternalQVTimperative.g:5369:1: (lv_qualifiers_2_0= 'definition' )
                    {
                    // InternalQVTimperative.g:5369:1: (lv_qualifiers_2_0= 'definition' )
                    // InternalQVTimperative.g:5370:3: lv_qualifiers_2_0= 'definition'
                    {
                    lv_qualifiers_2_0=(Token)match(input,64,FollowSets000.FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_qualifiers_2_0, grammarAccess.getReferenceCSAccess().getQualifiersDefinitionKeyword_0_1_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getReferenceCSRule());
                      	        }
                             		addWithLastConsumed(current, "qualifiers", lv_qualifiers_2_0, "definition");

                    }

                    }


                    }

                    // InternalQVTimperative.g:5383:2: ( (lv_qualifiers_3_0= 'static' ) )?
                    int alt136=2;
                    int LA136_0 = input.LA(1);

                    if ( (LA136_0==63) ) {
                        alt136=1;
                    }
                    switch (alt136) {
                        case 1 :
                            // InternalQVTimperative.g:5384:1: (lv_qualifiers_3_0= 'static' )
                            {
                            // InternalQVTimperative.g:5384:1: (lv_qualifiers_3_0= 'static' )
                            // InternalQVTimperative.g:5385:3: lv_qualifiers_3_0= 'static'
                            {
                            lv_qualifiers_3_0=(Token)match(input,63,FollowSets000.FOLLOW_101); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_qualifiers_3_0, grammarAccess.getReferenceCSAccess().getQualifiersStaticKeyword_0_1_1_0());

                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                              	        }
                                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_3_0, "static");

                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,92,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getReferenceCSAccess().getPropertyKeyword_1());

            }
            // InternalQVTimperative.g:5402:1: ( (lv_name_5_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:5403:1: (lv_name_5_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:5403:1: (lv_name_5_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:5404:3: lv_name_5_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getReferenceCSAccess().getNameUnrestrictedNameParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_103);
            lv_name_5_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getReferenceCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_5_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:5420:2: (otherlv_6= '#' ( ( ruleUnrestrictedName ) ) )?
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( (LA138_0==93) ) {
                alt138=1;
            }
            switch (alt138) {
                case 1 :
                    // InternalQVTimperative.g:5420:4: otherlv_6= '#' ( ( ruleUnrestrictedName ) )
                    {
                    otherlv_6=(Token)match(input,93,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getReferenceCSAccess().getNumberSignKeyword_3_0());

                    }
                    // InternalQVTimperative.g:5424:1: ( ( ruleUnrestrictedName ) )
                    // InternalQVTimperative.g:5425:1: ( ruleUnrestrictedName )
                    {
                    // InternalQVTimperative.g:5425:1: ( ruleUnrestrictedName )
                    // InternalQVTimperative.g:5426:3: ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      		  /* */

                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getReferenceCSRule());
                      	        }

                    }
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getReferenceCSAccess().getReferredOppositePropertyCrossReference_3_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_51);
                    ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:5442:4: (otherlv_8= ':' ( (lv_ownedType_9_0= ruleTypedMultiplicityRefCS ) ) )?
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==24) ) {
                alt139=1;
            }
            switch (alt139) {
                case 1 :
                    // InternalQVTimperative.g:5442:6: otherlv_8= ':' ( (lv_ownedType_9_0= ruleTypedMultiplicityRefCS ) )
                    {
                    otherlv_8=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getReferenceCSAccess().getColonKeyword_4_0());

                    }
                    // InternalQVTimperative.g:5446:1: ( (lv_ownedType_9_0= ruleTypedMultiplicityRefCS ) )
                    // InternalQVTimperative.g:5447:1: (lv_ownedType_9_0= ruleTypedMultiplicityRefCS )
                    {
                    // InternalQVTimperative.g:5447:1: (lv_ownedType_9_0= ruleTypedMultiplicityRefCS )
                    // InternalQVTimperative.g:5448:3: lv_ownedType_9_0= ruleTypedMultiplicityRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getReferenceCSAccess().getOwnedTypeTypedMultiplicityRefCSParserRuleCall_4_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_52);
                    lv_ownedType_9_0=ruleTypedMultiplicityRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getReferenceCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_9_0,
                              		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.TypedMultiplicityRefCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:5464:4: (otherlv_10= '=' ( (lv_default_11_0= RULE_SINGLE_QUOTED_STRING ) ) )?
            int alt140=2;
            int LA140_0 = input.LA(1);

            if ( (LA140_0==52) ) {
                alt140=1;
            }
            switch (alt140) {
                case 1 :
                    // InternalQVTimperative.g:5464:6: otherlv_10= '=' ( (lv_default_11_0= RULE_SINGLE_QUOTED_STRING ) )
                    {
                    otherlv_10=(Token)match(input,52,FollowSets000.FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getReferenceCSAccess().getEqualsSignKeyword_5_0());

                    }
                    // InternalQVTimperative.g:5468:1: ( (lv_default_11_0= RULE_SINGLE_QUOTED_STRING ) )
                    // InternalQVTimperative.g:5469:1: (lv_default_11_0= RULE_SINGLE_QUOTED_STRING )
                    {
                    // InternalQVTimperative.g:5469:1: (lv_default_11_0= RULE_SINGLE_QUOTED_STRING )
                    // InternalQVTimperative.g:5470:3: lv_default_11_0= RULE_SINGLE_QUOTED_STRING
                    {
                    lv_default_11_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_default_11_0, grammarAccess.getReferenceCSAccess().getDefaultSINGLE_QUOTED_STRINGTerminalRuleCall_5_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getReferenceCSRule());
                      	        }
                             		setWithLastConsumed(
                             			current,
                             			"default",
                              		lv_default_11_0,
                              		"org.eclipse.ocl.xtext.base.Base.SINGLE_QUOTED_STRING");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:5486:4: (otherlv_12= '{' ( ( ( (lv_qualifiers_13_0= 'composes' ) ) | ( (lv_qualifiers_14_0= '!composes' ) ) | ( (lv_qualifiers_15_0= 'derived' ) ) | ( (lv_qualifiers_16_0= '!derived' ) ) | ( (lv_qualifiers_17_0= 'ordered' ) ) | ( (lv_qualifiers_18_0= '!ordered' ) ) | ( (lv_qualifiers_19_0= 'readonly' ) ) | ( (lv_qualifiers_20_0= '!readonly' ) ) | ( (lv_qualifiers_21_0= 'resolve' ) ) | ( (lv_qualifiers_22_0= '!resolve' ) ) | ( (lv_qualifiers_23_0= 'transient' ) ) | ( (lv_qualifiers_24_0= '!transient' ) ) | ( (lv_qualifiers_25_0= 'unique' ) ) | ( (lv_qualifiers_26_0= '!unique' ) ) | ( (lv_qualifiers_27_0= 'unsettable' ) ) | ( (lv_qualifiers_28_0= '!unsettable' ) ) | ( (lv_qualifiers_29_0= 'volatile' ) ) | ( (lv_qualifiers_30_0= '!volatile' ) ) ) (otherlv_31= ',' )? )+ otherlv_32= '}' )?
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( (LA144_0==35) ) {
                int LA144_1 = input.LA(2);

                if ( (LA144_1==53||(LA144_1>=66 && LA144_1<=67)||(LA144_1>=70 && LA144_1<=80)||(LA144_1>=94 && LA144_1<=97)) ) {
                    alt144=1;
                }
            }
            switch (alt144) {
                case 1 :
                    // InternalQVTimperative.g:5486:6: otherlv_12= '{' ( ( ( (lv_qualifiers_13_0= 'composes' ) ) | ( (lv_qualifiers_14_0= '!composes' ) ) | ( (lv_qualifiers_15_0= 'derived' ) ) | ( (lv_qualifiers_16_0= '!derived' ) ) | ( (lv_qualifiers_17_0= 'ordered' ) ) | ( (lv_qualifiers_18_0= '!ordered' ) ) | ( (lv_qualifiers_19_0= 'readonly' ) ) | ( (lv_qualifiers_20_0= '!readonly' ) ) | ( (lv_qualifiers_21_0= 'resolve' ) ) | ( (lv_qualifiers_22_0= '!resolve' ) ) | ( (lv_qualifiers_23_0= 'transient' ) ) | ( (lv_qualifiers_24_0= '!transient' ) ) | ( (lv_qualifiers_25_0= 'unique' ) ) | ( (lv_qualifiers_26_0= '!unique' ) ) | ( (lv_qualifiers_27_0= 'unsettable' ) ) | ( (lv_qualifiers_28_0= '!unsettable' ) ) | ( (lv_qualifiers_29_0= 'volatile' ) ) | ( (lv_qualifiers_30_0= '!volatile' ) ) ) (otherlv_31= ',' )? )+ otherlv_32= '}'
                    {
                    otherlv_12=(Token)match(input,35,FollowSets000.FOLLOW_104); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getReferenceCSAccess().getLeftCurlyBracketKeyword_6_0());

                    }
                    // InternalQVTimperative.g:5490:1: ( ( ( (lv_qualifiers_13_0= 'composes' ) ) | ( (lv_qualifiers_14_0= '!composes' ) ) | ( (lv_qualifiers_15_0= 'derived' ) ) | ( (lv_qualifiers_16_0= '!derived' ) ) | ( (lv_qualifiers_17_0= 'ordered' ) ) | ( (lv_qualifiers_18_0= '!ordered' ) ) | ( (lv_qualifiers_19_0= 'readonly' ) ) | ( (lv_qualifiers_20_0= '!readonly' ) ) | ( (lv_qualifiers_21_0= 'resolve' ) ) | ( (lv_qualifiers_22_0= '!resolve' ) ) | ( (lv_qualifiers_23_0= 'transient' ) ) | ( (lv_qualifiers_24_0= '!transient' ) ) | ( (lv_qualifiers_25_0= 'unique' ) ) | ( (lv_qualifiers_26_0= '!unique' ) ) | ( (lv_qualifiers_27_0= 'unsettable' ) ) | ( (lv_qualifiers_28_0= '!unsettable' ) ) | ( (lv_qualifiers_29_0= 'volatile' ) ) | ( (lv_qualifiers_30_0= '!volatile' ) ) ) (otherlv_31= ',' )? )+
                    int cnt143=0;
                    loop143:
                    do {
                        int alt143=2;
                        int LA143_0 = input.LA(1);

                        if ( (LA143_0==53||(LA143_0>=66 && LA143_0<=67)||(LA143_0>=70 && LA143_0<=80)||(LA143_0>=94 && LA143_0<=97)) ) {
                            alt143=1;
                        }


                        switch (alt143) {
                    	case 1 :
                    	    // InternalQVTimperative.g:5490:2: ( ( (lv_qualifiers_13_0= 'composes' ) ) | ( (lv_qualifiers_14_0= '!composes' ) ) | ( (lv_qualifiers_15_0= 'derived' ) ) | ( (lv_qualifiers_16_0= '!derived' ) ) | ( (lv_qualifiers_17_0= 'ordered' ) ) | ( (lv_qualifiers_18_0= '!ordered' ) ) | ( (lv_qualifiers_19_0= 'readonly' ) ) | ( (lv_qualifiers_20_0= '!readonly' ) ) | ( (lv_qualifiers_21_0= 'resolve' ) ) | ( (lv_qualifiers_22_0= '!resolve' ) ) | ( (lv_qualifiers_23_0= 'transient' ) ) | ( (lv_qualifiers_24_0= '!transient' ) ) | ( (lv_qualifiers_25_0= 'unique' ) ) | ( (lv_qualifiers_26_0= '!unique' ) ) | ( (lv_qualifiers_27_0= 'unsettable' ) ) | ( (lv_qualifiers_28_0= '!unsettable' ) ) | ( (lv_qualifiers_29_0= 'volatile' ) ) | ( (lv_qualifiers_30_0= '!volatile' ) ) ) (otherlv_31= ',' )?
                    	    {
                    	    // InternalQVTimperative.g:5490:2: ( ( (lv_qualifiers_13_0= 'composes' ) ) | ( (lv_qualifiers_14_0= '!composes' ) ) | ( (lv_qualifiers_15_0= 'derived' ) ) | ( (lv_qualifiers_16_0= '!derived' ) ) | ( (lv_qualifiers_17_0= 'ordered' ) ) | ( (lv_qualifiers_18_0= '!ordered' ) ) | ( (lv_qualifiers_19_0= 'readonly' ) ) | ( (lv_qualifiers_20_0= '!readonly' ) ) | ( (lv_qualifiers_21_0= 'resolve' ) ) | ( (lv_qualifiers_22_0= '!resolve' ) ) | ( (lv_qualifiers_23_0= 'transient' ) ) | ( (lv_qualifiers_24_0= '!transient' ) ) | ( (lv_qualifiers_25_0= 'unique' ) ) | ( (lv_qualifiers_26_0= '!unique' ) ) | ( (lv_qualifiers_27_0= 'unsettable' ) ) | ( (lv_qualifiers_28_0= '!unsettable' ) ) | ( (lv_qualifiers_29_0= 'volatile' ) ) | ( (lv_qualifiers_30_0= '!volatile' ) ) )
                    	    int alt141=18;
                    	    switch ( input.LA(1) ) {
                    	    case 94:
                    	        {
                    	        alt141=1;
                    	        }
                    	        break;
                    	    case 95:
                    	        {
                    	        alt141=2;
                    	        }
                    	        break;
                    	    case 66:
                    	        {
                    	        alt141=3;
                    	        }
                    	        break;
                    	    case 67:
                    	        {
                    	        alt141=4;
                    	        }
                    	        break;
                    	    case 70:
                    	        {
                    	        alt141=5;
                    	        }
                    	        break;
                    	    case 71:
                    	        {
                    	        alt141=6;
                    	        }
                    	        break;
                    	    case 72:
                    	        {
                    	        alt141=7;
                    	        }
                    	        break;
                    	    case 73:
                    	        {
                    	        alt141=8;
                    	        }
                    	        break;
                    	    case 96:
                    	        {
                    	        alt141=9;
                    	        }
                    	        break;
                    	    case 97:
                    	        {
                    	        alt141=10;
                    	        }
                    	        break;
                    	    case 53:
                    	        {
                    	        alt141=11;
                    	        }
                    	        break;
                    	    case 74:
                    	        {
                    	        alt141=12;
                    	        }
                    	        break;
                    	    case 75:
                    	        {
                    	        alt141=13;
                    	        }
                    	        break;
                    	    case 76:
                    	        {
                    	        alt141=14;
                    	        }
                    	        break;
                    	    case 77:
                    	        {
                    	        alt141=15;
                    	        }
                    	        break;
                    	    case 78:
                    	        {
                    	        alt141=16;
                    	        }
                    	        break;
                    	    case 79:
                    	        {
                    	        alt141=17;
                    	        }
                    	        break;
                    	    case 80:
                    	        {
                    	        alt141=18;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 141, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt141) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:5490:3: ( (lv_qualifiers_13_0= 'composes' ) )
                    	            {
                    	            // InternalQVTimperative.g:5490:3: ( (lv_qualifiers_13_0= 'composes' ) )
                    	            // InternalQVTimperative.g:5491:1: (lv_qualifiers_13_0= 'composes' )
                    	            {
                    	            // InternalQVTimperative.g:5491:1: (lv_qualifiers_13_0= 'composes' )
                    	            // InternalQVTimperative.g:5492:3: lv_qualifiers_13_0= 'composes'
                    	            {
                    	            lv_qualifiers_13_0=(Token)match(input,94,FollowSets000.FOLLOW_105); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_13_0, grammarAccess.getReferenceCSAccess().getQualifiersComposesKeyword_6_1_0_0_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_13_0, "composes");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalQVTimperative.g:5506:6: ( (lv_qualifiers_14_0= '!composes' ) )
                    	            {
                    	            // InternalQVTimperative.g:5506:6: ( (lv_qualifiers_14_0= '!composes' ) )
                    	            // InternalQVTimperative.g:5507:1: (lv_qualifiers_14_0= '!composes' )
                    	            {
                    	            // InternalQVTimperative.g:5507:1: (lv_qualifiers_14_0= '!composes' )
                    	            // InternalQVTimperative.g:5508:3: lv_qualifiers_14_0= '!composes'
                    	            {
                    	            lv_qualifiers_14_0=(Token)match(input,95,FollowSets000.FOLLOW_105); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_14_0, grammarAccess.getReferenceCSAccess().getQualifiersComposesKeyword_6_1_0_1_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_14_0, "!composes");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 3 :
                    	            // InternalQVTimperative.g:5522:6: ( (lv_qualifiers_15_0= 'derived' ) )
                    	            {
                    	            // InternalQVTimperative.g:5522:6: ( (lv_qualifiers_15_0= 'derived' ) )
                    	            // InternalQVTimperative.g:5523:1: (lv_qualifiers_15_0= 'derived' )
                    	            {
                    	            // InternalQVTimperative.g:5523:1: (lv_qualifiers_15_0= 'derived' )
                    	            // InternalQVTimperative.g:5524:3: lv_qualifiers_15_0= 'derived'
                    	            {
                    	            lv_qualifiers_15_0=(Token)match(input,66,FollowSets000.FOLLOW_105); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_15_0, grammarAccess.getReferenceCSAccess().getQualifiersDerivedKeyword_6_1_0_2_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_15_0, "derived");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 4 :
                    	            // InternalQVTimperative.g:5538:6: ( (lv_qualifiers_16_0= '!derived' ) )
                    	            {
                    	            // InternalQVTimperative.g:5538:6: ( (lv_qualifiers_16_0= '!derived' ) )
                    	            // InternalQVTimperative.g:5539:1: (lv_qualifiers_16_0= '!derived' )
                    	            {
                    	            // InternalQVTimperative.g:5539:1: (lv_qualifiers_16_0= '!derived' )
                    	            // InternalQVTimperative.g:5540:3: lv_qualifiers_16_0= '!derived'
                    	            {
                    	            lv_qualifiers_16_0=(Token)match(input,67,FollowSets000.FOLLOW_105); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_16_0, grammarAccess.getReferenceCSAccess().getQualifiersDerivedKeyword_6_1_0_3_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_16_0, "!derived");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 5 :
                    	            // InternalQVTimperative.g:5554:6: ( (lv_qualifiers_17_0= 'ordered' ) )
                    	            {
                    	            // InternalQVTimperative.g:5554:6: ( (lv_qualifiers_17_0= 'ordered' ) )
                    	            // InternalQVTimperative.g:5555:1: (lv_qualifiers_17_0= 'ordered' )
                    	            {
                    	            // InternalQVTimperative.g:5555:1: (lv_qualifiers_17_0= 'ordered' )
                    	            // InternalQVTimperative.g:5556:3: lv_qualifiers_17_0= 'ordered'
                    	            {
                    	            lv_qualifiers_17_0=(Token)match(input,70,FollowSets000.FOLLOW_105); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_17_0, grammarAccess.getReferenceCSAccess().getQualifiersOrderedKeyword_6_1_0_4_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_17_0, "ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 6 :
                    	            // InternalQVTimperative.g:5570:6: ( (lv_qualifiers_18_0= '!ordered' ) )
                    	            {
                    	            // InternalQVTimperative.g:5570:6: ( (lv_qualifiers_18_0= '!ordered' ) )
                    	            // InternalQVTimperative.g:5571:1: (lv_qualifiers_18_0= '!ordered' )
                    	            {
                    	            // InternalQVTimperative.g:5571:1: (lv_qualifiers_18_0= '!ordered' )
                    	            // InternalQVTimperative.g:5572:3: lv_qualifiers_18_0= '!ordered'
                    	            {
                    	            lv_qualifiers_18_0=(Token)match(input,71,FollowSets000.FOLLOW_105); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_18_0, grammarAccess.getReferenceCSAccess().getQualifiersOrderedKeyword_6_1_0_5_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_18_0, "!ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 7 :
                    	            // InternalQVTimperative.g:5586:6: ( (lv_qualifiers_19_0= 'readonly' ) )
                    	            {
                    	            // InternalQVTimperative.g:5586:6: ( (lv_qualifiers_19_0= 'readonly' ) )
                    	            // InternalQVTimperative.g:5587:1: (lv_qualifiers_19_0= 'readonly' )
                    	            {
                    	            // InternalQVTimperative.g:5587:1: (lv_qualifiers_19_0= 'readonly' )
                    	            // InternalQVTimperative.g:5588:3: lv_qualifiers_19_0= 'readonly'
                    	            {
                    	            lv_qualifiers_19_0=(Token)match(input,72,FollowSets000.FOLLOW_105); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_19_0, grammarAccess.getReferenceCSAccess().getQualifiersReadonlyKeyword_6_1_0_6_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_19_0, "readonly");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 8 :
                    	            // InternalQVTimperative.g:5602:6: ( (lv_qualifiers_20_0= '!readonly' ) )
                    	            {
                    	            // InternalQVTimperative.g:5602:6: ( (lv_qualifiers_20_0= '!readonly' ) )
                    	            // InternalQVTimperative.g:5603:1: (lv_qualifiers_20_0= '!readonly' )
                    	            {
                    	            // InternalQVTimperative.g:5603:1: (lv_qualifiers_20_0= '!readonly' )
                    	            // InternalQVTimperative.g:5604:3: lv_qualifiers_20_0= '!readonly'
                    	            {
                    	            lv_qualifiers_20_0=(Token)match(input,73,FollowSets000.FOLLOW_105); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_20_0, grammarAccess.getReferenceCSAccess().getQualifiersReadonlyKeyword_6_1_0_7_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_20_0, "!readonly");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 9 :
                    	            // InternalQVTimperative.g:5618:6: ( (lv_qualifiers_21_0= 'resolve' ) )
                    	            {
                    	            // InternalQVTimperative.g:5618:6: ( (lv_qualifiers_21_0= 'resolve' ) )
                    	            // InternalQVTimperative.g:5619:1: (lv_qualifiers_21_0= 'resolve' )
                    	            {
                    	            // InternalQVTimperative.g:5619:1: (lv_qualifiers_21_0= 'resolve' )
                    	            // InternalQVTimperative.g:5620:3: lv_qualifiers_21_0= 'resolve'
                    	            {
                    	            lv_qualifiers_21_0=(Token)match(input,96,FollowSets000.FOLLOW_105); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_21_0, grammarAccess.getReferenceCSAccess().getQualifiersResolveKeyword_6_1_0_8_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_21_0, "resolve");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 10 :
                    	            // InternalQVTimperative.g:5634:6: ( (lv_qualifiers_22_0= '!resolve' ) )
                    	            {
                    	            // InternalQVTimperative.g:5634:6: ( (lv_qualifiers_22_0= '!resolve' ) )
                    	            // InternalQVTimperative.g:5635:1: (lv_qualifiers_22_0= '!resolve' )
                    	            {
                    	            // InternalQVTimperative.g:5635:1: (lv_qualifiers_22_0= '!resolve' )
                    	            // InternalQVTimperative.g:5636:3: lv_qualifiers_22_0= '!resolve'
                    	            {
                    	            lv_qualifiers_22_0=(Token)match(input,97,FollowSets000.FOLLOW_105); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_22_0, grammarAccess.getReferenceCSAccess().getQualifiersResolveKeyword_6_1_0_9_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_22_0, "!resolve");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 11 :
                    	            // InternalQVTimperative.g:5650:6: ( (lv_qualifiers_23_0= 'transient' ) )
                    	            {
                    	            // InternalQVTimperative.g:5650:6: ( (lv_qualifiers_23_0= 'transient' ) )
                    	            // InternalQVTimperative.g:5651:1: (lv_qualifiers_23_0= 'transient' )
                    	            {
                    	            // InternalQVTimperative.g:5651:1: (lv_qualifiers_23_0= 'transient' )
                    	            // InternalQVTimperative.g:5652:3: lv_qualifiers_23_0= 'transient'
                    	            {
                    	            lv_qualifiers_23_0=(Token)match(input,53,FollowSets000.FOLLOW_105); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_23_0, grammarAccess.getReferenceCSAccess().getQualifiersTransientKeyword_6_1_0_10_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_23_0, "transient");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 12 :
                    	            // InternalQVTimperative.g:5666:6: ( (lv_qualifiers_24_0= '!transient' ) )
                    	            {
                    	            // InternalQVTimperative.g:5666:6: ( (lv_qualifiers_24_0= '!transient' ) )
                    	            // InternalQVTimperative.g:5667:1: (lv_qualifiers_24_0= '!transient' )
                    	            {
                    	            // InternalQVTimperative.g:5667:1: (lv_qualifiers_24_0= '!transient' )
                    	            // InternalQVTimperative.g:5668:3: lv_qualifiers_24_0= '!transient'
                    	            {
                    	            lv_qualifiers_24_0=(Token)match(input,74,FollowSets000.FOLLOW_105); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_24_0, grammarAccess.getReferenceCSAccess().getQualifiersTransientKeyword_6_1_0_11_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_24_0, "!transient");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 13 :
                    	            // InternalQVTimperative.g:5682:6: ( (lv_qualifiers_25_0= 'unique' ) )
                    	            {
                    	            // InternalQVTimperative.g:5682:6: ( (lv_qualifiers_25_0= 'unique' ) )
                    	            // InternalQVTimperative.g:5683:1: (lv_qualifiers_25_0= 'unique' )
                    	            {
                    	            // InternalQVTimperative.g:5683:1: (lv_qualifiers_25_0= 'unique' )
                    	            // InternalQVTimperative.g:5684:3: lv_qualifiers_25_0= 'unique'
                    	            {
                    	            lv_qualifiers_25_0=(Token)match(input,75,FollowSets000.FOLLOW_105); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_25_0, grammarAccess.getReferenceCSAccess().getQualifiersUniqueKeyword_6_1_0_12_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_25_0, "unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 14 :
                    	            // InternalQVTimperative.g:5698:6: ( (lv_qualifiers_26_0= '!unique' ) )
                    	            {
                    	            // InternalQVTimperative.g:5698:6: ( (lv_qualifiers_26_0= '!unique' ) )
                    	            // InternalQVTimperative.g:5699:1: (lv_qualifiers_26_0= '!unique' )
                    	            {
                    	            // InternalQVTimperative.g:5699:1: (lv_qualifiers_26_0= '!unique' )
                    	            // InternalQVTimperative.g:5700:3: lv_qualifiers_26_0= '!unique'
                    	            {
                    	            lv_qualifiers_26_0=(Token)match(input,76,FollowSets000.FOLLOW_105); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_26_0, grammarAccess.getReferenceCSAccess().getQualifiersUniqueKeyword_6_1_0_13_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_26_0, "!unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 15 :
                    	            // InternalQVTimperative.g:5714:6: ( (lv_qualifiers_27_0= 'unsettable' ) )
                    	            {
                    	            // InternalQVTimperative.g:5714:6: ( (lv_qualifiers_27_0= 'unsettable' ) )
                    	            // InternalQVTimperative.g:5715:1: (lv_qualifiers_27_0= 'unsettable' )
                    	            {
                    	            // InternalQVTimperative.g:5715:1: (lv_qualifiers_27_0= 'unsettable' )
                    	            // InternalQVTimperative.g:5716:3: lv_qualifiers_27_0= 'unsettable'
                    	            {
                    	            lv_qualifiers_27_0=(Token)match(input,77,FollowSets000.FOLLOW_105); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_27_0, grammarAccess.getReferenceCSAccess().getQualifiersUnsettableKeyword_6_1_0_14_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_27_0, "unsettable");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 16 :
                    	            // InternalQVTimperative.g:5730:6: ( (lv_qualifiers_28_0= '!unsettable' ) )
                    	            {
                    	            // InternalQVTimperative.g:5730:6: ( (lv_qualifiers_28_0= '!unsettable' ) )
                    	            // InternalQVTimperative.g:5731:1: (lv_qualifiers_28_0= '!unsettable' )
                    	            {
                    	            // InternalQVTimperative.g:5731:1: (lv_qualifiers_28_0= '!unsettable' )
                    	            // InternalQVTimperative.g:5732:3: lv_qualifiers_28_0= '!unsettable'
                    	            {
                    	            lv_qualifiers_28_0=(Token)match(input,78,FollowSets000.FOLLOW_105); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_28_0, grammarAccess.getReferenceCSAccess().getQualifiersUnsettableKeyword_6_1_0_15_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_28_0, "!unsettable");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 17 :
                    	            // InternalQVTimperative.g:5746:6: ( (lv_qualifiers_29_0= 'volatile' ) )
                    	            {
                    	            // InternalQVTimperative.g:5746:6: ( (lv_qualifiers_29_0= 'volatile' ) )
                    	            // InternalQVTimperative.g:5747:1: (lv_qualifiers_29_0= 'volatile' )
                    	            {
                    	            // InternalQVTimperative.g:5747:1: (lv_qualifiers_29_0= 'volatile' )
                    	            // InternalQVTimperative.g:5748:3: lv_qualifiers_29_0= 'volatile'
                    	            {
                    	            lv_qualifiers_29_0=(Token)match(input,79,FollowSets000.FOLLOW_105); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_29_0, grammarAccess.getReferenceCSAccess().getQualifiersVolatileKeyword_6_1_0_16_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_29_0, "volatile");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 18 :
                    	            // InternalQVTimperative.g:5762:6: ( (lv_qualifiers_30_0= '!volatile' ) )
                    	            {
                    	            // InternalQVTimperative.g:5762:6: ( (lv_qualifiers_30_0= '!volatile' ) )
                    	            // InternalQVTimperative.g:5763:1: (lv_qualifiers_30_0= '!volatile' )
                    	            {
                    	            // InternalQVTimperative.g:5763:1: (lv_qualifiers_30_0= '!volatile' )
                    	            // InternalQVTimperative.g:5764:3: lv_qualifiers_30_0= '!volatile'
                    	            {
                    	            lv_qualifiers_30_0=(Token)match(input,80,FollowSets000.FOLLOW_105); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_30_0, grammarAccess.getReferenceCSAccess().getQualifiersVolatileKeyword_6_1_0_17_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_30_0, "!volatile");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalQVTimperative.g:5777:3: (otherlv_31= ',' )?
                    	    int alt142=2;
                    	    int LA142_0 = input.LA(1);

                    	    if ( (LA142_0==18) ) {
                    	        alt142=1;
                    	    }
                    	    switch (alt142) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:5777:5: otherlv_31= ','
                    	            {
                    	            otherlv_31=(Token)match(input,18,FollowSets000.FOLLOW_106); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                  	newLeafNode(otherlv_31, grammarAccess.getReferenceCSAccess().getCommaKeyword_6_1_1());

                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt143 >= 1 ) break loop143;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(143, input);
                                throw eee;
                        }
                        cnt143++;
                    } while (true);

                    otherlv_32=(Token)match(input,36,FollowSets000.FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_32, grammarAccess.getReferenceCSAccess().getRightCurlyBracketKeyword_6_2());

                    }

                    }
                    break;

            }

            // InternalQVTimperative.g:5785:3: ( (otherlv_33= '{' ( (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' ) | (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' ) )* otherlv_44= '}' ) | otherlv_45= ';' )
            int alt150=2;
            int LA150_0 = input.LA(1);

            if ( (LA150_0==35) ) {
                alt150=1;
            }
            else if ( (LA150_0==21) ) {
                alt150=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 150, 0, input);

                throw nvae;
            }
            switch (alt150) {
                case 1 :
                    // InternalQVTimperative.g:5785:4: (otherlv_33= '{' ( (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' ) | (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' ) )* otherlv_44= '}' )
                    {
                    // InternalQVTimperative.g:5785:4: (otherlv_33= '{' ( (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' ) | (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' ) )* otherlv_44= '}' )
                    // InternalQVTimperative.g:5785:6: otherlv_33= '{' ( (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' ) | (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' ) )* otherlv_44= '}'
                    {
                    otherlv_33=(Token)match(input,35,FollowSets000.FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_33, grammarAccess.getReferenceCSAccess().getLeftCurlyBracketKeyword_7_0_0());

                    }
                    // InternalQVTimperative.g:5789:1: ( (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' ) | (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' ) )*
                    loop149:
                    do {
                        int alt149=3;
                        int LA149_0 = input.LA(1);

                        if ( (LA149_0==81) ) {
                            alt149=1;
                        }
                        else if ( (LA149_0==82) ) {
                            alt149=2;
                        }


                        switch (alt149) {
                    	case 1 :
                    	    // InternalQVTimperative.g:5789:2: (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' )
                    	    {
                    	    // InternalQVTimperative.g:5789:2: (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' )
                    	    // InternalQVTimperative.g:5789:4: otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';'
                    	    {
                    	    otherlv_34=(Token)match(input,81,FollowSets000.FOLLOW_14); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_34, grammarAccess.getReferenceCSAccess().getInitialKeyword_7_0_1_0_0());

                    	    }
                    	    // InternalQVTimperative.g:5793:1: ( ruleUnrestrictedName )?
                    	    int alt145=2;
                    	    int LA145_0 = input.LA(1);

                    	    if ( ((LA145_0>=RULE_SIMPLE_ID && LA145_0<=RULE_ESCAPED_ID)||LA145_0==17||LA145_0==19||(LA145_0>=22 && LA145_0<=23)||(LA145_0>=25 && LA145_0<=26)||(LA145_0>=29 && LA145_0<=33)||LA145_0==39||(LA145_0>=43 && LA145_0<=51)||(LA145_0>=53 && LA145_0<=54)||(LA145_0>=57 && LA145_0<=59)||(LA145_0>=61 && LA145_0<=66)||LA145_0==68||LA145_0==70||LA145_0==72||LA145_0==75||LA145_0==77||LA145_0==79||(LA145_0>=81 && LA145_0<=85)||(LA145_0>=87 && LA145_0<=92)||LA145_0==94||LA145_0==96||(LA145_0>=98 && LA145_0<=101)) ) {
                    	        alt145=1;
                    	    }
                    	    switch (alt145) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:5794:2: ruleUnrestrictedName
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	  /* */

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	                      newCompositeNode(grammarAccess.getReferenceCSAccess().getUnrestrictedNameParserRuleCall_7_0_1_0_1());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_11);
                    	            ruleUnrestrictedName();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;

                    	    }

                    	    otherlv_36=(Token)match(input,24,FollowSets000.FOLLOW_77); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_36, grammarAccess.getReferenceCSAccess().getColonKeyword_7_0_1_0_2());

                    	    }
                    	    // InternalQVTimperative.g:5808:1: ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )?
                    	    int alt146=2;
                    	    int LA146_0 = input.LA(1);

                    	    if ( ((LA146_0>=RULE_SINGLE_QUOTED_STRING && LA146_0<=RULE_ESCAPED_ID)||LA146_0==17||LA146_0==19||(LA146_0>=22 && LA146_0<=23)||(LA146_0>=25 && LA146_0<=26)||(LA146_0>=29 && LA146_0<=33)||LA146_0==39||(LA146_0>=42 && LA146_0<=51)||(LA146_0>=53 && LA146_0<=55)||(LA146_0>=57 && LA146_0<=59)||(LA146_0>=61 && LA146_0<=66)||LA146_0==68||LA146_0==70||LA146_0==72||LA146_0==75||LA146_0==77||LA146_0==79||(LA146_0>=81 && LA146_0<=85)||(LA146_0>=87 && LA146_0<=92)||LA146_0==94||LA146_0==96||(LA146_0>=98 && LA146_0<=103)||(LA146_0>=118 && LA146_0<=132)||LA146_0==134||(LA146_0>=136 && LA146_0<=139)||LA146_0==145||(LA146_0>=150 && LA146_0<=151)) ) {
                    	        alt146=1;
                    	    }
                    	    switch (alt146) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:5809:1: (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS )
                    	            {
                    	            // InternalQVTimperative.g:5809:1: (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS )
                    	            // InternalQVTimperative.g:5810:3: lv_ownedDefaultExpressions_37_0= ruleSpecificationCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	        newCompositeNode(grammarAccess.getReferenceCSAccess().getOwnedDefaultExpressionsSpecificationCSParserRuleCall_7_0_1_0_3_0());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_9);
                    	            lv_ownedDefaultExpressions_37_0=ruleSpecificationCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		add(
                    	                     			current,
                    	                     			"ownedDefaultExpressions",
                    	                      		lv_ownedDefaultExpressions_37_0,
                    	                      		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.SpecificationCS");
                    	              	        afterParserOrEnumRuleCall();

                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    otherlv_38=(Token)match(input,21,FollowSets000.FOLLOW_76); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_38, grammarAccess.getReferenceCSAccess().getSemicolonKeyword_7_0_1_0_4());

                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQVTimperative.g:5831:6: (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' )
                    	    {
                    	    // InternalQVTimperative.g:5831:6: (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' )
                    	    // InternalQVTimperative.g:5831:8: otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';'
                    	    {
                    	    otherlv_39=(Token)match(input,82,FollowSets000.FOLLOW_14); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_39, grammarAccess.getReferenceCSAccess().getDerivationKeyword_7_0_1_1_0());

                    	    }
                    	    // InternalQVTimperative.g:5835:1: ( ruleUnrestrictedName )?
                    	    int alt147=2;
                    	    int LA147_0 = input.LA(1);

                    	    if ( ((LA147_0>=RULE_SIMPLE_ID && LA147_0<=RULE_ESCAPED_ID)||LA147_0==17||LA147_0==19||(LA147_0>=22 && LA147_0<=23)||(LA147_0>=25 && LA147_0<=26)||(LA147_0>=29 && LA147_0<=33)||LA147_0==39||(LA147_0>=43 && LA147_0<=51)||(LA147_0>=53 && LA147_0<=54)||(LA147_0>=57 && LA147_0<=59)||(LA147_0>=61 && LA147_0<=66)||LA147_0==68||LA147_0==70||LA147_0==72||LA147_0==75||LA147_0==77||LA147_0==79||(LA147_0>=81 && LA147_0<=85)||(LA147_0>=87 && LA147_0<=92)||LA147_0==94||LA147_0==96||(LA147_0>=98 && LA147_0<=101)) ) {
                    	        alt147=1;
                    	    }
                    	    switch (alt147) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:5836:2: ruleUnrestrictedName
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	  /* */

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	                      newCompositeNode(grammarAccess.getReferenceCSAccess().getUnrestrictedNameParserRuleCall_7_0_1_1_1());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_11);
                    	            ruleUnrestrictedName();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;

                    	    }

                    	    otherlv_41=(Token)match(input,24,FollowSets000.FOLLOW_77); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_41, grammarAccess.getReferenceCSAccess().getColonKeyword_7_0_1_1_2());

                    	    }
                    	    // InternalQVTimperative.g:5850:1: ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )?
                    	    int alt148=2;
                    	    int LA148_0 = input.LA(1);

                    	    if ( ((LA148_0>=RULE_SINGLE_QUOTED_STRING && LA148_0<=RULE_ESCAPED_ID)||LA148_0==17||LA148_0==19||(LA148_0>=22 && LA148_0<=23)||(LA148_0>=25 && LA148_0<=26)||(LA148_0>=29 && LA148_0<=33)||LA148_0==39||(LA148_0>=42 && LA148_0<=51)||(LA148_0>=53 && LA148_0<=55)||(LA148_0>=57 && LA148_0<=59)||(LA148_0>=61 && LA148_0<=66)||LA148_0==68||LA148_0==70||LA148_0==72||LA148_0==75||LA148_0==77||LA148_0==79||(LA148_0>=81 && LA148_0<=85)||(LA148_0>=87 && LA148_0<=92)||LA148_0==94||LA148_0==96||(LA148_0>=98 && LA148_0<=103)||(LA148_0>=118 && LA148_0<=132)||LA148_0==134||(LA148_0>=136 && LA148_0<=139)||LA148_0==145||(LA148_0>=150 && LA148_0<=151)) ) {
                    	        alt148=1;
                    	    }
                    	    switch (alt148) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:5851:1: (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS )
                    	            {
                    	            // InternalQVTimperative.g:5851:1: (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS )
                    	            // InternalQVTimperative.g:5852:3: lv_ownedDefaultExpressions_42_0= ruleSpecificationCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	        newCompositeNode(grammarAccess.getReferenceCSAccess().getOwnedDefaultExpressionsSpecificationCSParserRuleCall_7_0_1_1_3_0());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_9);
                    	            lv_ownedDefaultExpressions_42_0=ruleSpecificationCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		add(
                    	                     			current,
                    	                     			"ownedDefaultExpressions",
                    	                      		lv_ownedDefaultExpressions_42_0,
                    	                      		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.SpecificationCS");
                    	              	        afterParserOrEnumRuleCall();

                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    otherlv_43=(Token)match(input,21,FollowSets000.FOLLOW_76); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_43, grammarAccess.getReferenceCSAccess().getSemicolonKeyword_7_0_1_1_4());

                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop149;
                        }
                    } while (true);

                    otherlv_44=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_44, grammarAccess.getReferenceCSAccess().getRightCurlyBracketKeyword_7_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:5877:7: otherlv_45= ';'
                    {
                    otherlv_45=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_45, grammarAccess.getReferenceCSAccess().getSemicolonKeyword_7_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceCS"


    // $ANTLR start "entryRuleSpecificationCS"
    // InternalQVTimperative.g:5889:1: entryRuleSpecificationCS returns [EObject current=null] : iv_ruleSpecificationCS= ruleSpecificationCS EOF ;
    public final EObject entryRuleSpecificationCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSpecificationCS = null;


        try {
            // InternalQVTimperative.g:5890:2: (iv_ruleSpecificationCS= ruleSpecificationCS EOF )
            // InternalQVTimperative.g:5891:2: iv_ruleSpecificationCS= ruleSpecificationCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSpecificationCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSpecificationCS=ruleSpecificationCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSpecificationCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSpecificationCS"


    // $ANTLR start "ruleSpecificationCS"
    // InternalQVTimperative.g:5898:1: ruleSpecificationCS returns [EObject current=null] : ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) | ( (lv_exprString_1_0= RULE_UNQUOTED_STRING ) ) ) ;
    public final EObject ruleSpecificationCS() throws RecognitionException {
        EObject current = null;

        Token lv_exprString_1_0=null;
        EObject lv_ownedExpression_0_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:5901:28: ( ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) | ( (lv_exprString_1_0= RULE_UNQUOTED_STRING ) ) ) )
            // InternalQVTimperative.g:5902:1: ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) | ( (lv_exprString_1_0= RULE_UNQUOTED_STRING ) ) )
            {
            // InternalQVTimperative.g:5902:1: ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) | ( (lv_exprString_1_0= RULE_UNQUOTED_STRING ) ) )
            int alt151=2;
            int LA151_0 = input.LA(1);

            if ( (LA151_0==RULE_SINGLE_QUOTED_STRING||(LA151_0>=RULE_INT && LA151_0<=RULE_ESCAPED_ID)||LA151_0==17||LA151_0==19||(LA151_0>=22 && LA151_0<=23)||(LA151_0>=25 && LA151_0<=26)||(LA151_0>=29 && LA151_0<=33)||LA151_0==39||(LA151_0>=42 && LA151_0<=51)||(LA151_0>=53 && LA151_0<=55)||(LA151_0>=57 && LA151_0<=59)||(LA151_0>=61 && LA151_0<=66)||LA151_0==68||LA151_0==70||LA151_0==72||LA151_0==75||LA151_0==77||LA151_0==79||(LA151_0>=81 && LA151_0<=85)||(LA151_0>=87 && LA151_0<=92)||LA151_0==94||LA151_0==96||(LA151_0>=98 && LA151_0<=103)||(LA151_0>=118 && LA151_0<=132)||LA151_0==134||(LA151_0>=136 && LA151_0<=139)||LA151_0==145||(LA151_0>=150 && LA151_0<=151)) ) {
                alt151=1;
            }
            else if ( (LA151_0==RULE_UNQUOTED_STRING) ) {
                alt151=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 151, 0, input);

                throw nvae;
            }
            switch (alt151) {
                case 1 :
                    // InternalQVTimperative.g:5902:2: ( (lv_ownedExpression_0_0= ruleExpCS ) )
                    {
                    // InternalQVTimperative.g:5902:2: ( (lv_ownedExpression_0_0= ruleExpCS ) )
                    // InternalQVTimperative.g:5903:1: (lv_ownedExpression_0_0= ruleExpCS )
                    {
                    // InternalQVTimperative.g:5903:1: (lv_ownedExpression_0_0= ruleExpCS )
                    // InternalQVTimperative.g:5904:3: lv_ownedExpression_0_0= ruleExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getSpecificationCSAccess().getOwnedExpressionExpCSParserRuleCall_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedExpression_0_0=ruleExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSpecificationCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedExpression",
                              		lv_ownedExpression_0_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:5921:6: ( (lv_exprString_1_0= RULE_UNQUOTED_STRING ) )
                    {
                    // InternalQVTimperative.g:5921:6: ( (lv_exprString_1_0= RULE_UNQUOTED_STRING ) )
                    // InternalQVTimperative.g:5922:1: (lv_exprString_1_0= RULE_UNQUOTED_STRING )
                    {
                    // InternalQVTimperative.g:5922:1: (lv_exprString_1_0= RULE_UNQUOTED_STRING )
                    // InternalQVTimperative.g:5923:3: lv_exprString_1_0= RULE_UNQUOTED_STRING
                    {
                    lv_exprString_1_0=(Token)match(input,RULE_UNQUOTED_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_exprString_1_0, grammarAccess.getSpecificationCSAccess().getExprStringUNQUOTED_STRINGTerminalRuleCall_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getSpecificationCSRule());
                      	        }
                             		setWithLastConsumed(
                             			current,
                             			"exprString",
                              		lv_exprString_1_0,
                              		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.UNQUOTED_STRING");

                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSpecificationCS"


    // $ANTLR start "entryRuleStructuredClassCS"
    // InternalQVTimperative.g:5947:1: entryRuleStructuredClassCS returns [EObject current=null] : iv_ruleStructuredClassCS= ruleStructuredClassCS EOF ;
    public final EObject entryRuleStructuredClassCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStructuredClassCS = null;


        try {
            // InternalQVTimperative.g:5948:2: (iv_ruleStructuredClassCS= ruleStructuredClassCS EOF )
            // InternalQVTimperative.g:5949:2: iv_ruleStructuredClassCS= ruleStructuredClassCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructuredClassCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStructuredClassCS=ruleStructuredClassCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructuredClassCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStructuredClassCS"


    // $ANTLR start "ruleStructuredClassCS"
    // InternalQVTimperative.g:5956:1: ruleStructuredClassCS returns [EObject current=null] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= 'extends' ( (lv_ownedSuperTypes_5_0= ruleTypedRefCS ) ) (otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) ) )* )? (otherlv_8= ':' ( (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_10= '{' ( (lv_isInterface_11_0= 'interface' ) )? otherlv_12= '}' )? ( (otherlv_13= '{' ( ( (lv_ownedOperations_14_0= ruleOperationCS ) ) | ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) ) )* otherlv_16= '}' ) | otherlv_17= ';' ) ) ;
    public final EObject ruleStructuredClassCS() throws RecognitionException {
        EObject current = null;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_instanceClassName_9_0=null;
        Token otherlv_10=null;
        Token lv_isInterface_11_0=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_ownedSignature_3_0 = null;

        EObject lv_ownedSuperTypes_5_0 = null;

        EObject lv_ownedSuperTypes_7_0 = null;

        EObject lv_ownedOperations_14_0 = null;

        EObject lv_ownedProperties_15_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:5959:28: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= 'extends' ( (lv_ownedSuperTypes_5_0= ruleTypedRefCS ) ) (otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) ) )* )? (otherlv_8= ':' ( (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_10= '{' ( (lv_isInterface_11_0= 'interface' ) )? otherlv_12= '}' )? ( (otherlv_13= '{' ( ( (lv_ownedOperations_14_0= ruleOperationCS ) ) | ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) ) )* otherlv_16= '}' ) | otherlv_17= ';' ) ) )
            // InternalQVTimperative.g:5960:1: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= 'extends' ( (lv_ownedSuperTypes_5_0= ruleTypedRefCS ) ) (otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) ) )* )? (otherlv_8= ':' ( (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_10= '{' ( (lv_isInterface_11_0= 'interface' ) )? otherlv_12= '}' )? ( (otherlv_13= '{' ( ( (lv_ownedOperations_14_0= ruleOperationCS ) ) | ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) ) )* otherlv_16= '}' ) | otherlv_17= ';' ) )
            {
            // InternalQVTimperative.g:5960:1: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= 'extends' ( (lv_ownedSuperTypes_5_0= ruleTypedRefCS ) ) (otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) ) )* )? (otherlv_8= ':' ( (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_10= '{' ( (lv_isInterface_11_0= 'interface' ) )? otherlv_12= '}' )? ( (otherlv_13= '{' ( ( (lv_ownedOperations_14_0= ruleOperationCS ) ) | ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) ) )* otherlv_16= '}' ) | otherlv_17= ';' ) )
            // InternalQVTimperative.g:5960:2: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= 'extends' ( (lv_ownedSuperTypes_5_0= ruleTypedRefCS ) ) (otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) ) )* )? (otherlv_8= ':' ( (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_10= '{' ( (lv_isInterface_11_0= 'interface' ) )? otherlv_12= '}' )? ( (otherlv_13= '{' ( ( (lv_ownedOperations_14_0= ruleOperationCS ) ) | ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) ) )* otherlv_16= '}' ) | otherlv_17= ';' )
            {
            // InternalQVTimperative.g:5960:2: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt152=2;
            int LA152_0 = input.LA(1);

            if ( (LA152_0==98) ) {
                alt152=1;
            }
            switch (alt152) {
                case 1 :
                    // InternalQVTimperative.g:5961:1: (lv_isAbstract_0_0= 'abstract' )
                    {
                    // InternalQVTimperative.g:5961:1: (lv_isAbstract_0_0= 'abstract' )
                    // InternalQVTimperative.g:5962:3: lv_isAbstract_0_0= 'abstract'
                    {
                    lv_isAbstract_0_0=(Token)match(input,98,FollowSets000.FOLLOW_107); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isAbstract_0_0, grammarAccess.getStructuredClassCSAccess().getIsAbstractAbstractKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getStructuredClassCSRule());
                      	        }
                             		setWithLastConsumed(current, "isAbstract", true, "abstract");

                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,99,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getStructuredClassCSAccess().getClassKeyword_1());

            }
            // InternalQVTimperative.g:5979:1: ( (lv_name_2_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:5980:1: (lv_name_2_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:5980:1: (lv_name_2_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:5981:3: lv_name_2_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getStructuredClassCSAccess().getNameUnrestrictedNameParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_108);
            lv_name_2_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getStructuredClassCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_2_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:5997:2: ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )?
            int alt153=2;
            int LA153_0 = input.LA(1);

            if ( (LA153_0==55) ) {
                alt153=1;
            }
            switch (alt153) {
                case 1 :
                    // InternalQVTimperative.g:5998:1: (lv_ownedSignature_3_0= ruleTemplateSignatureCS )
                    {
                    // InternalQVTimperative.g:5998:1: (lv_ownedSignature_3_0= ruleTemplateSignatureCS )
                    // InternalQVTimperative.g:5999:3: lv_ownedSignature_3_0= ruleTemplateSignatureCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getStructuredClassCSAccess().getOwnedSignatureTemplateSignatureCSParserRuleCall_3_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_109);
                    lv_ownedSignature_3_0=ruleTemplateSignatureCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getStructuredClassCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedSignature",
                              		lv_ownedSignature_3_0,
                              		"org.eclipse.ocl.xtext.base.Base.TemplateSignatureCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:6015:3: (otherlv_4= 'extends' ( (lv_ownedSuperTypes_5_0= ruleTypedRefCS ) ) (otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) ) )* )?
            int alt155=2;
            int LA155_0 = input.LA(1);

            if ( (LA155_0==100) ) {
                alt155=1;
            }
            switch (alt155) {
                case 1 :
                    // InternalQVTimperative.g:6015:5: otherlv_4= 'extends' ( (lv_ownedSuperTypes_5_0= ruleTypedRefCS ) ) (otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) ) )*
                    {
                    otherlv_4=(Token)match(input,100,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getStructuredClassCSAccess().getExtendsKeyword_4_0());

                    }
                    // InternalQVTimperative.g:6019:1: ( (lv_ownedSuperTypes_5_0= ruleTypedRefCS ) )
                    // InternalQVTimperative.g:6020:1: (lv_ownedSuperTypes_5_0= ruleTypedRefCS )
                    {
                    // InternalQVTimperative.g:6020:1: (lv_ownedSuperTypes_5_0= ruleTypedRefCS )
                    // InternalQVTimperative.g:6021:3: lv_ownedSuperTypes_5_0= ruleTypedRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getStructuredClassCSAccess().getOwnedSuperTypesTypedRefCSParserRuleCall_4_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_110);
                    lv_ownedSuperTypes_5_0=ruleTypedRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getStructuredClassCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedSuperTypes",
                              		lv_ownedSuperTypes_5_0,
                              		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.TypedRefCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:6037:2: (otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) ) )*
                    loop154:
                    do {
                        int alt154=2;
                        int LA154_0 = input.LA(1);

                        if ( (LA154_0==18) ) {
                            alt154=1;
                        }


                        switch (alt154) {
                    	case 1 :
                    	    // InternalQVTimperative.g:6037:4: otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) )
                    	    {
                    	    otherlv_6=(Token)match(input,18,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_6, grammarAccess.getStructuredClassCSAccess().getCommaKeyword_4_2_0());

                    	    }
                    	    // InternalQVTimperative.g:6041:1: ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) )
                    	    // InternalQVTimperative.g:6042:1: (lv_ownedSuperTypes_7_0= ruleTypedRefCS )
                    	    {
                    	    // InternalQVTimperative.g:6042:1: (lv_ownedSuperTypes_7_0= ruleTypedRefCS )
                    	    // InternalQVTimperative.g:6043:3: lv_ownedSuperTypes_7_0= ruleTypedRefCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getStructuredClassCSAccess().getOwnedSuperTypesTypedRefCSParserRuleCall_4_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_110);
                    	    lv_ownedSuperTypes_7_0=ruleTypedRefCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getStructuredClassCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedSuperTypes",
                    	              		lv_ownedSuperTypes_7_0,
                    	              		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.TypedRefCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop154;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalQVTimperative.g:6059:6: (otherlv_8= ':' ( (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING ) ) )?
            int alt156=2;
            int LA156_0 = input.LA(1);

            if ( (LA156_0==24) ) {
                alt156=1;
            }
            switch (alt156) {
                case 1 :
                    // InternalQVTimperative.g:6059:8: otherlv_8= ':' ( (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING ) )
                    {
                    otherlv_8=(Token)match(input,24,FollowSets000.FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getStructuredClassCSAccess().getColonKeyword_5_0());

                    }
                    // InternalQVTimperative.g:6063:1: ( (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING ) )
                    // InternalQVTimperative.g:6064:1: (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING )
                    {
                    // InternalQVTimperative.g:6064:1: (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING )
                    // InternalQVTimperative.g:6065:3: lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING
                    {
                    lv_instanceClassName_9_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_instanceClassName_9_0, grammarAccess.getStructuredClassCSAccess().getInstanceClassNameSINGLE_QUOTED_STRINGTerminalRuleCall_5_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getStructuredClassCSRule());
                      	        }
                             		setWithLastConsumed(
                             			current,
                             			"instanceClassName",
                              		lv_instanceClassName_9_0,
                              		"org.eclipse.ocl.xtext.base.Base.SINGLE_QUOTED_STRING");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:6081:4: (otherlv_10= '{' ( (lv_isInterface_11_0= 'interface' ) )? otherlv_12= '}' )?
            int alt158=2;
            int LA158_0 = input.LA(1);

            if ( (LA158_0==35) ) {
                int LA158_1 = input.LA(2);

                if ( (LA158_1==101) ) {
                    alt158=1;
                }
                else if ( (LA158_1==36) ) {
                    int LA158_4 = input.LA(3);

                    if ( (LA158_4==21||LA158_4==35) ) {
                        alt158=1;
                    }
                }
            }
            switch (alt158) {
                case 1 :
                    // InternalQVTimperative.g:6081:6: otherlv_10= '{' ( (lv_isInterface_11_0= 'interface' ) )? otherlv_12= '}'
                    {
                    otherlv_10=(Token)match(input,35,FollowSets000.FOLLOW_111); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getStructuredClassCSAccess().getLeftCurlyBracketKeyword_6_0());

                    }
                    // InternalQVTimperative.g:6085:1: ( (lv_isInterface_11_0= 'interface' ) )?
                    int alt157=2;
                    int LA157_0 = input.LA(1);

                    if ( (LA157_0==101) ) {
                        alt157=1;
                    }
                    switch (alt157) {
                        case 1 :
                            // InternalQVTimperative.g:6086:1: (lv_isInterface_11_0= 'interface' )
                            {
                            // InternalQVTimperative.g:6086:1: (lv_isInterface_11_0= 'interface' )
                            // InternalQVTimperative.g:6087:3: lv_isInterface_11_0= 'interface'
                            {
                            lv_isInterface_11_0=(Token)match(input,101,FollowSets000.FOLLOW_60); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_isInterface_11_0, grammarAccess.getStructuredClassCSAccess().getIsInterfaceInterfaceKeyword_6_1_0());

                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getStructuredClassCSRule());
                              	        }
                                     		setWithLastConsumed(current, "isInterface", true, "interface");

                            }

                            }


                            }
                            break;

                    }

                    otherlv_12=(Token)match(input,36,FollowSets000.FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getStructuredClassCSAccess().getRightCurlyBracketKeyword_6_2());

                    }

                    }
                    break;

            }

            // InternalQVTimperative.g:6104:3: ( (otherlv_13= '{' ( ( (lv_ownedOperations_14_0= ruleOperationCS ) ) | ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) ) )* otherlv_16= '}' ) | otherlv_17= ';' )
            int alt160=2;
            int LA160_0 = input.LA(1);

            if ( (LA160_0==35) ) {
                alt160=1;
            }
            else if ( (LA160_0==21) ) {
                alt160=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 160, 0, input);

                throw nvae;
            }
            switch (alt160) {
                case 1 :
                    // InternalQVTimperative.g:6104:4: (otherlv_13= '{' ( ( (lv_ownedOperations_14_0= ruleOperationCS ) ) | ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) ) )* otherlv_16= '}' )
                    {
                    // InternalQVTimperative.g:6104:4: (otherlv_13= '{' ( ( (lv_ownedOperations_14_0= ruleOperationCS ) ) | ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) ) )* otherlv_16= '}' )
                    // InternalQVTimperative.g:6104:6: otherlv_13= '{' ( ( (lv_ownedOperations_14_0= ruleOperationCS ) ) | ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) ) )* otherlv_16= '}'
                    {
                    otherlv_13=(Token)match(input,35,FollowSets000.FOLLOW_112); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getStructuredClassCSAccess().getLeftCurlyBracketKeyword_7_0_0());

                    }
                    // InternalQVTimperative.g:6108:1: ( ( (lv_ownedOperations_14_0= ruleOperationCS ) ) | ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) ) )*
                    loop159:
                    do {
                        int alt159=3;
                        switch ( input.LA(1) ) {
                        case 63:
                            {
                            switch ( input.LA(2) ) {
                            case 64:
                                {
                                int LA159_6 = input.LA(3);

                                if ( (LA159_6==65||LA159_6==92) ) {
                                    alt159=2;
                                }
                                else if ( (LA159_6==89) ) {
                                    alt159=1;
                                }


                                }
                                break;
                            case 65:
                            case 92:
                                {
                                alt159=2;
                                }
                                break;
                            case 89:
                                {
                                alt159=1;
                                }
                                break;

                            }

                            }
                            break;
                        case 64:
                            {
                            switch ( input.LA(2) ) {
                            case 63:
                                {
                                int LA159_7 = input.LA(3);

                                if ( (LA159_7==65||LA159_7==92) ) {
                                    alt159=2;
                                }
                                else if ( (LA159_7==89) ) {
                                    alt159=1;
                                }


                                }
                                break;
                            case 65:
                            case 92:
                                {
                                alt159=2;
                                }
                                break;
                            case 89:
                                {
                                alt159=1;
                                }
                                break;

                            }

                            }
                            break;
                        case 89:
                            {
                            alt159=1;
                            }
                            break;
                        case 65:
                        case 92:
                            {
                            alt159=2;
                            }
                            break;

                        }

                        switch (alt159) {
                    	case 1 :
                    	    // InternalQVTimperative.g:6108:2: ( (lv_ownedOperations_14_0= ruleOperationCS ) )
                    	    {
                    	    // InternalQVTimperative.g:6108:2: ( (lv_ownedOperations_14_0= ruleOperationCS ) )
                    	    // InternalQVTimperative.g:6109:1: (lv_ownedOperations_14_0= ruleOperationCS )
                    	    {
                    	    // InternalQVTimperative.g:6109:1: (lv_ownedOperations_14_0= ruleOperationCS )
                    	    // InternalQVTimperative.g:6110:3: lv_ownedOperations_14_0= ruleOperationCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getStructuredClassCSAccess().getOwnedOperationsOperationCSParserRuleCall_7_0_1_0_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_112);
                    	    lv_ownedOperations_14_0=ruleOperationCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getStructuredClassCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedOperations",
                    	              		lv_ownedOperations_14_0,
                    	              		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.OperationCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQVTimperative.g:6127:6: ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) )
                    	    {
                    	    // InternalQVTimperative.g:6127:6: ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) )
                    	    // InternalQVTimperative.g:6128:1: (lv_ownedProperties_15_0= ruleStructuralFeatureCS )
                    	    {
                    	    // InternalQVTimperative.g:6128:1: (lv_ownedProperties_15_0= ruleStructuralFeatureCS )
                    	    // InternalQVTimperative.g:6129:3: lv_ownedProperties_15_0= ruleStructuralFeatureCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getStructuredClassCSAccess().getOwnedPropertiesStructuralFeatureCSParserRuleCall_7_0_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_112);
                    	    lv_ownedProperties_15_0=ruleStructuralFeatureCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getStructuredClassCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedProperties",
                    	              		lv_ownedProperties_15_0,
                    	              		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.StructuralFeatureCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop159;
                        }
                    } while (true);

                    otherlv_16=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_16, grammarAccess.getStructuredClassCSAccess().getRightCurlyBracketKeyword_7_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:6150:7: otherlv_17= ';'
                    {
                    otherlv_17=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_17, grammarAccess.getStructuredClassCSAccess().getSemicolonKeyword_7_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructuredClassCS"


    // $ANTLR start "entryRuleTypedMultiplicityRefCS"
    // InternalQVTimperative.g:6162:1: entryRuleTypedMultiplicityRefCS returns [EObject current=null] : iv_ruleTypedMultiplicityRefCS= ruleTypedMultiplicityRefCS EOF ;
    public final EObject entryRuleTypedMultiplicityRefCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypedMultiplicityRefCS = null;


        try {
            // InternalQVTimperative.g:6163:2: (iv_ruleTypedMultiplicityRefCS= ruleTypedMultiplicityRefCS EOF )
            // InternalQVTimperative.g:6164:2: iv_ruleTypedMultiplicityRefCS= ruleTypedMultiplicityRefCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypedMultiplicityRefCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypedMultiplicityRefCS=ruleTypedMultiplicityRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypedMultiplicityRefCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypedMultiplicityRefCS"


    // $ANTLR start "ruleTypedMultiplicityRefCS"
    // InternalQVTimperative.g:6171:1: ruleTypedMultiplicityRefCS returns [EObject current=null] : (this_TypedRefCS_0= ruleTypedRefCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? ) ;
    public final EObject ruleTypedMultiplicityRefCS() throws RecognitionException {
        EObject current = null;

        EObject this_TypedRefCS_0 = null;

        EObject lv_ownedMultiplicity_1_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:6174:28: ( (this_TypedRefCS_0= ruleTypedRefCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? ) )
            // InternalQVTimperative.g:6175:1: (this_TypedRefCS_0= ruleTypedRefCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? )
            {
            // InternalQVTimperative.g:6175:1: (this_TypedRefCS_0= ruleTypedRefCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? )
            // InternalQVTimperative.g:6176:2: this_TypedRefCS_0= ruleTypedRefCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )?
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getTypedMultiplicityRefCSAccess().getTypedRefCSParserRuleCall_0());

            }
            pushFollow(FollowSets000.FOLLOW_113);
            this_TypedRefCS_0=ruleTypedRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_TypedRefCS_0;
                      afterParserOrEnumRuleCall();

            }
            // InternalQVTimperative.g:6187:1: ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )?
            int alt161=2;
            int LA161_0 = input.LA(1);

            if ( (LA161_0==142) ) {
                alt161=1;
            }
            switch (alt161) {
                case 1 :
                    // InternalQVTimperative.g:6188:1: (lv_ownedMultiplicity_1_0= ruleMultiplicityCS )
                    {
                    // InternalQVTimperative.g:6188:1: (lv_ownedMultiplicity_1_0= ruleMultiplicityCS )
                    // InternalQVTimperative.g:6189:3: lv_ownedMultiplicity_1_0= ruleMultiplicityCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTypedMultiplicityRefCSAccess().getOwnedMultiplicityMultiplicityCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedMultiplicity_1_0=ruleMultiplicityCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypedMultiplicityRefCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedMultiplicity",
                              		lv_ownedMultiplicity_1_0,
                              		"org.eclipse.ocl.xtext.base.Base.MultiplicityCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypedMultiplicityRefCS"


    // $ANTLR start "entryRuleTypedRefCS"
    // InternalQVTimperative.g:6213:1: entryRuleTypedRefCS returns [EObject current=null] : iv_ruleTypedRefCS= ruleTypedRefCS EOF ;
    public final EObject entryRuleTypedRefCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypedRefCS = null;


        try {
            // InternalQVTimperative.g:6214:2: (iv_ruleTypedRefCS= ruleTypedRefCS EOF )
            // InternalQVTimperative.g:6215:2: iv_ruleTypedRefCS= ruleTypedRefCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypedRefCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypedRefCS=ruleTypedRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypedRefCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypedRefCS"


    // $ANTLR start "ruleTypedRefCS"
    // InternalQVTimperative.g:6222:1: ruleTypedRefCS returns [EObject current=null] : (this_TypeLiteralCS_0= ruleTypeLiteralCS | this_TypedTypeRefCS_1= ruleTypedTypeRefCS ) ;
    public final EObject ruleTypedRefCS() throws RecognitionException {
        EObject current = null;

        EObject this_TypeLiteralCS_0 = null;

        EObject this_TypedTypeRefCS_1 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:6225:28: ( (this_TypeLiteralCS_0= ruleTypeLiteralCS | this_TypedTypeRefCS_1= ruleTypedTypeRefCS ) )
            // InternalQVTimperative.g:6226:1: (this_TypeLiteralCS_0= ruleTypeLiteralCS | this_TypedTypeRefCS_1= ruleTypedTypeRefCS )
            {
            // InternalQVTimperative.g:6226:1: (this_TypeLiteralCS_0= ruleTypeLiteralCS | this_TypedTypeRefCS_1= ruleTypedTypeRefCS )
            int alt162=2;
            int LA162_0 = input.LA(1);

            if ( ((LA162_0>=118 && LA162_0<=132)) ) {
                alt162=1;
            }
            else if ( ((LA162_0>=RULE_SIMPLE_ID && LA162_0<=RULE_ESCAPED_ID)||LA162_0==17||LA162_0==19||(LA162_0>=22 && LA162_0<=23)||(LA162_0>=25 && LA162_0<=26)||(LA162_0>=29 && LA162_0<=33)||LA162_0==39||(LA162_0>=43 && LA162_0<=51)||(LA162_0>=53 && LA162_0<=54)||(LA162_0>=57 && LA162_0<=59)||(LA162_0>=61 && LA162_0<=66)||LA162_0==68||LA162_0==70||LA162_0==72||LA162_0==75||LA162_0==77||LA162_0==79||(LA162_0>=81 && LA162_0<=85)||(LA162_0>=87 && LA162_0<=92)||LA162_0==94||LA162_0==96||(LA162_0>=98 && LA162_0<=101)) ) {
                alt162=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 162, 0, input);

                throw nvae;
            }
            switch (alt162) {
                case 1 :
                    // InternalQVTimperative.g:6227:2: this_TypeLiteralCS_0= ruleTypeLiteralCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypedRefCSAccess().getTypeLiteralCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypeLiteralCS_0=ruleTypeLiteralCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeLiteralCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:6240:2: this_TypedTypeRefCS_1= ruleTypedTypeRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypedRefCSAccess().getTypedTypeRefCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypedTypeRefCS_1=ruleTypedTypeRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypedTypeRefCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypedRefCS"


    // $ANTLR start "entryRuleStructuralFeatureCS"
    // InternalQVTimperative.g:6259:1: entryRuleStructuralFeatureCS returns [EObject current=null] : iv_ruleStructuralFeatureCS= ruleStructuralFeatureCS EOF ;
    public final EObject entryRuleStructuralFeatureCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStructuralFeatureCS = null;


        try {
            // InternalQVTimperative.g:6260:2: (iv_ruleStructuralFeatureCS= ruleStructuralFeatureCS EOF )
            // InternalQVTimperative.g:6261:2: iv_ruleStructuralFeatureCS= ruleStructuralFeatureCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructuralFeatureCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStructuralFeatureCS=ruleStructuralFeatureCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructuralFeatureCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStructuralFeatureCS"


    // $ANTLR start "ruleStructuralFeatureCS"
    // InternalQVTimperative.g:6268:1: ruleStructuralFeatureCS returns [EObject current=null] : (this_AttributeCS_0= ruleAttributeCS | this_ReferenceCS_1= ruleReferenceCS ) ;
    public final EObject ruleStructuralFeatureCS() throws RecognitionException {
        EObject current = null;

        EObject this_AttributeCS_0 = null;

        EObject this_ReferenceCS_1 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:6271:28: ( (this_AttributeCS_0= ruleAttributeCS | this_ReferenceCS_1= ruleReferenceCS ) )
            // InternalQVTimperative.g:6272:1: (this_AttributeCS_0= ruleAttributeCS | this_ReferenceCS_1= ruleReferenceCS )
            {
            // InternalQVTimperative.g:6272:1: (this_AttributeCS_0= ruleAttributeCS | this_ReferenceCS_1= ruleReferenceCS )
            int alt163=2;
            switch ( input.LA(1) ) {
            case 63:
                {
                switch ( input.LA(2) ) {
                case 64:
                    {
                    int LA163_5 = input.LA(3);

                    if ( (LA163_5==65) ) {
                        alt163=1;
                    }
                    else if ( (LA163_5==92) ) {
                        alt163=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 163, 5, input);

                        throw nvae;
                    }
                    }
                    break;
                case 92:
                    {
                    alt163=2;
                    }
                    break;
                case 65:
                    {
                    alt163=1;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 163, 1, input);

                    throw nvae;
                }

                }
                break;
            case 64:
                {
                switch ( input.LA(2) ) {
                case 63:
                    {
                    int LA163_6 = input.LA(3);

                    if ( (LA163_6==92) ) {
                        alt163=2;
                    }
                    else if ( (LA163_6==65) ) {
                        alt163=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 163, 6, input);

                        throw nvae;
                    }
                    }
                    break;
                case 92:
                    {
                    alt163=2;
                    }
                    break;
                case 65:
                    {
                    alt163=1;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 163, 2, input);

                    throw nvae;
                }

                }
                break;
            case 65:
                {
                alt163=1;
                }
                break;
            case 92:
                {
                alt163=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 163, 0, input);

                throw nvae;
            }

            switch (alt163) {
                case 1 :
                    // InternalQVTimperative.g:6273:2: this_AttributeCS_0= ruleAttributeCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getStructuralFeatureCSAccess().getAttributeCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AttributeCS_0=ruleAttributeCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AttributeCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:6286:2: this_ReferenceCS_1= ruleReferenceCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getStructuralFeatureCSAccess().getReferenceCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceCS_1=ruleReferenceCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ReferenceCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructuralFeatureCS"


    // $ANTLR start "entryRuleEnumerationLiteralName"
    // InternalQVTimperative.g:6305:1: entryRuleEnumerationLiteralName returns [String current=null] : iv_ruleEnumerationLiteralName= ruleEnumerationLiteralName EOF ;
    public final String entryRuleEnumerationLiteralName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEnumerationLiteralName = null;


        try {
            // InternalQVTimperative.g:6306:2: (iv_ruleEnumerationLiteralName= ruleEnumerationLiteralName EOF )
            // InternalQVTimperative.g:6307:2: iv_ruleEnumerationLiteralName= ruleEnumerationLiteralName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumerationLiteralNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEnumerationLiteralName=ruleEnumerationLiteralName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumerationLiteralName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumerationLiteralName"


    // $ANTLR start "ruleEnumerationLiteralName"
    // InternalQVTimperative.g:6314:1: ruleEnumerationLiteralName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_EssentialOCLUnrestrictedName_0= ruleEssentialOCLUnrestrictedName ;
    public final AntlrDatatypeRuleToken ruleEnumerationLiteralName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_EssentialOCLUnrestrictedName_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:6317:28: (this_EssentialOCLUnrestrictedName_0= ruleEssentialOCLUnrestrictedName )
            // InternalQVTimperative.g:6319:5: this_EssentialOCLUnrestrictedName_0= ruleEssentialOCLUnrestrictedName
            {
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getEnumerationLiteralNameAccess().getEssentialOCLUnrestrictedNameParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_EssentialOCLUnrestrictedName_0=ruleEssentialOCLUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_EssentialOCLUnrestrictedName_0);

            }
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumerationLiteralName"


    // $ANTLR start "entryRuleQVTbaseUnrestrictedName"
    // InternalQVTimperative.g:6337:1: entryRuleQVTbaseUnrestrictedName returns [String current=null] : iv_ruleQVTbaseUnrestrictedName= ruleQVTbaseUnrestrictedName EOF ;
    public final String entryRuleQVTbaseUnrestrictedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQVTbaseUnrestrictedName = null;


        try {
            // InternalQVTimperative.g:6338:2: (iv_ruleQVTbaseUnrestrictedName= ruleQVTbaseUnrestrictedName EOF )
            // InternalQVTimperative.g:6339:2: iv_ruleQVTbaseUnrestrictedName= ruleQVTbaseUnrestrictedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQVTbaseUnrestrictedNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQVTbaseUnrestrictedName=ruleQVTbaseUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQVTbaseUnrestrictedName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQVTbaseUnrestrictedName"


    // $ANTLR start "ruleQVTbaseUnrestrictedName"
    // InternalQVTimperative.g:6346:1: ruleQVTbaseUnrestrictedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'abstract' | kw= 'attribute' | kw= 'body' | kw= 'class' | kw= 'composes' | kw= 'datatype' | kw= 'definition' | kw= 'derived' | kw= 'derivation' | kw= 'enum' | kw= 'extends' | kw= 'id' | kw= 'initial' | kw= 'interface' | kw= 'literal' | kw= 'operation' | kw= 'ordered' | kw= 'primitive' | kw= 'property' | kw= 'readonly' | kw= 'resolve' | kw= 'serializable' | kw= 'static' | kw= 'throws' | kw= 'transient' | kw= 'unique' | kw= 'unsettable' | kw= 'volatile' ) ;
    public final AntlrDatatypeRuleToken ruleQVTbaseUnrestrictedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule();

        try {
            // InternalQVTimperative.g:6349:28: ( (kw= 'abstract' | kw= 'attribute' | kw= 'body' | kw= 'class' | kw= 'composes' | kw= 'datatype' | kw= 'definition' | kw= 'derived' | kw= 'derivation' | kw= 'enum' | kw= 'extends' | kw= 'id' | kw= 'initial' | kw= 'interface' | kw= 'literal' | kw= 'operation' | kw= 'ordered' | kw= 'primitive' | kw= 'property' | kw= 'readonly' | kw= 'resolve' | kw= 'serializable' | kw= 'static' | kw= 'throws' | kw= 'transient' | kw= 'unique' | kw= 'unsettable' | kw= 'volatile' ) )
            // InternalQVTimperative.g:6350:1: (kw= 'abstract' | kw= 'attribute' | kw= 'body' | kw= 'class' | kw= 'composes' | kw= 'datatype' | kw= 'definition' | kw= 'derived' | kw= 'derivation' | kw= 'enum' | kw= 'extends' | kw= 'id' | kw= 'initial' | kw= 'interface' | kw= 'literal' | kw= 'operation' | kw= 'ordered' | kw= 'primitive' | kw= 'property' | kw= 'readonly' | kw= 'resolve' | kw= 'serializable' | kw= 'static' | kw= 'throws' | kw= 'transient' | kw= 'unique' | kw= 'unsettable' | kw= 'volatile' )
            {
            // InternalQVTimperative.g:6350:1: (kw= 'abstract' | kw= 'attribute' | kw= 'body' | kw= 'class' | kw= 'composes' | kw= 'datatype' | kw= 'definition' | kw= 'derived' | kw= 'derivation' | kw= 'enum' | kw= 'extends' | kw= 'id' | kw= 'initial' | kw= 'interface' | kw= 'literal' | kw= 'operation' | kw= 'ordered' | kw= 'primitive' | kw= 'property' | kw= 'readonly' | kw= 'resolve' | kw= 'serializable' | kw= 'static' | kw= 'throws' | kw= 'transient' | kw= 'unique' | kw= 'unsettable' | kw= 'volatile' )
            int alt164=28;
            switch ( input.LA(1) ) {
            case 98:
                {
                alt164=1;
                }
                break;
            case 65:
                {
                alt164=2;
                }
                break;
            case 91:
                {
                alt164=3;
                }
                break;
            case 99:
                {
                alt164=4;
                }
                break;
            case 94:
                {
                alt164=5;
                }
                break;
            case 84:
                {
                alt164=6;
                }
                break;
            case 64:
                {
                alt164=7;
                }
                break;
            case 66:
                {
                alt164=8;
                }
                break;
            case 82:
                {
                alt164=9;
                }
                break;
            case 87:
                {
                alt164=10;
                }
                break;
            case 100:
                {
                alt164=11;
                }
                break;
            case 68:
                {
                alt164=12;
                }
                break;
            case 81:
                {
                alt164=13;
                }
                break;
            case 101:
                {
                alt164=14;
                }
                break;
            case 88:
                {
                alt164=15;
                }
                break;
            case 89:
                {
                alt164=16;
                }
                break;
            case 70:
                {
                alt164=17;
                }
                break;
            case 83:
                {
                alt164=18;
                }
                break;
            case 92:
                {
                alt164=19;
                }
                break;
            case 72:
                {
                alt164=20;
                }
                break;
            case 96:
                {
                alt164=21;
                }
                break;
            case 85:
                {
                alt164=22;
                }
                break;
            case 63:
                {
                alt164=23;
                }
                break;
            case 90:
                {
                alt164=24;
                }
                break;
            case 53:
                {
                alt164=25;
                }
                break;
            case 75:
                {
                alt164=26;
                }
                break;
            case 77:
                {
                alt164=27;
                }
                break;
            case 79:
                {
                alt164=28;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 164, 0, input);

                throw nvae;
            }

            switch (alt164) {
                case 1 :
                    // InternalQVTimperative.g:6351:2: kw= 'abstract'
                    {
                    kw=(Token)match(input,98,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getAbstractKeyword_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:6358:2: kw= 'attribute'
                    {
                    kw=(Token)match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getAttributeKeyword_1());

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:6365:2: kw= 'body'
                    {
                    kw=(Token)match(input,91,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getBodyKeyword_2());

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:6372:2: kw= 'class'
                    {
                    kw=(Token)match(input,99,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getClassKeyword_3());

                    }

                    }
                    break;
                case 5 :
                    // InternalQVTimperative.g:6379:2: kw= 'composes'
                    {
                    kw=(Token)match(input,94,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getComposesKeyword_4());

                    }

                    }
                    break;
                case 6 :
                    // InternalQVTimperative.g:6386:2: kw= 'datatype'
                    {
                    kw=(Token)match(input,84,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getDatatypeKeyword_5());

                    }

                    }
                    break;
                case 7 :
                    // InternalQVTimperative.g:6393:2: kw= 'definition'
                    {
                    kw=(Token)match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getDefinitionKeyword_6());

                    }

                    }
                    break;
                case 8 :
                    // InternalQVTimperative.g:6400:2: kw= 'derived'
                    {
                    kw=(Token)match(input,66,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getDerivedKeyword_7());

                    }

                    }
                    break;
                case 9 :
                    // InternalQVTimperative.g:6407:2: kw= 'derivation'
                    {
                    kw=(Token)match(input,82,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getDerivationKeyword_8());

                    }

                    }
                    break;
                case 10 :
                    // InternalQVTimperative.g:6414:2: kw= 'enum'
                    {
                    kw=(Token)match(input,87,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getEnumKeyword_9());

                    }

                    }
                    break;
                case 11 :
                    // InternalQVTimperative.g:6421:2: kw= 'extends'
                    {
                    kw=(Token)match(input,100,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getExtendsKeyword_10());

                    }

                    }
                    break;
                case 12 :
                    // InternalQVTimperative.g:6428:2: kw= 'id'
                    {
                    kw=(Token)match(input,68,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getIdKeyword_11());

                    }

                    }
                    break;
                case 13 :
                    // InternalQVTimperative.g:6435:2: kw= 'initial'
                    {
                    kw=(Token)match(input,81,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getInitialKeyword_12());

                    }

                    }
                    break;
                case 14 :
                    // InternalQVTimperative.g:6442:2: kw= 'interface'
                    {
                    kw=(Token)match(input,101,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getInterfaceKeyword_13());

                    }

                    }
                    break;
                case 15 :
                    // InternalQVTimperative.g:6449:2: kw= 'literal'
                    {
                    kw=(Token)match(input,88,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getLiteralKeyword_14());

                    }

                    }
                    break;
                case 16 :
                    // InternalQVTimperative.g:6456:2: kw= 'operation'
                    {
                    kw=(Token)match(input,89,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getOperationKeyword_15());

                    }

                    }
                    break;
                case 17 :
                    // InternalQVTimperative.g:6463:2: kw= 'ordered'
                    {
                    kw=(Token)match(input,70,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getOrderedKeyword_16());

                    }

                    }
                    break;
                case 18 :
                    // InternalQVTimperative.g:6470:2: kw= 'primitive'
                    {
                    kw=(Token)match(input,83,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getPrimitiveKeyword_17());

                    }

                    }
                    break;
                case 19 :
                    // InternalQVTimperative.g:6477:2: kw= 'property'
                    {
                    kw=(Token)match(input,92,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getPropertyKeyword_18());

                    }

                    }
                    break;
                case 20 :
                    // InternalQVTimperative.g:6484:2: kw= 'readonly'
                    {
                    kw=(Token)match(input,72,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getReadonlyKeyword_19());

                    }

                    }
                    break;
                case 21 :
                    // InternalQVTimperative.g:6491:2: kw= 'resolve'
                    {
                    kw=(Token)match(input,96,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getResolveKeyword_20());

                    }

                    }
                    break;
                case 22 :
                    // InternalQVTimperative.g:6498:2: kw= 'serializable'
                    {
                    kw=(Token)match(input,85,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getSerializableKeyword_21());

                    }

                    }
                    break;
                case 23 :
                    // InternalQVTimperative.g:6505:2: kw= 'static'
                    {
                    kw=(Token)match(input,63,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getStaticKeyword_22());

                    }

                    }
                    break;
                case 24 :
                    // InternalQVTimperative.g:6512:2: kw= 'throws'
                    {
                    kw=(Token)match(input,90,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getThrowsKeyword_23());

                    }

                    }
                    break;
                case 25 :
                    // InternalQVTimperative.g:6519:2: kw= 'transient'
                    {
                    kw=(Token)match(input,53,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getTransientKeyword_24());

                    }

                    }
                    break;
                case 26 :
                    // InternalQVTimperative.g:6526:2: kw= 'unique'
                    {
                    kw=(Token)match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getUniqueKeyword_25());

                    }

                    }
                    break;
                case 27 :
                    // InternalQVTimperative.g:6533:2: kw= 'unsettable'
                    {
                    kw=(Token)match(input,77,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getUnsettableKeyword_26());

                    }

                    }
                    break;
                case 28 :
                    // InternalQVTimperative.g:6540:2: kw= 'volatile'
                    {
                    kw=(Token)match(input,79,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getVolatileKeyword_27());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQVTbaseUnrestrictedName"


    // $ANTLR start "entryRuleSIGNED"
    // InternalQVTimperative.g:6553:1: entryRuleSIGNED returns [String current=null] : iv_ruleSIGNED= ruleSIGNED EOF ;
    public final String entryRuleSIGNED() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleSIGNED = null;


        try {
            // InternalQVTimperative.g:6554:2: (iv_ruleSIGNED= ruleSIGNED EOF )
            // InternalQVTimperative.g:6555:2: iv_ruleSIGNED= ruleSIGNED EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSIGNEDRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSIGNED=ruleSIGNED();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSIGNED.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSIGNED"


    // $ANTLR start "ruleSIGNED"
    // InternalQVTimperative.g:6562:1: ruleSIGNED returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '-' )? this_INT_1= RULE_INT ) ;
    public final AntlrDatatypeRuleToken ruleSIGNED() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_1=null;

         enterRule();

        try {
            // InternalQVTimperative.g:6565:28: ( ( (kw= '-' )? this_INT_1= RULE_INT ) )
            // InternalQVTimperative.g:6566:1: ( (kw= '-' )? this_INT_1= RULE_INT )
            {
            // InternalQVTimperative.g:6566:1: ( (kw= '-' )? this_INT_1= RULE_INT )
            // InternalQVTimperative.g:6566:2: (kw= '-' )? this_INT_1= RULE_INT
            {
            // InternalQVTimperative.g:6566:2: (kw= '-' )?
            int alt165=2;
            int LA165_0 = input.LA(1);

            if ( (LA165_0==102) ) {
                alt165=1;
            }
            switch (alt165) {
                case 1 :
                    // InternalQVTimperative.g:6567:2: kw= '-'
                    {
                    kw=(Token)match(input,102,FollowSets000.FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getSIGNEDAccess().getHyphenMinusKeyword_0());

                    }

                    }
                    break;

            }

            this_INT_1=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_INT_1);

            }
            if ( state.backtracking==0 ) {

                  newLeafNode(this_INT_1, grammarAccess.getSIGNEDAccess().getINTTerminalRuleCall_1());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSIGNED"


    // $ANTLR start "entryRuleEssentialOCLUnaryOperatorName"
    // InternalQVTimperative.g:6591:1: entryRuleEssentialOCLUnaryOperatorName returns [String current=null] : iv_ruleEssentialOCLUnaryOperatorName= ruleEssentialOCLUnaryOperatorName EOF ;
    public final String entryRuleEssentialOCLUnaryOperatorName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEssentialOCLUnaryOperatorName = null;


        try {
            // InternalQVTimperative.g:6592:2: (iv_ruleEssentialOCLUnaryOperatorName= ruleEssentialOCLUnaryOperatorName EOF )
            // InternalQVTimperative.g:6593:2: iv_ruleEssentialOCLUnaryOperatorName= ruleEssentialOCLUnaryOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEssentialOCLUnaryOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEssentialOCLUnaryOperatorName=ruleEssentialOCLUnaryOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEssentialOCLUnaryOperatorName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEssentialOCLUnaryOperatorName"


    // $ANTLR start "ruleEssentialOCLUnaryOperatorName"
    // InternalQVTimperative.g:6600:1: ruleEssentialOCLUnaryOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '-' | kw= 'not' ) ;
    public final AntlrDatatypeRuleToken ruleEssentialOCLUnaryOperatorName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule();

        try {
            // InternalQVTimperative.g:6603:28: ( (kw= '-' | kw= 'not' ) )
            // InternalQVTimperative.g:6604:1: (kw= '-' | kw= 'not' )
            {
            // InternalQVTimperative.g:6604:1: (kw= '-' | kw= 'not' )
            int alt166=2;
            int LA166_0 = input.LA(1);

            if ( (LA166_0==102) ) {
                alt166=1;
            }
            else if ( (LA166_0==103) ) {
                alt166=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 166, 0, input);

                throw nvae;
            }
            switch (alt166) {
                case 1 :
                    // InternalQVTimperative.g:6605:2: kw= '-'
                    {
                    kw=(Token)match(input,102,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLUnaryOperatorNameAccess().getHyphenMinusKeyword_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:6612:2: kw= 'not'
                    {
                    kw=(Token)match(input,103,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLUnaryOperatorNameAccess().getNotKeyword_1());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEssentialOCLUnaryOperatorName"


    // $ANTLR start "entryRuleEssentialOCLInfixOperatorName"
    // InternalQVTimperative.g:6625:1: entryRuleEssentialOCLInfixOperatorName returns [String current=null] : iv_ruleEssentialOCLInfixOperatorName= ruleEssentialOCLInfixOperatorName EOF ;
    public final String entryRuleEssentialOCLInfixOperatorName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEssentialOCLInfixOperatorName = null;


        try {
            // InternalQVTimperative.g:6626:2: (iv_ruleEssentialOCLInfixOperatorName= ruleEssentialOCLInfixOperatorName EOF )
            // InternalQVTimperative.g:6627:2: iv_ruleEssentialOCLInfixOperatorName= ruleEssentialOCLInfixOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEssentialOCLInfixOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEssentialOCLInfixOperatorName=ruleEssentialOCLInfixOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEssentialOCLInfixOperatorName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEssentialOCLInfixOperatorName"


    // $ANTLR start "ruleEssentialOCLInfixOperatorName"
    // InternalQVTimperative.g:6634:1: ruleEssentialOCLInfixOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '*' | kw= '/' | kw= '+' | kw= '-' | kw= '>' | kw= '<' | kw= '>=' | kw= '<=' | kw= '=' | kw= '<>' | kw= 'and' | kw= 'or' | kw= 'xor' | kw= 'implies' ) ;
    public final AntlrDatatypeRuleToken ruleEssentialOCLInfixOperatorName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule();

        try {
            // InternalQVTimperative.g:6637:28: ( (kw= '*' | kw= '/' | kw= '+' | kw= '-' | kw= '>' | kw= '<' | kw= '>=' | kw= '<=' | kw= '=' | kw= '<>' | kw= 'and' | kw= 'or' | kw= 'xor' | kw= 'implies' ) )
            // InternalQVTimperative.g:6638:1: (kw= '*' | kw= '/' | kw= '+' | kw= '-' | kw= '>' | kw= '<' | kw= '>=' | kw= '<=' | kw= '=' | kw= '<>' | kw= 'and' | kw= 'or' | kw= 'xor' | kw= 'implies' )
            {
            // InternalQVTimperative.g:6638:1: (kw= '*' | kw= '/' | kw= '+' | kw= '-' | kw= '>' | kw= '<' | kw= '>=' | kw= '<=' | kw= '=' | kw= '<>' | kw= 'and' | kw= 'or' | kw= 'xor' | kw= 'implies' )
            int alt167=14;
            switch ( input.LA(1) ) {
            case 42:
                {
                alt167=1;
                }
                break;
            case 104:
                {
                alt167=2;
                }
                break;
            case 105:
                {
                alt167=3;
                }
                break;
            case 102:
                {
                alt167=4;
                }
                break;
            case 106:
                {
                alt167=5;
                }
                break;
            case 107:
                {
                alt167=6;
                }
                break;
            case 108:
                {
                alt167=7;
                }
                break;
            case 109:
                {
                alt167=8;
                }
                break;
            case 52:
                {
                alt167=9;
                }
                break;
            case 110:
                {
                alt167=10;
                }
                break;
            case 111:
                {
                alt167=11;
                }
                break;
            case 112:
                {
                alt167=12;
                }
                break;
            case 113:
                {
                alt167=13;
                }
                break;
            case 114:
                {
                alt167=14;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 167, 0, input);

                throw nvae;
            }

            switch (alt167) {
                case 1 :
                    // InternalQVTimperative.g:6639:2: kw= '*'
                    {
                    kw=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getAsteriskKeyword_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:6646:2: kw= '/'
                    {
                    kw=(Token)match(input,104,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getSolidusKeyword_1());

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:6653:2: kw= '+'
                    {
                    kw=(Token)match(input,105,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getPlusSignKeyword_2());

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:6660:2: kw= '-'
                    {
                    kw=(Token)match(input,102,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getHyphenMinusKeyword_3());

                    }

                    }
                    break;
                case 5 :
                    // InternalQVTimperative.g:6667:2: kw= '>'
                    {
                    kw=(Token)match(input,106,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getGreaterThanSignKeyword_4());

                    }

                    }
                    break;
                case 6 :
                    // InternalQVTimperative.g:6674:2: kw= '<'
                    {
                    kw=(Token)match(input,107,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getLessThanSignKeyword_5());

                    }

                    }
                    break;
                case 7 :
                    // InternalQVTimperative.g:6681:2: kw= '>='
                    {
                    kw=(Token)match(input,108,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getGreaterThanSignEqualsSignKeyword_6());

                    }

                    }
                    break;
                case 8 :
                    // InternalQVTimperative.g:6688:2: kw= '<='
                    {
                    kw=(Token)match(input,109,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getLessThanSignEqualsSignKeyword_7());

                    }

                    }
                    break;
                case 9 :
                    // InternalQVTimperative.g:6695:2: kw= '='
                    {
                    kw=(Token)match(input,52,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getEqualsSignKeyword_8());

                    }

                    }
                    break;
                case 10 :
                    // InternalQVTimperative.g:6702:2: kw= '<>'
                    {
                    kw=(Token)match(input,110,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getLessThanSignGreaterThanSignKeyword_9());

                    }

                    }
                    break;
                case 11 :
                    // InternalQVTimperative.g:6709:2: kw= 'and'
                    {
                    kw=(Token)match(input,111,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getAndKeyword_10());

                    }

                    }
                    break;
                case 12 :
                    // InternalQVTimperative.g:6716:2: kw= 'or'
                    {
                    kw=(Token)match(input,112,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getOrKeyword_11());

                    }

                    }
                    break;
                case 13 :
                    // InternalQVTimperative.g:6723:2: kw= 'xor'
                    {
                    kw=(Token)match(input,113,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getXorKeyword_12());

                    }

                    }
                    break;
                case 14 :
                    // InternalQVTimperative.g:6730:2: kw= 'implies'
                    {
                    kw=(Token)match(input,114,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getImpliesKeyword_13());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEssentialOCLInfixOperatorName"


    // $ANTLR start "entryRuleEssentialOCLNavigationOperatorName"
    // InternalQVTimperative.g:6743:1: entryRuleEssentialOCLNavigationOperatorName returns [String current=null] : iv_ruleEssentialOCLNavigationOperatorName= ruleEssentialOCLNavigationOperatorName EOF ;
    public final String entryRuleEssentialOCLNavigationOperatorName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEssentialOCLNavigationOperatorName = null;


        try {
            // InternalQVTimperative.g:6744:2: (iv_ruleEssentialOCLNavigationOperatorName= ruleEssentialOCLNavigationOperatorName EOF )
            // InternalQVTimperative.g:6745:2: iv_ruleEssentialOCLNavigationOperatorName= ruleEssentialOCLNavigationOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEssentialOCLNavigationOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEssentialOCLNavigationOperatorName=ruleEssentialOCLNavigationOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEssentialOCLNavigationOperatorName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEssentialOCLNavigationOperatorName"


    // $ANTLR start "ruleEssentialOCLNavigationOperatorName"
    // InternalQVTimperative.g:6752:1: ruleEssentialOCLNavigationOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '.' | kw= '->' | kw= '?.' | kw= '?->' ) ;
    public final AntlrDatatypeRuleToken ruleEssentialOCLNavigationOperatorName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule();

        try {
            // InternalQVTimperative.g:6755:28: ( (kw= '.' | kw= '->' | kw= '?.' | kw= '?->' ) )
            // InternalQVTimperative.g:6756:1: (kw= '.' | kw= '->' | kw= '?.' | kw= '?->' )
            {
            // InternalQVTimperative.g:6756:1: (kw= '.' | kw= '->' | kw= '?.' | kw= '?->' )
            int alt168=4;
            switch ( input.LA(1) ) {
            case 60:
                {
                alt168=1;
                }
                break;
            case 115:
                {
                alt168=2;
                }
                break;
            case 116:
                {
                alt168=3;
                }
                break;
            case 117:
                {
                alt168=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 168, 0, input);

                throw nvae;
            }

            switch (alt168) {
                case 1 :
                    // InternalQVTimperative.g:6757:2: kw= '.'
                    {
                    kw=(Token)match(input,60,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getFullStopKeyword_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:6764:2: kw= '->'
                    {
                    kw=(Token)match(input,115,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getHyphenMinusGreaterThanSignKeyword_1());

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:6771:2: kw= '?.'
                    {
                    kw=(Token)match(input,116,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getQuestionMarkFullStopKeyword_2());

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:6778:2: kw= '?->'
                    {
                    kw=(Token)match(input,117,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getQuestionMarkHyphenMinusGreaterThanSignKeyword_3());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEssentialOCLNavigationOperatorName"


    // $ANTLR start "entryRuleBinaryOperatorName"
    // InternalQVTimperative.g:6791:1: entryRuleBinaryOperatorName returns [String current=null] : iv_ruleBinaryOperatorName= ruleBinaryOperatorName EOF ;
    public final String entryRuleBinaryOperatorName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBinaryOperatorName = null;


        try {
            // InternalQVTimperative.g:6792:2: (iv_ruleBinaryOperatorName= ruleBinaryOperatorName EOF )
            // InternalQVTimperative.g:6793:2: iv_ruleBinaryOperatorName= ruleBinaryOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBinaryOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBinaryOperatorName=ruleBinaryOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBinaryOperatorName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBinaryOperatorName"


    // $ANTLR start "ruleBinaryOperatorName"
    // InternalQVTimperative.g:6800:1: ruleBinaryOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_InfixOperatorName_0= ruleInfixOperatorName | this_NavigationOperatorName_1= ruleNavigationOperatorName ) ;
    public final AntlrDatatypeRuleToken ruleBinaryOperatorName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_InfixOperatorName_0 = null;

        AntlrDatatypeRuleToken this_NavigationOperatorName_1 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:6803:28: ( (this_InfixOperatorName_0= ruleInfixOperatorName | this_NavigationOperatorName_1= ruleNavigationOperatorName ) )
            // InternalQVTimperative.g:6804:1: (this_InfixOperatorName_0= ruleInfixOperatorName | this_NavigationOperatorName_1= ruleNavigationOperatorName )
            {
            // InternalQVTimperative.g:6804:1: (this_InfixOperatorName_0= ruleInfixOperatorName | this_NavigationOperatorName_1= ruleNavigationOperatorName )
            int alt169=2;
            int LA169_0 = input.LA(1);

            if ( (LA169_0==42||LA169_0==52||LA169_0==102||(LA169_0>=104 && LA169_0<=114)) ) {
                alt169=1;
            }
            else if ( (LA169_0==60||(LA169_0>=115 && LA169_0<=117)) ) {
                alt169=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 169, 0, input);

                throw nvae;
            }
            switch (alt169) {
                case 1 :
                    // InternalQVTimperative.g:6805:5: this_InfixOperatorName_0= ruleInfixOperatorName
                    {
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getBinaryOperatorNameAccess().getInfixOperatorNameParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_InfixOperatorName_0=ruleInfixOperatorName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_InfixOperatorName_0);

                    }
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:6817:5: this_NavigationOperatorName_1= ruleNavigationOperatorName
                    {
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getBinaryOperatorNameAccess().getNavigationOperatorNameParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NavigationOperatorName_1=ruleNavigationOperatorName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_NavigationOperatorName_1);

                    }
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBinaryOperatorName"


    // $ANTLR start "entryRuleInfixOperatorName"
    // InternalQVTimperative.g:6835:1: entryRuleInfixOperatorName returns [String current=null] : iv_ruleInfixOperatorName= ruleInfixOperatorName EOF ;
    public final String entryRuleInfixOperatorName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleInfixOperatorName = null;


        try {
            // InternalQVTimperative.g:6836:2: (iv_ruleInfixOperatorName= ruleInfixOperatorName EOF )
            // InternalQVTimperative.g:6837:2: iv_ruleInfixOperatorName= ruleInfixOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInfixOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleInfixOperatorName=ruleInfixOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInfixOperatorName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInfixOperatorName"


    // $ANTLR start "ruleInfixOperatorName"
    // InternalQVTimperative.g:6844:1: ruleInfixOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_EssentialOCLInfixOperatorName_0= ruleEssentialOCLInfixOperatorName ;
    public final AntlrDatatypeRuleToken ruleInfixOperatorName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_EssentialOCLInfixOperatorName_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:6847:28: (this_EssentialOCLInfixOperatorName_0= ruleEssentialOCLInfixOperatorName )
            // InternalQVTimperative.g:6849:5: this_EssentialOCLInfixOperatorName_0= ruleEssentialOCLInfixOperatorName
            {
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getInfixOperatorNameAccess().getEssentialOCLInfixOperatorNameParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_EssentialOCLInfixOperatorName_0=ruleEssentialOCLInfixOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_EssentialOCLInfixOperatorName_0);

            }
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInfixOperatorName"


    // $ANTLR start "entryRuleNavigationOperatorName"
    // InternalQVTimperative.g:6867:1: entryRuleNavigationOperatorName returns [String current=null] : iv_ruleNavigationOperatorName= ruleNavigationOperatorName EOF ;
    public final String entryRuleNavigationOperatorName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNavigationOperatorName = null;


        try {
            // InternalQVTimperative.g:6868:2: (iv_ruleNavigationOperatorName= ruleNavigationOperatorName EOF )
            // InternalQVTimperative.g:6869:2: iv_ruleNavigationOperatorName= ruleNavigationOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNavigationOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNavigationOperatorName=ruleNavigationOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNavigationOperatorName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNavigationOperatorName"


    // $ANTLR start "ruleNavigationOperatorName"
    // InternalQVTimperative.g:6876:1: ruleNavigationOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_EssentialOCLNavigationOperatorName_0= ruleEssentialOCLNavigationOperatorName ;
    public final AntlrDatatypeRuleToken ruleNavigationOperatorName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_EssentialOCLNavigationOperatorName_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:6879:28: (this_EssentialOCLNavigationOperatorName_0= ruleEssentialOCLNavigationOperatorName )
            // InternalQVTimperative.g:6881:5: this_EssentialOCLNavigationOperatorName_0= ruleEssentialOCLNavigationOperatorName
            {
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getNavigationOperatorNameAccess().getEssentialOCLNavigationOperatorNameParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_EssentialOCLNavigationOperatorName_0=ruleEssentialOCLNavigationOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_EssentialOCLNavigationOperatorName_0);

            }
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNavigationOperatorName"


    // $ANTLR start "entryRuleUnaryOperatorName"
    // InternalQVTimperative.g:6899:1: entryRuleUnaryOperatorName returns [String current=null] : iv_ruleUnaryOperatorName= ruleUnaryOperatorName EOF ;
    public final String entryRuleUnaryOperatorName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUnaryOperatorName = null;


        try {
            // InternalQVTimperative.g:6900:2: (iv_ruleUnaryOperatorName= ruleUnaryOperatorName EOF )
            // InternalQVTimperative.g:6901:2: iv_ruleUnaryOperatorName= ruleUnaryOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleUnaryOperatorName=ruleUnaryOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnaryOperatorName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnaryOperatorName"


    // $ANTLR start "ruleUnaryOperatorName"
    // InternalQVTimperative.g:6908:1: ruleUnaryOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_EssentialOCLUnaryOperatorName_0= ruleEssentialOCLUnaryOperatorName ;
    public final AntlrDatatypeRuleToken ruleUnaryOperatorName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_EssentialOCLUnaryOperatorName_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:6911:28: (this_EssentialOCLUnaryOperatorName_0= ruleEssentialOCLUnaryOperatorName )
            // InternalQVTimperative.g:6913:5: this_EssentialOCLUnaryOperatorName_0= ruleEssentialOCLUnaryOperatorName
            {
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getUnaryOperatorNameAccess().getEssentialOCLUnaryOperatorNameParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_EssentialOCLUnaryOperatorName_0=ruleEssentialOCLUnaryOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_EssentialOCLUnaryOperatorName_0);

            }
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnaryOperatorName"


    // $ANTLR start "entryRuleEssentialOCLUnrestrictedName"
    // InternalQVTimperative.g:6931:1: entryRuleEssentialOCLUnrestrictedName returns [String current=null] : iv_ruleEssentialOCLUnrestrictedName= ruleEssentialOCLUnrestrictedName EOF ;
    public final String entryRuleEssentialOCLUnrestrictedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEssentialOCLUnrestrictedName = null;


        try {
            // InternalQVTimperative.g:6932:2: (iv_ruleEssentialOCLUnrestrictedName= ruleEssentialOCLUnrestrictedName EOF )
            // InternalQVTimperative.g:6933:2: iv_ruleEssentialOCLUnrestrictedName= ruleEssentialOCLUnrestrictedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEssentialOCLUnrestrictedNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEssentialOCLUnrestrictedName=ruleEssentialOCLUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEssentialOCLUnrestrictedName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEssentialOCLUnrestrictedName"


    // $ANTLR start "ruleEssentialOCLUnrestrictedName"
    // InternalQVTimperative.g:6940:1: ruleEssentialOCLUnrestrictedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_Identifier_0= ruleIdentifier ;
    public final AntlrDatatypeRuleToken ruleEssentialOCLUnrestrictedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_Identifier_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:6943:28: (this_Identifier_0= ruleIdentifier )
            // InternalQVTimperative.g:6945:5: this_Identifier_0= ruleIdentifier
            {
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getEssentialOCLUnrestrictedNameAccess().getIdentifierParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_Identifier_0=ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_Identifier_0);

            }
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEssentialOCLUnrestrictedName"


    // $ANTLR start "entryRuleEssentialOCLUnreservedName"
    // InternalQVTimperative.g:6963:1: entryRuleEssentialOCLUnreservedName returns [String current=null] : iv_ruleEssentialOCLUnreservedName= ruleEssentialOCLUnreservedName EOF ;
    public final String entryRuleEssentialOCLUnreservedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEssentialOCLUnreservedName = null;


        try {
            // InternalQVTimperative.g:6964:2: (iv_ruleEssentialOCLUnreservedName= ruleEssentialOCLUnreservedName EOF )
            // InternalQVTimperative.g:6965:2: iv_ruleEssentialOCLUnreservedName= ruleEssentialOCLUnreservedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEssentialOCLUnreservedNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEssentialOCLUnreservedName=ruleEssentialOCLUnreservedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEssentialOCLUnreservedName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEssentialOCLUnreservedName"


    // $ANTLR start "ruleEssentialOCLUnreservedName"
    // InternalQVTimperative.g:6972:1: ruleEssentialOCLUnreservedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_UnrestrictedName_0= ruleUnrestrictedName | this_CollectionTypeIdentifier_1= ruleCollectionTypeIdentifier | this_PrimitiveTypeIdentifier_2= rulePrimitiveTypeIdentifier | kw= 'Map' | kw= 'Tuple' ) ;
    public final AntlrDatatypeRuleToken ruleEssentialOCLUnreservedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_UnrestrictedName_0 = null;

        AntlrDatatypeRuleToken this_CollectionTypeIdentifier_1 = null;

        AntlrDatatypeRuleToken this_PrimitiveTypeIdentifier_2 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:6975:28: ( (this_UnrestrictedName_0= ruleUnrestrictedName | this_CollectionTypeIdentifier_1= ruleCollectionTypeIdentifier | this_PrimitiveTypeIdentifier_2= rulePrimitiveTypeIdentifier | kw= 'Map' | kw= 'Tuple' ) )
            // InternalQVTimperative.g:6976:1: (this_UnrestrictedName_0= ruleUnrestrictedName | this_CollectionTypeIdentifier_1= ruleCollectionTypeIdentifier | this_PrimitiveTypeIdentifier_2= rulePrimitiveTypeIdentifier | kw= 'Map' | kw= 'Tuple' )
            {
            // InternalQVTimperative.g:6976:1: (this_UnrestrictedName_0= ruleUnrestrictedName | this_CollectionTypeIdentifier_1= ruleCollectionTypeIdentifier | this_PrimitiveTypeIdentifier_2= rulePrimitiveTypeIdentifier | kw= 'Map' | kw= 'Tuple' )
            int alt170=5;
            switch ( input.LA(1) ) {
            case RULE_SIMPLE_ID:
            case RULE_ESCAPED_ID:
            case 17:
            case 19:
            case 22:
            case 23:
            case 25:
            case 26:
            case 29:
            case 30:
            case 31:
            case 32:
            case 33:
            case 39:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
            case 50:
            case 51:
            case 53:
            case 54:
            case 57:
            case 58:
            case 59:
            case 61:
            case 62:
            case 63:
            case 64:
            case 65:
            case 66:
            case 68:
            case 70:
            case 72:
            case 75:
            case 77:
            case 79:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 87:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
            case 94:
            case 96:
            case 98:
            case 99:
            case 100:
            case 101:
                {
                alt170=1;
                }
                break;
            case 128:
            case 129:
            case 130:
            case 131:
            case 132:
                {
                alt170=2;
                }
                break;
            case 120:
            case 121:
            case 122:
            case 123:
            case 124:
            case 125:
            case 126:
            case 127:
                {
                alt170=3;
                }
                break;
            case 118:
                {
                alt170=4;
                }
                break;
            case 119:
                {
                alt170=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 170, 0, input);

                throw nvae;
            }

            switch (alt170) {
                case 1 :
                    // InternalQVTimperative.g:6977:5: this_UnrestrictedName_0= ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getEssentialOCLUnreservedNameAccess().getUnrestrictedNameParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_UnrestrictedName_0=ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_UnrestrictedName_0);

                    }
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:6989:5: this_CollectionTypeIdentifier_1= ruleCollectionTypeIdentifier
                    {
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getEssentialOCLUnreservedNameAccess().getCollectionTypeIdentifierParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CollectionTypeIdentifier_1=ruleCollectionTypeIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_CollectionTypeIdentifier_1);

                    }
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:7001:5: this_PrimitiveTypeIdentifier_2= rulePrimitiveTypeIdentifier
                    {
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getEssentialOCLUnreservedNameAccess().getPrimitiveTypeIdentifierParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrimitiveTypeIdentifier_2=rulePrimitiveTypeIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_PrimitiveTypeIdentifier_2);

                    }
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:7013:2: kw= 'Map'
                    {
                    kw=(Token)match(input,118,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLUnreservedNameAccess().getMapKeyword_3());

                    }

                    }
                    break;
                case 5 :
                    // InternalQVTimperative.g:7020:2: kw= 'Tuple'
                    {
                    kw=(Token)match(input,119,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLUnreservedNameAccess().getTupleKeyword_4());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEssentialOCLUnreservedName"


    // $ANTLR start "entryRuleUnreservedName"
    // InternalQVTimperative.g:7033:1: entryRuleUnreservedName returns [String current=null] : iv_ruleUnreservedName= ruleUnreservedName EOF ;
    public final String entryRuleUnreservedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUnreservedName = null;


        try {
            // InternalQVTimperative.g:7034:2: (iv_ruleUnreservedName= ruleUnreservedName EOF )
            // InternalQVTimperative.g:7035:2: iv_ruleUnreservedName= ruleUnreservedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnreservedNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleUnreservedName=ruleUnreservedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnreservedName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnreservedName"


    // $ANTLR start "ruleUnreservedName"
    // InternalQVTimperative.g:7042:1: ruleUnreservedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_EssentialOCLUnreservedName_0= ruleEssentialOCLUnreservedName ;
    public final AntlrDatatypeRuleToken ruleUnreservedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_EssentialOCLUnreservedName_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:7045:28: (this_EssentialOCLUnreservedName_0= ruleEssentialOCLUnreservedName )
            // InternalQVTimperative.g:7047:5: this_EssentialOCLUnreservedName_0= ruleEssentialOCLUnreservedName
            {
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getUnreservedNameAccess().getEssentialOCLUnreservedNameParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_EssentialOCLUnreservedName_0=ruleEssentialOCLUnreservedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_EssentialOCLUnreservedName_0);

            }
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnreservedName"


    // $ANTLR start "entryRuleURIPathNameCS"
    // InternalQVTimperative.g:7065:1: entryRuleURIPathNameCS returns [EObject current=null] : iv_ruleURIPathNameCS= ruleURIPathNameCS EOF ;
    public final EObject entryRuleURIPathNameCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleURIPathNameCS = null;


        try {
            // InternalQVTimperative.g:7066:2: (iv_ruleURIPathNameCS= ruleURIPathNameCS EOF )
            // InternalQVTimperative.g:7067:2: iv_ruleURIPathNameCS= ruleURIPathNameCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getURIPathNameCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleURIPathNameCS=ruleURIPathNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleURIPathNameCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleURIPathNameCS"


    // $ANTLR start "ruleURIPathNameCS"
    // InternalQVTimperative.g:7074:1: ruleURIPathNameCS returns [EObject current=null] : ( ( (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* ) ;
    public final EObject ruleURIPathNameCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedPathElements_0_0 = null;

        EObject lv_ownedPathElements_2_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:7077:28: ( ( ( (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* ) )
            // InternalQVTimperative.g:7078:1: ( ( (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* )
            {
            // InternalQVTimperative.g:7078:1: ( ( (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* )
            // InternalQVTimperative.g:7078:2: ( (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )*
            {
            // InternalQVTimperative.g:7078:2: ( (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS ) )
            // InternalQVTimperative.g:7079:1: (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS )
            {
            // InternalQVTimperative.g:7079:1: (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS )
            // InternalQVTimperative.g:7080:3: lv_ownedPathElements_0_0= ruleURIFirstPathElementCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getURIPathNameCSAccess().getOwnedPathElementsURIFirstPathElementCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_114);
            lv_ownedPathElements_0_0=ruleURIFirstPathElementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getURIPathNameCSRule());
              	        }
                     		add(
                     			current,
                     			"ownedPathElements",
                      		lv_ownedPathElements_0_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.URIFirstPathElementCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:7096:2: (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )*
            loop171:
            do {
                int alt171=2;
                int LA171_0 = input.LA(1);

                if ( (LA171_0==41) ) {
                    int LA171_1 = input.LA(2);

                    if ( ((LA171_1>=RULE_SIMPLE_ID && LA171_1<=RULE_ESCAPED_ID)||LA171_1==17||LA171_1==19||(LA171_1>=22 && LA171_1<=23)||(LA171_1>=25 && LA171_1<=26)||(LA171_1>=29 && LA171_1<=33)||LA171_1==39||(LA171_1>=43 && LA171_1<=51)||(LA171_1>=53 && LA171_1<=54)||(LA171_1>=57 && LA171_1<=59)||(LA171_1>=61 && LA171_1<=66)||LA171_1==68||LA171_1==70||LA171_1==72||LA171_1==75||LA171_1==77||LA171_1==79||(LA171_1>=81 && LA171_1<=85)||(LA171_1>=87 && LA171_1<=92)||LA171_1==94||LA171_1==96||(LA171_1>=98 && LA171_1<=101)||(LA171_1>=118 && LA171_1<=132)) ) {
                        alt171=1;
                    }


                }


                switch (alt171) {
            	case 1 :
            	    // InternalQVTimperative.g:7096:4: otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) )
            	    {
            	    otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_12); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getURIPathNameCSAccess().getColonColonKeyword_1_0());

            	    }
            	    // InternalQVTimperative.g:7100:1: ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) )
            	    // InternalQVTimperative.g:7101:1: (lv_ownedPathElements_2_0= ruleNextPathElementCS )
            	    {
            	    // InternalQVTimperative.g:7101:1: (lv_ownedPathElements_2_0= ruleNextPathElementCS )
            	    // InternalQVTimperative.g:7102:3: lv_ownedPathElements_2_0= ruleNextPathElementCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getURIPathNameCSAccess().getOwnedPathElementsNextPathElementCSParserRuleCall_1_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_114);
            	    lv_ownedPathElements_2_0=ruleNextPathElementCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getURIPathNameCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedPathElements",
            	              		lv_ownedPathElements_2_0,
            	              		"org.eclipse.ocl.xtext.base.Base.NextPathElementCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop171;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleURIPathNameCS"


    // $ANTLR start "entryRuleURIFirstPathElementCS"
    // InternalQVTimperative.g:7126:1: entryRuleURIFirstPathElementCS returns [EObject current=null] : iv_ruleURIFirstPathElementCS= ruleURIFirstPathElementCS EOF ;
    public final EObject entryRuleURIFirstPathElementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleURIFirstPathElementCS = null;


        try {
            // InternalQVTimperative.g:7127:2: (iv_ruleURIFirstPathElementCS= ruleURIFirstPathElementCS EOF )
            // InternalQVTimperative.g:7128:2: iv_ruleURIFirstPathElementCS= ruleURIFirstPathElementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getURIFirstPathElementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleURIFirstPathElementCS=ruleURIFirstPathElementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleURIFirstPathElementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleURIFirstPathElementCS"


    // $ANTLR start "ruleURIFirstPathElementCS"
    // InternalQVTimperative.g:7135:1: ruleURIFirstPathElementCS returns [EObject current=null] : ( ( ( ruleUnrestrictedName ) ) | ( () ( ( ruleURI ) ) ) ) ;
    public final EObject ruleURIFirstPathElementCS() throws RecognitionException {
        EObject current = null;

         enterRule();

        try {
            // InternalQVTimperative.g:7138:28: ( ( ( ( ruleUnrestrictedName ) ) | ( () ( ( ruleURI ) ) ) ) )
            // InternalQVTimperative.g:7139:1: ( ( ( ruleUnrestrictedName ) ) | ( () ( ( ruleURI ) ) ) )
            {
            // InternalQVTimperative.g:7139:1: ( ( ( ruleUnrestrictedName ) ) | ( () ( ( ruleURI ) ) ) )
            int alt172=2;
            int LA172_0 = input.LA(1);

            if ( ((LA172_0>=RULE_SIMPLE_ID && LA172_0<=RULE_ESCAPED_ID)||LA172_0==17||LA172_0==19||(LA172_0>=22 && LA172_0<=23)||(LA172_0>=25 && LA172_0<=26)||(LA172_0>=29 && LA172_0<=33)||LA172_0==39||(LA172_0>=43 && LA172_0<=51)||(LA172_0>=53 && LA172_0<=54)||(LA172_0>=57 && LA172_0<=59)||(LA172_0>=61 && LA172_0<=66)||LA172_0==68||LA172_0==70||LA172_0==72||LA172_0==75||LA172_0==77||LA172_0==79||(LA172_0>=81 && LA172_0<=85)||(LA172_0>=87 && LA172_0<=92)||LA172_0==94||LA172_0==96||(LA172_0>=98 && LA172_0<=101)) ) {
                alt172=1;
            }
            else if ( (LA172_0==RULE_SINGLE_QUOTED_STRING) ) {
                alt172=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 172, 0, input);

                throw nvae;
            }
            switch (alt172) {
                case 1 :
                    // InternalQVTimperative.g:7139:2: ( ( ruleUnrestrictedName ) )
                    {
                    // InternalQVTimperative.g:7139:2: ( ( ruleUnrestrictedName ) )
                    // InternalQVTimperative.g:7140:1: ( ruleUnrestrictedName )
                    {
                    // InternalQVTimperative.g:7140:1: ( ruleUnrestrictedName )
                    // InternalQVTimperative.g:7141:3: ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      		  /* */

                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getURIFirstPathElementCSRule());
                      	        }

                    }
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getURIFirstPathElementCSAccess().getReferredElementNamedElementCrossReference_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:7158:6: ( () ( ( ruleURI ) ) )
                    {
                    // InternalQVTimperative.g:7158:6: ( () ( ( ruleURI ) ) )
                    // InternalQVTimperative.g:7158:7: () ( ( ruleURI ) )
                    {
                    // InternalQVTimperative.g:7158:7: ()
                    // InternalQVTimperative.g:7159:2:
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getURIFirstPathElementCSAccess().getPathElementWithURICSAction_1_0(),
                                  current);

                    }

                    }

                    // InternalQVTimperative.g:7167:2: ( ( ruleURI ) )
                    // InternalQVTimperative.g:7168:1: ( ruleURI )
                    {
                    // InternalQVTimperative.g:7168:1: ( ruleURI )
                    // InternalQVTimperative.g:7169:3: ruleURI
                    {
                    if ( state.backtracking==0 ) {

                      		  /* */

                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getURIFirstPathElementCSRule());
                      	        }

                    }
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getURIFirstPathElementCSAccess().getReferredElementNamespaceCrossReference_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleURI();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleURIFirstPathElementCS"


    // $ANTLR start "entryRulePrimitiveTypeIdentifier"
    // InternalQVTimperative.g:7195:1: entryRulePrimitiveTypeIdentifier returns [String current=null] : iv_rulePrimitiveTypeIdentifier= rulePrimitiveTypeIdentifier EOF ;
    public final String entryRulePrimitiveTypeIdentifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePrimitiveTypeIdentifier = null;


        try {
            // InternalQVTimperative.g:7196:2: (iv_rulePrimitiveTypeIdentifier= rulePrimitiveTypeIdentifier EOF )
            // InternalQVTimperative.g:7197:2: iv_rulePrimitiveTypeIdentifier= rulePrimitiveTypeIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimitiveTypeIdentifierRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrimitiveTypeIdentifier=rulePrimitiveTypeIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimitiveTypeIdentifier.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimitiveTypeIdentifier"


    // $ANTLR start "rulePrimitiveTypeIdentifier"
    // InternalQVTimperative.g:7204:1: rulePrimitiveTypeIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'Boolean' | kw= 'Integer' | kw= 'Real' | kw= 'String' | kw= 'UnlimitedNatural' | kw= 'OclAny' | kw= 'OclInvalid' | kw= 'OclVoid' ) ;
    public final AntlrDatatypeRuleToken rulePrimitiveTypeIdentifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule();

        try {
            // InternalQVTimperative.g:7207:28: ( (kw= 'Boolean' | kw= 'Integer' | kw= 'Real' | kw= 'String' | kw= 'UnlimitedNatural' | kw= 'OclAny' | kw= 'OclInvalid' | kw= 'OclVoid' ) )
            // InternalQVTimperative.g:7208:1: (kw= 'Boolean' | kw= 'Integer' | kw= 'Real' | kw= 'String' | kw= 'UnlimitedNatural' | kw= 'OclAny' | kw= 'OclInvalid' | kw= 'OclVoid' )
            {
            // InternalQVTimperative.g:7208:1: (kw= 'Boolean' | kw= 'Integer' | kw= 'Real' | kw= 'String' | kw= 'UnlimitedNatural' | kw= 'OclAny' | kw= 'OclInvalid' | kw= 'OclVoid' )
            int alt173=8;
            switch ( input.LA(1) ) {
            case 120:
                {
                alt173=1;
                }
                break;
            case 121:
                {
                alt173=2;
                }
                break;
            case 122:
                {
                alt173=3;
                }
                break;
            case 123:
                {
                alt173=4;
                }
                break;
            case 124:
                {
                alt173=5;
                }
                break;
            case 125:
                {
                alt173=6;
                }
                break;
            case 126:
                {
                alt173=7;
                }
                break;
            case 127:
                {
                alt173=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 173, 0, input);

                throw nvae;
            }

            switch (alt173) {
                case 1 :
                    // InternalQVTimperative.g:7209:2: kw= 'Boolean'
                    {
                    kw=(Token)match(input,120,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getBooleanKeyword_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:7216:2: kw= 'Integer'
                    {
                    kw=(Token)match(input,121,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getIntegerKeyword_1());

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:7223:2: kw= 'Real'
                    {
                    kw=(Token)match(input,122,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getRealKeyword_2());

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:7230:2: kw= 'String'
                    {
                    kw=(Token)match(input,123,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getStringKeyword_3());

                    }

                    }
                    break;
                case 5 :
                    // InternalQVTimperative.g:7237:2: kw= 'UnlimitedNatural'
                    {
                    kw=(Token)match(input,124,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getUnlimitedNaturalKeyword_4());

                    }

                    }
                    break;
                case 6 :
                    // InternalQVTimperative.g:7244:2: kw= 'OclAny'
                    {
                    kw=(Token)match(input,125,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getOclAnyKeyword_5());

                    }

                    }
                    break;
                case 7 :
                    // InternalQVTimperative.g:7251:2: kw= 'OclInvalid'
                    {
                    kw=(Token)match(input,126,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getOclInvalidKeyword_6());

                    }

                    }
                    break;
                case 8 :
                    // InternalQVTimperative.g:7258:2: kw= 'OclVoid'
                    {
                    kw=(Token)match(input,127,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getOclVoidKeyword_7());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimitiveTypeIdentifier"


    // $ANTLR start "entryRulePrimitiveTypeCS"
    // InternalQVTimperative.g:7271:1: entryRulePrimitiveTypeCS returns [EObject current=null] : iv_rulePrimitiveTypeCS= rulePrimitiveTypeCS EOF ;
    public final EObject entryRulePrimitiveTypeCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimitiveTypeCS = null;


        try {
            // InternalQVTimperative.g:7272:2: (iv_rulePrimitiveTypeCS= rulePrimitiveTypeCS EOF )
            // InternalQVTimperative.g:7273:2: iv_rulePrimitiveTypeCS= rulePrimitiveTypeCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimitiveTypeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrimitiveTypeCS=rulePrimitiveTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimitiveTypeCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimitiveTypeCS"


    // $ANTLR start "rulePrimitiveTypeCS"
    // InternalQVTimperative.g:7280:1: rulePrimitiveTypeCS returns [EObject current=null] : ( (lv_name_0_0= rulePrimitiveTypeIdentifier ) ) ;
    public final EObject rulePrimitiveTypeCS() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:7283:28: ( ( (lv_name_0_0= rulePrimitiveTypeIdentifier ) ) )
            // InternalQVTimperative.g:7284:1: ( (lv_name_0_0= rulePrimitiveTypeIdentifier ) )
            {
            // InternalQVTimperative.g:7284:1: ( (lv_name_0_0= rulePrimitiveTypeIdentifier ) )
            // InternalQVTimperative.g:7285:1: (lv_name_0_0= rulePrimitiveTypeIdentifier )
            {
            // InternalQVTimperative.g:7285:1: (lv_name_0_0= rulePrimitiveTypeIdentifier )
            // InternalQVTimperative.g:7286:3: lv_name_0_0= rulePrimitiveTypeIdentifier
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getPrimitiveTypeCSAccess().getNamePrimitiveTypeIdentifierParserRuleCall_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_0_0=rulePrimitiveTypeIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPrimitiveTypeCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_0_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PrimitiveTypeIdentifier");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimitiveTypeCS"


    // $ANTLR start "entryRuleCollectionTypeIdentifier"
    // InternalQVTimperative.g:7310:1: entryRuleCollectionTypeIdentifier returns [String current=null] : iv_ruleCollectionTypeIdentifier= ruleCollectionTypeIdentifier EOF ;
    public final String entryRuleCollectionTypeIdentifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleCollectionTypeIdentifier = null;


        try {
            // InternalQVTimperative.g:7311:2: (iv_ruleCollectionTypeIdentifier= ruleCollectionTypeIdentifier EOF )
            // InternalQVTimperative.g:7312:2: iv_ruleCollectionTypeIdentifier= ruleCollectionTypeIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCollectionTypeIdentifierRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCollectionTypeIdentifier=ruleCollectionTypeIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCollectionTypeIdentifier.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCollectionTypeIdentifier"


    // $ANTLR start "ruleCollectionTypeIdentifier"
    // InternalQVTimperative.g:7319:1: ruleCollectionTypeIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'Set' | kw= 'Bag' | kw= 'Sequence' | kw= 'Collection' | kw= 'OrderedSet' ) ;
    public final AntlrDatatypeRuleToken ruleCollectionTypeIdentifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule();

        try {
            // InternalQVTimperative.g:7322:28: ( (kw= 'Set' | kw= 'Bag' | kw= 'Sequence' | kw= 'Collection' | kw= 'OrderedSet' ) )
            // InternalQVTimperative.g:7323:1: (kw= 'Set' | kw= 'Bag' | kw= 'Sequence' | kw= 'Collection' | kw= 'OrderedSet' )
            {
            // InternalQVTimperative.g:7323:1: (kw= 'Set' | kw= 'Bag' | kw= 'Sequence' | kw= 'Collection' | kw= 'OrderedSet' )
            int alt174=5;
            switch ( input.LA(1) ) {
            case 128:
                {
                alt174=1;
                }
                break;
            case 129:
                {
                alt174=2;
                }
                break;
            case 130:
                {
                alt174=3;
                }
                break;
            case 131:
                {
                alt174=4;
                }
                break;
            case 132:
                {
                alt174=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 174, 0, input);

                throw nvae;
            }

            switch (alt174) {
                case 1 :
                    // InternalQVTimperative.g:7324:2: kw= 'Set'
                    {
                    kw=(Token)match(input,128,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCollectionTypeIdentifierAccess().getSetKeyword_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:7331:2: kw= 'Bag'
                    {
                    kw=(Token)match(input,129,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCollectionTypeIdentifierAccess().getBagKeyword_1());

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:7338:2: kw= 'Sequence'
                    {
                    kw=(Token)match(input,130,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCollectionTypeIdentifierAccess().getSequenceKeyword_2());

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:7345:2: kw= 'Collection'
                    {
                    kw=(Token)match(input,131,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCollectionTypeIdentifierAccess().getCollectionKeyword_3());

                    }

                    }
                    break;
                case 5 :
                    // InternalQVTimperative.g:7352:2: kw= 'OrderedSet'
                    {
                    kw=(Token)match(input,132,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCollectionTypeIdentifierAccess().getOrderedSetKeyword_4());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCollectionTypeIdentifier"


    // $ANTLR start "entryRuleCollectionTypeCS"
    // InternalQVTimperative.g:7365:1: entryRuleCollectionTypeCS returns [EObject current=null] : iv_ruleCollectionTypeCS= ruleCollectionTypeCS EOF ;
    public final EObject entryRuleCollectionTypeCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCollectionTypeCS = null;


        try {
            // InternalQVTimperative.g:7366:2: (iv_ruleCollectionTypeCS= ruleCollectionTypeCS EOF )
            // InternalQVTimperative.g:7367:2: iv_ruleCollectionTypeCS= ruleCollectionTypeCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCollectionTypeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCollectionTypeCS=ruleCollectionTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCollectionTypeCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCollectionTypeCS"


    // $ANTLR start "ruleCollectionTypeCS"
    // InternalQVTimperative.g:7374:1: ruleCollectionTypeCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleCollectionTypeIdentifier ) ) (otherlv_1= '(' ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) ) ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )? otherlv_4= ')' )? ) ;
    public final EObject ruleCollectionTypeCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedType_2_0 = null;

        EObject lv_ownedCollectionMultiplicity_3_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:7377:28: ( ( ( (lv_name_0_0= ruleCollectionTypeIdentifier ) ) (otherlv_1= '(' ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) ) ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )? otherlv_4= ')' )? ) )
            // InternalQVTimperative.g:7378:1: ( ( (lv_name_0_0= ruleCollectionTypeIdentifier ) ) (otherlv_1= '(' ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) ) ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )? otherlv_4= ')' )? )
            {
            // InternalQVTimperative.g:7378:1: ( ( (lv_name_0_0= ruleCollectionTypeIdentifier ) ) (otherlv_1= '(' ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) ) ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )? otherlv_4= ')' )? )
            // InternalQVTimperative.g:7378:2: ( (lv_name_0_0= ruleCollectionTypeIdentifier ) ) (otherlv_1= '(' ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) ) ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )? otherlv_4= ')' )?
            {
            // InternalQVTimperative.g:7378:2: ( (lv_name_0_0= ruleCollectionTypeIdentifier ) )
            // InternalQVTimperative.g:7379:1: (lv_name_0_0= ruleCollectionTypeIdentifier )
            {
            // InternalQVTimperative.g:7379:1: (lv_name_0_0= ruleCollectionTypeIdentifier )
            // InternalQVTimperative.g:7380:3: lv_name_0_0= ruleCollectionTypeIdentifier
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getCollectionTypeCSAccess().getNameCollectionTypeIdentifierParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_115);
            lv_name_0_0=ruleCollectionTypeIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCollectionTypeCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_0_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CollectionTypeIdentifier");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:7396:2: (otherlv_1= '(' ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) ) ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )? otherlv_4= ')' )?
            int alt176=2;
            int LA176_0 = input.LA(1);

            if ( (LA176_0==55) ) {
                alt176=1;
            }
            switch (alt176) {
                case 1 :
                    // InternalQVTimperative.g:7396:4: otherlv_1= '(' ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) ) ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )? otherlv_4= ')'
                    {
                    otherlv_1=(Token)match(input,55,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getCollectionTypeCSAccess().getLeftParenthesisKeyword_1_0());

                    }
                    // InternalQVTimperative.g:7400:1: ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) )
                    // InternalQVTimperative.g:7401:1: (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS )
                    {
                    // InternalQVTimperative.g:7401:1: (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS )
                    // InternalQVTimperative.g:7402:3: lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getCollectionTypeCSAccess().getOwnedTypeTypeExpWithoutMultiplicityCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_116);
                    lv_ownedType_2_0=ruleTypeExpWithoutMultiplicityCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCollectionTypeCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpWithoutMultiplicityCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:7418:2: ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )?
                    int alt175=2;
                    int LA175_0 = input.LA(1);

                    if ( (LA175_0==142) ) {
                        alt175=1;
                    }
                    switch (alt175) {
                        case 1 :
                            // InternalQVTimperative.g:7419:1: (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS )
                            {
                            // InternalQVTimperative.g:7419:1: (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS )
                            // InternalQVTimperative.g:7420:3: lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getCollectionTypeCSAccess().getOwnedCollectionMultiplicityMultiplicityCSParserRuleCall_1_2_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_117);
                            lv_ownedCollectionMultiplicity_3_0=ruleMultiplicityCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getCollectionTypeCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedCollectionMultiplicity",
                                      		lv_ownedCollectionMultiplicity_3_0,
                                      		"org.eclipse.ocl.xtext.base.Base.MultiplicityCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,56,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getCollectionTypeCSAccess().getRightParenthesisKeyword_1_3());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCollectionTypeCS"


    // $ANTLR start "entryRuleMapTypeCS"
    // InternalQVTimperative.g:7448:1: entryRuleMapTypeCS returns [EObject current=null] : iv_ruleMapTypeCS= ruleMapTypeCS EOF ;
    public final EObject entryRuleMapTypeCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapTypeCS = null;


        try {
            // InternalQVTimperative.g:7449:2: (iv_ruleMapTypeCS= ruleMapTypeCS EOF )
            // InternalQVTimperative.g:7450:2: iv_ruleMapTypeCS= ruleMapTypeCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapTypeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMapTypeCS=ruleMapTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapTypeCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapTypeCS"


    // $ANTLR start "ruleMapTypeCS"
    // InternalQVTimperative.g:7457:1: ruleMapTypeCS returns [EObject current=null] : ( ( (lv_name_0_0= 'Map' ) ) (otherlv_1= '(' ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) ) otherlv_3= ',' ( (lv_ownedValueType_4_0= ruleTypeExpCS ) ) otherlv_5= ')' )? ) ;
    public final EObject ruleMapTypeCS() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_ownedKeyType_2_0 = null;

        EObject lv_ownedValueType_4_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:7460:28: ( ( ( (lv_name_0_0= 'Map' ) ) (otherlv_1= '(' ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) ) otherlv_3= ',' ( (lv_ownedValueType_4_0= ruleTypeExpCS ) ) otherlv_5= ')' )? ) )
            // InternalQVTimperative.g:7461:1: ( ( (lv_name_0_0= 'Map' ) ) (otherlv_1= '(' ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) ) otherlv_3= ',' ( (lv_ownedValueType_4_0= ruleTypeExpCS ) ) otherlv_5= ')' )? )
            {
            // InternalQVTimperative.g:7461:1: ( ( (lv_name_0_0= 'Map' ) ) (otherlv_1= '(' ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) ) otherlv_3= ',' ( (lv_ownedValueType_4_0= ruleTypeExpCS ) ) otherlv_5= ')' )? )
            // InternalQVTimperative.g:7461:2: ( (lv_name_0_0= 'Map' ) ) (otherlv_1= '(' ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) ) otherlv_3= ',' ( (lv_ownedValueType_4_0= ruleTypeExpCS ) ) otherlv_5= ')' )?
            {
            // InternalQVTimperative.g:7461:2: ( (lv_name_0_0= 'Map' ) )
            // InternalQVTimperative.g:7462:1: (lv_name_0_0= 'Map' )
            {
            // InternalQVTimperative.g:7462:1: (lv_name_0_0= 'Map' )
            // InternalQVTimperative.g:7463:3: lv_name_0_0= 'Map'
            {
            lv_name_0_0=(Token)match(input,118,FollowSets000.FOLLOW_115); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_name_0_0, grammarAccess.getMapTypeCSAccess().getNameMapKeyword_0_0());

            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getMapTypeCSRule());
              	        }
                     		setWithLastConsumed(current, "name", lv_name_0_0, "Map");

            }

            }


            }

            // InternalQVTimperative.g:7476:2: (otherlv_1= '(' ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) ) otherlv_3= ',' ( (lv_ownedValueType_4_0= ruleTypeExpCS ) ) otherlv_5= ')' )?
            int alt177=2;
            int LA177_0 = input.LA(1);

            if ( (LA177_0==55) ) {
                alt177=1;
            }
            switch (alt177) {
                case 1 :
                    // InternalQVTimperative.g:7476:4: otherlv_1= '(' ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) ) otherlv_3= ',' ( (lv_ownedValueType_4_0= ruleTypeExpCS ) ) otherlv_5= ')'
                    {
                    otherlv_1=(Token)match(input,55,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getMapTypeCSAccess().getLeftParenthesisKeyword_1_0());

                    }
                    // InternalQVTimperative.g:7480:1: ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:7481:1: (lv_ownedKeyType_2_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:7481:1: (lv_ownedKeyType_2_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:7482:3: lv_ownedKeyType_2_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getMapTypeCSAccess().getOwnedKeyTypeTypeExpCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_118);
                    lv_ownedKeyType_2_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMapTypeCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedKeyType",
                              		lv_ownedKeyType_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getMapTypeCSAccess().getCommaKeyword_1_2());

                    }
                    // InternalQVTimperative.g:7502:1: ( (lv_ownedValueType_4_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:7503:1: (lv_ownedValueType_4_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:7503:1: (lv_ownedValueType_4_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:7504:3: lv_ownedValueType_4_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getMapTypeCSAccess().getOwnedValueTypeTypeExpCSParserRuleCall_1_3_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_117);
                    lv_ownedValueType_4_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMapTypeCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedValueType",
                              		lv_ownedValueType_4_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    otherlv_5=(Token)match(input,56,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getMapTypeCSAccess().getRightParenthesisKeyword_1_4());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapTypeCS"


    // $ANTLR start "entryRuleTupleTypeCS"
    // InternalQVTimperative.g:7532:1: entryRuleTupleTypeCS returns [EObject current=null] : iv_ruleTupleTypeCS= ruleTupleTypeCS EOF ;
    public final EObject entryRuleTupleTypeCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTupleTypeCS = null;


        try {
            // InternalQVTimperative.g:7533:2: (iv_ruleTupleTypeCS= ruleTupleTypeCS EOF )
            // InternalQVTimperative.g:7534:2: iv_ruleTupleTypeCS= ruleTupleTypeCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTupleTypeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTupleTypeCS=ruleTupleTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTupleTypeCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTupleTypeCS"


    // $ANTLR start "ruleTupleTypeCS"
    // InternalQVTimperative.g:7541:1: ruleTupleTypeCS returns [EObject current=null] : ( ( (lv_name_0_0= 'Tuple' ) ) (otherlv_1= '(' ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )? otherlv_5= ')' )? ) ;
    public final EObject ruleTupleTypeCS() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_ownedParts_2_0 = null;

        EObject lv_ownedParts_4_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:7544:28: ( ( ( (lv_name_0_0= 'Tuple' ) ) (otherlv_1= '(' ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )? otherlv_5= ')' )? ) )
            // InternalQVTimperative.g:7545:1: ( ( (lv_name_0_0= 'Tuple' ) ) (otherlv_1= '(' ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )? otherlv_5= ')' )? )
            {
            // InternalQVTimperative.g:7545:1: ( ( (lv_name_0_0= 'Tuple' ) ) (otherlv_1= '(' ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )? otherlv_5= ')' )? )
            // InternalQVTimperative.g:7545:2: ( (lv_name_0_0= 'Tuple' ) ) (otherlv_1= '(' ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )? otherlv_5= ')' )?
            {
            // InternalQVTimperative.g:7545:2: ( (lv_name_0_0= 'Tuple' ) )
            // InternalQVTimperative.g:7546:1: (lv_name_0_0= 'Tuple' )
            {
            // InternalQVTimperative.g:7546:1: (lv_name_0_0= 'Tuple' )
            // InternalQVTimperative.g:7547:3: lv_name_0_0= 'Tuple'
            {
            lv_name_0_0=(Token)match(input,119,FollowSets000.FOLLOW_115); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_name_0_0, grammarAccess.getTupleTypeCSAccess().getNameTupleKeyword_0_0());

            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getTupleTypeCSRule());
              	        }
                     		setWithLastConsumed(current, "name", lv_name_0_0, "Tuple");

            }

            }


            }

            // InternalQVTimperative.g:7560:2: (otherlv_1= '(' ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )? otherlv_5= ')' )?
            int alt180=2;
            int LA180_0 = input.LA(1);

            if ( (LA180_0==55) ) {
                alt180=1;
            }
            switch (alt180) {
                case 1 :
                    // InternalQVTimperative.g:7560:4: otherlv_1= '(' ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )? otherlv_5= ')'
                    {
                    otherlv_1=(Token)match(input,55,FollowSets000.FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getTupleTypeCSAccess().getLeftParenthesisKeyword_1_0());

                    }
                    // InternalQVTimperative.g:7564:1: ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )?
                    int alt179=2;
                    int LA179_0 = input.LA(1);

                    if ( ((LA179_0>=RULE_SIMPLE_ID && LA179_0<=RULE_ESCAPED_ID)||LA179_0==17||LA179_0==19||(LA179_0>=22 && LA179_0<=23)||(LA179_0>=25 && LA179_0<=26)||(LA179_0>=29 && LA179_0<=33)||LA179_0==39||(LA179_0>=43 && LA179_0<=51)||(LA179_0>=53 && LA179_0<=54)||(LA179_0>=57 && LA179_0<=59)||(LA179_0>=61 && LA179_0<=66)||LA179_0==68||LA179_0==70||LA179_0==72||LA179_0==75||LA179_0==77||LA179_0==79||(LA179_0>=81 && LA179_0<=85)||(LA179_0>=87 && LA179_0<=92)||LA179_0==94||LA179_0==96||(LA179_0>=98 && LA179_0<=101)) ) {
                        alt179=1;
                    }
                    switch (alt179) {
                        case 1 :
                            // InternalQVTimperative.g:7564:2: ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )*
                            {
                            // InternalQVTimperative.g:7564:2: ( (lv_ownedParts_2_0= ruleTuplePartCS ) )
                            // InternalQVTimperative.g:7565:1: (lv_ownedParts_2_0= ruleTuplePartCS )
                            {
                            // InternalQVTimperative.g:7565:1: (lv_ownedParts_2_0= ruleTuplePartCS )
                            // InternalQVTimperative.g:7566:3: lv_ownedParts_2_0= ruleTuplePartCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getTupleTypeCSAccess().getOwnedPartsTuplePartCSParserRuleCall_1_1_0_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_58);
                            lv_ownedParts_2_0=ruleTuplePartCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTupleTypeCSRule());
                              	        }
                                     		add(
                                     			current,
                                     			"ownedParts",
                                      		lv_ownedParts_2_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TuplePartCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }

                            // InternalQVTimperative.g:7582:2: (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )*
                            loop178:
                            do {
                                int alt178=2;
                                int LA178_0 = input.LA(1);

                                if ( (LA178_0==18) ) {
                                    alt178=1;
                                }


                                switch (alt178) {
                            	case 1 :
                            	    // InternalQVTimperative.g:7582:4: otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) )
                            	    {
                            	    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_3, grammarAccess.getTupleTypeCSAccess().getCommaKeyword_1_1_1_0());

                            	    }
                            	    // InternalQVTimperative.g:7586:1: ( (lv_ownedParts_4_0= ruleTuplePartCS ) )
                            	    // InternalQVTimperative.g:7587:1: (lv_ownedParts_4_0= ruleTuplePartCS )
                            	    {
                            	    // InternalQVTimperative.g:7587:1: (lv_ownedParts_4_0= ruleTuplePartCS )
                            	    // InternalQVTimperative.g:7588:3: lv_ownedParts_4_0= ruleTuplePartCS
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      	        newCompositeNode(grammarAccess.getTupleTypeCSAccess().getOwnedPartsTuplePartCSParserRuleCall_1_1_1_1_0());

                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_58);
                            	    lv_ownedParts_4_0=ruleTuplePartCS();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getTupleTypeCSRule());
                            	      	        }
                            	             		add(
                            	             			current,
                            	             			"ownedParts",
                            	              		lv_ownedParts_4_0,
                            	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TuplePartCS");
                            	      	        afterParserOrEnumRuleCall();

                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop178;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_5=(Token)match(input,56,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getTupleTypeCSAccess().getRightParenthesisKeyword_1_2());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTupleTypeCS"


    // $ANTLR start "entryRuleTuplePartCS"
    // InternalQVTimperative.g:7616:1: entryRuleTuplePartCS returns [EObject current=null] : iv_ruleTuplePartCS= ruleTuplePartCS EOF ;
    public final EObject entryRuleTuplePartCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTuplePartCS = null;


        try {
            // InternalQVTimperative.g:7617:2: (iv_ruleTuplePartCS= ruleTuplePartCS EOF )
            // InternalQVTimperative.g:7618:2: iv_ruleTuplePartCS= ruleTuplePartCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTuplePartCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTuplePartCS=ruleTuplePartCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTuplePartCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTuplePartCS"


    // $ANTLR start "ruleTuplePartCS"
    // InternalQVTimperative.g:7625:1: ruleTuplePartCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) ) ;
    public final EObject ruleTuplePartCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedType_2_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:7628:28: ( ( ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) ) )
            // InternalQVTimperative.g:7629:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )
            {
            // InternalQVTimperative.g:7629:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )
            // InternalQVTimperative.g:7629:2: ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) )
            {
            // InternalQVTimperative.g:7629:2: ( (lv_name_0_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:7630:1: (lv_name_0_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:7630:1: (lv_name_0_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:7631:3: lv_name_0_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTuplePartCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_11);
            lv_name_0_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTuplePartCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_0_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_1=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getTuplePartCSAccess().getColonKeyword_1());

            }
            // InternalQVTimperative.g:7651:1: ( (lv_ownedType_2_0= ruleTypeExpCS ) )
            // InternalQVTimperative.g:7652:1: (lv_ownedType_2_0= ruleTypeExpCS )
            {
            // InternalQVTimperative.g:7652:1: (lv_ownedType_2_0= ruleTypeExpCS )
            // InternalQVTimperative.g:7653:3: lv_ownedType_2_0= ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTuplePartCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedType_2_0=ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTuplePartCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedType",
                      		lv_ownedType_2_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTuplePartCS"


    // $ANTLR start "entryRuleCollectionLiteralExpCS"
    // InternalQVTimperative.g:7677:1: entryRuleCollectionLiteralExpCS returns [EObject current=null] : iv_ruleCollectionLiteralExpCS= ruleCollectionLiteralExpCS EOF ;
    public final EObject entryRuleCollectionLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCollectionLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:7678:2: (iv_ruleCollectionLiteralExpCS= ruleCollectionLiteralExpCS EOF )
            // InternalQVTimperative.g:7679:2: iv_ruleCollectionLiteralExpCS= ruleCollectionLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCollectionLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCollectionLiteralExpCS=ruleCollectionLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCollectionLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCollectionLiteralExpCS"


    // $ANTLR start "ruleCollectionLiteralExpCS"
    // InternalQVTimperative.g:7686:1: ruleCollectionLiteralExpCS returns [EObject current=null] : ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleCollectionLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_ownedType_0_0 = null;

        EObject lv_ownedParts_2_0 = null;

        EObject lv_ownedParts_4_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:7689:28: ( ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )* )? otherlv_5= '}' ) )
            // InternalQVTimperative.g:7690:1: ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )* )? otherlv_5= '}' )
            {
            // InternalQVTimperative.g:7690:1: ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )* )? otherlv_5= '}' )
            // InternalQVTimperative.g:7690:2: ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )* )? otherlv_5= '}'
            {
            // InternalQVTimperative.g:7690:2: ( (lv_ownedType_0_0= ruleCollectionTypeCS ) )
            // InternalQVTimperative.g:7691:1: (lv_ownedType_0_0= ruleCollectionTypeCS )
            {
            // InternalQVTimperative.g:7691:1: (lv_ownedType_0_0= ruleCollectionTypeCS )
            // InternalQVTimperative.g:7692:3: lv_ownedType_0_0= ruleCollectionTypeCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedTypeCollectionTypeCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_31);
            lv_ownedType_0_0=ruleCollectionTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCollectionLiteralExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedType",
                      		lv_ownedType_0_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CollectionTypeCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_1=(Token)match(input,35,FollowSets000.FOLLOW_119); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getCollectionLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());

            }
            // InternalQVTimperative.g:7712:1: ( ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )* )?
            int alt182=2;
            int LA182_0 = input.LA(1);

            if ( (LA182_0==RULE_SINGLE_QUOTED_STRING||(LA182_0>=RULE_INT && LA182_0<=RULE_ESCAPED_ID)||LA182_0==17||LA182_0==19||(LA182_0>=22 && LA182_0<=26)||(LA182_0>=29 && LA182_0<=33)||LA182_0==39||(LA182_0>=42 && LA182_0<=51)||(LA182_0>=53 && LA182_0<=55)||(LA182_0>=57 && LA182_0<=59)||(LA182_0>=61 && LA182_0<=66)||LA182_0==68||LA182_0==70||LA182_0==72||LA182_0==75||LA182_0==77||LA182_0==79||(LA182_0>=81 && LA182_0<=85)||(LA182_0>=87 && LA182_0<=92)||LA182_0==94||LA182_0==96||(LA182_0>=98 && LA182_0<=103)||(LA182_0>=118 && LA182_0<=132)||LA182_0==134||(LA182_0>=136 && LA182_0<=139)||LA182_0==145||(LA182_0>=150 && LA182_0<=151)) ) {
                alt182=1;
            }
            switch (alt182) {
                case 1 :
                    // InternalQVTimperative.g:7712:2: ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )*
                    {
                    // InternalQVTimperative.g:7712:2: ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) )
                    // InternalQVTimperative.g:7713:1: (lv_ownedParts_2_0= ruleCollectionLiteralPartCS )
                    {
                    // InternalQVTimperative.g:7713:1: (lv_ownedParts_2_0= ruleCollectionLiteralPartCS )
                    // InternalQVTimperative.g:7714:3: lv_ownedParts_2_0= ruleCollectionLiteralPartCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedPartsCollectionLiteralPartCSParserRuleCall_2_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_120);
                    lv_ownedParts_2_0=ruleCollectionLiteralPartCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCollectionLiteralExpCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedParts",
                              		lv_ownedParts_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CollectionLiteralPartCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:7730:2: (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )*
                    loop181:
                    do {
                        int alt181=2;
                        int LA181_0 = input.LA(1);

                        if ( (LA181_0==18) ) {
                            alt181=1;
                        }


                        switch (alt181) {
                    	case 1 :
                    	    // InternalQVTimperative.g:7730:4: otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) )
                    	    {
                    	    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_121); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getCollectionLiteralExpCSAccess().getCommaKeyword_2_1_0());

                    	    }
                    	    // InternalQVTimperative.g:7734:1: ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) )
                    	    // InternalQVTimperative.g:7735:1: (lv_ownedParts_4_0= ruleCollectionLiteralPartCS )
                    	    {
                    	    // InternalQVTimperative.g:7735:1: (lv_ownedParts_4_0= ruleCollectionLiteralPartCS )
                    	    // InternalQVTimperative.g:7736:3: lv_ownedParts_4_0= ruleCollectionLiteralPartCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedPartsCollectionLiteralPartCSParserRuleCall_2_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_120);
                    	    lv_ownedParts_4_0=ruleCollectionLiteralPartCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getCollectionLiteralExpCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedParts",
                    	              		lv_ownedParts_4_0,
                    	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CollectionLiteralPartCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop181;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getCollectionLiteralExpCSAccess().getRightCurlyBracketKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCollectionLiteralExpCS"


    // $ANTLR start "entryRuleCollectionLiteralPartCS"
    // InternalQVTimperative.g:7764:1: entryRuleCollectionLiteralPartCS returns [EObject current=null] : iv_ruleCollectionLiteralPartCS= ruleCollectionLiteralPartCS EOF ;
    public final EObject entryRuleCollectionLiteralPartCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCollectionLiteralPartCS = null;


        try {
            // InternalQVTimperative.g:7765:2: (iv_ruleCollectionLiteralPartCS= ruleCollectionLiteralPartCS EOF )
            // InternalQVTimperative.g:7766:2: iv_ruleCollectionLiteralPartCS= ruleCollectionLiteralPartCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCollectionLiteralPartCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCollectionLiteralPartCS=ruleCollectionLiteralPartCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCollectionLiteralPartCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCollectionLiteralPartCS"


    // $ANTLR start "ruleCollectionLiteralPartCS"
    // InternalQVTimperative.g:7773:1: ruleCollectionLiteralPartCS returns [EObject current=null] : ( ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )? ) | ( (lv_ownedExpression_3_0= rulePatternExpCS ) ) ) ;
    public final EObject ruleCollectionLiteralPartCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedExpression_0_0 = null;

        EObject lv_ownedLastExpression_2_0 = null;

        EObject lv_ownedExpression_3_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:7776:28: ( ( ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )? ) | ( (lv_ownedExpression_3_0= rulePatternExpCS ) ) ) )
            // InternalQVTimperative.g:7777:1: ( ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )? ) | ( (lv_ownedExpression_3_0= rulePatternExpCS ) ) )
            {
            // InternalQVTimperative.g:7777:1: ( ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )? ) | ( (lv_ownedExpression_3_0= rulePatternExpCS ) ) )
            int alt184=2;
            alt184 = dfa184.predict(input);
            switch (alt184) {
                case 1 :
                    // InternalQVTimperative.g:7777:2: ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )? )
                    {
                    // InternalQVTimperative.g:7777:2: ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )? )
                    // InternalQVTimperative.g:7777:3: ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )?
                    {
                    // InternalQVTimperative.g:7777:3: ( (lv_ownedExpression_0_0= ruleExpCS ) )
                    // InternalQVTimperative.g:7778:1: (lv_ownedExpression_0_0= ruleExpCS )
                    {
                    // InternalQVTimperative.g:7778:1: (lv_ownedExpression_0_0= ruleExpCS )
                    // InternalQVTimperative.g:7779:3: lv_ownedExpression_0_0= ruleExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedExpressionExpCSParserRuleCall_0_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_122);
                    lv_ownedExpression_0_0=ruleExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCollectionLiteralPartCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedExpression",
                              		lv_ownedExpression_0_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:7795:2: (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )?
                    int alt183=2;
                    int LA183_0 = input.LA(1);

                    if ( (LA183_0==27) ) {
                        alt183=1;
                    }
                    switch (alt183) {
                        case 1 :
                            // InternalQVTimperative.g:7795:4: otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) )
                            {
                            otherlv_1=(Token)match(input,27,FollowSets000.FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_1, grammarAccess.getCollectionLiteralPartCSAccess().getFullStopFullStopKeyword_0_1_0());

                            }
                            // InternalQVTimperative.g:7799:1: ( (lv_ownedLastExpression_2_0= ruleExpCS ) )
                            // InternalQVTimperative.g:7800:1: (lv_ownedLastExpression_2_0= ruleExpCS )
                            {
                            // InternalQVTimperative.g:7800:1: (lv_ownedLastExpression_2_0= ruleExpCS )
                            // InternalQVTimperative.g:7801:3: lv_ownedLastExpression_2_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedLastExpressionExpCSParserRuleCall_0_1_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedLastExpression_2_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getCollectionLiteralPartCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedLastExpression",
                                      		lv_ownedLastExpression_2_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:7818:6: ( (lv_ownedExpression_3_0= rulePatternExpCS ) )
                    {
                    // InternalQVTimperative.g:7818:6: ( (lv_ownedExpression_3_0= rulePatternExpCS ) )
                    // InternalQVTimperative.g:7819:1: (lv_ownedExpression_3_0= rulePatternExpCS )
                    {
                    // InternalQVTimperative.g:7819:1: (lv_ownedExpression_3_0= rulePatternExpCS )
                    // InternalQVTimperative.g:7820:3: lv_ownedExpression_3_0= rulePatternExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedExpressionPatternExpCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedExpression_3_0=rulePatternExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCollectionLiteralPartCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedExpression",
                              		lv_ownedExpression_3_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PatternExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCollectionLiteralPartCS"


    // $ANTLR start "entryRuleCollectionPatternCS"
    // InternalQVTimperative.g:7844:1: entryRuleCollectionPatternCS returns [EObject current=null] : iv_ruleCollectionPatternCS= ruleCollectionPatternCS EOF ;
    public final EObject entryRuleCollectionPatternCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCollectionPatternCS = null;


        try {
            // InternalQVTimperative.g:7845:2: (iv_ruleCollectionPatternCS= ruleCollectionPatternCS EOF )
            // InternalQVTimperative.g:7846:2: iv_ruleCollectionPatternCS= ruleCollectionPatternCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCollectionPatternCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCollectionPatternCS=ruleCollectionPatternCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCollectionPatternCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCollectionPatternCS"


    // $ANTLR start "ruleCollectionPatternCS"
    // InternalQVTimperative.g:7853:1: ruleCollectionPatternCS returns [EObject current=null] : ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= rulePatternExpCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )* (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) ) )? otherlv_7= '}' ) ;
    public final EObject ruleCollectionPatternCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_ownedType_0_0 = null;

        EObject lv_ownedParts_2_0 = null;

        EObject lv_ownedParts_4_0 = null;

        AntlrDatatypeRuleToken lv_restVariableName_6_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:7856:28: ( ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= rulePatternExpCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )* (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) ) )? otherlv_7= '}' ) )
            // InternalQVTimperative.g:7857:1: ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= rulePatternExpCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )* (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) ) )? otherlv_7= '}' )
            {
            // InternalQVTimperative.g:7857:1: ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= rulePatternExpCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )* (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) ) )? otherlv_7= '}' )
            // InternalQVTimperative.g:7857:2: ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= rulePatternExpCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )* (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) ) )? otherlv_7= '}'
            {
            // InternalQVTimperative.g:7857:2: ( (lv_ownedType_0_0= ruleCollectionTypeCS ) )
            // InternalQVTimperative.g:7858:1: (lv_ownedType_0_0= ruleCollectionTypeCS )
            {
            // InternalQVTimperative.g:7858:1: (lv_ownedType_0_0= ruleCollectionTypeCS )
            // InternalQVTimperative.g:7859:3: lv_ownedType_0_0= ruleCollectionTypeCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getCollectionPatternCSAccess().getOwnedTypeCollectionTypeCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_31);
            lv_ownedType_0_0=ruleCollectionTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCollectionPatternCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedType",
                      		lv_ownedType_0_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CollectionTypeCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_1=(Token)match(input,35,FollowSets000.FOLLOW_119); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getCollectionPatternCSAccess().getLeftCurlyBracketKeyword_1());

            }
            // InternalQVTimperative.g:7879:1: ( ( (lv_ownedParts_2_0= rulePatternExpCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )* (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) ) )?
            int alt186=2;
            int LA186_0 = input.LA(1);

            if ( ((LA186_0>=RULE_SIMPLE_ID && LA186_0<=RULE_ESCAPED_ID)||LA186_0==17||LA186_0==19||(LA186_0>=22 && LA186_0<=26)||(LA186_0>=29 && LA186_0<=33)||LA186_0==39||(LA186_0>=43 && LA186_0<=51)||(LA186_0>=53 && LA186_0<=54)||(LA186_0>=57 && LA186_0<=59)||(LA186_0>=61 && LA186_0<=66)||LA186_0==68||LA186_0==70||LA186_0==72||LA186_0==75||LA186_0==77||LA186_0==79||(LA186_0>=81 && LA186_0<=85)||(LA186_0>=87 && LA186_0<=92)||LA186_0==94||LA186_0==96||(LA186_0>=98 && LA186_0<=101)) ) {
                alt186=1;
            }
            switch (alt186) {
                case 1 :
                    // InternalQVTimperative.g:7879:2: ( (lv_ownedParts_2_0= rulePatternExpCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )* (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) )
                    {
                    // InternalQVTimperative.g:7879:2: ( (lv_ownedParts_2_0= rulePatternExpCS ) )
                    // InternalQVTimperative.g:7880:1: (lv_ownedParts_2_0= rulePatternExpCS )
                    {
                    // InternalQVTimperative.g:7880:1: (lv_ownedParts_2_0= rulePatternExpCS )
                    // InternalQVTimperative.g:7881:3: lv_ownedParts_2_0= rulePatternExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getCollectionPatternCSAccess().getOwnedPartsPatternExpCSParserRuleCall_2_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_123);
                    lv_ownedParts_2_0=rulePatternExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCollectionPatternCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedParts",
                              		lv_ownedParts_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PatternExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:7897:2: (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )*
                    loop185:
                    do {
                        int alt185=2;
                        int LA185_0 = input.LA(1);

                        if ( (LA185_0==18) ) {
                            alt185=1;
                        }


                        switch (alt185) {
                    	case 1 :
                    	    // InternalQVTimperative.g:7897:4: otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) )
                    	    {
                    	    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_121); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getCollectionPatternCSAccess().getCommaKeyword_2_1_0());

                    	    }
                    	    // InternalQVTimperative.g:7901:1: ( (lv_ownedParts_4_0= rulePatternExpCS ) )
                    	    // InternalQVTimperative.g:7902:1: (lv_ownedParts_4_0= rulePatternExpCS )
                    	    {
                    	    // InternalQVTimperative.g:7902:1: (lv_ownedParts_4_0= rulePatternExpCS )
                    	    // InternalQVTimperative.g:7903:3: lv_ownedParts_4_0= rulePatternExpCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getCollectionPatternCSAccess().getOwnedPartsPatternExpCSParserRuleCall_2_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_123);
                    	    lv_ownedParts_4_0=rulePatternExpCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getCollectionPatternCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedParts",
                    	              		lv_ownedParts_4_0,
                    	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PatternExpCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop185;
                        }
                    } while (true);

                    // InternalQVTimperative.g:7919:4: (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) )
                    // InternalQVTimperative.g:7919:6: otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) )
                    {
                    otherlv_5=(Token)match(input,133,FollowSets000.FOLLOW_124); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getCollectionPatternCSAccess().getPlusSignPlusSignKeyword_2_2_0());

                    }
                    // InternalQVTimperative.g:7923:1: ( (lv_restVariableName_6_0= ruleIdentifier ) )
                    // InternalQVTimperative.g:7924:1: (lv_restVariableName_6_0= ruleIdentifier )
                    {
                    // InternalQVTimperative.g:7924:1: (lv_restVariableName_6_0= ruleIdentifier )
                    // InternalQVTimperative.g:7925:3: lv_restVariableName_6_0= ruleIdentifier
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getCollectionPatternCSAccess().getRestVariableNameIdentifierParserRuleCall_2_2_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_60);
                    lv_restVariableName_6_0=ruleIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCollectionPatternCSRule());
                      	        }
                             		set(
                             			current,
                             			"restVariableName",
                              		lv_restVariableName_6_0,
                              		"org.eclipse.ocl.xtext.base.Base.Identifier");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getCollectionPatternCSAccess().getRightCurlyBracketKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCollectionPatternCS"


    // $ANTLR start "entryRuleShadowPartCS"
    // InternalQVTimperative.g:7953:1: entryRuleShadowPartCS returns [EObject current=null] : iv_ruleShadowPartCS= ruleShadowPartCS EOF ;
    public final EObject entryRuleShadowPartCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShadowPartCS = null;


        try {
            // InternalQVTimperative.g:7954:2: (iv_ruleShadowPartCS= ruleShadowPartCS EOF )
            // InternalQVTimperative.g:7955:2: iv_ruleShadowPartCS= ruleShadowPartCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShadowPartCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleShadowPartCS=ruleShadowPartCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShadowPartCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShadowPartCS"


    // $ANTLR start "ruleShadowPartCS"
    // InternalQVTimperative.g:7962:1: ruleShadowPartCS returns [EObject current=null] : ( ( ( ( ruleUnrestrictedName ) ) otherlv_1= '=' ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) ) ) | ( (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS ) ) ) ;
    public final EObject ruleShadowPartCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedInitExpression_2_1 = null;

        EObject lv_ownedInitExpression_2_2 = null;

        EObject lv_ownedInitExpression_3_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:7965:28: ( ( ( ( ( ruleUnrestrictedName ) ) otherlv_1= '=' ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) ) ) | ( (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS ) ) ) )
            // InternalQVTimperative.g:7966:1: ( ( ( ( ruleUnrestrictedName ) ) otherlv_1= '=' ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) ) ) | ( (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS ) ) )
            {
            // InternalQVTimperative.g:7966:1: ( ( ( ( ruleUnrestrictedName ) ) otherlv_1= '=' ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) ) ) | ( (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS ) ) )
            int alt188=2;
            int LA188_0 = input.LA(1);

            if ( ((LA188_0>=RULE_SIMPLE_ID && LA188_0<=RULE_ESCAPED_ID)||LA188_0==17||LA188_0==19||(LA188_0>=22 && LA188_0<=23)||(LA188_0>=25 && LA188_0<=26)||(LA188_0>=29 && LA188_0<=33)||LA188_0==39||(LA188_0>=43 && LA188_0<=51)||(LA188_0>=53 && LA188_0<=54)||(LA188_0>=57 && LA188_0<=59)||(LA188_0>=61 && LA188_0<=66)||LA188_0==68||LA188_0==70||LA188_0==72||LA188_0==75||LA188_0==77||LA188_0==79||(LA188_0>=81 && LA188_0<=85)||(LA188_0>=87 && LA188_0<=92)||LA188_0==94||LA188_0==96||(LA188_0>=98 && LA188_0<=101)) ) {
                alt188=1;
            }
            else if ( (LA188_0==RULE_SINGLE_QUOTED_STRING) ) {
                alt188=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 188, 0, input);

                throw nvae;
            }
            switch (alt188) {
                case 1 :
                    // InternalQVTimperative.g:7966:2: ( ( ( ruleUnrestrictedName ) ) otherlv_1= '=' ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) ) )
                    {
                    // InternalQVTimperative.g:7966:2: ( ( ( ruleUnrestrictedName ) ) otherlv_1= '=' ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) ) )
                    // InternalQVTimperative.g:7966:3: ( ( ruleUnrestrictedName ) ) otherlv_1= '=' ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) )
                    {
                    // InternalQVTimperative.g:7966:3: ( ( ruleUnrestrictedName ) )
                    // InternalQVTimperative.g:7967:1: ( ruleUnrestrictedName )
                    {
                    // InternalQVTimperative.g:7967:1: ( ruleUnrestrictedName )
                    // InternalQVTimperative.g:7968:3: ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      		  /* */

                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getShadowPartCSRule());
                      	        }

                    }
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getShadowPartCSAccess().getReferredPropertyPropertyCrossReference_0_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_125);
                    ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    otherlv_1=(Token)match(input,52,FollowSets000.FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getShadowPartCSAccess().getEqualsSignKeyword_0_1());

                    }
                    // InternalQVTimperative.g:7988:1: ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) )
                    // InternalQVTimperative.g:7989:1: ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) )
                    {
                    // InternalQVTimperative.g:7989:1: ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) )
                    // InternalQVTimperative.g:7990:1: (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS )
                    {
                    // InternalQVTimperative.g:7990:1: (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS )
                    int alt187=2;
                    alt187 = dfa187.predict(input);
                    switch (alt187) {
                        case 1 :
                            // InternalQVTimperative.g:7991:3: lv_ownedInitExpression_2_1= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getShadowPartCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_2_0_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedInitExpression_2_1=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getShadowPartCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedInitExpression",
                                      		lv_ownedInitExpression_2_1,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }
                            break;
                        case 2 :
                            // InternalQVTimperative.g:8006:8: lv_ownedInitExpression_2_2= rulePatternExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getShadowPartCSAccess().getOwnedInitExpressionPatternExpCSParserRuleCall_0_2_0_1());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedInitExpression_2_2=rulePatternExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getShadowPartCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedInitExpression",
                                      		lv_ownedInitExpression_2_2,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PatternExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:8025:6: ( (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS ) )
                    {
                    // InternalQVTimperative.g:8025:6: ( (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS ) )
                    // InternalQVTimperative.g:8026:1: (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS )
                    {
                    // InternalQVTimperative.g:8026:1: (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS )
                    // InternalQVTimperative.g:8027:3: lv_ownedInitExpression_3_0= ruleStringLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getShadowPartCSAccess().getOwnedInitExpressionStringLiteralExpCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedInitExpression_3_0=ruleStringLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getShadowPartCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedInitExpression",
                              		lv_ownedInitExpression_3_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.StringLiteralExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShadowPartCS"


    // $ANTLR start "entryRulePatternExpCS"
    // InternalQVTimperative.g:8051:1: entryRulePatternExpCS returns [EObject current=null] : iv_rulePatternExpCS= rulePatternExpCS EOF ;
    public final EObject entryRulePatternExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePatternExpCS = null;


        try {
            // InternalQVTimperative.g:8052:2: (iv_rulePatternExpCS= rulePatternExpCS EOF )
            // InternalQVTimperative.g:8053:2: iv_rulePatternExpCS= rulePatternExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPatternExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePatternExpCS=rulePatternExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePatternExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePatternExpCS"


    // $ANTLR start "rulePatternExpCS"
    // InternalQVTimperative.g:8060:1: rulePatternExpCS returns [EObject current=null] : ( ( (lv_patternVariableName_0_0= ruleUnrestrictedName ) )? otherlv_1= ':' ( (lv_ownedPatternType_2_0= ruleTypeExpCS ) ) ) ;
    public final EObject rulePatternExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_patternVariableName_0_0 = null;

        EObject lv_ownedPatternType_2_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:8063:28: ( ( ( (lv_patternVariableName_0_0= ruleUnrestrictedName ) )? otherlv_1= ':' ( (lv_ownedPatternType_2_0= ruleTypeExpCS ) ) ) )
            // InternalQVTimperative.g:8064:1: ( ( (lv_patternVariableName_0_0= ruleUnrestrictedName ) )? otherlv_1= ':' ( (lv_ownedPatternType_2_0= ruleTypeExpCS ) ) )
            {
            // InternalQVTimperative.g:8064:1: ( ( (lv_patternVariableName_0_0= ruleUnrestrictedName ) )? otherlv_1= ':' ( (lv_ownedPatternType_2_0= ruleTypeExpCS ) ) )
            // InternalQVTimperative.g:8064:2: ( (lv_patternVariableName_0_0= ruleUnrestrictedName ) )? otherlv_1= ':' ( (lv_ownedPatternType_2_0= ruleTypeExpCS ) )
            {
            // InternalQVTimperative.g:8064:2: ( (lv_patternVariableName_0_0= ruleUnrestrictedName ) )?
            int alt189=2;
            int LA189_0 = input.LA(1);

            if ( ((LA189_0>=RULE_SIMPLE_ID && LA189_0<=RULE_ESCAPED_ID)||LA189_0==17||LA189_0==19||(LA189_0>=22 && LA189_0<=23)||(LA189_0>=25 && LA189_0<=26)||(LA189_0>=29 && LA189_0<=33)||LA189_0==39||(LA189_0>=43 && LA189_0<=51)||(LA189_0>=53 && LA189_0<=54)||(LA189_0>=57 && LA189_0<=59)||(LA189_0>=61 && LA189_0<=66)||LA189_0==68||LA189_0==70||LA189_0==72||LA189_0==75||LA189_0==77||LA189_0==79||(LA189_0>=81 && LA189_0<=85)||(LA189_0>=87 && LA189_0<=92)||LA189_0==94||LA189_0==96||(LA189_0>=98 && LA189_0<=101)) ) {
                alt189=1;
            }
            switch (alt189) {
                case 1 :
                    // InternalQVTimperative.g:8065:1: (lv_patternVariableName_0_0= ruleUnrestrictedName )
                    {
                    // InternalQVTimperative.g:8065:1: (lv_patternVariableName_0_0= ruleUnrestrictedName )
                    // InternalQVTimperative.g:8066:3: lv_patternVariableName_0_0= ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getPatternExpCSAccess().getPatternVariableNameUnrestrictedNameParserRuleCall_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_patternVariableName_0_0=ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPatternExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"patternVariableName",
                              		lv_patternVariableName_0_0,
                              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPatternExpCSAccess().getColonKeyword_1());

            }
            // InternalQVTimperative.g:8086:1: ( (lv_ownedPatternType_2_0= ruleTypeExpCS ) )
            // InternalQVTimperative.g:8087:1: (lv_ownedPatternType_2_0= ruleTypeExpCS )
            {
            // InternalQVTimperative.g:8087:1: (lv_ownedPatternType_2_0= ruleTypeExpCS )
            // InternalQVTimperative.g:8088:3: lv_ownedPatternType_2_0= ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getPatternExpCSAccess().getOwnedPatternTypeTypeExpCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedPatternType_2_0=ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPatternExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedPatternType",
                      		lv_ownedPatternType_2_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePatternExpCS"


    // $ANTLR start "entryRuleLambdaLiteralExpCS"
    // InternalQVTimperative.g:8112:1: entryRuleLambdaLiteralExpCS returns [EObject current=null] : iv_ruleLambdaLiteralExpCS= ruleLambdaLiteralExpCS EOF ;
    public final EObject entryRuleLambdaLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLambdaLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:8113:2: (iv_ruleLambdaLiteralExpCS= ruleLambdaLiteralExpCS EOF )
            // InternalQVTimperative.g:8114:2: iv_ruleLambdaLiteralExpCS= ruleLambdaLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLambdaLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLambdaLiteralExpCS=ruleLambdaLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLambdaLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLambdaLiteralExpCS"


    // $ANTLR start "ruleLambdaLiteralExpCS"
    // InternalQVTimperative.g:8121:1: ruleLambdaLiteralExpCS returns [EObject current=null] : (otherlv_0= 'Lambda' otherlv_1= '{' ( (lv_ownedExpressionCS_2_0= ruleExpCS ) ) otherlv_3= '}' ) ;
    public final EObject ruleLambdaLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_ownedExpressionCS_2_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:8124:28: ( (otherlv_0= 'Lambda' otherlv_1= '{' ( (lv_ownedExpressionCS_2_0= ruleExpCS ) ) otherlv_3= '}' ) )
            // InternalQVTimperative.g:8125:1: (otherlv_0= 'Lambda' otherlv_1= '{' ( (lv_ownedExpressionCS_2_0= ruleExpCS ) ) otherlv_3= '}' )
            {
            // InternalQVTimperative.g:8125:1: (otherlv_0= 'Lambda' otherlv_1= '{' ( (lv_ownedExpressionCS_2_0= ruleExpCS ) ) otherlv_3= '}' )
            // InternalQVTimperative.g:8125:3: otherlv_0= 'Lambda' otherlv_1= '{' ( (lv_ownedExpressionCS_2_0= ruleExpCS ) ) otherlv_3= '}'
            {
            otherlv_0=(Token)match(input,134,FollowSets000.FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getLambdaLiteralExpCSAccess().getLambdaKeyword_0());

            }
            otherlv_1=(Token)match(input,35,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getLambdaLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());

            }
            // InternalQVTimperative.g:8133:1: ( (lv_ownedExpressionCS_2_0= ruleExpCS ) )
            // InternalQVTimperative.g:8134:1: (lv_ownedExpressionCS_2_0= ruleExpCS )
            {
            // InternalQVTimperative.g:8134:1: (lv_ownedExpressionCS_2_0= ruleExpCS )
            // InternalQVTimperative.g:8135:3: lv_ownedExpressionCS_2_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getLambdaLiteralExpCSAccess().getOwnedExpressionCSExpCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_60);
            lv_ownedExpressionCS_2_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLambdaLiteralExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedExpressionCS",
                      		lv_ownedExpressionCS_2_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_3=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getLambdaLiteralExpCSAccess().getRightCurlyBracketKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLambdaLiteralExpCS"


    // $ANTLR start "entryRuleMapLiteralExpCS"
    // InternalQVTimperative.g:8163:1: entryRuleMapLiteralExpCS returns [EObject current=null] : iv_ruleMapLiteralExpCS= ruleMapLiteralExpCS EOF ;
    public final EObject entryRuleMapLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:8164:2: (iv_ruleMapLiteralExpCS= ruleMapLiteralExpCS EOF )
            // InternalQVTimperative.g:8165:2: iv_ruleMapLiteralExpCS= ruleMapLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMapLiteralExpCS=ruleMapLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapLiteralExpCS"


    // $ANTLR start "ruleMapLiteralExpCS"
    // InternalQVTimperative.g:8172:1: ruleMapLiteralExpCS returns [EObject current=null] : ( ( (lv_ownedType_0_0= ruleMapTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleMapLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_ownedType_0_0 = null;

        EObject lv_ownedParts_2_0 = null;

        EObject lv_ownedParts_4_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:8175:28: ( ( ( (lv_ownedType_0_0= ruleMapTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )* )? otherlv_5= '}' ) )
            // InternalQVTimperative.g:8176:1: ( ( (lv_ownedType_0_0= ruleMapTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )* )? otherlv_5= '}' )
            {
            // InternalQVTimperative.g:8176:1: ( ( (lv_ownedType_0_0= ruleMapTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )* )? otherlv_5= '}' )
            // InternalQVTimperative.g:8176:2: ( (lv_ownedType_0_0= ruleMapTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )* )? otherlv_5= '}'
            {
            // InternalQVTimperative.g:8176:2: ( (lv_ownedType_0_0= ruleMapTypeCS ) )
            // InternalQVTimperative.g:8177:1: (lv_ownedType_0_0= ruleMapTypeCS )
            {
            // InternalQVTimperative.g:8177:1: (lv_ownedType_0_0= ruleMapTypeCS )
            // InternalQVTimperative.g:8178:3: lv_ownedType_0_0= ruleMapTypeCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getMapLiteralExpCSAccess().getOwnedTypeMapTypeCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_31);
            lv_ownedType_0_0=ruleMapTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMapLiteralExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedType",
                      		lv_ownedType_0_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.MapTypeCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_1=(Token)match(input,35,FollowSets000.FOLLOW_126); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getMapLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());

            }
            // InternalQVTimperative.g:8198:1: ( ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )* )?
            int alt191=2;
            int LA191_0 = input.LA(1);

            if ( (LA191_0==RULE_SINGLE_QUOTED_STRING||(LA191_0>=RULE_INT && LA191_0<=RULE_ESCAPED_ID)||LA191_0==17||LA191_0==19||(LA191_0>=22 && LA191_0<=23)||(LA191_0>=25 && LA191_0<=26)||(LA191_0>=29 && LA191_0<=33)||LA191_0==39||(LA191_0>=42 && LA191_0<=51)||(LA191_0>=53 && LA191_0<=55)||(LA191_0>=57 && LA191_0<=59)||(LA191_0>=61 && LA191_0<=66)||LA191_0==68||LA191_0==70||LA191_0==72||LA191_0==75||LA191_0==77||LA191_0==79||(LA191_0>=81 && LA191_0<=85)||(LA191_0>=87 && LA191_0<=92)||LA191_0==94||LA191_0==96||(LA191_0>=98 && LA191_0<=103)||(LA191_0>=118 && LA191_0<=132)||LA191_0==134||(LA191_0>=136 && LA191_0<=139)||LA191_0==145||(LA191_0>=150 && LA191_0<=151)) ) {
                alt191=1;
            }
            switch (alt191) {
                case 1 :
                    // InternalQVTimperative.g:8198:2: ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )*
                    {
                    // InternalQVTimperative.g:8198:2: ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) )
                    // InternalQVTimperative.g:8199:1: (lv_ownedParts_2_0= ruleMapLiteralPartCS )
                    {
                    // InternalQVTimperative.g:8199:1: (lv_ownedParts_2_0= ruleMapLiteralPartCS )
                    // InternalQVTimperative.g:8200:3: lv_ownedParts_2_0= ruleMapLiteralPartCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getMapLiteralExpCSAccess().getOwnedPartsMapLiteralPartCSParserRuleCall_2_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_120);
                    lv_ownedParts_2_0=ruleMapLiteralPartCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMapLiteralExpCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedParts",
                              		lv_ownedParts_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.MapLiteralPartCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:8216:2: (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )*
                    loop190:
                    do {
                        int alt190=2;
                        int LA190_0 = input.LA(1);

                        if ( (LA190_0==18) ) {
                            alt190=1;
                        }


                        switch (alt190) {
                    	case 1 :
                    	    // InternalQVTimperative.g:8216:4: otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) )
                    	    {
                    	    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getMapLiteralExpCSAccess().getCommaKeyword_2_1_0());

                    	    }
                    	    // InternalQVTimperative.g:8220:1: ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) )
                    	    // InternalQVTimperative.g:8221:1: (lv_ownedParts_4_0= ruleMapLiteralPartCS )
                    	    {
                    	    // InternalQVTimperative.g:8221:1: (lv_ownedParts_4_0= ruleMapLiteralPartCS )
                    	    // InternalQVTimperative.g:8222:3: lv_ownedParts_4_0= ruleMapLiteralPartCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getMapLiteralExpCSAccess().getOwnedPartsMapLiteralPartCSParserRuleCall_2_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_120);
                    	    lv_ownedParts_4_0=ruleMapLiteralPartCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMapLiteralExpCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedParts",
                    	              		lv_ownedParts_4_0,
                    	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.MapLiteralPartCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop190;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getMapLiteralExpCSAccess().getRightCurlyBracketKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapLiteralExpCS"


    // $ANTLR start "entryRuleMapLiteralPartCS"
    // InternalQVTimperative.g:8250:1: entryRuleMapLiteralPartCS returns [EObject current=null] : iv_ruleMapLiteralPartCS= ruleMapLiteralPartCS EOF ;
    public final EObject entryRuleMapLiteralPartCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapLiteralPartCS = null;


        try {
            // InternalQVTimperative.g:8251:2: (iv_ruleMapLiteralPartCS= ruleMapLiteralPartCS EOF )
            // InternalQVTimperative.g:8252:2: iv_ruleMapLiteralPartCS= ruleMapLiteralPartCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapLiteralPartCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMapLiteralPartCS=ruleMapLiteralPartCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapLiteralPartCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapLiteralPartCS"


    // $ANTLR start "ruleMapLiteralPartCS"
    // InternalQVTimperative.g:8259:1: ruleMapLiteralPartCS returns [EObject current=null] : ( ( (lv_ownedKey_0_0= ruleExpCS ) ) otherlv_1= '<-' ( (lv_ownedValue_2_0= ruleExpCS ) ) ) ;
    public final EObject ruleMapLiteralPartCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedKey_0_0 = null;

        EObject lv_ownedValue_2_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:8262:28: ( ( ( (lv_ownedKey_0_0= ruleExpCS ) ) otherlv_1= '<-' ( (lv_ownedValue_2_0= ruleExpCS ) ) ) )
            // InternalQVTimperative.g:8263:1: ( ( (lv_ownedKey_0_0= ruleExpCS ) ) otherlv_1= '<-' ( (lv_ownedValue_2_0= ruleExpCS ) ) )
            {
            // InternalQVTimperative.g:8263:1: ( ( (lv_ownedKey_0_0= ruleExpCS ) ) otherlv_1= '<-' ( (lv_ownedValue_2_0= ruleExpCS ) ) )
            // InternalQVTimperative.g:8263:2: ( (lv_ownedKey_0_0= ruleExpCS ) ) otherlv_1= '<-' ( (lv_ownedValue_2_0= ruleExpCS ) )
            {
            // InternalQVTimperative.g:8263:2: ( (lv_ownedKey_0_0= ruleExpCS ) )
            // InternalQVTimperative.g:8264:1: (lv_ownedKey_0_0= ruleExpCS )
            {
            // InternalQVTimperative.g:8264:1: (lv_ownedKey_0_0= ruleExpCS )
            // InternalQVTimperative.g:8265:3: lv_ownedKey_0_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getMapLiteralPartCSAccess().getOwnedKeyExpCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_127);
            lv_ownedKey_0_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMapLiteralPartCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedKey",
                      		lv_ownedKey_0_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_1=(Token)match(input,135,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getMapLiteralPartCSAccess().getLessThanSignHyphenMinusKeyword_1());

            }
            // InternalQVTimperative.g:8285:1: ( (lv_ownedValue_2_0= ruleExpCS ) )
            // InternalQVTimperative.g:8286:1: (lv_ownedValue_2_0= ruleExpCS )
            {
            // InternalQVTimperative.g:8286:1: (lv_ownedValue_2_0= ruleExpCS )
            // InternalQVTimperative.g:8287:3: lv_ownedValue_2_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getMapLiteralPartCSAccess().getOwnedValueExpCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedValue_2_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMapLiteralPartCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedValue",
                      		lv_ownedValue_2_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapLiteralPartCS"


    // $ANTLR start "entryRulePrimitiveLiteralExpCS"
    // InternalQVTimperative.g:8311:1: entryRulePrimitiveLiteralExpCS returns [EObject current=null] : iv_rulePrimitiveLiteralExpCS= rulePrimitiveLiteralExpCS EOF ;
    public final EObject entryRulePrimitiveLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimitiveLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:8312:2: (iv_rulePrimitiveLiteralExpCS= rulePrimitiveLiteralExpCS EOF )
            // InternalQVTimperative.g:8313:2: iv_rulePrimitiveLiteralExpCS= rulePrimitiveLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrimitiveLiteralExpCS=rulePrimitiveLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimitiveLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimitiveLiteralExpCS"


    // $ANTLR start "rulePrimitiveLiteralExpCS"
    // InternalQVTimperative.g:8320:1: rulePrimitiveLiteralExpCS returns [EObject current=null] : (this_NumberLiteralExpCS_0= ruleNumberLiteralExpCS | this_StringLiteralExpCS_1= ruleStringLiteralExpCS | this_BooleanLiteralExpCS_2= ruleBooleanLiteralExpCS | this_UnlimitedNaturalLiteralExpCS_3= ruleUnlimitedNaturalLiteralExpCS | this_InvalidLiteralExpCS_4= ruleInvalidLiteralExpCS | this_NullLiteralExpCS_5= ruleNullLiteralExpCS ) ;
    public final EObject rulePrimitiveLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject this_NumberLiteralExpCS_0 = null;

        EObject this_StringLiteralExpCS_1 = null;

        EObject this_BooleanLiteralExpCS_2 = null;

        EObject this_UnlimitedNaturalLiteralExpCS_3 = null;

        EObject this_InvalidLiteralExpCS_4 = null;

        EObject this_NullLiteralExpCS_5 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:8323:28: ( (this_NumberLiteralExpCS_0= ruleNumberLiteralExpCS | this_StringLiteralExpCS_1= ruleStringLiteralExpCS | this_BooleanLiteralExpCS_2= ruleBooleanLiteralExpCS | this_UnlimitedNaturalLiteralExpCS_3= ruleUnlimitedNaturalLiteralExpCS | this_InvalidLiteralExpCS_4= ruleInvalidLiteralExpCS | this_NullLiteralExpCS_5= ruleNullLiteralExpCS ) )
            // InternalQVTimperative.g:8324:1: (this_NumberLiteralExpCS_0= ruleNumberLiteralExpCS | this_StringLiteralExpCS_1= ruleStringLiteralExpCS | this_BooleanLiteralExpCS_2= ruleBooleanLiteralExpCS | this_UnlimitedNaturalLiteralExpCS_3= ruleUnlimitedNaturalLiteralExpCS | this_InvalidLiteralExpCS_4= ruleInvalidLiteralExpCS | this_NullLiteralExpCS_5= ruleNullLiteralExpCS )
            {
            // InternalQVTimperative.g:8324:1: (this_NumberLiteralExpCS_0= ruleNumberLiteralExpCS | this_StringLiteralExpCS_1= ruleStringLiteralExpCS | this_BooleanLiteralExpCS_2= ruleBooleanLiteralExpCS | this_UnlimitedNaturalLiteralExpCS_3= ruleUnlimitedNaturalLiteralExpCS | this_InvalidLiteralExpCS_4= ruleInvalidLiteralExpCS | this_NullLiteralExpCS_5= ruleNullLiteralExpCS )
            int alt192=6;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt192=1;
                }
                break;
            case RULE_SINGLE_QUOTED_STRING:
                {
                alt192=2;
                }
                break;
            case 136:
            case 137:
                {
                alt192=3;
                }
                break;
            case 42:
                {
                alt192=4;
                }
                break;
            case 138:
                {
                alt192=5;
                }
                break;
            case 139:
                {
                alt192=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 192, 0, input);

                throw nvae;
            }

            switch (alt192) {
                case 1 :
                    // InternalQVTimperative.g:8325:2: this_NumberLiteralExpCS_0= ruleNumberLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getNumberLiteralExpCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NumberLiteralExpCS_0=ruleNumberLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NumberLiteralExpCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:8338:2: this_StringLiteralExpCS_1= ruleStringLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getStringLiteralExpCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StringLiteralExpCS_1=ruleStringLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_StringLiteralExpCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:8351:2: this_BooleanLiteralExpCS_2= ruleBooleanLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getBooleanLiteralExpCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BooleanLiteralExpCS_2=ruleBooleanLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BooleanLiteralExpCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:8364:2: this_UnlimitedNaturalLiteralExpCS_3= ruleUnlimitedNaturalLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getUnlimitedNaturalLiteralExpCSParserRuleCall_3());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_UnlimitedNaturalLiteralExpCS_3=ruleUnlimitedNaturalLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_UnlimitedNaturalLiteralExpCS_3;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 5 :
                    // InternalQVTimperative.g:8377:2: this_InvalidLiteralExpCS_4= ruleInvalidLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getInvalidLiteralExpCSParserRuleCall_4());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_InvalidLiteralExpCS_4=ruleInvalidLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_InvalidLiteralExpCS_4;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 6 :
                    // InternalQVTimperative.g:8390:2: this_NullLiteralExpCS_5= ruleNullLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getNullLiteralExpCSParserRuleCall_5());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NullLiteralExpCS_5=ruleNullLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NullLiteralExpCS_5;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimitiveLiteralExpCS"


    // $ANTLR start "entryRuleTupleLiteralExpCS"
    // InternalQVTimperative.g:8409:1: entryRuleTupleLiteralExpCS returns [EObject current=null] : iv_ruleTupleLiteralExpCS= ruleTupleLiteralExpCS EOF ;
    public final EObject entryRuleTupleLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTupleLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:8410:2: (iv_ruleTupleLiteralExpCS= ruleTupleLiteralExpCS EOF )
            // InternalQVTimperative.g:8411:2: iv_ruleTupleLiteralExpCS= ruleTupleLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTupleLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTupleLiteralExpCS=ruleTupleLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTupleLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTupleLiteralExpCS"


    // $ANTLR start "ruleTupleLiteralExpCS"
    // InternalQVTimperative.g:8418:1: ruleTupleLiteralExpCS returns [EObject current=null] : (otherlv_0= 'Tuple' otherlv_1= '{' ( (lv_ownedParts_2_0= ruleTupleLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) ) )* otherlv_5= '}' ) ;
    public final EObject ruleTupleLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_ownedParts_2_0 = null;

        EObject lv_ownedParts_4_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:8421:28: ( (otherlv_0= 'Tuple' otherlv_1= '{' ( (lv_ownedParts_2_0= ruleTupleLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) ) )* otherlv_5= '}' ) )
            // InternalQVTimperative.g:8422:1: (otherlv_0= 'Tuple' otherlv_1= '{' ( (lv_ownedParts_2_0= ruleTupleLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) ) )* otherlv_5= '}' )
            {
            // InternalQVTimperative.g:8422:1: (otherlv_0= 'Tuple' otherlv_1= '{' ( (lv_ownedParts_2_0= ruleTupleLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) ) )* otherlv_5= '}' )
            // InternalQVTimperative.g:8422:3: otherlv_0= 'Tuple' otherlv_1= '{' ( (lv_ownedParts_2_0= ruleTupleLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) ) )* otherlv_5= '}'
            {
            otherlv_0=(Token)match(input,119,FollowSets000.FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTupleLiteralExpCSAccess().getTupleKeyword_0());

            }
            otherlv_1=(Token)match(input,35,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getTupleLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());

            }
            // InternalQVTimperative.g:8430:1: ( (lv_ownedParts_2_0= ruleTupleLiteralPartCS ) )
            // InternalQVTimperative.g:8431:1: (lv_ownedParts_2_0= ruleTupleLiteralPartCS )
            {
            // InternalQVTimperative.g:8431:1: (lv_ownedParts_2_0= ruleTupleLiteralPartCS )
            // InternalQVTimperative.g:8432:3: lv_ownedParts_2_0= ruleTupleLiteralPartCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsTupleLiteralPartCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_120);
            lv_ownedParts_2_0=ruleTupleLiteralPartCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTupleLiteralExpCSRule());
              	        }
                     		add(
                     			current,
                     			"ownedParts",
                      		lv_ownedParts_2_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TupleLiteralPartCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:8448:2: (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) ) )*
            loop193:
            do {
                int alt193=2;
                int LA193_0 = input.LA(1);

                if ( (LA193_0==18) ) {
                    alt193=1;
                }


                switch (alt193) {
            	case 1 :
            	    // InternalQVTimperative.g:8448:4: otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) )
            	    {
            	    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getTupleLiteralExpCSAccess().getCommaKeyword_3_0());

            	    }
            	    // InternalQVTimperative.g:8452:1: ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) )
            	    // InternalQVTimperative.g:8453:1: (lv_ownedParts_4_0= ruleTupleLiteralPartCS )
            	    {
            	    // InternalQVTimperative.g:8453:1: (lv_ownedParts_4_0= ruleTupleLiteralPartCS )
            	    // InternalQVTimperative.g:8454:3: lv_ownedParts_4_0= ruleTupleLiteralPartCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsTupleLiteralPartCSParserRuleCall_3_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_120);
            	    lv_ownedParts_4_0=ruleTupleLiteralPartCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTupleLiteralExpCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedParts",
            	              		lv_ownedParts_4_0,
            	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TupleLiteralPartCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop193;
                }
            } while (true);

            otherlv_5=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getTupleLiteralExpCSAccess().getRightCurlyBracketKeyword_4());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTupleLiteralExpCS"


    // $ANTLR start "entryRuleTupleLiteralPartCS"
    // InternalQVTimperative.g:8482:1: entryRuleTupleLiteralPartCS returns [EObject current=null] : iv_ruleTupleLiteralPartCS= ruleTupleLiteralPartCS EOF ;
    public final EObject entryRuleTupleLiteralPartCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTupleLiteralPartCS = null;


        try {
            // InternalQVTimperative.g:8483:2: (iv_ruleTupleLiteralPartCS= ruleTupleLiteralPartCS EOF )
            // InternalQVTimperative.g:8484:2: iv_ruleTupleLiteralPartCS= ruleTupleLiteralPartCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTupleLiteralPartCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTupleLiteralPartCS=ruleTupleLiteralPartCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTupleLiteralPartCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTupleLiteralPartCS"


    // $ANTLR start "ruleTupleLiteralPartCS"
    // InternalQVTimperative.g:8491:1: ruleTupleLiteralPartCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) ) ;
    public final EObject ruleTupleLiteralPartCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedType_2_0 = null;

        EObject lv_ownedInitExpression_4_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:8494:28: ( ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) ) )
            // InternalQVTimperative.g:8495:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )
            {
            // InternalQVTimperative.g:8495:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )
            // InternalQVTimperative.g:8495:2: ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) )
            {
            // InternalQVTimperative.g:8495:2: ( (lv_name_0_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:8496:1: (lv_name_0_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:8496:1: (lv_name_0_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:8497:3: lv_name_0_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTupleLiteralPartCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_128);
            lv_name_0_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTupleLiteralPartCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_0_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:8513:2: (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )?
            int alt194=2;
            int LA194_0 = input.LA(1);

            if ( (LA194_0==24) ) {
                alt194=1;
            }
            switch (alt194) {
                case 1 :
                    // InternalQVTimperative.g:8513:4: otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) )
                    {
                    otherlv_1=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getTupleLiteralPartCSAccess().getColonKeyword_1_0());

                    }
                    // InternalQVTimperative.g:8517:1: ( (lv_ownedType_2_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:8518:1: (lv_ownedType_2_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:8518:1: (lv_ownedType_2_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:8519:3: lv_ownedType_2_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTupleLiteralPartCSAccess().getOwnedTypeTypeExpCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_125);
                    lv_ownedType_2_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTupleLiteralPartCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,52,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getTupleLiteralPartCSAccess().getEqualsSignKeyword_2());

            }
            // InternalQVTimperative.g:8539:1: ( (lv_ownedInitExpression_4_0= ruleExpCS ) )
            // InternalQVTimperative.g:8540:1: (lv_ownedInitExpression_4_0= ruleExpCS )
            {
            // InternalQVTimperative.g:8540:1: (lv_ownedInitExpression_4_0= ruleExpCS )
            // InternalQVTimperative.g:8541:3: lv_ownedInitExpression_4_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTupleLiteralPartCSAccess().getOwnedInitExpressionExpCSParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedInitExpression_4_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTupleLiteralPartCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedInitExpression",
                      		lv_ownedInitExpression_4_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTupleLiteralPartCS"


    // $ANTLR start "entryRuleNumberLiteralExpCS"
    // InternalQVTimperative.g:8565:1: entryRuleNumberLiteralExpCS returns [EObject current=null] : iv_ruleNumberLiteralExpCS= ruleNumberLiteralExpCS EOF ;
    public final EObject entryRuleNumberLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNumberLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:8566:2: (iv_ruleNumberLiteralExpCS= ruleNumberLiteralExpCS EOF )
            // InternalQVTimperative.g:8567:2: iv_ruleNumberLiteralExpCS= ruleNumberLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNumberLiteralExpCS=ruleNumberLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumberLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNumberLiteralExpCS"


    // $ANTLR start "ruleNumberLiteralExpCS"
    // InternalQVTimperative.g:8574:1: ruleNumberLiteralExpCS returns [EObject current=null] : ( (lv_symbol_0_0= ruleNUMBER_LITERAL ) ) ;
    public final EObject ruleNumberLiteralExpCS() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_symbol_0_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:8577:28: ( ( (lv_symbol_0_0= ruleNUMBER_LITERAL ) ) )
            // InternalQVTimperative.g:8578:1: ( (lv_symbol_0_0= ruleNUMBER_LITERAL ) )
            {
            // InternalQVTimperative.g:8578:1: ( (lv_symbol_0_0= ruleNUMBER_LITERAL ) )
            // InternalQVTimperative.g:8579:1: (lv_symbol_0_0= ruleNUMBER_LITERAL )
            {
            // InternalQVTimperative.g:8579:1: (lv_symbol_0_0= ruleNUMBER_LITERAL )
            // InternalQVTimperative.g:8580:3: lv_symbol_0_0= ruleNUMBER_LITERAL
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getNumberLiteralExpCSAccess().getSymbolNUMBER_LITERALParserRuleCall_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_symbol_0_0=ruleNUMBER_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNumberLiteralExpCSRule());
              	        }
                     		set(
                     			current,
                     			"symbol",
                      		lv_symbol_0_0,
                      		"org.eclipse.ocl.xtext.base.Base.NUMBER_LITERAL");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNumberLiteralExpCS"


    // $ANTLR start "entryRuleStringLiteralExpCS"
    // InternalQVTimperative.g:8604:1: entryRuleStringLiteralExpCS returns [EObject current=null] : iv_ruleStringLiteralExpCS= ruleStringLiteralExpCS EOF ;
    public final EObject entryRuleStringLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:8605:2: (iv_ruleStringLiteralExpCS= ruleStringLiteralExpCS EOF )
            // InternalQVTimperative.g:8606:2: iv_ruleStringLiteralExpCS= ruleStringLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStringLiteralExpCS=ruleStringLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringLiteralExpCS"


    // $ANTLR start "ruleStringLiteralExpCS"
    // InternalQVTimperative.g:8613:1: ruleStringLiteralExpCS returns [EObject current=null] : ( (lv_segments_0_0= ruleStringLiteral ) )+ ;
    public final EObject ruleStringLiteralExpCS() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_segments_0_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:8616:28: ( ( (lv_segments_0_0= ruleStringLiteral ) )+ )
            // InternalQVTimperative.g:8617:1: ( (lv_segments_0_0= ruleStringLiteral ) )+
            {
            // InternalQVTimperative.g:8617:1: ( (lv_segments_0_0= ruleStringLiteral ) )+
            int cnt195=0;
            loop195:
            do {
                int alt195=2;
                int LA195_0 = input.LA(1);

                if ( (LA195_0==RULE_SINGLE_QUOTED_STRING) ) {
                    alt195=1;
                }


                switch (alt195) {
            	case 1 :
            	    // InternalQVTimperative.g:8618:1: (lv_segments_0_0= ruleStringLiteral )
            	    {
            	    // InternalQVTimperative.g:8618:1: (lv_segments_0_0= ruleStringLiteral )
            	    // InternalQVTimperative.g:8619:3: lv_segments_0_0= ruleStringLiteral
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getStringLiteralExpCSAccess().getSegmentsStringLiteralParserRuleCall_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_129);
            	    lv_segments_0_0=ruleStringLiteral();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getStringLiteralExpCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"segments",
            	              		lv_segments_0_0,
            	              		"org.eclipse.ocl.xtext.base.Base.StringLiteral");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt195 >= 1 ) break loop195;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(195, input);
                        throw eee;
                }
                cnt195++;
            } while (true);


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringLiteralExpCS"


    // $ANTLR start "entryRuleBooleanLiteralExpCS"
    // InternalQVTimperative.g:8643:1: entryRuleBooleanLiteralExpCS returns [EObject current=null] : iv_ruleBooleanLiteralExpCS= ruleBooleanLiteralExpCS EOF ;
    public final EObject entryRuleBooleanLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBooleanLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:8644:2: (iv_ruleBooleanLiteralExpCS= ruleBooleanLiteralExpCS EOF )
            // InternalQVTimperative.g:8645:2: iv_ruleBooleanLiteralExpCS= ruleBooleanLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBooleanLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBooleanLiteralExpCS=ruleBooleanLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBooleanLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBooleanLiteralExpCS"


    // $ANTLR start "ruleBooleanLiteralExpCS"
    // InternalQVTimperative.g:8652:1: ruleBooleanLiteralExpCS returns [EObject current=null] : ( ( (lv_symbol_0_0= 'true' ) ) | ( (lv_symbol_1_0= 'false' ) ) ) ;
    public final EObject ruleBooleanLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token lv_symbol_0_0=null;
        Token lv_symbol_1_0=null;

         enterRule();

        try {
            // InternalQVTimperative.g:8655:28: ( ( ( (lv_symbol_0_0= 'true' ) ) | ( (lv_symbol_1_0= 'false' ) ) ) )
            // InternalQVTimperative.g:8656:1: ( ( (lv_symbol_0_0= 'true' ) ) | ( (lv_symbol_1_0= 'false' ) ) )
            {
            // InternalQVTimperative.g:8656:1: ( ( (lv_symbol_0_0= 'true' ) ) | ( (lv_symbol_1_0= 'false' ) ) )
            int alt196=2;
            int LA196_0 = input.LA(1);

            if ( (LA196_0==136) ) {
                alt196=1;
            }
            else if ( (LA196_0==137) ) {
                alt196=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 196, 0, input);

                throw nvae;
            }
            switch (alt196) {
                case 1 :
                    // InternalQVTimperative.g:8656:2: ( (lv_symbol_0_0= 'true' ) )
                    {
                    // InternalQVTimperative.g:8656:2: ( (lv_symbol_0_0= 'true' ) )
                    // InternalQVTimperative.g:8657:1: (lv_symbol_0_0= 'true' )
                    {
                    // InternalQVTimperative.g:8657:1: (lv_symbol_0_0= 'true' )
                    // InternalQVTimperative.g:8658:3: lv_symbol_0_0= 'true'
                    {
                    lv_symbol_0_0=(Token)match(input,136,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_symbol_0_0, grammarAccess.getBooleanLiteralExpCSAccess().getSymbolTrueKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getBooleanLiteralExpCSRule());
                      	        }
                             		setWithLastConsumed(current, "symbol", lv_symbol_0_0, "true");

                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:8672:6: ( (lv_symbol_1_0= 'false' ) )
                    {
                    // InternalQVTimperative.g:8672:6: ( (lv_symbol_1_0= 'false' ) )
                    // InternalQVTimperative.g:8673:1: (lv_symbol_1_0= 'false' )
                    {
                    // InternalQVTimperative.g:8673:1: (lv_symbol_1_0= 'false' )
                    // InternalQVTimperative.g:8674:3: lv_symbol_1_0= 'false'
                    {
                    lv_symbol_1_0=(Token)match(input,137,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_symbol_1_0, grammarAccess.getBooleanLiteralExpCSAccess().getSymbolFalseKeyword_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getBooleanLiteralExpCSRule());
                      	        }
                             		setWithLastConsumed(current, "symbol", lv_symbol_1_0, "false");

                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBooleanLiteralExpCS"


    // $ANTLR start "entryRuleUnlimitedNaturalLiteralExpCS"
    // InternalQVTimperative.g:8695:1: entryRuleUnlimitedNaturalLiteralExpCS returns [EObject current=null] : iv_ruleUnlimitedNaturalLiteralExpCS= ruleUnlimitedNaturalLiteralExpCS EOF ;
    public final EObject entryRuleUnlimitedNaturalLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnlimitedNaturalLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:8696:2: (iv_ruleUnlimitedNaturalLiteralExpCS= ruleUnlimitedNaturalLiteralExpCS EOF )
            // InternalQVTimperative.g:8697:2: iv_ruleUnlimitedNaturalLiteralExpCS= ruleUnlimitedNaturalLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnlimitedNaturalLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleUnlimitedNaturalLiteralExpCS=ruleUnlimitedNaturalLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnlimitedNaturalLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnlimitedNaturalLiteralExpCS"


    // $ANTLR start "ruleUnlimitedNaturalLiteralExpCS"
    // InternalQVTimperative.g:8704:1: ruleUnlimitedNaturalLiteralExpCS returns [EObject current=null] : ( () otherlv_1= '*' ) ;
    public final EObject ruleUnlimitedNaturalLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule();

        try {
            // InternalQVTimperative.g:8707:28: ( ( () otherlv_1= '*' ) )
            // InternalQVTimperative.g:8708:1: ( () otherlv_1= '*' )
            {
            // InternalQVTimperative.g:8708:1: ( () otherlv_1= '*' )
            // InternalQVTimperative.g:8708:2: () otherlv_1= '*'
            {
            // InternalQVTimperative.g:8708:2: ()
            // InternalQVTimperative.g:8709:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getUnlimitedNaturalLiteralExpCSAccess().getUnlimitedNaturalLiteralExpCSAction_0(),
                          current);

            }

            }

            otherlv_1=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getUnlimitedNaturalLiteralExpCSAccess().getAsteriskKeyword_1());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnlimitedNaturalLiteralExpCS"


    // $ANTLR start "entryRuleInvalidLiteralExpCS"
    // InternalQVTimperative.g:8729:1: entryRuleInvalidLiteralExpCS returns [EObject current=null] : iv_ruleInvalidLiteralExpCS= ruleInvalidLiteralExpCS EOF ;
    public final EObject entryRuleInvalidLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInvalidLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:8730:2: (iv_ruleInvalidLiteralExpCS= ruleInvalidLiteralExpCS EOF )
            // InternalQVTimperative.g:8731:2: iv_ruleInvalidLiteralExpCS= ruleInvalidLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInvalidLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleInvalidLiteralExpCS=ruleInvalidLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInvalidLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInvalidLiteralExpCS"


    // $ANTLR start "ruleInvalidLiteralExpCS"
    // InternalQVTimperative.g:8738:1: ruleInvalidLiteralExpCS returns [EObject current=null] : ( () otherlv_1= 'invalid' ) ;
    public final EObject ruleInvalidLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule();

        try {
            // InternalQVTimperative.g:8741:28: ( ( () otherlv_1= 'invalid' ) )
            // InternalQVTimperative.g:8742:1: ( () otherlv_1= 'invalid' )
            {
            // InternalQVTimperative.g:8742:1: ( () otherlv_1= 'invalid' )
            // InternalQVTimperative.g:8742:2: () otherlv_1= 'invalid'
            {
            // InternalQVTimperative.g:8742:2: ()
            // InternalQVTimperative.g:8743:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getInvalidLiteralExpCSAccess().getInvalidLiteralExpCSAction_0(),
                          current);

            }

            }

            otherlv_1=(Token)match(input,138,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getInvalidLiteralExpCSAccess().getInvalidKeyword_1());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInvalidLiteralExpCS"


    // $ANTLR start "entryRuleNullLiteralExpCS"
    // InternalQVTimperative.g:8763:1: entryRuleNullLiteralExpCS returns [EObject current=null] : iv_ruleNullLiteralExpCS= ruleNullLiteralExpCS EOF ;
    public final EObject entryRuleNullLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNullLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:8764:2: (iv_ruleNullLiteralExpCS= ruleNullLiteralExpCS EOF )
            // InternalQVTimperative.g:8765:2: iv_ruleNullLiteralExpCS= ruleNullLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNullLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNullLiteralExpCS=ruleNullLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNullLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNullLiteralExpCS"


    // $ANTLR start "ruleNullLiteralExpCS"
    // InternalQVTimperative.g:8772:1: ruleNullLiteralExpCS returns [EObject current=null] : ( () otherlv_1= 'null' ) ;
    public final EObject ruleNullLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule();

        try {
            // InternalQVTimperative.g:8775:28: ( ( () otherlv_1= 'null' ) )
            // InternalQVTimperative.g:8776:1: ( () otherlv_1= 'null' )
            {
            // InternalQVTimperative.g:8776:1: ( () otherlv_1= 'null' )
            // InternalQVTimperative.g:8776:2: () otherlv_1= 'null'
            {
            // InternalQVTimperative.g:8776:2: ()
            // InternalQVTimperative.g:8777:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getNullLiteralExpCSAccess().getNullLiteralExpCSAction_0(),
                          current);

            }

            }

            otherlv_1=(Token)match(input,139,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getNullLiteralExpCSAccess().getNullKeyword_1());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNullLiteralExpCS"


    // $ANTLR start "entryRuleTypeLiteralCS"
    // InternalQVTimperative.g:8797:1: entryRuleTypeLiteralCS returns [EObject current=null] : iv_ruleTypeLiteralCS= ruleTypeLiteralCS EOF ;
    public final EObject entryRuleTypeLiteralCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeLiteralCS = null;


        try {
            // InternalQVTimperative.g:8798:2: (iv_ruleTypeLiteralCS= ruleTypeLiteralCS EOF )
            // InternalQVTimperative.g:8799:2: iv_ruleTypeLiteralCS= ruleTypeLiteralCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeLiteralCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeLiteralCS=ruleTypeLiteralCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeLiteralCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeLiteralCS"


    // $ANTLR start "ruleTypeLiteralCS"
    // InternalQVTimperative.g:8806:1: ruleTypeLiteralCS returns [EObject current=null] : (this_PrimitiveTypeCS_0= rulePrimitiveTypeCS | this_CollectionTypeCS_1= ruleCollectionTypeCS | this_MapTypeCS_2= ruleMapTypeCS | this_TupleTypeCS_3= ruleTupleTypeCS ) ;
    public final EObject ruleTypeLiteralCS() throws RecognitionException {
        EObject current = null;

        EObject this_PrimitiveTypeCS_0 = null;

        EObject this_CollectionTypeCS_1 = null;

        EObject this_MapTypeCS_2 = null;

        EObject this_TupleTypeCS_3 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:8809:28: ( (this_PrimitiveTypeCS_0= rulePrimitiveTypeCS | this_CollectionTypeCS_1= ruleCollectionTypeCS | this_MapTypeCS_2= ruleMapTypeCS | this_TupleTypeCS_3= ruleTupleTypeCS ) )
            // InternalQVTimperative.g:8810:1: (this_PrimitiveTypeCS_0= rulePrimitiveTypeCS | this_CollectionTypeCS_1= ruleCollectionTypeCS | this_MapTypeCS_2= ruleMapTypeCS | this_TupleTypeCS_3= ruleTupleTypeCS )
            {
            // InternalQVTimperative.g:8810:1: (this_PrimitiveTypeCS_0= rulePrimitiveTypeCS | this_CollectionTypeCS_1= ruleCollectionTypeCS | this_MapTypeCS_2= ruleMapTypeCS | this_TupleTypeCS_3= ruleTupleTypeCS )
            int alt197=4;
            switch ( input.LA(1) ) {
            case 120:
            case 121:
            case 122:
            case 123:
            case 124:
            case 125:
            case 126:
            case 127:
                {
                alt197=1;
                }
                break;
            case 128:
            case 129:
            case 130:
            case 131:
            case 132:
                {
                alt197=2;
                }
                break;
            case 118:
                {
                alt197=3;
                }
                break;
            case 119:
                {
                alt197=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 197, 0, input);

                throw nvae;
            }

            switch (alt197) {
                case 1 :
                    // InternalQVTimperative.g:8811:2: this_PrimitiveTypeCS_0= rulePrimitiveTypeCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeLiteralCSAccess().getPrimitiveTypeCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrimitiveTypeCS_0=rulePrimitiveTypeCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PrimitiveTypeCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:8824:2: this_CollectionTypeCS_1= ruleCollectionTypeCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeLiteralCSAccess().getCollectionTypeCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CollectionTypeCS_1=ruleCollectionTypeCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_CollectionTypeCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:8837:2: this_MapTypeCS_2= ruleMapTypeCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeLiteralCSAccess().getMapTypeCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_MapTypeCS_2=ruleMapTypeCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MapTypeCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:8850:2: this_TupleTypeCS_3= ruleTupleTypeCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeLiteralCSAccess().getTupleTypeCSParserRuleCall_3());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TupleTypeCS_3=ruleTupleTypeCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TupleTypeCS_3;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeLiteralCS"


    // $ANTLR start "entryRuleTypeLiteralWithMultiplicityCS"
    // InternalQVTimperative.g:8869:1: entryRuleTypeLiteralWithMultiplicityCS returns [EObject current=null] : iv_ruleTypeLiteralWithMultiplicityCS= ruleTypeLiteralWithMultiplicityCS EOF ;
    public final EObject entryRuleTypeLiteralWithMultiplicityCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeLiteralWithMultiplicityCS = null;


        try {
            // InternalQVTimperative.g:8870:2: (iv_ruleTypeLiteralWithMultiplicityCS= ruleTypeLiteralWithMultiplicityCS EOF )
            // InternalQVTimperative.g:8871:2: iv_ruleTypeLiteralWithMultiplicityCS= ruleTypeLiteralWithMultiplicityCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeLiteralWithMultiplicityCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeLiteralWithMultiplicityCS=ruleTypeLiteralWithMultiplicityCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeLiteralWithMultiplicityCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeLiteralWithMultiplicityCS"


    // $ANTLR start "ruleTypeLiteralWithMultiplicityCS"
    // InternalQVTimperative.g:8878:1: ruleTypeLiteralWithMultiplicityCS returns [EObject current=null] : (this_TypeLiteralCS_0= ruleTypeLiteralCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? ) ;
    public final EObject ruleTypeLiteralWithMultiplicityCS() throws RecognitionException {
        EObject current = null;

        EObject this_TypeLiteralCS_0 = null;

        EObject lv_ownedMultiplicity_1_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:8881:28: ( (this_TypeLiteralCS_0= ruleTypeLiteralCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? ) )
            // InternalQVTimperative.g:8882:1: (this_TypeLiteralCS_0= ruleTypeLiteralCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? )
            {
            // InternalQVTimperative.g:8882:1: (this_TypeLiteralCS_0= ruleTypeLiteralCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? )
            // InternalQVTimperative.g:8883:2: this_TypeLiteralCS_0= ruleTypeLiteralCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )?
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getTypeLiteralWithMultiplicityCSAccess().getTypeLiteralCSParserRuleCall_0());

            }
            pushFollow(FollowSets000.FOLLOW_113);
            this_TypeLiteralCS_0=ruleTypeLiteralCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_TypeLiteralCS_0;
                      afterParserOrEnumRuleCall();

            }
            // InternalQVTimperative.g:8894:1: ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )?
            int alt198=2;
            int LA198_0 = input.LA(1);

            if ( (LA198_0==142) ) {
                alt198=1;
            }
            switch (alt198) {
                case 1 :
                    // InternalQVTimperative.g:8895:1: (lv_ownedMultiplicity_1_0= ruleMultiplicityCS )
                    {
                    // InternalQVTimperative.g:8895:1: (lv_ownedMultiplicity_1_0= ruleMultiplicityCS )
                    // InternalQVTimperative.g:8896:3: lv_ownedMultiplicity_1_0= ruleMultiplicityCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTypeLiteralWithMultiplicityCSAccess().getOwnedMultiplicityMultiplicityCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedMultiplicity_1_0=ruleMultiplicityCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypeLiteralWithMultiplicityCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedMultiplicity",
                              		lv_ownedMultiplicity_1_0,
                              		"org.eclipse.ocl.xtext.base.Base.MultiplicityCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeLiteralWithMultiplicityCS"


    // $ANTLR start "entryRuleTypeLiteralExpCS"
    // InternalQVTimperative.g:8920:1: entryRuleTypeLiteralExpCS returns [EObject current=null] : iv_ruleTypeLiteralExpCS= ruleTypeLiteralExpCS EOF ;
    public final EObject entryRuleTypeLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:8921:2: (iv_ruleTypeLiteralExpCS= ruleTypeLiteralExpCS EOF )
            // InternalQVTimperative.g:8922:2: iv_ruleTypeLiteralExpCS= ruleTypeLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeLiteralExpCS=ruleTypeLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeLiteralExpCS"


    // $ANTLR start "ruleTypeLiteralExpCS"
    // InternalQVTimperative.g:8929:1: ruleTypeLiteralExpCS returns [EObject current=null] : ( (lv_ownedType_0_0= ruleTypeLiteralWithMultiplicityCS ) ) ;
    public final EObject ruleTypeLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedType_0_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:8932:28: ( ( (lv_ownedType_0_0= ruleTypeLiteralWithMultiplicityCS ) ) )
            // InternalQVTimperative.g:8933:1: ( (lv_ownedType_0_0= ruleTypeLiteralWithMultiplicityCS ) )
            {
            // InternalQVTimperative.g:8933:1: ( (lv_ownedType_0_0= ruleTypeLiteralWithMultiplicityCS ) )
            // InternalQVTimperative.g:8934:1: (lv_ownedType_0_0= ruleTypeLiteralWithMultiplicityCS )
            {
            // InternalQVTimperative.g:8934:1: (lv_ownedType_0_0= ruleTypeLiteralWithMultiplicityCS )
            // InternalQVTimperative.g:8935:3: lv_ownedType_0_0= ruleTypeLiteralWithMultiplicityCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTypeLiteralExpCSAccess().getOwnedTypeTypeLiteralWithMultiplicityCSParserRuleCall_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedType_0_0=ruleTypeLiteralWithMultiplicityCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypeLiteralExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedType",
                      		lv_ownedType_0_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeLiteralWithMultiplicityCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeLiteralExpCS"


    // $ANTLR start "entryRuleTypeNameExpCS"
    // InternalQVTimperative.g:8959:1: entryRuleTypeNameExpCS returns [EObject current=null] : iv_ruleTypeNameExpCS= ruleTypeNameExpCS EOF ;
    public final EObject entryRuleTypeNameExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeNameExpCS = null;


        try {
            // InternalQVTimperative.g:8960:2: (iv_ruleTypeNameExpCS= ruleTypeNameExpCS EOF )
            // InternalQVTimperative.g:8961:2: iv_ruleTypeNameExpCS= ruleTypeNameExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeNameExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeNameExpCS=ruleTypeNameExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeNameExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeNameExpCS"


    // $ANTLR start "ruleTypeNameExpCS"
    // InternalQVTimperative.g:8968:1: ruleTypeNameExpCS returns [EObject current=null] : ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )? ) ;
    public final EObject ruleTypeNameExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedPathName_0_0 = null;

        EObject lv_ownedCurlyBracketedClause_1_0 = null;

        EObject lv_ownedPatternGuard_3_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:8971:28: ( ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )? ) )
            // InternalQVTimperative.g:8972:1: ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )? )
            {
            // InternalQVTimperative.g:8972:1: ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )? )
            // InternalQVTimperative.g:8972:2: ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )?
            {
            // InternalQVTimperative.g:8972:2: ( (lv_ownedPathName_0_0= rulePathNameCS ) )
            // InternalQVTimperative.g:8973:1: (lv_ownedPathName_0_0= rulePathNameCS )
            {
            // InternalQVTimperative.g:8973:1: (lv_ownedPathName_0_0= rulePathNameCS )
            // InternalQVTimperative.g:8974:3: lv_ownedPathName_0_0= rulePathNameCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTypeNameExpCSAccess().getOwnedPathNamePathNameCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_96);
            lv_ownedPathName_0_0=rulePathNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypeNameExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedPathName",
                      		lv_ownedPathName_0_0,
                      		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:8990:2: ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )?
            int alt200=2;
            alt200 = dfa200.predict(input);
            switch (alt200) {
                case 1 :
                    // InternalQVTimperative.g:8990:3: ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )?
                    {
                    // InternalQVTimperative.g:8990:3: ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) )
                    // InternalQVTimperative.g:8991:1: (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS )
                    {
                    // InternalQVTimperative.g:8991:1: (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS )
                    // InternalQVTimperative.g:8992:3: lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTypeNameExpCSAccess().getOwnedCurlyBracketedClauseCurlyBracketedClauseCSParserRuleCall_1_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_96);
                    lv_ownedCurlyBracketedClause_1_0=ruleCurlyBracketedClauseCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypeNameExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedCurlyBracketedClause",
                              		lv_ownedCurlyBracketedClause_1_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CurlyBracketedClauseCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:9008:2: (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )?
                    int alt199=2;
                    alt199 = dfa199.predict(input);
                    switch (alt199) {
                        case 1 :
                            // InternalQVTimperative.g:9008:4: otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}'
                            {
                            otherlv_2=(Token)match(input,35,FollowSets000.FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_2, grammarAccess.getTypeNameExpCSAccess().getLeftCurlyBracketKeyword_1_1_0());

                            }
                            // InternalQVTimperative.g:9012:1: ( (lv_ownedPatternGuard_3_0= ruleExpCS ) )
                            // InternalQVTimperative.g:9013:1: (lv_ownedPatternGuard_3_0= ruleExpCS )
                            {
                            // InternalQVTimperative.g:9013:1: (lv_ownedPatternGuard_3_0= ruleExpCS )
                            // InternalQVTimperative.g:9014:3: lv_ownedPatternGuard_3_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getTypeNameExpCSAccess().getOwnedPatternGuardExpCSParserRuleCall_1_1_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_60);
                            lv_ownedPatternGuard_3_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTypeNameExpCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedPatternGuard",
                                      		lv_ownedPatternGuard_3_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }

                            otherlv_4=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getTypeNameExpCSAccess().getRightCurlyBracketKeyword_1_1_2());

                            }

                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeNameExpCS"


    // $ANTLR start "entryRuleTypeExpWithoutMultiplicityCS"
    // InternalQVTimperative.g:9042:1: entryRuleTypeExpWithoutMultiplicityCS returns [EObject current=null] : iv_ruleTypeExpWithoutMultiplicityCS= ruleTypeExpWithoutMultiplicityCS EOF ;
    public final EObject entryRuleTypeExpWithoutMultiplicityCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeExpWithoutMultiplicityCS = null;


        try {
            // InternalQVTimperative.g:9043:2: (iv_ruleTypeExpWithoutMultiplicityCS= ruleTypeExpWithoutMultiplicityCS EOF )
            // InternalQVTimperative.g:9044:2: iv_ruleTypeExpWithoutMultiplicityCS= ruleTypeExpWithoutMultiplicityCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeExpWithoutMultiplicityCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeExpWithoutMultiplicityCS=ruleTypeExpWithoutMultiplicityCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeExpWithoutMultiplicityCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeExpWithoutMultiplicityCS"


    // $ANTLR start "ruleTypeExpWithoutMultiplicityCS"
    // InternalQVTimperative.g:9051:1: ruleTypeExpWithoutMultiplicityCS returns [EObject current=null] : (this_TypeNameExpCS_0= ruleTypeNameExpCS | this_TypeLiteralCS_1= ruleTypeLiteralCS | this_CollectionPatternCS_2= ruleCollectionPatternCS ) ;
    public final EObject ruleTypeExpWithoutMultiplicityCS() throws RecognitionException {
        EObject current = null;

        EObject this_TypeNameExpCS_0 = null;

        EObject this_TypeLiteralCS_1 = null;

        EObject this_CollectionPatternCS_2 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:9054:28: ( (this_TypeNameExpCS_0= ruleTypeNameExpCS | this_TypeLiteralCS_1= ruleTypeLiteralCS | this_CollectionPatternCS_2= ruleCollectionPatternCS ) )
            // InternalQVTimperative.g:9055:1: (this_TypeNameExpCS_0= ruleTypeNameExpCS | this_TypeLiteralCS_1= ruleTypeLiteralCS | this_CollectionPatternCS_2= ruleCollectionPatternCS )
            {
            // InternalQVTimperative.g:9055:1: (this_TypeNameExpCS_0= ruleTypeNameExpCS | this_TypeLiteralCS_1= ruleTypeLiteralCS | this_CollectionPatternCS_2= ruleCollectionPatternCS )
            int alt201=3;
            alt201 = dfa201.predict(input);
            switch (alt201) {
                case 1 :
                    // InternalQVTimperative.g:9056:2: this_TypeNameExpCS_0= ruleTypeNameExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeExpWithoutMultiplicityCSAccess().getTypeNameExpCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypeNameExpCS_0=ruleTypeNameExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeNameExpCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:9069:2: this_TypeLiteralCS_1= ruleTypeLiteralCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeExpWithoutMultiplicityCSAccess().getTypeLiteralCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypeLiteralCS_1=ruleTypeLiteralCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeLiteralCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:9082:2: this_CollectionPatternCS_2= ruleCollectionPatternCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeExpWithoutMultiplicityCSAccess().getCollectionPatternCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CollectionPatternCS_2=ruleCollectionPatternCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_CollectionPatternCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeExpWithoutMultiplicityCS"


    // $ANTLR start "entryRuleTypeExpCS"
    // InternalQVTimperative.g:9101:1: entryRuleTypeExpCS returns [EObject current=null] : iv_ruleTypeExpCS= ruleTypeExpCS EOF ;
    public final EObject entryRuleTypeExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeExpCS = null;


        try {
            // InternalQVTimperative.g:9102:2: (iv_ruleTypeExpCS= ruleTypeExpCS EOF )
            // InternalQVTimperative.g:9103:2: iv_ruleTypeExpCS= ruleTypeExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeExpCS=ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeExpCS"


    // $ANTLR start "ruleTypeExpCS"
    // InternalQVTimperative.g:9110:1: ruleTypeExpCS returns [EObject current=null] : (this_TypeExpWithoutMultiplicityCS_0= ruleTypeExpWithoutMultiplicityCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? ) ;
    public final EObject ruleTypeExpCS() throws RecognitionException {
        EObject current = null;

        EObject this_TypeExpWithoutMultiplicityCS_0 = null;

        EObject lv_ownedMultiplicity_1_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:9113:28: ( (this_TypeExpWithoutMultiplicityCS_0= ruleTypeExpWithoutMultiplicityCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? ) )
            // InternalQVTimperative.g:9114:1: (this_TypeExpWithoutMultiplicityCS_0= ruleTypeExpWithoutMultiplicityCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? )
            {
            // InternalQVTimperative.g:9114:1: (this_TypeExpWithoutMultiplicityCS_0= ruleTypeExpWithoutMultiplicityCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? )
            // InternalQVTimperative.g:9115:2: this_TypeExpWithoutMultiplicityCS_0= ruleTypeExpWithoutMultiplicityCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )?
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getTypeExpCSAccess().getTypeExpWithoutMultiplicityCSParserRuleCall_0());

            }
            pushFollow(FollowSets000.FOLLOW_113);
            this_TypeExpWithoutMultiplicityCS_0=ruleTypeExpWithoutMultiplicityCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_TypeExpWithoutMultiplicityCS_0;
                      afterParserOrEnumRuleCall();

            }
            // InternalQVTimperative.g:9126:1: ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )?
            int alt202=2;
            int LA202_0 = input.LA(1);

            if ( (LA202_0==142) ) {
                alt202=1;
            }
            switch (alt202) {
                case 1 :
                    // InternalQVTimperative.g:9127:1: (lv_ownedMultiplicity_1_0= ruleMultiplicityCS )
                    {
                    // InternalQVTimperative.g:9127:1: (lv_ownedMultiplicity_1_0= ruleMultiplicityCS )
                    // InternalQVTimperative.g:9128:3: lv_ownedMultiplicity_1_0= ruleMultiplicityCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTypeExpCSAccess().getOwnedMultiplicityMultiplicityCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedMultiplicity_1_0=ruleMultiplicityCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypeExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedMultiplicity",
                              		lv_ownedMultiplicity_1_0,
                              		"org.eclipse.ocl.xtext.base.Base.MultiplicityCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeExpCS"


    // $ANTLR start "entryRuleExpCS"
    // InternalQVTimperative.g:9152:1: entryRuleExpCS returns [EObject current=null] : iv_ruleExpCS= ruleExpCS EOF ;
    public final EObject entryRuleExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpCS = null;


        try {
            // InternalQVTimperative.g:9153:2: (iv_ruleExpCS= ruleExpCS EOF )
            // InternalQVTimperative.g:9154:2: iv_ruleExpCS= ruleExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExpCS=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpCS"


    // $ANTLR start "ruleExpCS"
    // InternalQVTimperative.g:9161:1: ruleExpCS returns [EObject current=null] : ( (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? ) | this_PrefixedLetExpCS_4= rulePrefixedLetExpCS ) ;
    public final EObject ruleExpCS() throws RecognitionException {
        EObject current = null;

        EObject this_PrefixedPrimaryExpCS_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_ownedRight_3_0 = null;

        EObject this_PrefixedLetExpCS_4 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:9164:28: ( ( (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? ) | this_PrefixedLetExpCS_4= rulePrefixedLetExpCS ) )
            // InternalQVTimperative.g:9165:1: ( (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? ) | this_PrefixedLetExpCS_4= rulePrefixedLetExpCS )
            {
            // InternalQVTimperative.g:9165:1: ( (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? ) | this_PrefixedLetExpCS_4= rulePrefixedLetExpCS )
            int alt204=2;
            alt204 = dfa204.predict(input);
            switch (alt204) {
                case 1 :
                    // InternalQVTimperative.g:9165:2: (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? )
                    {
                    // InternalQVTimperative.g:9165:2: (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? )
                    // InternalQVTimperative.g:9166:2: this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )?
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getExpCSAccess().getPrefixedPrimaryExpCSParserRuleCall_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_130);
                    this_PrefixedPrimaryExpCS_0=rulePrefixedPrimaryExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PrefixedPrimaryExpCS_0;
                              afterParserOrEnumRuleCall();

                    }
                    // InternalQVTimperative.g:9177:1: ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )?
                    int alt203=2;
                    int LA203_0 = input.LA(1);

                    if ( (LA203_0==42||LA203_0==52||LA203_0==60||LA203_0==102||(LA203_0>=104 && LA203_0<=117)) ) {
                        alt203=1;
                    }
                    switch (alt203) {
                        case 1 :
                            // InternalQVTimperative.g:9177:2: () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) )
                            {
                            // InternalQVTimperative.g:9177:2: ()
                            // InternalQVTimperative.g:9178:2:
                            {
                            if ( state.backtracking==0 ) {

                              	  /* */

                            }
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getExpCSAccess().getInfixExpCSOwnedLeftAction_0_1_0(),
                                          current);

                            }

                            }

                            // InternalQVTimperative.g:9186:2: ( (lv_name_2_0= ruleBinaryOperatorName ) )
                            // InternalQVTimperative.g:9187:1: (lv_name_2_0= ruleBinaryOperatorName )
                            {
                            // InternalQVTimperative.g:9187:1: (lv_name_2_0= ruleBinaryOperatorName )
                            // InternalQVTimperative.g:9188:3: lv_name_2_0= ruleBinaryOperatorName
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getExpCSAccess().getNameBinaryOperatorNameParserRuleCall_0_1_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_8);
                            lv_name_2_0=ruleBinaryOperatorName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getExpCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"name",
                                      		lv_name_2_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.BinaryOperatorName");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }

                            // InternalQVTimperative.g:9204:2: ( (lv_ownedRight_3_0= ruleExpCS ) )
                            // InternalQVTimperative.g:9205:1: (lv_ownedRight_3_0= ruleExpCS )
                            {
                            // InternalQVTimperative.g:9205:1: (lv_ownedRight_3_0= ruleExpCS )
                            // InternalQVTimperative.g:9206:3: lv_ownedRight_3_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getExpCSAccess().getOwnedRightExpCSParserRuleCall_0_1_2_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedRight_3_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getExpCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedRight",
                                      		lv_ownedRight_3_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:9224:2: this_PrefixedLetExpCS_4= rulePrefixedLetExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getExpCSAccess().getPrefixedLetExpCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrefixedLetExpCS_4=rulePrefixedLetExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PrefixedLetExpCS_4;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpCS"


    // $ANTLR start "entryRulePrefixedLetExpCS"
    // InternalQVTimperative.g:9243:1: entryRulePrefixedLetExpCS returns [EObject current=null] : iv_rulePrefixedLetExpCS= rulePrefixedLetExpCS EOF ;
    public final EObject entryRulePrefixedLetExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrefixedLetExpCS = null;


        try {
            // InternalQVTimperative.g:9244:2: (iv_rulePrefixedLetExpCS= rulePrefixedLetExpCS EOF )
            // InternalQVTimperative.g:9245:2: iv_rulePrefixedLetExpCS= rulePrefixedLetExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrefixedLetExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrefixedLetExpCS=rulePrefixedLetExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrefixedLetExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrefixedLetExpCS"


    // $ANTLR start "rulePrefixedLetExpCS"
    // InternalQVTimperative.g:9252:1: rulePrefixedLetExpCS returns [EObject current=null] : ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) ) ) | this_LetExpCS_3= ruleLetExpCS ) ;
    public final EObject rulePrefixedLetExpCS() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_ownedRight_2_0 = null;

        EObject this_LetExpCS_3 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:9255:28: ( ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) ) ) | this_LetExpCS_3= ruleLetExpCS ) )
            // InternalQVTimperative.g:9256:1: ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) ) ) | this_LetExpCS_3= ruleLetExpCS )
            {
            // InternalQVTimperative.g:9256:1: ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) ) ) | this_LetExpCS_3= ruleLetExpCS )
            int alt205=2;
            int LA205_0 = input.LA(1);

            if ( ((LA205_0>=102 && LA205_0<=103)) ) {
                alt205=1;
            }
            else if ( (LA205_0==150) ) {
                alt205=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 205, 0, input);

                throw nvae;
            }
            switch (alt205) {
                case 1 :
                    // InternalQVTimperative.g:9256:2: ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) ) )
                    {
                    // InternalQVTimperative.g:9256:2: ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) ) )
                    // InternalQVTimperative.g:9256:3: () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) )
                    {
                    // InternalQVTimperative.g:9256:3: ()
                    // InternalQVTimperative.g:9257:2:
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPrefixedLetExpCSAccess().getPrefixExpCSAction_0_0(),
                                  current);

                    }

                    }

                    // InternalQVTimperative.g:9265:2: ( (lv_name_1_0= ruleUnaryOperatorName ) )
                    // InternalQVTimperative.g:9266:1: (lv_name_1_0= ruleUnaryOperatorName )
                    {
                    // InternalQVTimperative.g:9266:1: (lv_name_1_0= ruleUnaryOperatorName )
                    // InternalQVTimperative.g:9267:3: lv_name_1_0= ruleUnaryOperatorName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getPrefixedLetExpCSAccess().getNameUnaryOperatorNameParserRuleCall_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_8);
                    lv_name_1_0=ruleUnaryOperatorName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPrefixedLetExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"name",
                              		lv_name_1_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.UnaryOperatorName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:9283:2: ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) )
                    // InternalQVTimperative.g:9284:1: (lv_ownedRight_2_0= rulePrefixedLetExpCS )
                    {
                    // InternalQVTimperative.g:9284:1: (lv_ownedRight_2_0= rulePrefixedLetExpCS )
                    // InternalQVTimperative.g:9285:3: lv_ownedRight_2_0= rulePrefixedLetExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getPrefixedLetExpCSAccess().getOwnedRightPrefixedLetExpCSParserRuleCall_0_2_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedRight_2_0=rulePrefixedLetExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPrefixedLetExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedRight",
                              		lv_ownedRight_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PrefixedLetExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:9303:2: this_LetExpCS_3= ruleLetExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrefixedLetExpCSAccess().getLetExpCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_LetExpCS_3=ruleLetExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_LetExpCS_3;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrefixedLetExpCS"


    // $ANTLR start "entryRulePrefixedPrimaryExpCS"
    // InternalQVTimperative.g:9322:1: entryRulePrefixedPrimaryExpCS returns [EObject current=null] : iv_rulePrefixedPrimaryExpCS= rulePrefixedPrimaryExpCS EOF ;
    public final EObject entryRulePrefixedPrimaryExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrefixedPrimaryExpCS = null;


        try {
            // InternalQVTimperative.g:9323:2: (iv_rulePrefixedPrimaryExpCS= rulePrefixedPrimaryExpCS EOF )
            // InternalQVTimperative.g:9324:2: iv_rulePrefixedPrimaryExpCS= rulePrefixedPrimaryExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrefixedPrimaryExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrefixedPrimaryExpCS=rulePrefixedPrimaryExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrefixedPrimaryExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrefixedPrimaryExpCS"


    // $ANTLR start "rulePrefixedPrimaryExpCS"
    // InternalQVTimperative.g:9331:1: rulePrefixedPrimaryExpCS returns [EObject current=null] : ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) ) ) | this_PrimaryExpCS_3= rulePrimaryExpCS ) ;
    public final EObject rulePrefixedPrimaryExpCS() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_ownedRight_2_0 = null;

        EObject this_PrimaryExpCS_3 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:9334:28: ( ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) ) ) | this_PrimaryExpCS_3= rulePrimaryExpCS ) )
            // InternalQVTimperative.g:9335:1: ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) ) ) | this_PrimaryExpCS_3= rulePrimaryExpCS )
            {
            // InternalQVTimperative.g:9335:1: ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) ) ) | this_PrimaryExpCS_3= rulePrimaryExpCS )
            int alt206=2;
            int LA206_0 = input.LA(1);

            if ( ((LA206_0>=102 && LA206_0<=103)) ) {
                alt206=1;
            }
            else if ( (LA206_0==RULE_SINGLE_QUOTED_STRING||(LA206_0>=RULE_INT && LA206_0<=RULE_ESCAPED_ID)||LA206_0==17||LA206_0==19||(LA206_0>=22 && LA206_0<=23)||(LA206_0>=25 && LA206_0<=26)||(LA206_0>=29 && LA206_0<=33)||LA206_0==39||(LA206_0>=42 && LA206_0<=51)||(LA206_0>=53 && LA206_0<=55)||(LA206_0>=57 && LA206_0<=59)||(LA206_0>=61 && LA206_0<=66)||LA206_0==68||LA206_0==70||LA206_0==72||LA206_0==75||LA206_0==77||LA206_0==79||(LA206_0>=81 && LA206_0<=85)||(LA206_0>=87 && LA206_0<=92)||LA206_0==94||LA206_0==96||(LA206_0>=98 && LA206_0<=101)||(LA206_0>=118 && LA206_0<=132)||LA206_0==134||(LA206_0>=136 && LA206_0<=139)||LA206_0==145||LA206_0==151) ) {
                alt206=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 206, 0, input);

                throw nvae;
            }
            switch (alt206) {
                case 1 :
                    // InternalQVTimperative.g:9335:2: ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) ) )
                    {
                    // InternalQVTimperative.g:9335:2: ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) ) )
                    // InternalQVTimperative.g:9335:3: () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) )
                    {
                    // InternalQVTimperative.g:9335:3: ()
                    // InternalQVTimperative.g:9336:2:
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPrefixedPrimaryExpCSAccess().getPrefixExpCSAction_0_0(),
                                  current);

                    }

                    }

                    // InternalQVTimperative.g:9344:2: ( (lv_name_1_0= ruleUnaryOperatorName ) )
                    // InternalQVTimperative.g:9345:1: (lv_name_1_0= ruleUnaryOperatorName )
                    {
                    // InternalQVTimperative.g:9345:1: (lv_name_1_0= ruleUnaryOperatorName )
                    // InternalQVTimperative.g:9346:3: lv_name_1_0= ruleUnaryOperatorName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getPrefixedPrimaryExpCSAccess().getNameUnaryOperatorNameParserRuleCall_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_131);
                    lv_name_1_0=ruleUnaryOperatorName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPrefixedPrimaryExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"name",
                              		lv_name_1_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.UnaryOperatorName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:9362:2: ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) )
                    // InternalQVTimperative.g:9363:1: (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS )
                    {
                    // InternalQVTimperative.g:9363:1: (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS )
                    // InternalQVTimperative.g:9364:3: lv_ownedRight_2_0= rulePrefixedPrimaryExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getPrefixedPrimaryExpCSAccess().getOwnedRightPrefixedPrimaryExpCSParserRuleCall_0_2_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedRight_2_0=rulePrefixedPrimaryExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPrefixedPrimaryExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedRight",
                              		lv_ownedRight_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PrefixedPrimaryExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:9382:2: this_PrimaryExpCS_3= rulePrimaryExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrefixedPrimaryExpCSAccess().getPrimaryExpCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrimaryExpCS_3=rulePrimaryExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PrimaryExpCS_3;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrefixedPrimaryExpCS"


    // $ANTLR start "entryRulePrimaryExpCS"
    // InternalQVTimperative.g:9401:1: entryRulePrimaryExpCS returns [EObject current=null] : iv_rulePrimaryExpCS= rulePrimaryExpCS EOF ;
    public final EObject entryRulePrimaryExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryExpCS = null;


        try {
            // InternalQVTimperative.g:9402:2: (iv_rulePrimaryExpCS= rulePrimaryExpCS EOF )
            // InternalQVTimperative.g:9403:2: iv_rulePrimaryExpCS= rulePrimaryExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrimaryExpCS=rulePrimaryExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimaryExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimaryExpCS"


    // $ANTLR start "rulePrimaryExpCS"
    // InternalQVTimperative.g:9410:1: rulePrimaryExpCS returns [EObject current=null] : (this_NestedExpCS_0= ruleNestedExpCS | this_IfExpCS_1= ruleIfExpCS | this_SelfExpCS_2= ruleSelfExpCS | this_PrimitiveLiteralExpCS_3= rulePrimitiveLiteralExpCS | this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS | this_MapLiteralExpCS_5= ruleMapLiteralExpCS | this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS | this_LambdaLiteralExpCS_7= ruleLambdaLiteralExpCS | this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS | this_NameExpCS_9= ruleNameExpCS ) ;
    public final EObject rulePrimaryExpCS() throws RecognitionException {
        EObject current = null;

        EObject this_NestedExpCS_0 = null;

        EObject this_IfExpCS_1 = null;

        EObject this_SelfExpCS_2 = null;

        EObject this_PrimitiveLiteralExpCS_3 = null;

        EObject this_TupleLiteralExpCS_4 = null;

        EObject this_MapLiteralExpCS_5 = null;

        EObject this_CollectionLiteralExpCS_6 = null;

        EObject this_LambdaLiteralExpCS_7 = null;

        EObject this_TypeLiteralExpCS_8 = null;

        EObject this_NameExpCS_9 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:9413:28: ( (this_NestedExpCS_0= ruleNestedExpCS | this_IfExpCS_1= ruleIfExpCS | this_SelfExpCS_2= ruleSelfExpCS | this_PrimitiveLiteralExpCS_3= rulePrimitiveLiteralExpCS | this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS | this_MapLiteralExpCS_5= ruleMapLiteralExpCS | this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS | this_LambdaLiteralExpCS_7= ruleLambdaLiteralExpCS | this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS | this_NameExpCS_9= ruleNameExpCS ) )
            // InternalQVTimperative.g:9414:1: (this_NestedExpCS_0= ruleNestedExpCS | this_IfExpCS_1= ruleIfExpCS | this_SelfExpCS_2= ruleSelfExpCS | this_PrimitiveLiteralExpCS_3= rulePrimitiveLiteralExpCS | this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS | this_MapLiteralExpCS_5= ruleMapLiteralExpCS | this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS | this_LambdaLiteralExpCS_7= ruleLambdaLiteralExpCS | this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS | this_NameExpCS_9= ruleNameExpCS )
            {
            // InternalQVTimperative.g:9414:1: (this_NestedExpCS_0= ruleNestedExpCS | this_IfExpCS_1= ruleIfExpCS | this_SelfExpCS_2= ruleSelfExpCS | this_PrimitiveLiteralExpCS_3= rulePrimitiveLiteralExpCS | this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS | this_MapLiteralExpCS_5= ruleMapLiteralExpCS | this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS | this_LambdaLiteralExpCS_7= ruleLambdaLiteralExpCS | this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS | this_NameExpCS_9= ruleNameExpCS )
            int alt207=10;
            alt207 = dfa207.predict(input);
            switch (alt207) {
                case 1 :
                    // InternalQVTimperative.g:9415:2: this_NestedExpCS_0= ruleNestedExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getNestedExpCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NestedExpCS_0=ruleNestedExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NestedExpCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:9428:2: this_IfExpCS_1= ruleIfExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getIfExpCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IfExpCS_1=ruleIfExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IfExpCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:9441:2: this_SelfExpCS_2= ruleSelfExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getSelfExpCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SelfExpCS_2=ruleSelfExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_SelfExpCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:9454:2: this_PrimitiveLiteralExpCS_3= rulePrimitiveLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getPrimitiveLiteralExpCSParserRuleCall_3());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrimitiveLiteralExpCS_3=rulePrimitiveLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PrimitiveLiteralExpCS_3;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 5 :
                    // InternalQVTimperative.g:9467:2: this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getTupleLiteralExpCSParserRuleCall_4());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TupleLiteralExpCS_4=ruleTupleLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TupleLiteralExpCS_4;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 6 :
                    // InternalQVTimperative.g:9480:2: this_MapLiteralExpCS_5= ruleMapLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getMapLiteralExpCSParserRuleCall_5());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_MapLiteralExpCS_5=ruleMapLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MapLiteralExpCS_5;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 7 :
                    // InternalQVTimperative.g:9493:2: this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getCollectionLiteralExpCSParserRuleCall_6());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CollectionLiteralExpCS_6=ruleCollectionLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_CollectionLiteralExpCS_6;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 8 :
                    // InternalQVTimperative.g:9506:2: this_LambdaLiteralExpCS_7= ruleLambdaLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getLambdaLiteralExpCSParserRuleCall_7());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_LambdaLiteralExpCS_7=ruleLambdaLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_LambdaLiteralExpCS_7;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 9 :
                    // InternalQVTimperative.g:9519:2: this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getTypeLiteralExpCSParserRuleCall_8());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypeLiteralExpCS_8=ruleTypeLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeLiteralExpCS_8;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 10 :
                    // InternalQVTimperative.g:9532:2: this_NameExpCS_9= ruleNameExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getNameExpCSParserRuleCall_9());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NameExpCS_9=ruleNameExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NameExpCS_9;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimaryExpCS"


    // $ANTLR start "entryRuleNameExpCS"
    // InternalQVTimperative.g:9551:1: entryRuleNameExpCS returns [EObject current=null] : iv_ruleNameExpCS= ruleNameExpCS EOF ;
    public final EObject entryRuleNameExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNameExpCS = null;


        try {
            // InternalQVTimperative.g:9552:2: (iv_ruleNameExpCS= ruleNameExpCS EOF )
            // InternalQVTimperative.g:9553:2: iv_ruleNameExpCS= ruleNameExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNameExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNameExpCS=ruleNameExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNameExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNameExpCS"


    // $ANTLR start "ruleNameExpCS"
    // InternalQVTimperative.g:9560:1: ruleNameExpCS returns [EObject current=null] : ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS ) )* ( (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS ) )? ( (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS ) )? ( ( (lv_isPre_4_0= '@' ) ) otherlv_5= 'pre' )? ) ;
    public final EObject ruleNameExpCS() throws RecognitionException {
        EObject current = null;

        Token lv_isPre_4_0=null;
        Token otherlv_5=null;
        EObject lv_ownedPathName_0_0 = null;

        EObject lv_ownedSquareBracketedClauses_1_0 = null;

        EObject lv_ownedRoundBracketedClause_2_0 = null;

        EObject lv_ownedCurlyBracketedClause_3_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:9563:28: ( ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS ) )* ( (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS ) )? ( (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS ) )? ( ( (lv_isPre_4_0= '@' ) ) otherlv_5= 'pre' )? ) )
            // InternalQVTimperative.g:9564:1: ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS ) )* ( (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS ) )? ( (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS ) )? ( ( (lv_isPre_4_0= '@' ) ) otherlv_5= 'pre' )? )
            {
            // InternalQVTimperative.g:9564:1: ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS ) )* ( (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS ) )? ( (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS ) )? ( ( (lv_isPre_4_0= '@' ) ) otherlv_5= 'pre' )? )
            // InternalQVTimperative.g:9564:2: ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS ) )* ( (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS ) )? ( (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS ) )? ( ( (lv_isPre_4_0= '@' ) ) otherlv_5= 'pre' )?
            {
            // InternalQVTimperative.g:9564:2: ( (lv_ownedPathName_0_0= rulePathNameCS ) )
            // InternalQVTimperative.g:9565:1: (lv_ownedPathName_0_0= rulePathNameCS )
            {
            // InternalQVTimperative.g:9565:1: (lv_ownedPathName_0_0= rulePathNameCS )
            // InternalQVTimperative.g:9566:3: lv_ownedPathName_0_0= rulePathNameCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getNameExpCSAccess().getOwnedPathNamePathNameCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_132);
            lv_ownedPathName_0_0=rulePathNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNameExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedPathName",
                      		lv_ownedPathName_0_0,
                      		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:9582:2: ( (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS ) )*
            loop208:
            do {
                int alt208=2;
                int LA208_0 = input.LA(1);

                if ( (LA208_0==142) ) {
                    alt208=1;
                }


                switch (alt208) {
            	case 1 :
            	    // InternalQVTimperative.g:9583:1: (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS )
            	    {
            	    // InternalQVTimperative.g:9583:1: (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS )
            	    // InternalQVTimperative.g:9584:3: lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getNameExpCSAccess().getOwnedSquareBracketedClausesSquareBracketedClauseCSParserRuleCall_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_132);
            	    lv_ownedSquareBracketedClauses_1_0=ruleSquareBracketedClauseCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getNameExpCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedSquareBracketedClauses",
            	              		lv_ownedSquareBracketedClauses_1_0,
            	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.SquareBracketedClauseCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop208;
                }
            } while (true);

            // InternalQVTimperative.g:9600:3: ( (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS ) )?
            int alt209=2;
            int LA209_0 = input.LA(1);

            if ( (LA209_0==55) ) {
                alt209=1;
            }
            switch (alt209) {
                case 1 :
                    // InternalQVTimperative.g:9601:1: (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS )
                    {
                    // InternalQVTimperative.g:9601:1: (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS )
                    // InternalQVTimperative.g:9602:3: lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNameExpCSAccess().getOwnedRoundBracketedClauseRoundBracketedClauseCSParserRuleCall_2_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_133);
                    lv_ownedRoundBracketedClause_2_0=ruleRoundBracketedClauseCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNameExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedRoundBracketedClause",
                              		lv_ownedRoundBracketedClause_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.RoundBracketedClauseCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:9618:3: ( (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS ) )?
            int alt210=2;
            alt210 = dfa210.predict(input);
            switch (alt210) {
                case 1 :
                    // InternalQVTimperative.g:9619:1: (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS )
                    {
                    // InternalQVTimperative.g:9619:1: (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS )
                    // InternalQVTimperative.g:9620:3: lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNameExpCSAccess().getOwnedCurlyBracketedClauseCurlyBracketedClauseCSParserRuleCall_3_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_134);
                    lv_ownedCurlyBracketedClause_3_0=ruleCurlyBracketedClauseCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNameExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedCurlyBracketedClause",
                              		lv_ownedCurlyBracketedClause_3_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CurlyBracketedClauseCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:9636:3: ( ( (lv_isPre_4_0= '@' ) ) otherlv_5= 'pre' )?
            int alt211=2;
            int LA211_0 = input.LA(1);

            if ( (LA211_0==140) ) {
                alt211=1;
            }
            switch (alt211) {
                case 1 :
                    // InternalQVTimperative.g:9636:4: ( (lv_isPre_4_0= '@' ) ) otherlv_5= 'pre'
                    {
                    // InternalQVTimperative.g:9636:4: ( (lv_isPre_4_0= '@' ) )
                    // InternalQVTimperative.g:9637:1: (lv_isPre_4_0= '@' )
                    {
                    // InternalQVTimperative.g:9637:1: (lv_isPre_4_0= '@' )
                    // InternalQVTimperative.g:9638:3: lv_isPre_4_0= '@'
                    {
                    lv_isPre_4_0=(Token)match(input,140,FollowSets000.FOLLOW_135); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isPre_4_0, grammarAccess.getNameExpCSAccess().getIsPreCommercialAtKeyword_4_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getNameExpCSRule());
                      	        }
                             		setWithLastConsumed(current, "isPre", true, "@");

                    }

                    }


                    }

                    otherlv_5=(Token)match(input,141,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getNameExpCSAccess().getPreKeyword_4_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNameExpCS"


    // $ANTLR start "entryRuleCurlyBracketedClauseCS"
    // InternalQVTimperative.g:9663:1: entryRuleCurlyBracketedClauseCS returns [EObject current=null] : iv_ruleCurlyBracketedClauseCS= ruleCurlyBracketedClauseCS EOF ;
    public final EObject entryRuleCurlyBracketedClauseCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCurlyBracketedClauseCS = null;


        try {
            // InternalQVTimperative.g:9664:2: (iv_ruleCurlyBracketedClauseCS= ruleCurlyBracketedClauseCS EOF )
            // InternalQVTimperative.g:9665:2: iv_ruleCurlyBracketedClauseCS= ruleCurlyBracketedClauseCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCurlyBracketedClauseCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCurlyBracketedClauseCS=ruleCurlyBracketedClauseCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCurlyBracketedClauseCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCurlyBracketedClauseCS"


    // $ANTLR start "ruleCurlyBracketedClauseCS"
    // InternalQVTimperative.g:9672:1: ruleCurlyBracketedClauseCS returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleShadowPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleCurlyBracketedClauseCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_ownedParts_2_0 = null;

        EObject lv_ownedParts_4_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:9675:28: ( ( () otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleShadowPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )* )? otherlv_5= '}' ) )
            // InternalQVTimperative.g:9676:1: ( () otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleShadowPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )* )? otherlv_5= '}' )
            {
            // InternalQVTimperative.g:9676:1: ( () otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleShadowPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )* )? otherlv_5= '}' )
            // InternalQVTimperative.g:9676:2: () otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleShadowPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )* )? otherlv_5= '}'
            {
            // InternalQVTimperative.g:9676:2: ()
            // InternalQVTimperative.g:9677:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getCurlyBracketedClauseCSAccess().getCurlyBracketedClauseCSAction_0(),
                          current);

            }

            }

            otherlv_1=(Token)match(input,35,FollowSets000.FOLLOW_136); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getCurlyBracketedClauseCSAccess().getLeftCurlyBracketKeyword_1());

            }
            // InternalQVTimperative.g:9689:1: ( ( (lv_ownedParts_2_0= ruleShadowPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )* )?
            int alt213=2;
            int LA213_0 = input.LA(1);

            if ( (LA213_0==RULE_SINGLE_QUOTED_STRING||(LA213_0>=RULE_SIMPLE_ID && LA213_0<=RULE_ESCAPED_ID)||LA213_0==17||LA213_0==19||(LA213_0>=22 && LA213_0<=23)||(LA213_0>=25 && LA213_0<=26)||(LA213_0>=29 && LA213_0<=33)||LA213_0==39||(LA213_0>=43 && LA213_0<=51)||(LA213_0>=53 && LA213_0<=54)||(LA213_0>=57 && LA213_0<=59)||(LA213_0>=61 && LA213_0<=66)||LA213_0==68||LA213_0==70||LA213_0==72||LA213_0==75||LA213_0==77||LA213_0==79||(LA213_0>=81 && LA213_0<=85)||(LA213_0>=87 && LA213_0<=92)||LA213_0==94||LA213_0==96||(LA213_0>=98 && LA213_0<=101)) ) {
                alt213=1;
            }
            switch (alt213) {
                case 1 :
                    // InternalQVTimperative.g:9689:2: ( (lv_ownedParts_2_0= ruleShadowPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )*
                    {
                    // InternalQVTimperative.g:9689:2: ( (lv_ownedParts_2_0= ruleShadowPartCS ) )
                    // InternalQVTimperative.g:9690:1: (lv_ownedParts_2_0= ruleShadowPartCS )
                    {
                    // InternalQVTimperative.g:9690:1: (lv_ownedParts_2_0= ruleShadowPartCS )
                    // InternalQVTimperative.g:9691:3: lv_ownedParts_2_0= ruleShadowPartCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getCurlyBracketedClauseCSAccess().getOwnedPartsShadowPartCSParserRuleCall_2_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_120);
                    lv_ownedParts_2_0=ruleShadowPartCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCurlyBracketedClauseCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedParts",
                              		lv_ownedParts_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ShadowPartCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:9707:2: (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )*
                    loop212:
                    do {
                        int alt212=2;
                        int LA212_0 = input.LA(1);

                        if ( (LA212_0==18) ) {
                            alt212=1;
                        }


                        switch (alt212) {
                    	case 1 :
                    	    // InternalQVTimperative.g:9707:4: otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) )
                    	    {
                    	    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_38); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getCurlyBracketedClauseCSAccess().getCommaKeyword_2_1_0());

                    	    }
                    	    // InternalQVTimperative.g:9711:1: ( (lv_ownedParts_4_0= ruleShadowPartCS ) )
                    	    // InternalQVTimperative.g:9712:1: (lv_ownedParts_4_0= ruleShadowPartCS )
                    	    {
                    	    // InternalQVTimperative.g:9712:1: (lv_ownedParts_4_0= ruleShadowPartCS )
                    	    // InternalQVTimperative.g:9713:3: lv_ownedParts_4_0= ruleShadowPartCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getCurlyBracketedClauseCSAccess().getOwnedPartsShadowPartCSParserRuleCall_2_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_120);
                    	    lv_ownedParts_4_0=ruleShadowPartCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getCurlyBracketedClauseCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedParts",
                    	              		lv_ownedParts_4_0,
                    	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ShadowPartCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop212;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getCurlyBracketedClauseCSAccess().getRightCurlyBracketKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCurlyBracketedClauseCS"


    // $ANTLR start "entryRuleRoundBracketedClauseCS"
    // InternalQVTimperative.g:9741:1: entryRuleRoundBracketedClauseCS returns [EObject current=null] : iv_ruleRoundBracketedClauseCS= ruleRoundBracketedClauseCS EOF ;
    public final EObject entryRuleRoundBracketedClauseCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRoundBracketedClauseCS = null;


        try {
            // InternalQVTimperative.g:9742:2: (iv_ruleRoundBracketedClauseCS= ruleRoundBracketedClauseCS EOF )
            // InternalQVTimperative.g:9743:2: iv_ruleRoundBracketedClauseCS= ruleRoundBracketedClauseCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRoundBracketedClauseCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRoundBracketedClauseCS=ruleRoundBracketedClauseCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRoundBracketedClauseCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRoundBracketedClauseCS"


    // $ANTLR start "ruleRoundBracketedClauseCS"
    // InternalQVTimperative.g:9750:1: ruleRoundBracketedClauseCS returns [EObject current=null] : ( () otherlv_1= '(' ( ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) ) ( ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) ) )* )? otherlv_4= ')' ) ;
    public final EObject ruleRoundBracketedClauseCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject lv_ownedArguments_2_0 = null;

        EObject lv_ownedArguments_3_1 = null;

        EObject lv_ownedArguments_3_2 = null;

        EObject lv_ownedArguments_3_3 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:9753:28: ( ( () otherlv_1= '(' ( ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) ) ( ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) ) )* )? otherlv_4= ')' ) )
            // InternalQVTimperative.g:9754:1: ( () otherlv_1= '(' ( ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) ) ( ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) ) )* )? otherlv_4= ')' )
            {
            // InternalQVTimperative.g:9754:1: ( () otherlv_1= '(' ( ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) ) ( ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) ) )* )? otherlv_4= ')' )
            // InternalQVTimperative.g:9754:2: () otherlv_1= '(' ( ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) ) ( ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) ) )* )? otherlv_4= ')'
            {
            // InternalQVTimperative.g:9754:2: ()
            // InternalQVTimperative.g:9755:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getRoundBracketedClauseCSAccess().getRoundBracketedClauseCSAction_0(),
                          current);

            }

            }

            otherlv_1=(Token)match(input,55,FollowSets000.FOLLOW_137); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getRoundBracketedClauseCSAccess().getLeftParenthesisKeyword_1());

            }
            // InternalQVTimperative.g:9767:1: ( ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) ) ( ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) ) )* )?
            int alt216=2;
            int LA216_0 = input.LA(1);

            if ( (LA216_0==RULE_SINGLE_QUOTED_STRING||(LA216_0>=RULE_INT && LA216_0<=RULE_ESCAPED_ID)||LA216_0==17||LA216_0==19||(LA216_0>=22 && LA216_0<=26)||(LA216_0>=29 && LA216_0<=33)||LA216_0==39||(LA216_0>=42 && LA216_0<=51)||(LA216_0>=53 && LA216_0<=55)||(LA216_0>=57 && LA216_0<=59)||(LA216_0>=61 && LA216_0<=66)||LA216_0==68||LA216_0==70||LA216_0==72||LA216_0==75||LA216_0==77||LA216_0==79||(LA216_0>=81 && LA216_0<=85)||(LA216_0>=87 && LA216_0<=92)||LA216_0==94||LA216_0==96||(LA216_0>=98 && LA216_0<=103)||(LA216_0>=118 && LA216_0<=132)||LA216_0==134||(LA216_0>=136 && LA216_0<=139)||LA216_0==145||(LA216_0>=150 && LA216_0<=151)) ) {
                alt216=1;
            }
            switch (alt216) {
                case 1 :
                    // InternalQVTimperative.g:9767:2: ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) ) ( ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) ) )*
                    {
                    // InternalQVTimperative.g:9767:2: ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) )
                    // InternalQVTimperative.g:9768:1: (lv_ownedArguments_2_0= ruleNavigatingArgCS )
                    {
                    // InternalQVTimperative.g:9768:1: (lv_ownedArguments_2_0= ruleNavigatingArgCS )
                    // InternalQVTimperative.g:9769:3: lv_ownedArguments_2_0= ruleNavigatingArgCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingArgCSParserRuleCall_2_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_138);
                    lv_ownedArguments_2_0=ruleNavigatingArgCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getRoundBracketedClauseCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedArguments",
                              		lv_ownedArguments_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingArgCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:9785:2: ( ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) ) )*
                    loop215:
                    do {
                        int alt215=2;
                        int LA215_0 = input.LA(1);

                        if ( (LA215_0==18||LA215_0==21||LA215_0==144) ) {
                            alt215=1;
                        }


                        switch (alt215) {
                    	case 1 :
                    	    // InternalQVTimperative.g:9786:1: ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) )
                    	    {
                    	    // InternalQVTimperative.g:9786:1: ( (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS ) )
                    	    // InternalQVTimperative.g:9787:1: (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS )
                    	    {
                    	    // InternalQVTimperative.g:9787:1: (lv_ownedArguments_3_1= ruleNavigatingCommaArgCS | lv_ownedArguments_3_2= ruleNavigatingSemiArgCS | lv_ownedArguments_3_3= ruleNavigatingBarArgCS )
                    	    int alt214=3;
                    	    switch ( input.LA(1) ) {
                    	    case 18:
                    	        {
                    	        alt214=1;
                    	        }
                    	        break;
                    	    case 21:
                    	        {
                    	        alt214=2;
                    	        }
                    	        break;
                    	    case 144:
                    	        {
                    	        alt214=3;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 214, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt214) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:9788:3: lv_ownedArguments_3_1= ruleNavigatingCommaArgCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	        newCompositeNode(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingCommaArgCSParserRuleCall_2_1_0_0());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_138);
                    	            lv_ownedArguments_3_1=ruleNavigatingCommaArgCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getRoundBracketedClauseCSRule());
                    	              	        }
                    	                     		add(
                    	                     			current,
                    	                     			"ownedArguments",
                    	                      		lv_ownedArguments_3_1,
                    	                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingCommaArgCS");
                    	              	        afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalQVTimperative.g:9803:8: lv_ownedArguments_3_2= ruleNavigatingSemiArgCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	        newCompositeNode(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingSemiArgCSParserRuleCall_2_1_0_1());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_138);
                    	            lv_ownedArguments_3_2=ruleNavigatingSemiArgCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getRoundBracketedClauseCSRule());
                    	              	        }
                    	                     		add(
                    	                     			current,
                    	                     			"ownedArguments",
                    	                      		lv_ownedArguments_3_2,
                    	                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingSemiArgCS");
                    	              	        afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // InternalQVTimperative.g:9818:8: lv_ownedArguments_3_3= ruleNavigatingBarArgCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	        newCompositeNode(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingBarArgCSParserRuleCall_2_1_0_2());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_138);
                    	            lv_ownedArguments_3_3=ruleNavigatingBarArgCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getRoundBracketedClauseCSRule());
                    	              	        }
                    	                     		add(
                    	                     			current,
                    	                     			"ownedArguments",
                    	                      		lv_ownedArguments_3_3,
                    	                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingBarArgCS");
                    	              	        afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop215;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_4=(Token)match(input,56,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getRoundBracketedClauseCSAccess().getRightParenthesisKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRoundBracketedClauseCS"


    // $ANTLR start "entryRuleSquareBracketedClauseCS"
    // InternalQVTimperative.g:9848:1: entryRuleSquareBracketedClauseCS returns [EObject current=null] : iv_ruleSquareBracketedClauseCS= ruleSquareBracketedClauseCS EOF ;
    public final EObject entryRuleSquareBracketedClauseCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSquareBracketedClauseCS = null;


        try {
            // InternalQVTimperative.g:9849:2: (iv_ruleSquareBracketedClauseCS= ruleSquareBracketedClauseCS EOF )
            // InternalQVTimperative.g:9850:2: iv_ruleSquareBracketedClauseCS= ruleSquareBracketedClauseCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSquareBracketedClauseCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSquareBracketedClauseCS=ruleSquareBracketedClauseCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSquareBracketedClauseCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSquareBracketedClauseCS"


    // $ANTLR start "ruleSquareBracketedClauseCS"
    // InternalQVTimperative.g:9857:1: ruleSquareBracketedClauseCS returns [EObject current=null] : (otherlv_0= '[' ( (lv_ownedTerms_1_0= ruleExpCS ) ) (otherlv_2= ',' ( (lv_ownedTerms_3_0= ruleExpCS ) ) )* otherlv_4= ']' ) ;
    public final EObject ruleSquareBracketedClauseCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedTerms_1_0 = null;

        EObject lv_ownedTerms_3_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:9860:28: ( (otherlv_0= '[' ( (lv_ownedTerms_1_0= ruleExpCS ) ) (otherlv_2= ',' ( (lv_ownedTerms_3_0= ruleExpCS ) ) )* otherlv_4= ']' ) )
            // InternalQVTimperative.g:9861:1: (otherlv_0= '[' ( (lv_ownedTerms_1_0= ruleExpCS ) ) (otherlv_2= ',' ( (lv_ownedTerms_3_0= ruleExpCS ) ) )* otherlv_4= ']' )
            {
            // InternalQVTimperative.g:9861:1: (otherlv_0= '[' ( (lv_ownedTerms_1_0= ruleExpCS ) ) (otherlv_2= ',' ( (lv_ownedTerms_3_0= ruleExpCS ) ) )* otherlv_4= ']' )
            // InternalQVTimperative.g:9861:3: otherlv_0= '[' ( (lv_ownedTerms_1_0= ruleExpCS ) ) (otherlv_2= ',' ( (lv_ownedTerms_3_0= ruleExpCS ) ) )* otherlv_4= ']'
            {
            otherlv_0=(Token)match(input,142,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getSquareBracketedClauseCSAccess().getLeftSquareBracketKeyword_0());

            }
            // InternalQVTimperative.g:9865:1: ( (lv_ownedTerms_1_0= ruleExpCS ) )
            // InternalQVTimperative.g:9866:1: (lv_ownedTerms_1_0= ruleExpCS )
            {
            // InternalQVTimperative.g:9866:1: (lv_ownedTerms_1_0= ruleExpCS )
            // InternalQVTimperative.g:9867:3: lv_ownedTerms_1_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getSquareBracketedClauseCSAccess().getOwnedTermsExpCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_139);
            lv_ownedTerms_1_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSquareBracketedClauseCSRule());
              	        }
                     		add(
                     			current,
                     			"ownedTerms",
                      		lv_ownedTerms_1_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:9883:2: (otherlv_2= ',' ( (lv_ownedTerms_3_0= ruleExpCS ) ) )*
            loop217:
            do {
                int alt217=2;
                int LA217_0 = input.LA(1);

                if ( (LA217_0==18) ) {
                    alt217=1;
                }


                switch (alt217) {
            	case 1 :
            	    // InternalQVTimperative.g:9883:4: otherlv_2= ',' ( (lv_ownedTerms_3_0= ruleExpCS ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getSquareBracketedClauseCSAccess().getCommaKeyword_2_0());

            	    }
            	    // InternalQVTimperative.g:9887:1: ( (lv_ownedTerms_3_0= ruleExpCS ) )
            	    // InternalQVTimperative.g:9888:1: (lv_ownedTerms_3_0= ruleExpCS )
            	    {
            	    // InternalQVTimperative.g:9888:1: (lv_ownedTerms_3_0= ruleExpCS )
            	    // InternalQVTimperative.g:9889:3: lv_ownedTerms_3_0= ruleExpCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getSquareBracketedClauseCSAccess().getOwnedTermsExpCSParserRuleCall_2_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_139);
            	    lv_ownedTerms_3_0=ruleExpCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSquareBracketedClauseCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedTerms",
            	              		lv_ownedTerms_3_0,
            	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop217;
                }
            } while (true);

            otherlv_4=(Token)match(input,143,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getSquareBracketedClauseCSAccess().getRightSquareBracketKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSquareBracketedClauseCS"


    // $ANTLR start "entryRuleNavigatingArgCS"
    // InternalQVTimperative.g:9917:1: entryRuleNavigatingArgCS returns [EObject current=null] : iv_ruleNavigatingArgCS= ruleNavigatingArgCS EOF ;
    public final EObject entryRuleNavigatingArgCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNavigatingArgCS = null;


        try {
            // InternalQVTimperative.g:9918:2: (iv_ruleNavigatingArgCS= ruleNavigatingArgCS EOF )
            // InternalQVTimperative.g:9919:2: iv_ruleNavigatingArgCS= ruleNavigatingArgCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNavigatingArgCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNavigatingArgCS=ruleNavigatingArgCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNavigatingArgCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNavigatingArgCS"


    // $ANTLR start "ruleNavigatingArgCS"
    // InternalQVTimperative.g:9926:1: ruleNavigatingArgCS returns [EObject current=null] : ( ( ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) ) ( (otherlv_1= '<-' ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? ) | (otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypeExpCS ) ) (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )? (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )? ) | ( (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )? (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )? otherlv_15= 'in' ( (lv_ownedInitExpression_16_0= ruleExpCS ) ) ) )? ) | (otherlv_17= ':' ( (lv_ownedType_18_0= ruleTypeExpCS ) ) ) ) ;
    public final EObject ruleNavigatingArgCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        EObject lv_ownedNameExpression_0_0 = null;

        EObject lv_ownedCoIterator_2_0 = null;

        EObject lv_ownedInitExpression_4_0 = null;

        EObject lv_ownedType_6_0 = null;

        EObject lv_ownedCoIterator_8_0 = null;

        EObject lv_ownedInitExpression_10_0 = null;

        EObject lv_ownedType_12_0 = null;

        EObject lv_ownedCoIterator_14_0 = null;

        EObject lv_ownedInitExpression_16_0 = null;

        EObject lv_ownedType_18_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:9929:28: ( ( ( ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) ) ( (otherlv_1= '<-' ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? ) | (otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypeExpCS ) ) (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )? (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )? ) | ( (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )? (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )? otherlv_15= 'in' ( (lv_ownedInitExpression_16_0= ruleExpCS ) ) ) )? ) | (otherlv_17= ':' ( (lv_ownedType_18_0= ruleTypeExpCS ) ) ) ) )
            // InternalQVTimperative.g:9930:1: ( ( ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) ) ( (otherlv_1= '<-' ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? ) | (otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypeExpCS ) ) (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )? (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )? ) | ( (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )? (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )? otherlv_15= 'in' ( (lv_ownedInitExpression_16_0= ruleExpCS ) ) ) )? ) | (otherlv_17= ':' ( (lv_ownedType_18_0= ruleTypeExpCS ) ) ) )
            {
            // InternalQVTimperative.g:9930:1: ( ( ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) ) ( (otherlv_1= '<-' ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? ) | (otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypeExpCS ) ) (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )? (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )? ) | ( (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )? (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )? otherlv_15= 'in' ( (lv_ownedInitExpression_16_0= ruleExpCS ) ) ) )? ) | (otherlv_17= ':' ( (lv_ownedType_18_0= ruleTypeExpCS ) ) ) )
            int alt224=2;
            int LA224_0 = input.LA(1);

            if ( (LA224_0==RULE_SINGLE_QUOTED_STRING||(LA224_0>=RULE_INT && LA224_0<=RULE_ESCAPED_ID)||LA224_0==17||LA224_0==19||(LA224_0>=22 && LA224_0<=23)||(LA224_0>=25 && LA224_0<=26)||(LA224_0>=29 && LA224_0<=33)||LA224_0==39||(LA224_0>=42 && LA224_0<=51)||(LA224_0>=53 && LA224_0<=55)||(LA224_0>=57 && LA224_0<=59)||(LA224_0>=61 && LA224_0<=66)||LA224_0==68||LA224_0==70||LA224_0==72||LA224_0==75||LA224_0==77||LA224_0==79||(LA224_0>=81 && LA224_0<=85)||(LA224_0>=87 && LA224_0<=92)||LA224_0==94||LA224_0==96||(LA224_0>=98 && LA224_0<=103)||(LA224_0>=118 && LA224_0<=132)||LA224_0==134||(LA224_0>=136 && LA224_0<=139)||LA224_0==145||(LA224_0>=150 && LA224_0<=151)) ) {
                alt224=1;
            }
            else if ( (LA224_0==24) ) {
                alt224=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 224, 0, input);

                throw nvae;
            }
            switch (alt224) {
                case 1 :
                    // InternalQVTimperative.g:9930:2: ( ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) ) ( (otherlv_1= '<-' ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? ) | (otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypeExpCS ) ) (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )? (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )? ) | ( (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )? (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )? otherlv_15= 'in' ( (lv_ownedInitExpression_16_0= ruleExpCS ) ) ) )? )
                    {
                    // InternalQVTimperative.g:9930:2: ( ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) ) ( (otherlv_1= '<-' ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? ) | (otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypeExpCS ) ) (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )? (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )? ) | ( (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )? (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )? otherlv_15= 'in' ( (lv_ownedInitExpression_16_0= ruleExpCS ) ) ) )? )
                    // InternalQVTimperative.g:9930:3: ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) ) ( (otherlv_1= '<-' ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? ) | (otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypeExpCS ) ) (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )? (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )? ) | ( (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )? (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )? otherlv_15= 'in' ( (lv_ownedInitExpression_16_0= ruleExpCS ) ) ) )?
                    {
                    // InternalQVTimperative.g:9930:3: ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) )
                    // InternalQVTimperative.g:9931:1: (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS )
                    {
                    // InternalQVTimperative.g:9931:1: (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS )
                    // InternalQVTimperative.g:9932:3: lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedNameExpressionNavigatingArgExpCSParserRuleCall_0_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_140);
                    lv_ownedNameExpression_0_0=ruleNavigatingArgExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedNameExpression",
                              		lv_ownedNameExpression_0_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingArgExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:9948:2: ( (otherlv_1= '<-' ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? ) | (otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypeExpCS ) ) (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )? (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )? ) | ( (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )? (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )? otherlv_15= 'in' ( (lv_ownedInitExpression_16_0= ruleExpCS ) ) ) )?
                    int alt223=4;
                    alt223 = dfa223.predict(input);
                    switch (alt223) {
                        case 1 :
                            // InternalQVTimperative.g:9948:3: (otherlv_1= '<-' ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? )
                            {
                            // InternalQVTimperative.g:9948:3: (otherlv_1= '<-' ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? )
                            // InternalQVTimperative.g:9948:5: otherlv_1= '<-' ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )?
                            {
                            otherlv_1=(Token)match(input,135,FollowSets000.FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_1, grammarAccess.getNavigatingArgCSAccess().getLessThanSignHyphenMinusKeyword_0_1_0_0());

                            }
                            // InternalQVTimperative.g:9952:1: ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) )
                            // InternalQVTimperative.g:9953:1: (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS )
                            {
                            // InternalQVTimperative.g:9953:1: (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS )
                            // InternalQVTimperative.g:9954:3: lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_0_1_0_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_141);
                            lv_ownedCoIterator_2_0=ruleCoIteratorVariableCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedCoIterator",
                                      		lv_ownedCoIterator_2_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CoIteratorVariableCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }

                            // InternalQVTimperative.g:9970:2: (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )?
                            int alt218=2;
                            int LA218_0 = input.LA(1);

                            if ( (LA218_0==52) ) {
                                alt218=1;
                            }
                            switch (alt218) {
                                case 1 :
                                    // InternalQVTimperative.g:9970:4: otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) )
                                    {
                                    otherlv_3=(Token)match(input,52,FollowSets000.FOLLOW_8); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_3, grammarAccess.getNavigatingArgCSAccess().getEqualsSignKeyword_0_1_0_2_0());

                                    }
                                    // InternalQVTimperative.g:9974:1: ( (lv_ownedInitExpression_4_0= ruleExpCS ) )
                                    // InternalQVTimperative.g:9975:1: (lv_ownedInitExpression_4_0= ruleExpCS )
                                    {
                                    // InternalQVTimperative.g:9975:1: (lv_ownedInitExpression_4_0= ruleExpCS )
                                    // InternalQVTimperative.g:9976:3: lv_ownedInitExpression_4_0= ruleExpCS
                                    {
                                    if ( state.backtracking==0 ) {

                                      	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_1_0_2_1_0());

                                    }
                                    pushFollow(FollowSets000.FOLLOW_2);
                                    lv_ownedInitExpression_4_0=ruleExpCS();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                                      	        }
                                             		set(
                                             			current,
                                             			"ownedInitExpression",
                                              		lv_ownedInitExpression_4_0,
                                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                                      	        afterParserOrEnumRuleCall();

                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalQVTimperative.g:9993:6: (otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypeExpCS ) ) (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )? (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )? )
                            {
                            // InternalQVTimperative.g:9993:6: (otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypeExpCS ) ) (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )? (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )? )
                            // InternalQVTimperative.g:9993:8: otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypeExpCS ) ) (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )? (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )?
                            {
                            otherlv_5=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getNavigatingArgCSAccess().getColonKeyword_0_1_1_0());

                            }
                            // InternalQVTimperative.g:9997:1: ( (lv_ownedType_6_0= ruleTypeExpCS ) )
                            // InternalQVTimperative.g:9998:1: (lv_ownedType_6_0= ruleTypeExpCS )
                            {
                            // InternalQVTimperative.g:9998:1: (lv_ownedType_6_0= ruleTypeExpCS )
                            // InternalQVTimperative.g:9999:3: lv_ownedType_6_0= ruleTypeExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_0_1_1_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_142);
                            lv_ownedType_6_0=ruleTypeExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedType",
                                      		lv_ownedType_6_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }

                            // InternalQVTimperative.g:10015:2: (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )?
                            int alt219=2;
                            int LA219_0 = input.LA(1);

                            if ( (LA219_0==135) ) {
                                alt219=1;
                            }
                            switch (alt219) {
                                case 1 :
                                    // InternalQVTimperative.g:10015:4: otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) )
                                    {
                                    otherlv_7=(Token)match(input,135,FollowSets000.FOLLOW_5); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_7, grammarAccess.getNavigatingArgCSAccess().getLessThanSignHyphenMinusKeyword_0_1_1_2_0());

                                    }
                                    // InternalQVTimperative.g:10019:1: ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) )
                                    // InternalQVTimperative.g:10020:1: (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS )
                                    {
                                    // InternalQVTimperative.g:10020:1: (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS )
                                    // InternalQVTimperative.g:10021:3: lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS
                                    {
                                    if ( state.backtracking==0 ) {

                                      	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_0_1_1_2_1_0());

                                    }
                                    pushFollow(FollowSets000.FOLLOW_141);
                                    lv_ownedCoIterator_8_0=ruleCoIteratorVariableCS();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                                      	        }
                                             		set(
                                             			current,
                                             			"ownedCoIterator",
                                              		lv_ownedCoIterator_8_0,
                                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CoIteratorVariableCS");
                                      	        afterParserOrEnumRuleCall();

                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            // InternalQVTimperative.g:10037:4: (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )?
                            int alt220=2;
                            int LA220_0 = input.LA(1);

                            if ( (LA220_0==52) ) {
                                alt220=1;
                            }
                            switch (alt220) {
                                case 1 :
                                    // InternalQVTimperative.g:10037:6: otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) )
                                    {
                                    otherlv_9=(Token)match(input,52,FollowSets000.FOLLOW_8); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_9, grammarAccess.getNavigatingArgCSAccess().getEqualsSignKeyword_0_1_1_3_0());

                                    }
                                    // InternalQVTimperative.g:10041:1: ( (lv_ownedInitExpression_10_0= ruleExpCS ) )
                                    // InternalQVTimperative.g:10042:1: (lv_ownedInitExpression_10_0= ruleExpCS )
                                    {
                                    // InternalQVTimperative.g:10042:1: (lv_ownedInitExpression_10_0= ruleExpCS )
                                    // InternalQVTimperative.g:10043:3: lv_ownedInitExpression_10_0= ruleExpCS
                                    {
                                    if ( state.backtracking==0 ) {

                                      	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_1_1_3_1_0());

                                    }
                                    pushFollow(FollowSets000.FOLLOW_2);
                                    lv_ownedInitExpression_10_0=ruleExpCS();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                                      	        }
                                             		set(
                                             			current,
                                             			"ownedInitExpression",
                                              		lv_ownedInitExpression_10_0,
                                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                                      	        afterParserOrEnumRuleCall();

                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalQVTimperative.g:10060:6: ( (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )? (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )? otherlv_15= 'in' ( (lv_ownedInitExpression_16_0= ruleExpCS ) ) )
                            {
                            // InternalQVTimperative.g:10060:6: ( (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )? (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )? otherlv_15= 'in' ( (lv_ownedInitExpression_16_0= ruleExpCS ) ) )
                            // InternalQVTimperative.g:10060:7: (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )? (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )? otherlv_15= 'in' ( (lv_ownedInitExpression_16_0= ruleExpCS ) )
                            {
                            // InternalQVTimperative.g:10060:7: (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )?
                            int alt221=2;
                            int LA221_0 = input.LA(1);

                            if ( (LA221_0==24) ) {
                                alt221=1;
                            }
                            switch (alt221) {
                                case 1 :
                                    // InternalQVTimperative.g:10060:9: otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) )
                                    {
                                    otherlv_11=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_11, grammarAccess.getNavigatingArgCSAccess().getColonKeyword_0_1_2_0_0());

                                    }
                                    // InternalQVTimperative.g:10064:1: ( (lv_ownedType_12_0= ruleTypeExpCS ) )
                                    // InternalQVTimperative.g:10065:1: (lv_ownedType_12_0= ruleTypeExpCS )
                                    {
                                    // InternalQVTimperative.g:10065:1: (lv_ownedType_12_0= ruleTypeExpCS )
                                    // InternalQVTimperative.g:10066:3: lv_ownedType_12_0= ruleTypeExpCS
                                    {
                                    if ( state.backtracking==0 ) {

                                      	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_0_1_2_0_1_0());

                                    }
                                    pushFollow(FollowSets000.FOLLOW_143);
                                    lv_ownedType_12_0=ruleTypeExpCS();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                                      	        }
                                             		set(
                                             			current,
                                             			"ownedType",
                                              		lv_ownedType_12_0,
                                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                                      	        afterParserOrEnumRuleCall();

                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            // InternalQVTimperative.g:10082:4: (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )?
                            int alt222=2;
                            int LA222_0 = input.LA(1);

                            if ( (LA222_0==135) ) {
                                alt222=1;
                            }
                            switch (alt222) {
                                case 1 :
                                    // InternalQVTimperative.g:10082:6: otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) )
                                    {
                                    otherlv_13=(Token)match(input,135,FollowSets000.FOLLOW_5); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_13, grammarAccess.getNavigatingArgCSAccess().getLessThanSignHyphenMinusKeyword_0_1_2_1_0());

                                    }
                                    // InternalQVTimperative.g:10086:1: ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) )
                                    // InternalQVTimperative.g:10087:1: (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS )
                                    {
                                    // InternalQVTimperative.g:10087:1: (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS )
                                    // InternalQVTimperative.g:10088:3: lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS
                                    {
                                    if ( state.backtracking==0 ) {

                                      	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_0_1_2_1_1_0());

                                    }
                                    pushFollow(FollowSets000.FOLLOW_46);
                                    lv_ownedCoIterator_14_0=ruleCoIteratorVariableCS();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                                      	        }
                                             		set(
                                             			current,
                                             			"ownedCoIterator",
                                              		lv_ownedCoIterator_14_0,
                                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CoIteratorVariableCS");
                                      	        afterParserOrEnumRuleCall();

                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            otherlv_15=(Token)match(input,34,FollowSets000.FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_15, grammarAccess.getNavigatingArgCSAccess().getInKeyword_0_1_2_2());

                            }
                            // InternalQVTimperative.g:10108:1: ( (lv_ownedInitExpression_16_0= ruleExpCS ) )
                            // InternalQVTimperative.g:10109:1: (lv_ownedInitExpression_16_0= ruleExpCS )
                            {
                            // InternalQVTimperative.g:10109:1: (lv_ownedInitExpression_16_0= ruleExpCS )
                            // InternalQVTimperative.g:10110:3: lv_ownedInitExpression_16_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_1_2_3_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedInitExpression_16_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedInitExpression",
                                      		lv_ownedInitExpression_16_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:10127:6: (otherlv_17= ':' ( (lv_ownedType_18_0= ruleTypeExpCS ) ) )
                    {
                    // InternalQVTimperative.g:10127:6: (otherlv_17= ':' ( (lv_ownedType_18_0= ruleTypeExpCS ) ) )
                    // InternalQVTimperative.g:10127:8: otherlv_17= ':' ( (lv_ownedType_18_0= ruleTypeExpCS ) )
                    {
                    otherlv_17=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_17, grammarAccess.getNavigatingArgCSAccess().getColonKeyword_1_0());

                    }
                    // InternalQVTimperative.g:10131:1: ( (lv_ownedType_18_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:10132:1: (lv_ownedType_18_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:10132:1: (lv_ownedType_18_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:10133:3: lv_ownedType_18_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedType_18_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_18_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNavigatingArgCS"


    // $ANTLR start "entryRuleNavigatingBarArgCS"
    // InternalQVTimperative.g:10157:1: entryRuleNavigatingBarArgCS returns [EObject current=null] : iv_ruleNavigatingBarArgCS= ruleNavigatingBarArgCS EOF ;
    public final EObject entryRuleNavigatingBarArgCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNavigatingBarArgCS = null;


        try {
            // InternalQVTimperative.g:10158:2: (iv_ruleNavigatingBarArgCS= ruleNavigatingBarArgCS EOF )
            // InternalQVTimperative.g:10159:2: iv_ruleNavigatingBarArgCS= ruleNavigatingBarArgCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNavigatingBarArgCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNavigatingBarArgCS=ruleNavigatingBarArgCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNavigatingBarArgCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNavigatingBarArgCS"


    // $ANTLR start "ruleNavigatingBarArgCS"
    // InternalQVTimperative.g:10166:1: ruleNavigatingBarArgCS returns [EObject current=null] : ( ( (lv_prefix_0_0= '|' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? ) ;
    public final EObject ruleNavigatingBarArgCS() throws RecognitionException {
        EObject current = null;

        Token lv_prefix_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedNameExpression_1_0 = null;

        EObject lv_ownedType_3_0 = null;

        EObject lv_ownedInitExpression_5_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:10169:28: ( ( ( (lv_prefix_0_0= '|' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? ) )
            // InternalQVTimperative.g:10170:1: ( ( (lv_prefix_0_0= '|' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? )
            {
            // InternalQVTimperative.g:10170:1: ( ( (lv_prefix_0_0= '|' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? )
            // InternalQVTimperative.g:10170:2: ( (lv_prefix_0_0= '|' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )?
            {
            // InternalQVTimperative.g:10170:2: ( (lv_prefix_0_0= '|' ) )
            // InternalQVTimperative.g:10171:1: (lv_prefix_0_0= '|' )
            {
            // InternalQVTimperative.g:10171:1: (lv_prefix_0_0= '|' )
            // InternalQVTimperative.g:10172:3: lv_prefix_0_0= '|'
            {
            lv_prefix_0_0=(Token)match(input,144,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_prefix_0_0, grammarAccess.getNavigatingBarArgCSAccess().getPrefixVerticalLineKeyword_0_0());

            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getNavigatingBarArgCSRule());
              	        }
                     		setWithLastConsumed(current, "prefix", lv_prefix_0_0, "|");

            }

            }


            }

            // InternalQVTimperative.g:10185:2: ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) )
            // InternalQVTimperative.g:10186:1: (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS )
            {
            // InternalQVTimperative.g:10186:1: (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS )
            // InternalQVTimperative.g:10187:3: lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getNavigatingBarArgCSAccess().getOwnedNameExpressionNavigatingArgExpCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_48);
            lv_ownedNameExpression_1_0=ruleNavigatingArgExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNavigatingBarArgCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedNameExpression",
                      		lv_ownedNameExpression_1_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingArgExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:10203:2: (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )?
            int alt226=2;
            int LA226_0 = input.LA(1);

            if ( (LA226_0==24) ) {
                alt226=1;
            }
            switch (alt226) {
                case 1 :
                    // InternalQVTimperative.g:10203:4: otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
                    {
                    otherlv_2=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getNavigatingBarArgCSAccess().getColonKeyword_2_0());

                    }
                    // InternalQVTimperative.g:10207:1: ( (lv_ownedType_3_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:10208:1: (lv_ownedType_3_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:10208:1: (lv_ownedType_3_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:10209:3: lv_ownedType_3_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNavigatingBarArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_141);
                    lv_ownedType_3_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNavigatingBarArgCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_3_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:10225:2: (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
                    int alt225=2;
                    int LA225_0 = input.LA(1);

                    if ( (LA225_0==52) ) {
                        alt225=1;
                    }
                    switch (alt225) {
                        case 1 :
                            // InternalQVTimperative.g:10225:4: otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                            {
                            otherlv_4=(Token)match(input,52,FollowSets000.FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getNavigatingBarArgCSAccess().getEqualsSignKeyword_2_2_0());

                            }
                            // InternalQVTimperative.g:10229:1: ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                            // InternalQVTimperative.g:10230:1: (lv_ownedInitExpression_5_0= ruleExpCS )
                            {
                            // InternalQVTimperative.g:10230:1: (lv_ownedInitExpression_5_0= ruleExpCS )
                            // InternalQVTimperative.g:10231:3: lv_ownedInitExpression_5_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getNavigatingBarArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_2_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedInitExpression_5_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getNavigatingBarArgCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedInitExpression",
                                      		lv_ownedInitExpression_5_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNavigatingBarArgCS"


    // $ANTLR start "entryRuleNavigatingCommaArgCS"
    // InternalQVTimperative.g:10255:1: entryRuleNavigatingCommaArgCS returns [EObject current=null] : iv_ruleNavigatingCommaArgCS= ruleNavigatingCommaArgCS EOF ;
    public final EObject entryRuleNavigatingCommaArgCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNavigatingCommaArgCS = null;


        try {
            // InternalQVTimperative.g:10256:2: (iv_ruleNavigatingCommaArgCS= ruleNavigatingCommaArgCS EOF )
            // InternalQVTimperative.g:10257:2: iv_ruleNavigatingCommaArgCS= ruleNavigatingCommaArgCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNavigatingCommaArgCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNavigatingCommaArgCS=ruleNavigatingCommaArgCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNavigatingCommaArgCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNavigatingCommaArgCS"


    // $ANTLR start "ruleNavigatingCommaArgCS"
    // InternalQVTimperative.g:10264:1: ruleNavigatingCommaArgCS returns [EObject current=null] : ( ( (lv_prefix_0_0= ',' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) ( (otherlv_2= '<-' ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) (otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) ) )? (otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) ) )? ) | ( (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) ) )? (otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) ) )? otherlv_16= 'in' ( (lv_ownedInitExpression_17_0= ruleExpCS ) ) ) )? ) ;
    public final EObject ruleNavigatingCommaArgCS() throws RecognitionException {
        EObject current = null;

        Token lv_prefix_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        EObject lv_ownedNameExpression_1_0 = null;

        EObject lv_ownedCoIterator_3_0 = null;

        EObject lv_ownedInitExpression_5_0 = null;

        EObject lv_ownedType_7_0 = null;

        EObject lv_ownedCoIterator_9_0 = null;

        EObject lv_ownedInitExpression_11_0 = null;

        EObject lv_ownedType_13_0 = null;

        EObject lv_ownedCoIterator_15_0 = null;

        EObject lv_ownedInitExpression_17_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:10267:28: ( ( ( (lv_prefix_0_0= ',' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) ( (otherlv_2= '<-' ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) (otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) ) )? (otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) ) )? ) | ( (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) ) )? (otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) ) )? otherlv_16= 'in' ( (lv_ownedInitExpression_17_0= ruleExpCS ) ) ) )? ) )
            // InternalQVTimperative.g:10268:1: ( ( (lv_prefix_0_0= ',' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) ( (otherlv_2= '<-' ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) (otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) ) )? (otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) ) )? ) | ( (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) ) )? (otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) ) )? otherlv_16= 'in' ( (lv_ownedInitExpression_17_0= ruleExpCS ) ) ) )? )
            {
            // InternalQVTimperative.g:10268:1: ( ( (lv_prefix_0_0= ',' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) ( (otherlv_2= '<-' ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) (otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) ) )? (otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) ) )? ) | ( (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) ) )? (otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) ) )? otherlv_16= 'in' ( (lv_ownedInitExpression_17_0= ruleExpCS ) ) ) )? )
            // InternalQVTimperative.g:10268:2: ( (lv_prefix_0_0= ',' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) ( (otherlv_2= '<-' ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) (otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) ) )? (otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) ) )? ) | ( (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) ) )? (otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) ) )? otherlv_16= 'in' ( (lv_ownedInitExpression_17_0= ruleExpCS ) ) ) )?
            {
            // InternalQVTimperative.g:10268:2: ( (lv_prefix_0_0= ',' ) )
            // InternalQVTimperative.g:10269:1: (lv_prefix_0_0= ',' )
            {
            // InternalQVTimperative.g:10269:1: (lv_prefix_0_0= ',' )
            // InternalQVTimperative.g:10270:3: lv_prefix_0_0= ','
            {
            lv_prefix_0_0=(Token)match(input,18,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_prefix_0_0, grammarAccess.getNavigatingCommaArgCSAccess().getPrefixCommaKeyword_0_0());

            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getNavigatingCommaArgCSRule());
              	        }
                     		setWithLastConsumed(current, "prefix", lv_prefix_0_0, ",");

            }

            }


            }

            // InternalQVTimperative.g:10283:2: ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) )
            // InternalQVTimperative.g:10284:1: (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS )
            {
            // InternalQVTimperative.g:10284:1: (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS )
            // InternalQVTimperative.g:10285:3: lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedNameExpressionNavigatingArgExpCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_140);
            lv_ownedNameExpression_1_0=ruleNavigatingArgExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedNameExpression",
                      		lv_ownedNameExpression_1_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingArgExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:10301:2: ( (otherlv_2= '<-' ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) (otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) ) )? (otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) ) )? ) | ( (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) ) )? (otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) ) )? otherlv_16= 'in' ( (lv_ownedInitExpression_17_0= ruleExpCS ) ) ) )?
            int alt232=4;
            alt232 = dfa232.predict(input);
            switch (alt232) {
                case 1 :
                    // InternalQVTimperative.g:10301:3: (otherlv_2= '<-' ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )
                    {
                    // InternalQVTimperative.g:10301:3: (otherlv_2= '<-' ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )
                    // InternalQVTimperative.g:10301:5: otherlv_2= '<-' ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
                    {
                    otherlv_2=(Token)match(input,135,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getNavigatingCommaArgCSAccess().getLessThanSignHyphenMinusKeyword_2_0_0());

                    }
                    // InternalQVTimperative.g:10305:1: ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) )
                    // InternalQVTimperative.g:10306:1: (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS )
                    {
                    // InternalQVTimperative.g:10306:1: (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS )
                    // InternalQVTimperative.g:10307:3: lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_2_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_141);
                    lv_ownedCoIterator_3_0=ruleCoIteratorVariableCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedCoIterator",
                              		lv_ownedCoIterator_3_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CoIteratorVariableCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:10323:2: (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
                    int alt227=2;
                    int LA227_0 = input.LA(1);

                    if ( (LA227_0==52) ) {
                        alt227=1;
                    }
                    switch (alt227) {
                        case 1 :
                            // InternalQVTimperative.g:10323:4: otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                            {
                            otherlv_4=(Token)match(input,52,FollowSets000.FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getNavigatingCommaArgCSAccess().getEqualsSignKeyword_2_0_2_0());

                            }
                            // InternalQVTimperative.g:10327:1: ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                            // InternalQVTimperative.g:10328:1: (lv_ownedInitExpression_5_0= ruleExpCS )
                            {
                            // InternalQVTimperative.g:10328:1: (lv_ownedInitExpression_5_0= ruleExpCS )
                            // InternalQVTimperative.g:10329:3: lv_ownedInitExpression_5_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_0_2_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedInitExpression_5_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedInitExpression",
                                      		lv_ownedInitExpression_5_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:10346:6: (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) (otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) ) )? (otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) ) )? )
                    {
                    // InternalQVTimperative.g:10346:6: (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) (otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) ) )? (otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) ) )? )
                    // InternalQVTimperative.g:10346:8: otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) (otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) ) )? (otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) ) )?
                    {
                    otherlv_6=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getNavigatingCommaArgCSAccess().getColonKeyword_2_1_0());

                    }
                    // InternalQVTimperative.g:10350:1: ( (lv_ownedType_7_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:10351:1: (lv_ownedType_7_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:10351:1: (lv_ownedType_7_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:10352:3: lv_ownedType_7_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_142);
                    lv_ownedType_7_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_7_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:10368:2: (otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) ) )?
                    int alt228=2;
                    int LA228_0 = input.LA(1);

                    if ( (LA228_0==135) ) {
                        alt228=1;
                    }
                    switch (alt228) {
                        case 1 :
                            // InternalQVTimperative.g:10368:4: otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) )
                            {
                            otherlv_8=(Token)match(input,135,FollowSets000.FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_8, grammarAccess.getNavigatingCommaArgCSAccess().getLessThanSignHyphenMinusKeyword_2_1_2_0());

                            }
                            // InternalQVTimperative.g:10372:1: ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) )
                            // InternalQVTimperative.g:10373:1: (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS )
                            {
                            // InternalQVTimperative.g:10373:1: (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS )
                            // InternalQVTimperative.g:10374:3: lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_2_1_2_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_141);
                            lv_ownedCoIterator_9_0=ruleCoIteratorVariableCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedCoIterator",
                                      		lv_ownedCoIterator_9_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CoIteratorVariableCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalQVTimperative.g:10390:4: (otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) ) )?
                    int alt229=2;
                    int LA229_0 = input.LA(1);

                    if ( (LA229_0==52) ) {
                        alt229=1;
                    }
                    switch (alt229) {
                        case 1 :
                            // InternalQVTimperative.g:10390:6: otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) )
                            {
                            otherlv_10=(Token)match(input,52,FollowSets000.FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_10, grammarAccess.getNavigatingCommaArgCSAccess().getEqualsSignKeyword_2_1_3_0());

                            }
                            // InternalQVTimperative.g:10394:1: ( (lv_ownedInitExpression_11_0= ruleExpCS ) )
                            // InternalQVTimperative.g:10395:1: (lv_ownedInitExpression_11_0= ruleExpCS )
                            {
                            // InternalQVTimperative.g:10395:1: (lv_ownedInitExpression_11_0= ruleExpCS )
                            // InternalQVTimperative.g:10396:3: lv_ownedInitExpression_11_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_1_3_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedInitExpression_11_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedInitExpression",
                                      		lv_ownedInitExpression_11_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:10413:6: ( (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) ) )? (otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) ) )? otherlv_16= 'in' ( (lv_ownedInitExpression_17_0= ruleExpCS ) ) )
                    {
                    // InternalQVTimperative.g:10413:6: ( (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) ) )? (otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) ) )? otherlv_16= 'in' ( (lv_ownedInitExpression_17_0= ruleExpCS ) ) )
                    // InternalQVTimperative.g:10413:7: (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) ) )? (otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) ) )? otherlv_16= 'in' ( (lv_ownedInitExpression_17_0= ruleExpCS ) )
                    {
                    // InternalQVTimperative.g:10413:7: (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) ) )?
                    int alt230=2;
                    int LA230_0 = input.LA(1);

                    if ( (LA230_0==24) ) {
                        alt230=1;
                    }
                    switch (alt230) {
                        case 1 :
                            // InternalQVTimperative.g:10413:9: otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) )
                            {
                            otherlv_12=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_12, grammarAccess.getNavigatingCommaArgCSAccess().getColonKeyword_2_2_0_0());

                            }
                            // InternalQVTimperative.g:10417:1: ( (lv_ownedType_13_0= ruleTypeExpCS ) )
                            // InternalQVTimperative.g:10418:1: (lv_ownedType_13_0= ruleTypeExpCS )
                            {
                            // InternalQVTimperative.g:10418:1: (lv_ownedType_13_0= ruleTypeExpCS )
                            // InternalQVTimperative.g:10419:3: lv_ownedType_13_0= ruleTypeExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_2_0_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_143);
                            lv_ownedType_13_0=ruleTypeExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedType",
                                      		lv_ownedType_13_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalQVTimperative.g:10435:4: (otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) ) )?
                    int alt231=2;
                    int LA231_0 = input.LA(1);

                    if ( (LA231_0==135) ) {
                        alt231=1;
                    }
                    switch (alt231) {
                        case 1 :
                            // InternalQVTimperative.g:10435:6: otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) )
                            {
                            otherlv_14=(Token)match(input,135,FollowSets000.FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_14, grammarAccess.getNavigatingCommaArgCSAccess().getLessThanSignHyphenMinusKeyword_2_2_1_0());

                            }
                            // InternalQVTimperative.g:10439:1: ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) )
                            // InternalQVTimperative.g:10440:1: (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS )
                            {
                            // InternalQVTimperative.g:10440:1: (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS )
                            // InternalQVTimperative.g:10441:3: lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_2_2_1_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_46);
                            lv_ownedCoIterator_15_0=ruleCoIteratorVariableCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedCoIterator",
                                      		lv_ownedCoIterator_15_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CoIteratorVariableCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_16=(Token)match(input,34,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_16, grammarAccess.getNavigatingCommaArgCSAccess().getInKeyword_2_2_2());

                    }
                    // InternalQVTimperative.g:10461:1: ( (lv_ownedInitExpression_17_0= ruleExpCS ) )
                    // InternalQVTimperative.g:10462:1: (lv_ownedInitExpression_17_0= ruleExpCS )
                    {
                    // InternalQVTimperative.g:10462:1: (lv_ownedInitExpression_17_0= ruleExpCS )
                    // InternalQVTimperative.g:10463:3: lv_ownedInitExpression_17_0= ruleExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_2_3_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedInitExpression_17_0=ruleExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedInitExpression",
                              		lv_ownedInitExpression_17_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNavigatingCommaArgCS"


    // $ANTLR start "entryRuleNavigatingSemiArgCS"
    // InternalQVTimperative.g:10487:1: entryRuleNavigatingSemiArgCS returns [EObject current=null] : iv_ruleNavigatingSemiArgCS= ruleNavigatingSemiArgCS EOF ;
    public final EObject entryRuleNavigatingSemiArgCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNavigatingSemiArgCS = null;


        try {
            // InternalQVTimperative.g:10488:2: (iv_ruleNavigatingSemiArgCS= ruleNavigatingSemiArgCS EOF )
            // InternalQVTimperative.g:10489:2: iv_ruleNavigatingSemiArgCS= ruleNavigatingSemiArgCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNavigatingSemiArgCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNavigatingSemiArgCS=ruleNavigatingSemiArgCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNavigatingSemiArgCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNavigatingSemiArgCS"


    // $ANTLR start "ruleNavigatingSemiArgCS"
    // InternalQVTimperative.g:10496:1: ruleNavigatingSemiArgCS returns [EObject current=null] : ( ( (lv_prefix_0_0= ';' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? ) ;
    public final EObject ruleNavigatingSemiArgCS() throws RecognitionException {
        EObject current = null;

        Token lv_prefix_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedNameExpression_1_0 = null;

        EObject lv_ownedType_3_0 = null;

        EObject lv_ownedInitExpression_5_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:10499:28: ( ( ( (lv_prefix_0_0= ';' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? ) )
            // InternalQVTimperative.g:10500:1: ( ( (lv_prefix_0_0= ';' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? )
            {
            // InternalQVTimperative.g:10500:1: ( ( (lv_prefix_0_0= ';' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? )
            // InternalQVTimperative.g:10500:2: ( (lv_prefix_0_0= ';' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )?
            {
            // InternalQVTimperative.g:10500:2: ( (lv_prefix_0_0= ';' ) )
            // InternalQVTimperative.g:10501:1: (lv_prefix_0_0= ';' )
            {
            // InternalQVTimperative.g:10501:1: (lv_prefix_0_0= ';' )
            // InternalQVTimperative.g:10502:3: lv_prefix_0_0= ';'
            {
            lv_prefix_0_0=(Token)match(input,21,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_prefix_0_0, grammarAccess.getNavigatingSemiArgCSAccess().getPrefixSemicolonKeyword_0_0());

            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getNavigatingSemiArgCSRule());
              	        }
                     		setWithLastConsumed(current, "prefix", lv_prefix_0_0, ";");

            }

            }


            }

            // InternalQVTimperative.g:10515:2: ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) )
            // InternalQVTimperative.g:10516:1: (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS )
            {
            // InternalQVTimperative.g:10516:1: (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS )
            // InternalQVTimperative.g:10517:3: lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedNameExpressionNavigatingArgExpCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_48);
            lv_ownedNameExpression_1_0=ruleNavigatingArgExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNavigatingSemiArgCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedNameExpression",
                      		lv_ownedNameExpression_1_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingArgExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:10533:2: (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )?
            int alt234=2;
            int LA234_0 = input.LA(1);

            if ( (LA234_0==24) ) {
                alt234=1;
            }
            switch (alt234) {
                case 1 :
                    // InternalQVTimperative.g:10533:4: otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
                    {
                    otherlv_2=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getNavigatingSemiArgCSAccess().getColonKeyword_2_0());

                    }
                    // InternalQVTimperative.g:10537:1: ( (lv_ownedType_3_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:10538:1: (lv_ownedType_3_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:10538:1: (lv_ownedType_3_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:10539:3: lv_ownedType_3_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_141);
                    lv_ownedType_3_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNavigatingSemiArgCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_3_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:10555:2: (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
                    int alt233=2;
                    int LA233_0 = input.LA(1);

                    if ( (LA233_0==52) ) {
                        alt233=1;
                    }
                    switch (alt233) {
                        case 1 :
                            // InternalQVTimperative.g:10555:4: otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                            {
                            otherlv_4=(Token)match(input,52,FollowSets000.FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getNavigatingSemiArgCSAccess().getEqualsSignKeyword_2_2_0());

                            }
                            // InternalQVTimperative.g:10559:1: ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                            // InternalQVTimperative.g:10560:1: (lv_ownedInitExpression_5_0= ruleExpCS )
                            {
                            // InternalQVTimperative.g:10560:1: (lv_ownedInitExpression_5_0= ruleExpCS )
                            // InternalQVTimperative.g:10561:3: lv_ownedInitExpression_5_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_2_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedInitExpression_5_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getNavigatingSemiArgCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedInitExpression",
                                      		lv_ownedInitExpression_5_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNavigatingSemiArgCS"


    // $ANTLR start "entryRuleNavigatingArgExpCS"
    // InternalQVTimperative.g:10585:1: entryRuleNavigatingArgExpCS returns [EObject current=null] : iv_ruleNavigatingArgExpCS= ruleNavigatingArgExpCS EOF ;
    public final EObject entryRuleNavigatingArgExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNavigatingArgExpCS = null;


        try {
            // InternalQVTimperative.g:10586:2: (iv_ruleNavigatingArgExpCS= ruleNavigatingArgExpCS EOF )
            // InternalQVTimperative.g:10587:2: iv_ruleNavigatingArgExpCS= ruleNavigatingArgExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNavigatingArgExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNavigatingArgExpCS=ruleNavigatingArgExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNavigatingArgExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNavigatingArgExpCS"


    // $ANTLR start "ruleNavigatingArgExpCS"
    // InternalQVTimperative.g:10594:1: ruleNavigatingArgExpCS returns [EObject current=null] : this_ExpCS_0= ruleExpCS ;
    public final EObject ruleNavigatingArgExpCS() throws RecognitionException {
        EObject current = null;

        EObject this_ExpCS_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:10597:28: (this_ExpCS_0= ruleExpCS )
            // InternalQVTimperative.g:10599:2: this_ExpCS_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getNavigatingArgExpCSAccess().getExpCSParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_ExpCS_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ExpCS_0;
                      afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNavigatingArgExpCS"


    // $ANTLR start "entryRuleCoIteratorVariableCS"
    // InternalQVTimperative.g:10618:1: entryRuleCoIteratorVariableCS returns [EObject current=null] : iv_ruleCoIteratorVariableCS= ruleCoIteratorVariableCS EOF ;
    public final EObject entryRuleCoIteratorVariableCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCoIteratorVariableCS = null;


        try {
            // InternalQVTimperative.g:10619:2: (iv_ruleCoIteratorVariableCS= ruleCoIteratorVariableCS EOF )
            // InternalQVTimperative.g:10620:2: iv_ruleCoIteratorVariableCS= ruleCoIteratorVariableCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCoIteratorVariableCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCoIteratorVariableCS=ruleCoIteratorVariableCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCoIteratorVariableCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCoIteratorVariableCS"


    // $ANTLR start "ruleCoIteratorVariableCS"
    // InternalQVTimperative.g:10627:1: ruleCoIteratorVariableCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? ) ;
    public final EObject ruleCoIteratorVariableCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedType_2_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:10630:28: ( ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? ) )
            // InternalQVTimperative.g:10631:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? )
            {
            // InternalQVTimperative.g:10631:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? )
            // InternalQVTimperative.g:10631:2: ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )?
            {
            // InternalQVTimperative.g:10631:2: ( (lv_name_0_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:10632:1: (lv_name_0_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:10632:1: (lv_name_0_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:10633:3: lv_name_0_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getCoIteratorVariableCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_48);
            lv_name_0_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCoIteratorVariableCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_0_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:10649:2: (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )?
            int alt235=2;
            int LA235_0 = input.LA(1);

            if ( (LA235_0==24) ) {
                alt235=1;
            }
            switch (alt235) {
                case 1 :
                    // InternalQVTimperative.g:10649:4: otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) )
                    {
                    otherlv_1=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getCoIteratorVariableCSAccess().getColonKeyword_1_0());

                    }
                    // InternalQVTimperative.g:10653:1: ( (lv_ownedType_2_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:10654:1: (lv_ownedType_2_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:10654:1: (lv_ownedType_2_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:10655:3: lv_ownedType_2_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getCoIteratorVariableCSAccess().getOwnedTypeTypeExpCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedType_2_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCoIteratorVariableCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCoIteratorVariableCS"


    // $ANTLR start "entryRuleIfExpCS"
    // InternalQVTimperative.g:10679:1: entryRuleIfExpCS returns [EObject current=null] : iv_ruleIfExpCS= ruleIfExpCS EOF ;
    public final EObject entryRuleIfExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfExpCS = null;


        try {
            // InternalQVTimperative.g:10680:2: (iv_ruleIfExpCS= ruleIfExpCS EOF )
            // InternalQVTimperative.g:10681:2: iv_ruleIfExpCS= ruleIfExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIfExpCS=ruleIfExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIfExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIfExpCS"


    // $ANTLR start "ruleIfExpCS"
    // InternalQVTimperative.g:10688:1: ruleIfExpCS returns [EObject current=null] : (otherlv_0= 'if' ( ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) ( (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS ) )* otherlv_5= 'else' ( (lv_ownedElseExpression_6_0= ruleExpCS ) ) otherlv_7= 'endif' ) ;
    public final EObject ruleIfExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_ownedCondition_1_1 = null;

        EObject lv_ownedCondition_1_2 = null;

        EObject lv_ownedThenExpression_3_0 = null;

        EObject lv_ownedIfThenExpressions_4_0 = null;

        EObject lv_ownedElseExpression_6_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:10691:28: ( (otherlv_0= 'if' ( ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) ( (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS ) )* otherlv_5= 'else' ( (lv_ownedElseExpression_6_0= ruleExpCS ) ) otherlv_7= 'endif' ) )
            // InternalQVTimperative.g:10692:1: (otherlv_0= 'if' ( ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) ( (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS ) )* otherlv_5= 'else' ( (lv_ownedElseExpression_6_0= ruleExpCS ) ) otherlv_7= 'endif' )
            {
            // InternalQVTimperative.g:10692:1: (otherlv_0= 'if' ( ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) ( (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS ) )* otherlv_5= 'else' ( (lv_ownedElseExpression_6_0= ruleExpCS ) ) otherlv_7= 'endif' )
            // InternalQVTimperative.g:10692:3: otherlv_0= 'if' ( ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) ( (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS ) )* otherlv_5= 'else' ( (lv_ownedElseExpression_6_0= ruleExpCS ) ) otherlv_7= 'endif'
            {
            otherlv_0=(Token)match(input,145,FollowSets000.FOLLOW_121); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getIfExpCSAccess().getIfKeyword_0());

            }
            // InternalQVTimperative.g:10696:1: ( ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) ) )
            // InternalQVTimperative.g:10697:1: ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) )
            {
            // InternalQVTimperative.g:10697:1: ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) )
            // InternalQVTimperative.g:10698:1: (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS )
            {
            // InternalQVTimperative.g:10698:1: (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS )
            int alt236=2;
            alt236 = dfa236.predict(input);
            switch (alt236) {
                case 1 :
                    // InternalQVTimperative.g:10699:3: lv_ownedCondition_1_1= ruleExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getIfExpCSAccess().getOwnedConditionExpCSParserRuleCall_1_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_144);
                    lv_ownedCondition_1_1=ruleExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedCondition",
                              		lv_ownedCondition_1_1,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:10714:8: lv_ownedCondition_1_2= rulePatternExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getIfExpCSAccess().getOwnedConditionPatternExpCSParserRuleCall_1_0_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_144);
                    lv_ownedCondition_1_2=rulePatternExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedCondition",
                              		lv_ownedCondition_1_2,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PatternExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }


            }

            otherlv_2=(Token)match(input,146,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getIfExpCSAccess().getThenKeyword_2());

            }
            // InternalQVTimperative.g:10736:1: ( (lv_ownedThenExpression_3_0= ruleExpCS ) )
            // InternalQVTimperative.g:10737:1: (lv_ownedThenExpression_3_0= ruleExpCS )
            {
            // InternalQVTimperative.g:10737:1: (lv_ownedThenExpression_3_0= ruleExpCS )
            // InternalQVTimperative.g:10738:3: lv_ownedThenExpression_3_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getIfExpCSAccess().getOwnedThenExpressionExpCSParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_145);
            lv_ownedThenExpression_3_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIfExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedThenExpression",
                      		lv_ownedThenExpression_3_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:10754:2: ( (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS ) )*
            loop237:
            do {
                int alt237=2;
                int LA237_0 = input.LA(1);

                if ( (LA237_0==149) ) {
                    alt237=1;
                }


                switch (alt237) {
            	case 1 :
            	    // InternalQVTimperative.g:10755:1: (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS )
            	    {
            	    // InternalQVTimperative.g:10755:1: (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS )
            	    // InternalQVTimperative.g:10756:3: lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getIfExpCSAccess().getOwnedIfThenExpressionsElseIfThenExpCSParserRuleCall_4_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_145);
            	    lv_ownedIfThenExpressions_4_0=ruleElseIfThenExpCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getIfExpCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedIfThenExpressions",
            	              		lv_ownedIfThenExpressions_4_0,
            	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ElseIfThenExpCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop237;
                }
            } while (true);

            otherlv_5=(Token)match(input,147,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getIfExpCSAccess().getElseKeyword_5());

            }
            // InternalQVTimperative.g:10776:1: ( (lv_ownedElseExpression_6_0= ruleExpCS ) )
            // InternalQVTimperative.g:10777:1: (lv_ownedElseExpression_6_0= ruleExpCS )
            {
            // InternalQVTimperative.g:10777:1: (lv_ownedElseExpression_6_0= ruleExpCS )
            // InternalQVTimperative.g:10778:3: lv_ownedElseExpression_6_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getIfExpCSAccess().getOwnedElseExpressionExpCSParserRuleCall_6_0());

            }
            pushFollow(FollowSets000.FOLLOW_146);
            lv_ownedElseExpression_6_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIfExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedElseExpression",
                      		lv_ownedElseExpression_6_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_7=(Token)match(input,148,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getIfExpCSAccess().getEndifKeyword_7());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIfExpCS"


    // $ANTLR start "entryRuleElseIfThenExpCS"
    // InternalQVTimperative.g:10806:1: entryRuleElseIfThenExpCS returns [EObject current=null] : iv_ruleElseIfThenExpCS= ruleElseIfThenExpCS EOF ;
    public final EObject entryRuleElseIfThenExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElseIfThenExpCS = null;


        try {
            // InternalQVTimperative.g:10807:2: (iv_ruleElseIfThenExpCS= ruleElseIfThenExpCS EOF )
            // InternalQVTimperative.g:10808:2: iv_ruleElseIfThenExpCS= ruleElseIfThenExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElseIfThenExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleElseIfThenExpCS=ruleElseIfThenExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElseIfThenExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElseIfThenExpCS"


    // $ANTLR start "ruleElseIfThenExpCS"
    // InternalQVTimperative.g:10815:1: ruleElseIfThenExpCS returns [EObject current=null] : (otherlv_0= 'elseif' ( (lv_ownedCondition_1_0= ruleExpCS ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) ) ;
    public final EObject ruleElseIfThenExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_ownedCondition_1_0 = null;

        EObject lv_ownedThenExpression_3_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:10818:28: ( (otherlv_0= 'elseif' ( (lv_ownedCondition_1_0= ruleExpCS ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) ) )
            // InternalQVTimperative.g:10819:1: (otherlv_0= 'elseif' ( (lv_ownedCondition_1_0= ruleExpCS ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) )
            {
            // InternalQVTimperative.g:10819:1: (otherlv_0= 'elseif' ( (lv_ownedCondition_1_0= ruleExpCS ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) )
            // InternalQVTimperative.g:10819:3: otherlv_0= 'elseif' ( (lv_ownedCondition_1_0= ruleExpCS ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) )
            {
            otherlv_0=(Token)match(input,149,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getElseIfThenExpCSAccess().getElseifKeyword_0());

            }
            // InternalQVTimperative.g:10823:1: ( (lv_ownedCondition_1_0= ruleExpCS ) )
            // InternalQVTimperative.g:10824:1: (lv_ownedCondition_1_0= ruleExpCS )
            {
            // InternalQVTimperative.g:10824:1: (lv_ownedCondition_1_0= ruleExpCS )
            // InternalQVTimperative.g:10825:3: lv_ownedCondition_1_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getElseIfThenExpCSAccess().getOwnedConditionExpCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_144);
            lv_ownedCondition_1_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getElseIfThenExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedCondition",
                      		lv_ownedCondition_1_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_2=(Token)match(input,146,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getElseIfThenExpCSAccess().getThenKeyword_2());

            }
            // InternalQVTimperative.g:10845:1: ( (lv_ownedThenExpression_3_0= ruleExpCS ) )
            // InternalQVTimperative.g:10846:1: (lv_ownedThenExpression_3_0= ruleExpCS )
            {
            // InternalQVTimperative.g:10846:1: (lv_ownedThenExpression_3_0= ruleExpCS )
            // InternalQVTimperative.g:10847:3: lv_ownedThenExpression_3_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getElseIfThenExpCSAccess().getOwnedThenExpressionExpCSParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedThenExpression_3_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getElseIfThenExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedThenExpression",
                      		lv_ownedThenExpression_3_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElseIfThenExpCS"


    // $ANTLR start "entryRuleLetExpCS"
    // InternalQVTimperative.g:10871:1: entryRuleLetExpCS returns [EObject current=null] : iv_ruleLetExpCS= ruleLetExpCS EOF ;
    public final EObject entryRuleLetExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLetExpCS = null;


        try {
            // InternalQVTimperative.g:10872:2: (iv_ruleLetExpCS= ruleLetExpCS EOF )
            // InternalQVTimperative.g:10873:2: iv_ruleLetExpCS= ruleLetExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLetExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLetExpCS=ruleLetExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLetExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLetExpCS"


    // $ANTLR start "ruleLetExpCS"
    // InternalQVTimperative.g:10880:1: ruleLetExpCS returns [EObject current=null] : (otherlv_0= 'let' ( (lv_ownedVariables_1_0= ruleLetVariableCS ) ) (otherlv_2= ',' ( (lv_ownedVariables_3_0= ruleLetVariableCS ) ) )* otherlv_4= 'in' ( (lv_ownedInExpression_5_0= ruleExpCS ) ) ) ;
    public final EObject ruleLetExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedVariables_1_0 = null;

        EObject lv_ownedVariables_3_0 = null;

        EObject lv_ownedInExpression_5_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:10883:28: ( (otherlv_0= 'let' ( (lv_ownedVariables_1_0= ruleLetVariableCS ) ) (otherlv_2= ',' ( (lv_ownedVariables_3_0= ruleLetVariableCS ) ) )* otherlv_4= 'in' ( (lv_ownedInExpression_5_0= ruleExpCS ) ) ) )
            // InternalQVTimperative.g:10884:1: (otherlv_0= 'let' ( (lv_ownedVariables_1_0= ruleLetVariableCS ) ) (otherlv_2= ',' ( (lv_ownedVariables_3_0= ruleLetVariableCS ) ) )* otherlv_4= 'in' ( (lv_ownedInExpression_5_0= ruleExpCS ) ) )
            {
            // InternalQVTimperative.g:10884:1: (otherlv_0= 'let' ( (lv_ownedVariables_1_0= ruleLetVariableCS ) ) (otherlv_2= ',' ( (lv_ownedVariables_3_0= ruleLetVariableCS ) ) )* otherlv_4= 'in' ( (lv_ownedInExpression_5_0= ruleExpCS ) ) )
            // InternalQVTimperative.g:10884:3: otherlv_0= 'let' ( (lv_ownedVariables_1_0= ruleLetVariableCS ) ) (otherlv_2= ',' ( (lv_ownedVariables_3_0= ruleLetVariableCS ) ) )* otherlv_4= 'in' ( (lv_ownedInExpression_5_0= ruleExpCS ) )
            {
            otherlv_0=(Token)match(input,150,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getLetExpCSAccess().getLetKeyword_0());

            }
            // InternalQVTimperative.g:10888:1: ( (lv_ownedVariables_1_0= ruleLetVariableCS ) )
            // InternalQVTimperative.g:10889:1: (lv_ownedVariables_1_0= ruleLetVariableCS )
            {
            // InternalQVTimperative.g:10889:1: (lv_ownedVariables_1_0= ruleLetVariableCS )
            // InternalQVTimperative.g:10890:3: lv_ownedVariables_1_0= ruleLetVariableCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getLetExpCSAccess().getOwnedVariablesLetVariableCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_147);
            lv_ownedVariables_1_0=ruleLetVariableCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLetExpCSRule());
              	        }
                     		add(
                     			current,
                     			"ownedVariables",
                      		lv_ownedVariables_1_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.LetVariableCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:10906:2: (otherlv_2= ',' ( (lv_ownedVariables_3_0= ruleLetVariableCS ) ) )*
            loop238:
            do {
                int alt238=2;
                int LA238_0 = input.LA(1);

                if ( (LA238_0==18) ) {
                    alt238=1;
                }


                switch (alt238) {
            	case 1 :
            	    // InternalQVTimperative.g:10906:4: otherlv_2= ',' ( (lv_ownedVariables_3_0= ruleLetVariableCS ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getLetExpCSAccess().getCommaKeyword_2_0());

            	    }
            	    // InternalQVTimperative.g:10910:1: ( (lv_ownedVariables_3_0= ruleLetVariableCS ) )
            	    // InternalQVTimperative.g:10911:1: (lv_ownedVariables_3_0= ruleLetVariableCS )
            	    {
            	    // InternalQVTimperative.g:10911:1: (lv_ownedVariables_3_0= ruleLetVariableCS )
            	    // InternalQVTimperative.g:10912:3: lv_ownedVariables_3_0= ruleLetVariableCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getLetExpCSAccess().getOwnedVariablesLetVariableCSParserRuleCall_2_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_147);
            	    lv_ownedVariables_3_0=ruleLetVariableCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLetExpCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedVariables",
            	              		lv_ownedVariables_3_0,
            	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.LetVariableCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop238;
                }
            } while (true);

            otherlv_4=(Token)match(input,34,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getLetExpCSAccess().getInKeyword_3());

            }
            // InternalQVTimperative.g:10932:1: ( (lv_ownedInExpression_5_0= ruleExpCS ) )
            // InternalQVTimperative.g:10933:1: (lv_ownedInExpression_5_0= ruleExpCS )
            {
            // InternalQVTimperative.g:10933:1: (lv_ownedInExpression_5_0= ruleExpCS )
            // InternalQVTimperative.g:10934:3: lv_ownedInExpression_5_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getLetExpCSAccess().getOwnedInExpressionExpCSParserRuleCall_4_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedInExpression_5_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLetExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedInExpression",
                      		lv_ownedInExpression_5_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLetExpCS"


    // $ANTLR start "entryRuleLetVariableCS"
    // InternalQVTimperative.g:10958:1: entryRuleLetVariableCS returns [EObject current=null] : iv_ruleLetVariableCS= ruleLetVariableCS EOF ;
    public final EObject entryRuleLetVariableCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLetVariableCS = null;


        try {
            // InternalQVTimperative.g:10959:2: (iv_ruleLetVariableCS= ruleLetVariableCS EOF )
            // InternalQVTimperative.g:10960:2: iv_ruleLetVariableCS= ruleLetVariableCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLetVariableCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLetVariableCS=ruleLetVariableCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLetVariableCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLetVariableCS"


    // $ANTLR start "ruleLetVariableCS"
    // InternalQVTimperative.g:10967:1: ruleLetVariableCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleUnrestrictedName ) ) ( (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS ) )? (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) )? otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) ) ;
    public final EObject ruleLetVariableCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedRoundBracketedClause_1_0 = null;

        EObject lv_ownedType_3_0 = null;

        EObject lv_ownedInitExpression_5_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:10970:28: ( ( ( (lv_name_0_0= ruleUnrestrictedName ) ) ( (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS ) )? (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) )? otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) ) )
            // InternalQVTimperative.g:10971:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) ( (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS ) )? (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) )? otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )
            {
            // InternalQVTimperative.g:10971:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) ( (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS ) )? (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) )? otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )
            // InternalQVTimperative.g:10971:2: ( (lv_name_0_0= ruleUnrestrictedName ) ) ( (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS ) )? (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) )? otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
            {
            // InternalQVTimperative.g:10971:2: ( (lv_name_0_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:10972:1: (lv_name_0_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:10972:1: (lv_name_0_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:10973:3: lv_name_0_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getLetVariableCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_148);
            lv_name_0_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLetVariableCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_0_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:10989:2: ( (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS ) )?
            int alt239=2;
            int LA239_0 = input.LA(1);

            if ( (LA239_0==55) ) {
                alt239=1;
            }
            switch (alt239) {
                case 1 :
                    // InternalQVTimperative.g:10990:1: (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS )
                    {
                    // InternalQVTimperative.g:10990:1: (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS )
                    // InternalQVTimperative.g:10991:3: lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getLetVariableCSAccess().getOwnedRoundBracketedClauseRoundBracketedClauseCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_128);
                    lv_ownedRoundBracketedClause_1_0=ruleRoundBracketedClauseCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLetVariableCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedRoundBracketedClause",
                              		lv_ownedRoundBracketedClause_1_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.RoundBracketedClauseCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:11007:3: (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) )?
            int alt240=2;
            int LA240_0 = input.LA(1);

            if ( (LA240_0==24) ) {
                alt240=1;
            }
            switch (alt240) {
                case 1 :
                    // InternalQVTimperative.g:11007:5: otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) )
                    {
                    otherlv_2=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getLetVariableCSAccess().getColonKeyword_2_0());

                    }
                    // InternalQVTimperative.g:11011:1: ( (lv_ownedType_3_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:11012:1: (lv_ownedType_3_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:11012:1: (lv_ownedType_3_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:11013:3: lv_ownedType_3_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getLetVariableCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_125);
                    lv_ownedType_3_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLetVariableCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_3_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,52,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getLetVariableCSAccess().getEqualsSignKeyword_3());

            }
            // InternalQVTimperative.g:11033:1: ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
            // InternalQVTimperative.g:11034:1: (lv_ownedInitExpression_5_0= ruleExpCS )
            {
            // InternalQVTimperative.g:11034:1: (lv_ownedInitExpression_5_0= ruleExpCS )
            // InternalQVTimperative.g:11035:3: lv_ownedInitExpression_5_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getLetVariableCSAccess().getOwnedInitExpressionExpCSParserRuleCall_4_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedInitExpression_5_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLetVariableCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedInitExpression",
                      		lv_ownedInitExpression_5_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLetVariableCS"


    // $ANTLR start "entryRuleNestedExpCS"
    // InternalQVTimperative.g:11059:1: entryRuleNestedExpCS returns [EObject current=null] : iv_ruleNestedExpCS= ruleNestedExpCS EOF ;
    public final EObject entryRuleNestedExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNestedExpCS = null;


        try {
            // InternalQVTimperative.g:11060:2: (iv_ruleNestedExpCS= ruleNestedExpCS EOF )
            // InternalQVTimperative.g:11061:2: iv_ruleNestedExpCS= ruleNestedExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNestedExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNestedExpCS=ruleNestedExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNestedExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNestedExpCS"


    // $ANTLR start "ruleNestedExpCS"
    // InternalQVTimperative.g:11068:1: ruleNestedExpCS returns [EObject current=null] : (otherlv_0= '(' ( (lv_ownedExpression_1_0= ruleExpCS ) ) otherlv_2= ')' ) ;
    public final EObject ruleNestedExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_ownedExpression_1_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:11071:28: ( (otherlv_0= '(' ( (lv_ownedExpression_1_0= ruleExpCS ) ) otherlv_2= ')' ) )
            // InternalQVTimperative.g:11072:1: (otherlv_0= '(' ( (lv_ownedExpression_1_0= ruleExpCS ) ) otherlv_2= ')' )
            {
            // InternalQVTimperative.g:11072:1: (otherlv_0= '(' ( (lv_ownedExpression_1_0= ruleExpCS ) ) otherlv_2= ')' )
            // InternalQVTimperative.g:11072:3: otherlv_0= '(' ( (lv_ownedExpression_1_0= ruleExpCS ) ) otherlv_2= ')'
            {
            otherlv_0=(Token)match(input,55,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getNestedExpCSAccess().getLeftParenthesisKeyword_0());

            }
            // InternalQVTimperative.g:11076:1: ( (lv_ownedExpression_1_0= ruleExpCS ) )
            // InternalQVTimperative.g:11077:1: (lv_ownedExpression_1_0= ruleExpCS )
            {
            // InternalQVTimperative.g:11077:1: (lv_ownedExpression_1_0= ruleExpCS )
            // InternalQVTimperative.g:11078:3: lv_ownedExpression_1_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getNestedExpCSAccess().getOwnedExpressionExpCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_117);
            lv_ownedExpression_1_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNestedExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedExpression",
                      		lv_ownedExpression_1_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_2=(Token)match(input,56,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getNestedExpCSAccess().getRightParenthesisKeyword_2());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNestedExpCS"


    // $ANTLR start "entryRuleSelfExpCS"
    // InternalQVTimperative.g:11106:1: entryRuleSelfExpCS returns [EObject current=null] : iv_ruleSelfExpCS= ruleSelfExpCS EOF ;
    public final EObject entryRuleSelfExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSelfExpCS = null;


        try {
            // InternalQVTimperative.g:11107:2: (iv_ruleSelfExpCS= ruleSelfExpCS EOF )
            // InternalQVTimperative.g:11108:2: iv_ruleSelfExpCS= ruleSelfExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSelfExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSelfExpCS=ruleSelfExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSelfExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSelfExpCS"


    // $ANTLR start "ruleSelfExpCS"
    // InternalQVTimperative.g:11115:1: ruleSelfExpCS returns [EObject current=null] : ( () otherlv_1= 'self' ) ;
    public final EObject ruleSelfExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule();

        try {
            // InternalQVTimperative.g:11118:28: ( ( () otherlv_1= 'self' ) )
            // InternalQVTimperative.g:11119:1: ( () otherlv_1= 'self' )
            {
            // InternalQVTimperative.g:11119:1: ( () otherlv_1= 'self' )
            // InternalQVTimperative.g:11119:2: () otherlv_1= 'self'
            {
            // InternalQVTimperative.g:11119:2: ()
            // InternalQVTimperative.g:11120:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getSelfExpCSAccess().getSelfExpCSAction_0(),
                          current);

            }

            }

            otherlv_1=(Token)match(input,151,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getSelfExpCSAccess().getSelfKeyword_1());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSelfExpCS"


    // $ANTLR start "entryRuleMultiplicityBoundsCS"
    // InternalQVTimperative.g:11140:1: entryRuleMultiplicityBoundsCS returns [EObject current=null] : iv_ruleMultiplicityBoundsCS= ruleMultiplicityBoundsCS EOF ;
    public final EObject entryRuleMultiplicityBoundsCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicityBoundsCS = null;


        try {
            // InternalQVTimperative.g:11141:2: (iv_ruleMultiplicityBoundsCS= ruleMultiplicityBoundsCS EOF )
            // InternalQVTimperative.g:11142:2: iv_ruleMultiplicityBoundsCS= ruleMultiplicityBoundsCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicityBoundsCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMultiplicityBoundsCS=ruleMultiplicityBoundsCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicityBoundsCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicityBoundsCS"


    // $ANTLR start "ruleMultiplicityBoundsCS"
    // InternalQVTimperative.g:11149:1: ruleMultiplicityBoundsCS returns [EObject current=null] : ( ( (lv_lowerBound_0_0= ruleLOWER ) ) (otherlv_1= '..' ( (lv_upperBound_2_0= ruleUPPER ) ) )? ) ;
    public final EObject ruleMultiplicityBoundsCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_lowerBound_0_0 = null;

        AntlrDatatypeRuleToken lv_upperBound_2_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:11152:28: ( ( ( (lv_lowerBound_0_0= ruleLOWER ) ) (otherlv_1= '..' ( (lv_upperBound_2_0= ruleUPPER ) ) )? ) )
            // InternalQVTimperative.g:11153:1: ( ( (lv_lowerBound_0_0= ruleLOWER ) ) (otherlv_1= '..' ( (lv_upperBound_2_0= ruleUPPER ) ) )? )
            {
            // InternalQVTimperative.g:11153:1: ( ( (lv_lowerBound_0_0= ruleLOWER ) ) (otherlv_1= '..' ( (lv_upperBound_2_0= ruleUPPER ) ) )? )
            // InternalQVTimperative.g:11153:2: ( (lv_lowerBound_0_0= ruleLOWER ) ) (otherlv_1= '..' ( (lv_upperBound_2_0= ruleUPPER ) ) )?
            {
            // InternalQVTimperative.g:11153:2: ( (lv_lowerBound_0_0= ruleLOWER ) )
            // InternalQVTimperative.g:11154:1: (lv_lowerBound_0_0= ruleLOWER )
            {
            // InternalQVTimperative.g:11154:1: (lv_lowerBound_0_0= ruleLOWER )
            // InternalQVTimperative.g:11155:3: lv_lowerBound_0_0= ruleLOWER
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getMultiplicityBoundsCSAccess().getLowerBoundLOWERParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_122);
            lv_lowerBound_0_0=ruleLOWER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMultiplicityBoundsCSRule());
              	        }
                     		set(
                     			current,
                     			"lowerBound",
                      		lv_lowerBound_0_0,
                      		"org.eclipse.ocl.xtext.base.Base.LOWER");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:11171:2: (otherlv_1= '..' ( (lv_upperBound_2_0= ruleUPPER ) ) )?
            int alt241=2;
            int LA241_0 = input.LA(1);

            if ( (LA241_0==27) ) {
                alt241=1;
            }
            switch (alt241) {
                case 1 :
                    // InternalQVTimperative.g:11171:4: otherlv_1= '..' ( (lv_upperBound_2_0= ruleUPPER ) )
                    {
                    otherlv_1=(Token)match(input,27,FollowSets000.FOLLOW_149); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getMultiplicityBoundsCSAccess().getFullStopFullStopKeyword_1_0());

                    }
                    // InternalQVTimperative.g:11175:1: ( (lv_upperBound_2_0= ruleUPPER ) )
                    // InternalQVTimperative.g:11176:1: (lv_upperBound_2_0= ruleUPPER )
                    {
                    // InternalQVTimperative.g:11176:1: (lv_upperBound_2_0= ruleUPPER )
                    // InternalQVTimperative.g:11177:3: lv_upperBound_2_0= ruleUPPER
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getMultiplicityBoundsCSAccess().getUpperBoundUPPERParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_upperBound_2_0=ruleUPPER();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMultiplicityBoundsCSRule());
                      	        }
                             		set(
                             			current,
                             			"upperBound",
                              		lv_upperBound_2_0,
                              		"org.eclipse.ocl.xtext.base.Base.UPPER");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicityBoundsCS"


    // $ANTLR start "entryRuleMultiplicityCS"
    // InternalQVTimperative.g:11201:1: entryRuleMultiplicityCS returns [EObject current=null] : iv_ruleMultiplicityCS= ruleMultiplicityCS EOF ;
    public final EObject entryRuleMultiplicityCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicityCS = null;


        try {
            // InternalQVTimperative.g:11202:2: (iv_ruleMultiplicityCS= ruleMultiplicityCS EOF )
            // InternalQVTimperative.g:11203:2: iv_ruleMultiplicityCS= ruleMultiplicityCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicityCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMultiplicityCS=ruleMultiplicityCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicityCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicityCS"


    // $ANTLR start "ruleMultiplicityCS"
    // InternalQVTimperative.g:11210:1: ruleMultiplicityCS returns [EObject current=null] : (otherlv_0= '[' (this_MultiplicityBoundsCS_1= ruleMultiplicityBoundsCS | this_MultiplicityStringCS_2= ruleMultiplicityStringCS ) (otherlv_3= '|?' | ( (lv_isNullFree_4_0= '|1' ) ) )? otherlv_5= ']' ) ;
    public final EObject ruleMultiplicityCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token lv_isNullFree_4_0=null;
        Token otherlv_5=null;
        EObject this_MultiplicityBoundsCS_1 = null;

        EObject this_MultiplicityStringCS_2 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:11213:28: ( (otherlv_0= '[' (this_MultiplicityBoundsCS_1= ruleMultiplicityBoundsCS | this_MultiplicityStringCS_2= ruleMultiplicityStringCS ) (otherlv_3= '|?' | ( (lv_isNullFree_4_0= '|1' ) ) )? otherlv_5= ']' ) )
            // InternalQVTimperative.g:11214:1: (otherlv_0= '[' (this_MultiplicityBoundsCS_1= ruleMultiplicityBoundsCS | this_MultiplicityStringCS_2= ruleMultiplicityStringCS ) (otherlv_3= '|?' | ( (lv_isNullFree_4_0= '|1' ) ) )? otherlv_5= ']' )
            {
            // InternalQVTimperative.g:11214:1: (otherlv_0= '[' (this_MultiplicityBoundsCS_1= ruleMultiplicityBoundsCS | this_MultiplicityStringCS_2= ruleMultiplicityStringCS ) (otherlv_3= '|?' | ( (lv_isNullFree_4_0= '|1' ) ) )? otherlv_5= ']' )
            // InternalQVTimperative.g:11214:3: otherlv_0= '[' (this_MultiplicityBoundsCS_1= ruleMultiplicityBoundsCS | this_MultiplicityStringCS_2= ruleMultiplicityStringCS ) (otherlv_3= '|?' | ( (lv_isNullFree_4_0= '|1' ) ) )? otherlv_5= ']'
            {
            otherlv_0=(Token)match(input,142,FollowSets000.FOLLOW_150); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getMultiplicityCSAccess().getLeftSquareBracketKeyword_0());

            }
            // InternalQVTimperative.g:11218:1: (this_MultiplicityBoundsCS_1= ruleMultiplicityBoundsCS | this_MultiplicityStringCS_2= ruleMultiplicityStringCS )
            int alt242=2;
            int LA242_0 = input.LA(1);

            if ( (LA242_0==RULE_INT) ) {
                alt242=1;
            }
            else if ( (LA242_0==42||LA242_0==105||LA242_0==154) ) {
                alt242=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 242, 0, input);

                throw nvae;
            }
            switch (alt242) {
                case 1 :
                    // InternalQVTimperative.g:11219:2: this_MultiplicityBoundsCS_1= ruleMultiplicityBoundsCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getMultiplicityCSAccess().getMultiplicityBoundsCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_151);
                    this_MultiplicityBoundsCS_1=ruleMultiplicityBoundsCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MultiplicityBoundsCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:11232:2: this_MultiplicityStringCS_2= ruleMultiplicityStringCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getMultiplicityCSAccess().getMultiplicityStringCSParserRuleCall_1_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_151);
                    this_MultiplicityStringCS_2=ruleMultiplicityStringCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MultiplicityStringCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }

            // InternalQVTimperative.g:11243:2: (otherlv_3= '|?' | ( (lv_isNullFree_4_0= '|1' ) ) )?
            int alt243=3;
            int LA243_0 = input.LA(1);

            if ( (LA243_0==152) ) {
                alt243=1;
            }
            else if ( (LA243_0==153) ) {
                alt243=2;
            }
            switch (alt243) {
                case 1 :
                    // InternalQVTimperative.g:11243:4: otherlv_3= '|?'
                    {
                    otherlv_3=(Token)match(input,152,FollowSets000.FOLLOW_152); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getMultiplicityCSAccess().getVerticalLineQuestionMarkKeyword_2_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:11248:6: ( (lv_isNullFree_4_0= '|1' ) )
                    {
                    // InternalQVTimperative.g:11248:6: ( (lv_isNullFree_4_0= '|1' ) )
                    // InternalQVTimperative.g:11249:1: (lv_isNullFree_4_0= '|1' )
                    {
                    // InternalQVTimperative.g:11249:1: (lv_isNullFree_4_0= '|1' )
                    // InternalQVTimperative.g:11250:3: lv_isNullFree_4_0= '|1'
                    {
                    lv_isNullFree_4_0=(Token)match(input,153,FollowSets000.FOLLOW_152); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isNullFree_4_0, grammarAccess.getMultiplicityCSAccess().getIsNullFree1Keyword_2_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMultiplicityCSRule());
                      	        }
                             		setWithLastConsumed(current, "isNullFree", true, "|1");

                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,143,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getMultiplicityCSAccess().getRightSquareBracketKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicityCS"


    // $ANTLR start "entryRuleMultiplicityStringCS"
    // InternalQVTimperative.g:11275:1: entryRuleMultiplicityStringCS returns [EObject current=null] : iv_ruleMultiplicityStringCS= ruleMultiplicityStringCS EOF ;
    public final EObject entryRuleMultiplicityStringCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicityStringCS = null;


        try {
            // InternalQVTimperative.g:11276:2: (iv_ruleMultiplicityStringCS= ruleMultiplicityStringCS EOF )
            // InternalQVTimperative.g:11277:2: iv_ruleMultiplicityStringCS= ruleMultiplicityStringCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicityStringCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMultiplicityStringCS=ruleMultiplicityStringCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicityStringCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicityStringCS"


    // $ANTLR start "ruleMultiplicityStringCS"
    // InternalQVTimperative.g:11284:1: ruleMultiplicityStringCS returns [EObject current=null] : ( ( (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' ) ) ) ;
    public final EObject ruleMultiplicityStringCS() throws RecognitionException {
        EObject current = null;

        Token lv_stringBounds_0_1=null;
        Token lv_stringBounds_0_2=null;
        Token lv_stringBounds_0_3=null;

         enterRule();

        try {
            // InternalQVTimperative.g:11287:28: ( ( ( (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' ) ) ) )
            // InternalQVTimperative.g:11288:1: ( ( (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' ) ) )
            {
            // InternalQVTimperative.g:11288:1: ( ( (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' ) ) )
            // InternalQVTimperative.g:11289:1: ( (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' ) )
            {
            // InternalQVTimperative.g:11289:1: ( (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' ) )
            // InternalQVTimperative.g:11290:1: (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' )
            {
            // InternalQVTimperative.g:11290:1: (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' )
            int alt244=3;
            switch ( input.LA(1) ) {
            case 42:
                {
                alt244=1;
                }
                break;
            case 105:
                {
                alt244=2;
                }
                break;
            case 154:
                {
                alt244=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 244, 0, input);

                throw nvae;
            }

            switch (alt244) {
                case 1 :
                    // InternalQVTimperative.g:11291:3: lv_stringBounds_0_1= '*'
                    {
                    lv_stringBounds_0_1=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_stringBounds_0_1, grammarAccess.getMultiplicityStringCSAccess().getStringBoundsAsteriskKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMultiplicityStringCSRule());
                      	        }
                             		setWithLastConsumed(current, "stringBounds", lv_stringBounds_0_1, null);

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:11303:8: lv_stringBounds_0_2= '+'
                    {
                    lv_stringBounds_0_2=(Token)match(input,105,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_stringBounds_0_2, grammarAccess.getMultiplicityStringCSAccess().getStringBoundsPlusSignKeyword_0_1());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMultiplicityStringCSRule());
                      	        }
                             		setWithLastConsumed(current, "stringBounds", lv_stringBounds_0_2, null);

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:11315:8: lv_stringBounds_0_3= '?'
                    {
                    lv_stringBounds_0_3=(Token)match(input,154,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_stringBounds_0_3, grammarAccess.getMultiplicityStringCSAccess().getStringBoundsQuestionMarkKeyword_0_2());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMultiplicityStringCSRule());
                      	        }
                             		setWithLastConsumed(current, "stringBounds", lv_stringBounds_0_3, null);

                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicityStringCS"


    // $ANTLR start "entryRulePathNameCS"
    // InternalQVTimperative.g:11338:1: entryRulePathNameCS returns [EObject current=null] : iv_rulePathNameCS= rulePathNameCS EOF ;
    public final EObject entryRulePathNameCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePathNameCS = null;


        try {
            // InternalQVTimperative.g:11339:2: (iv_rulePathNameCS= rulePathNameCS EOF )
            // InternalQVTimperative.g:11340:2: iv_rulePathNameCS= rulePathNameCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPathNameCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePathNameCS=rulePathNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePathNameCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePathNameCS"


    // $ANTLR start "rulePathNameCS"
    // InternalQVTimperative.g:11347:1: rulePathNameCS returns [EObject current=null] : ( ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* ) ;
    public final EObject rulePathNameCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedPathElements_0_0 = null;

        EObject lv_ownedPathElements_2_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:11350:28: ( ( ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* ) )
            // InternalQVTimperative.g:11351:1: ( ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* )
            {
            // InternalQVTimperative.g:11351:1: ( ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* )
            // InternalQVTimperative.g:11351:2: ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )*
            {
            // InternalQVTimperative.g:11351:2: ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) )
            // InternalQVTimperative.g:11352:1: (lv_ownedPathElements_0_0= ruleFirstPathElementCS )
            {
            // InternalQVTimperative.g:11352:1: (lv_ownedPathElements_0_0= ruleFirstPathElementCS )
            // InternalQVTimperative.g:11353:3: lv_ownedPathElements_0_0= ruleFirstPathElementCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getPathNameCSAccess().getOwnedPathElementsFirstPathElementCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_114);
            lv_ownedPathElements_0_0=ruleFirstPathElementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPathNameCSRule());
              	        }
                     		add(
                     			current,
                     			"ownedPathElements",
                      		lv_ownedPathElements_0_0,
                      		"org.eclipse.ocl.xtext.base.Base.FirstPathElementCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:11369:2: (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )*
            loop245:
            do {
                int alt245=2;
                int LA245_0 = input.LA(1);

                if ( (LA245_0==41) ) {
                    alt245=1;
                }


                switch (alt245) {
            	case 1 :
            	    // InternalQVTimperative.g:11369:4: otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) )
            	    {
            	    otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_12); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getPathNameCSAccess().getColonColonKeyword_1_0());

            	    }
            	    // InternalQVTimperative.g:11373:1: ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) )
            	    // InternalQVTimperative.g:11374:1: (lv_ownedPathElements_2_0= ruleNextPathElementCS )
            	    {
            	    // InternalQVTimperative.g:11374:1: (lv_ownedPathElements_2_0= ruleNextPathElementCS )
            	    // InternalQVTimperative.g:11375:3: lv_ownedPathElements_2_0= ruleNextPathElementCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getPathNameCSAccess().getOwnedPathElementsNextPathElementCSParserRuleCall_1_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_114);
            	    lv_ownedPathElements_2_0=ruleNextPathElementCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPathNameCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedPathElements",
            	              		lv_ownedPathElements_2_0,
            	              		"org.eclipse.ocl.xtext.base.Base.NextPathElementCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop245;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePathNameCS"


    // $ANTLR start "entryRuleFirstPathElementCS"
    // InternalQVTimperative.g:11399:1: entryRuleFirstPathElementCS returns [EObject current=null] : iv_ruleFirstPathElementCS= ruleFirstPathElementCS EOF ;
    public final EObject entryRuleFirstPathElementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFirstPathElementCS = null;


        try {
            // InternalQVTimperative.g:11400:2: (iv_ruleFirstPathElementCS= ruleFirstPathElementCS EOF )
            // InternalQVTimperative.g:11401:2: iv_ruleFirstPathElementCS= ruleFirstPathElementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFirstPathElementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFirstPathElementCS=ruleFirstPathElementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFirstPathElementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFirstPathElementCS"


    // $ANTLR start "ruleFirstPathElementCS"
    // InternalQVTimperative.g:11408:1: ruleFirstPathElementCS returns [EObject current=null] : ( ( ruleUnrestrictedName ) ) ;
    public final EObject ruleFirstPathElementCS() throws RecognitionException {
        EObject current = null;

         enterRule();

        try {
            // InternalQVTimperative.g:11411:28: ( ( ( ruleUnrestrictedName ) ) )
            // InternalQVTimperative.g:11412:1: ( ( ruleUnrestrictedName ) )
            {
            // InternalQVTimperative.g:11412:1: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:11413:1: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:11413:1: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:11414:3: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              		  /* */

            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getFirstPathElementCSRule());
              	        }

            }
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getFirstPathElementCSAccess().getReferredElementNamedElementCrossReference_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFirstPathElementCS"


    // $ANTLR start "entryRuleNextPathElementCS"
    // InternalQVTimperative.g:11438:1: entryRuleNextPathElementCS returns [EObject current=null] : iv_ruleNextPathElementCS= ruleNextPathElementCS EOF ;
    public final EObject entryRuleNextPathElementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNextPathElementCS = null;


        try {
            // InternalQVTimperative.g:11439:2: (iv_ruleNextPathElementCS= ruleNextPathElementCS EOF )
            // InternalQVTimperative.g:11440:2: iv_ruleNextPathElementCS= ruleNextPathElementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNextPathElementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNextPathElementCS=ruleNextPathElementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNextPathElementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNextPathElementCS"


    // $ANTLR start "ruleNextPathElementCS"
    // InternalQVTimperative.g:11447:1: ruleNextPathElementCS returns [EObject current=null] : ( ( ruleUnreservedName ) ) ;
    public final EObject ruleNextPathElementCS() throws RecognitionException {
        EObject current = null;

         enterRule();

        try {
            // InternalQVTimperative.g:11450:28: ( ( ( ruleUnreservedName ) ) )
            // InternalQVTimperative.g:11451:1: ( ( ruleUnreservedName ) )
            {
            // InternalQVTimperative.g:11451:1: ( ( ruleUnreservedName ) )
            // InternalQVTimperative.g:11452:1: ( ruleUnreservedName )
            {
            // InternalQVTimperative.g:11452:1: ( ruleUnreservedName )
            // InternalQVTimperative.g:11453:3: ruleUnreservedName
            {
            if ( state.backtracking==0 ) {

              		  /* */

            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getNextPathElementCSRule());
              	        }

            }
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getNextPathElementCSAccess().getReferredElementNamedElementCrossReference_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnreservedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNextPathElementCS"


    // $ANTLR start "entryRuleTemplateBindingCS"
    // InternalQVTimperative.g:11477:1: entryRuleTemplateBindingCS returns [EObject current=null] : iv_ruleTemplateBindingCS= ruleTemplateBindingCS EOF ;
    public final EObject entryRuleTemplateBindingCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTemplateBindingCS = null;


        try {
            // InternalQVTimperative.g:11478:2: (iv_ruleTemplateBindingCS= ruleTemplateBindingCS EOF )
            // InternalQVTimperative.g:11479:2: iv_ruleTemplateBindingCS= ruleTemplateBindingCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateBindingCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTemplateBindingCS=ruleTemplateBindingCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateBindingCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTemplateBindingCS"


    // $ANTLR start "ruleTemplateBindingCS"
    // InternalQVTimperative.g:11486:1: ruleTemplateBindingCS returns [EObject current=null] : ( ( (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS ) ) (otherlv_1= ',' ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) ) )* ( (lv_ownedMultiplicity_3_0= ruleMultiplicityCS ) )? ) ;
    public final EObject ruleTemplateBindingCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedSubstitutions_0_0 = null;

        EObject lv_ownedSubstitutions_2_0 = null;

        EObject lv_ownedMultiplicity_3_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:11489:28: ( ( ( (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS ) ) (otherlv_1= ',' ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) ) )* ( (lv_ownedMultiplicity_3_0= ruleMultiplicityCS ) )? ) )
            // InternalQVTimperative.g:11490:1: ( ( (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS ) ) (otherlv_1= ',' ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) ) )* ( (lv_ownedMultiplicity_3_0= ruleMultiplicityCS ) )? )
            {
            // InternalQVTimperative.g:11490:1: ( ( (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS ) ) (otherlv_1= ',' ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) ) )* ( (lv_ownedMultiplicity_3_0= ruleMultiplicityCS ) )? )
            // InternalQVTimperative.g:11490:2: ( (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS ) ) (otherlv_1= ',' ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) ) )* ( (lv_ownedMultiplicity_3_0= ruleMultiplicityCS ) )?
            {
            // InternalQVTimperative.g:11490:2: ( (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS ) )
            // InternalQVTimperative.g:11491:1: (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS )
            {
            // InternalQVTimperative.g:11491:1: (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS )
            // InternalQVTimperative.g:11492:3: lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTemplateBindingCSAccess().getOwnedSubstitutionsTemplateParameterSubstitutionCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_153);
            lv_ownedSubstitutions_0_0=ruleTemplateParameterSubstitutionCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTemplateBindingCSRule());
              	        }
                     		add(
                     			current,
                     			"ownedSubstitutions",
                      		lv_ownedSubstitutions_0_0,
                      		"org.eclipse.ocl.xtext.base.Base.TemplateParameterSubstitutionCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:11508:2: (otherlv_1= ',' ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) ) )*
            loop246:
            do {
                int alt246=2;
                int LA246_0 = input.LA(1);

                if ( (LA246_0==18) ) {
                    alt246=1;
                }


                switch (alt246) {
            	case 1 :
            	    // InternalQVTimperative.g:11508:4: otherlv_1= ',' ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) )
            	    {
            	    otherlv_1=(Token)match(input,18,FollowSets000.FOLLOW_154); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getTemplateBindingCSAccess().getCommaKeyword_1_0());

            	    }
            	    // InternalQVTimperative.g:11512:1: ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) )
            	    // InternalQVTimperative.g:11513:1: (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS )
            	    {
            	    // InternalQVTimperative.g:11513:1: (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS )
            	    // InternalQVTimperative.g:11514:3: lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getTemplateBindingCSAccess().getOwnedSubstitutionsTemplateParameterSubstitutionCSParserRuleCall_1_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_153);
            	    lv_ownedSubstitutions_2_0=ruleTemplateParameterSubstitutionCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTemplateBindingCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedSubstitutions",
            	              		lv_ownedSubstitutions_2_0,
            	              		"org.eclipse.ocl.xtext.base.Base.TemplateParameterSubstitutionCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop246;
                }
            } while (true);

            // InternalQVTimperative.g:11530:4: ( (lv_ownedMultiplicity_3_0= ruleMultiplicityCS ) )?
            int alt247=2;
            int LA247_0 = input.LA(1);

            if ( (LA247_0==142) ) {
                alt247=1;
            }
            switch (alt247) {
                case 1 :
                    // InternalQVTimperative.g:11531:1: (lv_ownedMultiplicity_3_0= ruleMultiplicityCS )
                    {
                    // InternalQVTimperative.g:11531:1: (lv_ownedMultiplicity_3_0= ruleMultiplicityCS )
                    // InternalQVTimperative.g:11532:3: lv_ownedMultiplicity_3_0= ruleMultiplicityCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTemplateBindingCSAccess().getOwnedMultiplicityMultiplicityCSParserRuleCall_2_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedMultiplicity_3_0=ruleMultiplicityCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTemplateBindingCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedMultiplicity",
                              		lv_ownedMultiplicity_3_0,
                              		"org.eclipse.ocl.xtext.base.Base.MultiplicityCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTemplateBindingCS"


    // $ANTLR start "entryRuleTemplateParameterSubstitutionCS"
    // InternalQVTimperative.g:11556:1: entryRuleTemplateParameterSubstitutionCS returns [EObject current=null] : iv_ruleTemplateParameterSubstitutionCS= ruleTemplateParameterSubstitutionCS EOF ;
    public final EObject entryRuleTemplateParameterSubstitutionCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTemplateParameterSubstitutionCS = null;


        try {
            // InternalQVTimperative.g:11557:2: (iv_ruleTemplateParameterSubstitutionCS= ruleTemplateParameterSubstitutionCS EOF )
            // InternalQVTimperative.g:11558:2: iv_ruleTemplateParameterSubstitutionCS= ruleTemplateParameterSubstitutionCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateParameterSubstitutionCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTemplateParameterSubstitutionCS=ruleTemplateParameterSubstitutionCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateParameterSubstitutionCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTemplateParameterSubstitutionCS"


    // $ANTLR start "ruleTemplateParameterSubstitutionCS"
    // InternalQVTimperative.g:11565:1: ruleTemplateParameterSubstitutionCS returns [EObject current=null] : ( (lv_ownedActualParameter_0_0= ruleTypeRefCS ) ) ;
    public final EObject ruleTemplateParameterSubstitutionCS() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedActualParameter_0_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:11568:28: ( ( (lv_ownedActualParameter_0_0= ruleTypeRefCS ) ) )
            // InternalQVTimperative.g:11569:1: ( (lv_ownedActualParameter_0_0= ruleTypeRefCS ) )
            {
            // InternalQVTimperative.g:11569:1: ( (lv_ownedActualParameter_0_0= ruleTypeRefCS ) )
            // InternalQVTimperative.g:11570:1: (lv_ownedActualParameter_0_0= ruleTypeRefCS )
            {
            // InternalQVTimperative.g:11570:1: (lv_ownedActualParameter_0_0= ruleTypeRefCS )
            // InternalQVTimperative.g:11571:3: lv_ownedActualParameter_0_0= ruleTypeRefCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTemplateParameterSubstitutionCSAccess().getOwnedActualParameterTypeRefCSParserRuleCall_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedActualParameter_0_0=ruleTypeRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTemplateParameterSubstitutionCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedActualParameter",
                      		lv_ownedActualParameter_0_0,
                      		"org.eclipse.ocl.xtext.base.Base.TypeRefCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTemplateParameterSubstitutionCS"


    // $ANTLR start "entryRuleTemplateSignatureCS"
    // InternalQVTimperative.g:11595:1: entryRuleTemplateSignatureCS returns [EObject current=null] : iv_ruleTemplateSignatureCS= ruleTemplateSignatureCS EOF ;
    public final EObject entryRuleTemplateSignatureCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTemplateSignatureCS = null;


        try {
            // InternalQVTimperative.g:11596:2: (iv_ruleTemplateSignatureCS= ruleTemplateSignatureCS EOF )
            // InternalQVTimperative.g:11597:2: iv_ruleTemplateSignatureCS= ruleTemplateSignatureCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateSignatureCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTemplateSignatureCS=ruleTemplateSignatureCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateSignatureCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTemplateSignatureCS"


    // $ANTLR start "ruleTemplateSignatureCS"
    // InternalQVTimperative.g:11604:1: ruleTemplateSignatureCS returns [EObject current=null] : (otherlv_0= '(' ( (lv_ownedParameters_1_0= ruleTypeParameterCS ) ) (otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) ) )* otherlv_4= ')' ) ;
    public final EObject ruleTemplateSignatureCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedParameters_1_0 = null;

        EObject lv_ownedParameters_3_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:11607:28: ( (otherlv_0= '(' ( (lv_ownedParameters_1_0= ruleTypeParameterCS ) ) (otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) ) )* otherlv_4= ')' ) )
            // InternalQVTimperative.g:11608:1: (otherlv_0= '(' ( (lv_ownedParameters_1_0= ruleTypeParameterCS ) ) (otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) ) )* otherlv_4= ')' )
            {
            // InternalQVTimperative.g:11608:1: (otherlv_0= '(' ( (lv_ownedParameters_1_0= ruleTypeParameterCS ) ) (otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) ) )* otherlv_4= ')' )
            // InternalQVTimperative.g:11608:3: otherlv_0= '(' ( (lv_ownedParameters_1_0= ruleTypeParameterCS ) ) (otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) ) )* otherlv_4= ')'
            {
            otherlv_0=(Token)match(input,55,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTemplateSignatureCSAccess().getLeftParenthesisKeyword_0());

            }
            // InternalQVTimperative.g:11612:1: ( (lv_ownedParameters_1_0= ruleTypeParameterCS ) )
            // InternalQVTimperative.g:11613:1: (lv_ownedParameters_1_0= ruleTypeParameterCS )
            {
            // InternalQVTimperative.g:11613:1: (lv_ownedParameters_1_0= ruleTypeParameterCS )
            // InternalQVTimperative.g:11614:3: lv_ownedParameters_1_0= ruleTypeParameterCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTemplateSignatureCSAccess().getOwnedParametersTypeParameterCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_58);
            lv_ownedParameters_1_0=ruleTypeParameterCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTemplateSignatureCSRule());
              	        }
                     		add(
                     			current,
                     			"ownedParameters",
                      		lv_ownedParameters_1_0,
                      		"org.eclipse.ocl.xtext.base.Base.TypeParameterCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:11630:2: (otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) ) )*
            loop248:
            do {
                int alt248=2;
                int LA248_0 = input.LA(1);

                if ( (LA248_0==18) ) {
                    alt248=1;
                }


                switch (alt248) {
            	case 1 :
            	    // InternalQVTimperative.g:11630:4: otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getTemplateSignatureCSAccess().getCommaKeyword_2_0());

            	    }
            	    // InternalQVTimperative.g:11634:1: ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) )
            	    // InternalQVTimperative.g:11635:1: (lv_ownedParameters_3_0= ruleTypeParameterCS )
            	    {
            	    // InternalQVTimperative.g:11635:1: (lv_ownedParameters_3_0= ruleTypeParameterCS )
            	    // InternalQVTimperative.g:11636:3: lv_ownedParameters_3_0= ruleTypeParameterCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getTemplateSignatureCSAccess().getOwnedParametersTypeParameterCSParserRuleCall_2_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_58);
            	    lv_ownedParameters_3_0=ruleTypeParameterCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTemplateSignatureCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedParameters",
            	              		lv_ownedParameters_3_0,
            	              		"org.eclipse.ocl.xtext.base.Base.TypeParameterCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop248;
                }
            } while (true);

            otherlv_4=(Token)match(input,56,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getTemplateSignatureCSAccess().getRightParenthesisKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTemplateSignatureCS"


    // $ANTLR start "entryRuleTypeParameterCS"
    // InternalQVTimperative.g:11664:1: entryRuleTypeParameterCS returns [EObject current=null] : iv_ruleTypeParameterCS= ruleTypeParameterCS EOF ;
    public final EObject entryRuleTypeParameterCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeParameterCS = null;


        try {
            // InternalQVTimperative.g:11665:2: (iv_ruleTypeParameterCS= ruleTypeParameterCS EOF )
            // InternalQVTimperative.g:11666:2: iv_ruleTypeParameterCS= ruleTypeParameterCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeParameterCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeParameterCS=ruleTypeParameterCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeParameterCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeParameterCS"


    // $ANTLR start "ruleTypeParameterCS"
    // InternalQVTimperative.g:11673:1: ruleTypeParameterCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= 'extends' ( (lv_ownedExtends_2_0= ruleTypedRefCS ) ) (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )* )? ) ;
    public final EObject ruleTypeParameterCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedExtends_2_0 = null;

        EObject lv_ownedExtends_4_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:11676:28: ( ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= 'extends' ( (lv_ownedExtends_2_0= ruleTypedRefCS ) ) (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )* )? ) )
            // InternalQVTimperative.g:11677:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= 'extends' ( (lv_ownedExtends_2_0= ruleTypedRefCS ) ) (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )* )? )
            {
            // InternalQVTimperative.g:11677:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= 'extends' ( (lv_ownedExtends_2_0= ruleTypedRefCS ) ) (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )* )? )
            // InternalQVTimperative.g:11677:2: ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= 'extends' ( (lv_ownedExtends_2_0= ruleTypedRefCS ) ) (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )* )?
            {
            // InternalQVTimperative.g:11677:2: ( (lv_name_0_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:11678:1: (lv_name_0_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:11678:1: (lv_name_0_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:11679:3: lv_name_0_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTypeParameterCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_155);
            lv_name_0_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypeParameterCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_0_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:11695:2: (otherlv_1= 'extends' ( (lv_ownedExtends_2_0= ruleTypedRefCS ) ) (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )* )?
            int alt250=2;
            int LA250_0 = input.LA(1);

            if ( (LA250_0==100) ) {
                alt250=1;
            }
            switch (alt250) {
                case 1 :
                    // InternalQVTimperative.g:11695:4: otherlv_1= 'extends' ( (lv_ownedExtends_2_0= ruleTypedRefCS ) ) (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )*
                    {
                    otherlv_1=(Token)match(input,100,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getTypeParameterCSAccess().getExtendsKeyword_1_0());

                    }
                    // InternalQVTimperative.g:11699:1: ( (lv_ownedExtends_2_0= ruleTypedRefCS ) )
                    // InternalQVTimperative.g:11700:1: (lv_ownedExtends_2_0= ruleTypedRefCS )
                    {
                    // InternalQVTimperative.g:11700:1: (lv_ownedExtends_2_0= ruleTypedRefCS )
                    // InternalQVTimperative.g:11701:3: lv_ownedExtends_2_0= ruleTypedRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTypeParameterCSAccess().getOwnedExtendsTypedRefCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_156);
                    lv_ownedExtends_2_0=ruleTypedRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypeParameterCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedExtends",
                              		lv_ownedExtends_2_0,
                              		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.TypedRefCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:11717:2: (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )*
                    loop249:
                    do {
                        int alt249=2;
                        int LA249_0 = input.LA(1);

                        if ( (LA249_0==155) ) {
                            alt249=1;
                        }


                        switch (alt249) {
                    	case 1 :
                    	    // InternalQVTimperative.g:11717:4: otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) )
                    	    {
                    	    otherlv_3=(Token)match(input,155,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getTypeParameterCSAccess().getAmpersandAmpersandKeyword_1_2_0());

                    	    }
                    	    // InternalQVTimperative.g:11721:1: ( (lv_ownedExtends_4_0= ruleTypedRefCS ) )
                    	    // InternalQVTimperative.g:11722:1: (lv_ownedExtends_4_0= ruleTypedRefCS )
                    	    {
                    	    // InternalQVTimperative.g:11722:1: (lv_ownedExtends_4_0= ruleTypedRefCS )
                    	    // InternalQVTimperative.g:11723:3: lv_ownedExtends_4_0= ruleTypedRefCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getTypeParameterCSAccess().getOwnedExtendsTypedRefCSParserRuleCall_1_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_156);
                    	    lv_ownedExtends_4_0=ruleTypedRefCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getTypeParameterCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedExtends",
                    	              		lv_ownedExtends_4_0,
                    	              		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.TypedRefCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop249;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeParameterCS"


    // $ANTLR start "entryRuleTypeRefCS"
    // InternalQVTimperative.g:11747:1: entryRuleTypeRefCS returns [EObject current=null] : iv_ruleTypeRefCS= ruleTypeRefCS EOF ;
    public final EObject entryRuleTypeRefCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeRefCS = null;


        try {
            // InternalQVTimperative.g:11748:2: (iv_ruleTypeRefCS= ruleTypeRefCS EOF )
            // InternalQVTimperative.g:11749:2: iv_ruleTypeRefCS= ruleTypeRefCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRefCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeRefCS=ruleTypeRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeRefCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeRefCS"


    // $ANTLR start "ruleTypeRefCS"
    // InternalQVTimperative.g:11756:1: ruleTypeRefCS returns [EObject current=null] : (this_TypedRefCS_0= ruleTypedRefCS | this_WildcardTypeRefCS_1= ruleWildcardTypeRefCS ) ;
    public final EObject ruleTypeRefCS() throws RecognitionException {
        EObject current = null;

        EObject this_TypedRefCS_0 = null;

        EObject this_WildcardTypeRefCS_1 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:11759:28: ( (this_TypedRefCS_0= ruleTypedRefCS | this_WildcardTypeRefCS_1= ruleWildcardTypeRefCS ) )
            // InternalQVTimperative.g:11760:1: (this_TypedRefCS_0= ruleTypedRefCS | this_WildcardTypeRefCS_1= ruleWildcardTypeRefCS )
            {
            // InternalQVTimperative.g:11760:1: (this_TypedRefCS_0= ruleTypedRefCS | this_WildcardTypeRefCS_1= ruleWildcardTypeRefCS )
            int alt251=2;
            int LA251_0 = input.LA(1);

            if ( ((LA251_0>=RULE_SIMPLE_ID && LA251_0<=RULE_ESCAPED_ID)||LA251_0==17||LA251_0==19||(LA251_0>=22 && LA251_0<=23)||(LA251_0>=25 && LA251_0<=26)||(LA251_0>=29 && LA251_0<=33)||LA251_0==39||(LA251_0>=43 && LA251_0<=51)||(LA251_0>=53 && LA251_0<=54)||(LA251_0>=57 && LA251_0<=59)||(LA251_0>=61 && LA251_0<=66)||LA251_0==68||LA251_0==70||LA251_0==72||LA251_0==75||LA251_0==77||LA251_0==79||(LA251_0>=81 && LA251_0<=85)||(LA251_0>=87 && LA251_0<=92)||LA251_0==94||LA251_0==96||(LA251_0>=98 && LA251_0<=101)||(LA251_0>=118 && LA251_0<=132)) ) {
                alt251=1;
            }
            else if ( (LA251_0==154) ) {
                alt251=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 251, 0, input);

                throw nvae;
            }
            switch (alt251) {
                case 1 :
                    // InternalQVTimperative.g:11761:2: this_TypedRefCS_0= ruleTypedRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeRefCSAccess().getTypedRefCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypedRefCS_0=ruleTypedRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypedRefCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:11774:2: this_WildcardTypeRefCS_1= ruleWildcardTypeRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeRefCSAccess().getWildcardTypeRefCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_WildcardTypeRefCS_1=ruleWildcardTypeRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_WildcardTypeRefCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeRefCS"


    // $ANTLR start "entryRuleTypedTypeRefCS"
    // InternalQVTimperative.g:11793:1: entryRuleTypedTypeRefCS returns [EObject current=null] : iv_ruleTypedTypeRefCS= ruleTypedTypeRefCS EOF ;
    public final EObject entryRuleTypedTypeRefCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypedTypeRefCS = null;


        try {
            // InternalQVTimperative.g:11794:2: (iv_ruleTypedTypeRefCS= ruleTypedTypeRefCS EOF )
            // InternalQVTimperative.g:11795:2: iv_ruleTypedTypeRefCS= ruleTypedTypeRefCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypedTypeRefCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypedTypeRefCS=ruleTypedTypeRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypedTypeRefCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypedTypeRefCS"


    // $ANTLR start "ruleTypedTypeRefCS"
    // InternalQVTimperative.g:11802:1: ruleTypedTypeRefCS returns [EObject current=null] : ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) (otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')' )? ) ;
    public final EObject ruleTypedTypeRefCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_ownedPathName_0_0 = null;

        EObject lv_ownedBinding_2_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:11805:28: ( ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) (otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')' )? ) )
            // InternalQVTimperative.g:11806:1: ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) (otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')' )? )
            {
            // InternalQVTimperative.g:11806:1: ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) (otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')' )? )
            // InternalQVTimperative.g:11806:2: ( (lv_ownedPathName_0_0= rulePathNameCS ) ) (otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')' )?
            {
            // InternalQVTimperative.g:11806:2: ( (lv_ownedPathName_0_0= rulePathNameCS ) )
            // InternalQVTimperative.g:11807:1: (lv_ownedPathName_0_0= rulePathNameCS )
            {
            // InternalQVTimperative.g:11807:1: (lv_ownedPathName_0_0= rulePathNameCS )
            // InternalQVTimperative.g:11808:3: lv_ownedPathName_0_0= rulePathNameCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTypedTypeRefCSAccess().getOwnedPathNamePathNameCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_115);
            lv_ownedPathName_0_0=rulePathNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypedTypeRefCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedPathName",
                      		lv_ownedPathName_0_0,
                      		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:11824:2: (otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')' )?
            int alt252=2;
            int LA252_0 = input.LA(1);

            if ( (LA252_0==55) ) {
                alt252=1;
            }
            switch (alt252) {
                case 1 :
                    // InternalQVTimperative.g:11824:4: otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')'
                    {
                    otherlv_1=(Token)match(input,55,FollowSets000.FOLLOW_154); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getTypedTypeRefCSAccess().getLeftParenthesisKeyword_1_0());

                    }
                    // InternalQVTimperative.g:11828:1: ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) )
                    // InternalQVTimperative.g:11829:1: (lv_ownedBinding_2_0= ruleTemplateBindingCS )
                    {
                    // InternalQVTimperative.g:11829:1: (lv_ownedBinding_2_0= ruleTemplateBindingCS )
                    // InternalQVTimperative.g:11830:3: lv_ownedBinding_2_0= ruleTemplateBindingCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTypedTypeRefCSAccess().getOwnedBindingTemplateBindingCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_117);
                    lv_ownedBinding_2_0=ruleTemplateBindingCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypedTypeRefCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedBinding",
                              		lv_ownedBinding_2_0,
                              		"org.eclipse.ocl.xtext.base.Base.TemplateBindingCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    otherlv_3=(Token)match(input,56,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getTypedTypeRefCSAccess().getRightParenthesisKeyword_1_2());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypedTypeRefCS"


    // $ANTLR start "entryRuleWildcardTypeRefCS"
    // InternalQVTimperative.g:11858:1: entryRuleWildcardTypeRefCS returns [EObject current=null] : iv_ruleWildcardTypeRefCS= ruleWildcardTypeRefCS EOF ;
    public final EObject entryRuleWildcardTypeRefCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcardTypeRefCS = null;


        try {
            // InternalQVTimperative.g:11859:2: (iv_ruleWildcardTypeRefCS= ruleWildcardTypeRefCS EOF )
            // InternalQVTimperative.g:11860:2: iv_ruleWildcardTypeRefCS= ruleWildcardTypeRefCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardTypeRefCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleWildcardTypeRefCS=ruleWildcardTypeRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardTypeRefCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWildcardTypeRefCS"


    // $ANTLR start "ruleWildcardTypeRefCS"
    // InternalQVTimperative.g:11867:1: ruleWildcardTypeRefCS returns [EObject current=null] : ( () otherlv_1= '?' (otherlv_2= 'extends' ( (lv_ownedExtends_3_0= ruleTypedRefCS ) ) )? ) ;
    public final EObject ruleWildcardTypeRefCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_ownedExtends_3_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:11870:28: ( ( () otherlv_1= '?' (otherlv_2= 'extends' ( (lv_ownedExtends_3_0= ruleTypedRefCS ) ) )? ) )
            // InternalQVTimperative.g:11871:1: ( () otherlv_1= '?' (otherlv_2= 'extends' ( (lv_ownedExtends_3_0= ruleTypedRefCS ) ) )? )
            {
            // InternalQVTimperative.g:11871:1: ( () otherlv_1= '?' (otherlv_2= 'extends' ( (lv_ownedExtends_3_0= ruleTypedRefCS ) ) )? )
            // InternalQVTimperative.g:11871:2: () otherlv_1= '?' (otherlv_2= 'extends' ( (lv_ownedExtends_3_0= ruleTypedRefCS ) ) )?
            {
            // InternalQVTimperative.g:11871:2: ()
            // InternalQVTimperative.g:11872:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getWildcardTypeRefCSAccess().getWildcardTypeRefCSAction_0(),
                          current);

            }

            }

            otherlv_1=(Token)match(input,154,FollowSets000.FOLLOW_155); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getWildcardTypeRefCSAccess().getQuestionMarkKeyword_1());

            }
            // InternalQVTimperative.g:11884:1: (otherlv_2= 'extends' ( (lv_ownedExtends_3_0= ruleTypedRefCS ) ) )?
            int alt253=2;
            int LA253_0 = input.LA(1);

            if ( (LA253_0==100) ) {
                alt253=1;
            }
            switch (alt253) {
                case 1 :
                    // InternalQVTimperative.g:11884:3: otherlv_2= 'extends' ( (lv_ownedExtends_3_0= ruleTypedRefCS ) )
                    {
                    otherlv_2=(Token)match(input,100,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getWildcardTypeRefCSAccess().getExtendsKeyword_2_0());

                    }
                    // InternalQVTimperative.g:11888:1: ( (lv_ownedExtends_3_0= ruleTypedRefCS ) )
                    // InternalQVTimperative.g:11889:1: (lv_ownedExtends_3_0= ruleTypedRefCS )
                    {
                    // InternalQVTimperative.g:11889:1: (lv_ownedExtends_3_0= ruleTypedRefCS )
                    // InternalQVTimperative.g:11890:3: lv_ownedExtends_3_0= ruleTypedRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getWildcardTypeRefCSAccess().getOwnedExtendsTypedRefCSParserRuleCall_2_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedExtends_3_0=ruleTypedRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getWildcardTypeRefCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedExtends",
                              		lv_ownedExtends_3_0,
                              		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.TypedRefCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWildcardTypeRefCS"


    // $ANTLR start "entryRuleID"
    // InternalQVTimperative.g:11914:1: entryRuleID returns [String current=null] : iv_ruleID= ruleID EOF ;
    public final String entryRuleID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleID = null;


        try {
            // InternalQVTimperative.g:11915:2: (iv_ruleID= ruleID EOF )
            // InternalQVTimperative.g:11916:2: iv_ruleID= ruleID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIDRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleID=ruleID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleID.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleID"


    // $ANTLR start "ruleID"
    // InternalQVTimperative.g:11923:1: ruleID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_SIMPLE_ID_0= RULE_SIMPLE_ID | this_ESCAPED_ID_1= RULE_ESCAPED_ID ) ;
    public final AntlrDatatypeRuleToken ruleID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_SIMPLE_ID_0=null;
        Token this_ESCAPED_ID_1=null;

         enterRule();

        try {
            // InternalQVTimperative.g:11926:28: ( (this_SIMPLE_ID_0= RULE_SIMPLE_ID | this_ESCAPED_ID_1= RULE_ESCAPED_ID ) )
            // InternalQVTimperative.g:11927:1: (this_SIMPLE_ID_0= RULE_SIMPLE_ID | this_ESCAPED_ID_1= RULE_ESCAPED_ID )
            {
            // InternalQVTimperative.g:11927:1: (this_SIMPLE_ID_0= RULE_SIMPLE_ID | this_ESCAPED_ID_1= RULE_ESCAPED_ID )
            int alt254=2;
            int LA254_0 = input.LA(1);

            if ( (LA254_0==RULE_SIMPLE_ID) ) {
                alt254=1;
            }
            else if ( (LA254_0==RULE_ESCAPED_ID) ) {
                alt254=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 254, 0, input);

                throw nvae;
            }
            switch (alt254) {
                case 1 :
                    // InternalQVTimperative.g:11927:6: this_SIMPLE_ID_0= RULE_SIMPLE_ID
                    {
                    this_SIMPLE_ID_0=(Token)match(input,RULE_SIMPLE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_SIMPLE_ID_0);

                    }
                    if ( state.backtracking==0 ) {

                          newLeafNode(this_SIMPLE_ID_0, grammarAccess.getIDAccess().getSIMPLE_IDTerminalRuleCall_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:11935:10: this_ESCAPED_ID_1= RULE_ESCAPED_ID
                    {
                    this_ESCAPED_ID_1=(Token)match(input,RULE_ESCAPED_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ESCAPED_ID_1);

                    }
                    if ( state.backtracking==0 ) {

                          newLeafNode(this_ESCAPED_ID_1, grammarAccess.getIDAccess().getESCAPED_IDTerminalRuleCall_1());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleID"


    // $ANTLR start "entryRuleIdentifier"
    // InternalQVTimperative.g:11950:1: entryRuleIdentifier returns [String current=null] : iv_ruleIdentifier= ruleIdentifier EOF ;
    public final String entryRuleIdentifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIdentifier = null;


        try {
            // InternalQVTimperative.g:11951:2: (iv_ruleIdentifier= ruleIdentifier EOF )
            // InternalQVTimperative.g:11952:2: iv_ruleIdentifier= ruleIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentifierRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIdentifier=ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentifier.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdentifier"


    // $ANTLR start "ruleIdentifier"
    // InternalQVTimperative.g:11959:1: ruleIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_ID_0= ruleID ;
    public final AntlrDatatypeRuleToken ruleIdentifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_ID_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:11962:28: (this_ID_0= ruleID )
            // InternalQVTimperative.g:11964:5: this_ID_0= ruleID
            {
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getIdentifierAccess().getIDParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_ID_0=ruleID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);

            }
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdentifier"


    // $ANTLR start "entryRuleLOWER"
    // InternalQVTimperative.g:11982:1: entryRuleLOWER returns [String current=null] : iv_ruleLOWER= ruleLOWER EOF ;
    public final String entryRuleLOWER() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleLOWER = null;


        try {
            // InternalQVTimperative.g:11983:2: (iv_ruleLOWER= ruleLOWER EOF )
            // InternalQVTimperative.g:11984:2: iv_ruleLOWER= ruleLOWER EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLOWERRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLOWER=ruleLOWER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLOWER.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLOWER"


    // $ANTLR start "ruleLOWER"
    // InternalQVTimperative.g:11991:1: ruleLOWER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_INT_0= RULE_INT ;
    public final AntlrDatatypeRuleToken ruleLOWER() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0=null;

         enterRule();

        try {
            // InternalQVTimperative.g:11994:28: (this_INT_0= RULE_INT )
            // InternalQVTimperative.g:11995:5: this_INT_0= RULE_INT
            {
            this_INT_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_INT_0);

            }
            if ( state.backtracking==0 ) {

                  newLeafNode(this_INT_0, grammarAccess.getLOWERAccess().getINTTerminalRuleCall());

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLOWER"


    // $ANTLR start "entryRuleNUMBER_LITERAL"
    // InternalQVTimperative.g:12010:1: entryRuleNUMBER_LITERAL returns [String current=null] : iv_ruleNUMBER_LITERAL= ruleNUMBER_LITERAL EOF ;
    public final String entryRuleNUMBER_LITERAL() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNUMBER_LITERAL = null;


        try {
            // InternalQVTimperative.g:12011:2: (iv_ruleNUMBER_LITERAL= ruleNUMBER_LITERAL EOF )
            // InternalQVTimperative.g:12012:2: iv_ruleNUMBER_LITERAL= ruleNUMBER_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNUMBER_LITERALRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNUMBER_LITERAL=ruleNUMBER_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNUMBER_LITERAL.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNUMBER_LITERAL"


    // $ANTLR start "ruleNUMBER_LITERAL"
    // InternalQVTimperative.g:12019:1: ruleNUMBER_LITERAL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_INT_0= RULE_INT ;
    public final AntlrDatatypeRuleToken ruleNUMBER_LITERAL() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0=null;

         enterRule();

        try {
            // InternalQVTimperative.g:12022:28: (this_INT_0= RULE_INT )
            // InternalQVTimperative.g:12023:5: this_INT_0= RULE_INT
            {
            this_INT_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_INT_0);

            }
            if ( state.backtracking==0 ) {

                  newLeafNode(this_INT_0, grammarAccess.getNUMBER_LITERALAccess().getINTTerminalRuleCall());

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNUMBER_LITERAL"


    // $ANTLR start "entryRuleStringLiteral"
    // InternalQVTimperative.g:12038:1: entryRuleStringLiteral returns [String current=null] : iv_ruleStringLiteral= ruleStringLiteral EOF ;
    public final String entryRuleStringLiteral() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleStringLiteral = null;


        try {
            // InternalQVTimperative.g:12039:2: (iv_ruleStringLiteral= ruleStringLiteral EOF )
            // InternalQVTimperative.g:12040:2: iv_ruleStringLiteral= ruleStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringLiteralRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStringLiteral=ruleStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringLiteral.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringLiteral"


    // $ANTLR start "ruleStringLiteral"
    // InternalQVTimperative.g:12047:1: ruleStringLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_SINGLE_QUOTED_STRING_0= RULE_SINGLE_QUOTED_STRING ;
    public final AntlrDatatypeRuleToken ruleStringLiteral() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_SINGLE_QUOTED_STRING_0=null;

         enterRule();

        try {
            // InternalQVTimperative.g:12050:28: (this_SINGLE_QUOTED_STRING_0= RULE_SINGLE_QUOTED_STRING )
            // InternalQVTimperative.g:12051:5: this_SINGLE_QUOTED_STRING_0= RULE_SINGLE_QUOTED_STRING
            {
            this_SINGLE_QUOTED_STRING_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_SINGLE_QUOTED_STRING_0);

            }
            if ( state.backtracking==0 ) {

                  newLeafNode(this_SINGLE_QUOTED_STRING_0, grammarAccess.getStringLiteralAccess().getSINGLE_QUOTED_STRINGTerminalRuleCall());

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringLiteral"


    // $ANTLR start "entryRuleUPPER"
    // InternalQVTimperative.g:12066:1: entryRuleUPPER returns [String current=null] : iv_ruleUPPER= ruleUPPER EOF ;
    public final String entryRuleUPPER() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUPPER = null;


        try {
            // InternalQVTimperative.g:12067:2: (iv_ruleUPPER= ruleUPPER EOF )
            // InternalQVTimperative.g:12068:2: iv_ruleUPPER= ruleUPPER EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUPPERRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleUPPER=ruleUPPER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUPPER.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUPPER"


    // $ANTLR start "ruleUPPER"
    // InternalQVTimperative.g:12075:1: ruleUPPER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_INT_0= RULE_INT | kw= '*' ) ;
    public final AntlrDatatypeRuleToken ruleUPPER() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0=null;
        Token kw=null;

         enterRule();

        try {
            // InternalQVTimperative.g:12078:28: ( (this_INT_0= RULE_INT | kw= '*' ) )
            // InternalQVTimperative.g:12079:1: (this_INT_0= RULE_INT | kw= '*' )
            {
            // InternalQVTimperative.g:12079:1: (this_INT_0= RULE_INT | kw= '*' )
            int alt255=2;
            int LA255_0 = input.LA(1);

            if ( (LA255_0==RULE_INT) ) {
                alt255=1;
            }
            else if ( (LA255_0==42) ) {
                alt255=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 255, 0, input);

                throw nvae;
            }
            switch (alt255) {
                case 1 :
                    // InternalQVTimperative.g:12079:6: this_INT_0= RULE_INT
                    {
                    this_INT_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_INT_0);

                    }
                    if ( state.backtracking==0 ) {

                          newLeafNode(this_INT_0, grammarAccess.getUPPERAccess().getINTTerminalRuleCall_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:12088:2: kw= '*'
                    {
                    kw=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getUPPERAccess().getAsteriskKeyword_1());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUPPER"


    // $ANTLR start "entryRuleURI"
    // InternalQVTimperative.g:12101:1: entryRuleURI returns [String current=null] : iv_ruleURI= ruleURI EOF ;
    public final String entryRuleURI() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleURI = null;


        try {
            // InternalQVTimperative.g:12102:2: (iv_ruleURI= ruleURI EOF )
            // InternalQVTimperative.g:12103:2: iv_ruleURI= ruleURI EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getURIRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleURI=ruleURI();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleURI.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleURI"


    // $ANTLR start "ruleURI"
    // InternalQVTimperative.g:12110:1: ruleURI returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_SINGLE_QUOTED_STRING_0= RULE_SINGLE_QUOTED_STRING ;
    public final AntlrDatatypeRuleToken ruleURI() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_SINGLE_QUOTED_STRING_0=null;

         enterRule();

        try {
            // InternalQVTimperative.g:12113:28: (this_SINGLE_QUOTED_STRING_0= RULE_SINGLE_QUOTED_STRING )
            // InternalQVTimperative.g:12114:5: this_SINGLE_QUOTED_STRING_0= RULE_SINGLE_QUOTED_STRING
            {
            this_SINGLE_QUOTED_STRING_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_SINGLE_QUOTED_STRING_0);

            }
            if ( state.backtracking==0 ) {

                  newLeafNode(this_SINGLE_QUOTED_STRING_0, grammarAccess.getURIAccess().getSINGLE_QUOTED_STRINGTerminalRuleCall());

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleURI"

    // $ANTLR start synpred23_InternalQVTimperative
    public final void synpred23_InternalQVTimperative_fragment() throws RecognitionException {
        Token lv_isChecked_1_0=null;

        // InternalQVTimperative.g:977:3: ( ( (lv_isChecked_1_0= 'check' ) ) )
        // InternalQVTimperative.g:977:3: ( (lv_isChecked_1_0= 'check' ) )
        {
        // InternalQVTimperative.g:977:3: ( (lv_isChecked_1_0= 'check' ) )
        // InternalQVTimperative.g:978:1: (lv_isChecked_1_0= 'check' )
        {
        // InternalQVTimperative.g:978:1: (lv_isChecked_1_0= 'check' )
        // InternalQVTimperative.g:979:3: lv_isChecked_1_0= 'check'
        {
        lv_isChecked_1_0=(Token)match(input,29,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred23_InternalQVTimperative

    // $ANTLR start synpred24_InternalQVTimperative
    public final void synpred24_InternalQVTimperative_fragment() throws RecognitionException {
        Token lv_isEnforced_2_0=null;

        // InternalQVTimperative.g:993:6: ( ( (lv_isEnforced_2_0= 'enforce' ) ) )
        // InternalQVTimperative.g:993:6: ( (lv_isEnforced_2_0= 'enforce' ) )
        {
        // InternalQVTimperative.g:993:6: ( (lv_isEnforced_2_0= 'enforce' ) )
        // InternalQVTimperative.g:994:1: (lv_isEnforced_2_0= 'enforce' )
        {
        // InternalQVTimperative.g:994:1: (lv_isEnforced_2_0= 'enforce' )
        // InternalQVTimperative.g:995:3: lv_isEnforced_2_0= 'enforce'
        {
        lv_isEnforced_2_0=(Token)match(input,31,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred24_InternalQVTimperative

    // $ANTLR start synpred43_InternalQVTimperative
    public final void synpred43_InternalQVTimperative_fragment() throws RecognitionException {
        EObject this_DeclareStatementCS_1 = null;


        // InternalQVTimperative.g:1599:2: (this_DeclareStatementCS_1= ruleDeclareStatementCS )
        // InternalQVTimperative.g:1599:2: this_DeclareStatementCS_1= ruleDeclareStatementCS
        {
        if ( state.backtracking==0 ) {

          	  /* */

        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_DeclareStatementCS_1=ruleDeclareStatementCS();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred43_InternalQVTimperative

    // $ANTLR start synpred44_InternalQVTimperative
    public final void synpred44_InternalQVTimperative_fragment() throws RecognitionException {
        EObject this_DeclareStatementCS_2 = null;


        // InternalQVTimperative.g:1612:2: (this_DeclareStatementCS_2= ruleDeclareStatementCS )
        // InternalQVTimperative.g:1612:2: this_DeclareStatementCS_2= ruleDeclareStatementCS
        {
        if ( state.backtracking==0 ) {

          	  /* */

        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_DeclareStatementCS_2=ruleDeclareStatementCS();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred44_InternalQVTimperative

    // $ANTLR start synpred89_InternalQVTimperative
    public final void synpred89_InternalQVTimperative_fragment() throws RecognitionException {
        Token lv_isCheck_0_0=null;

        // InternalQVTimperative.g:3315:1: ( (lv_isCheck_0_0= 'check' ) )
        // InternalQVTimperative.g:3315:1: (lv_isCheck_0_0= 'check' )
        {
        // InternalQVTimperative.g:3315:1: (lv_isCheck_0_0= 'check' )
        // InternalQVTimperative.g:3316:3: lv_isCheck_0_0= 'check'
        {
        lv_isCheck_0_0=(Token)match(input,29,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred89_InternalQVTimperative

    // $ANTLR start synpred120_InternalQVTimperative
    public final void synpred120_InternalQVTimperative_fragment() throws RecognitionException {
        AntlrDatatypeRuleToken this_QVTbaseUnrestrictedName_1 = null;


        // InternalQVTimperative.g:3805:5: (this_QVTbaseUnrestrictedName_1= ruleQVTbaseUnrestrictedName )
        // InternalQVTimperative.g:3805:5: this_QVTbaseUnrestrictedName_1= ruleQVTbaseUnrestrictedName
        {
        if ( state.backtracking==0 ) {

                  newCompositeNode(grammarAccess.getUnrestrictedNameAccess().getQVTbaseUnrestrictedNameParserRuleCall_1());

        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_QVTbaseUnrestrictedName_1=ruleQVTbaseUnrestrictedName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred120_InternalQVTimperative

    // $ANTLR start synpred342_InternalQVTimperative
    public final void synpred342_InternalQVTimperative_fragment() throws RecognitionException {
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedPatternGuard_3_0 = null;


        // InternalQVTimperative.g:9008:4: (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )
        // InternalQVTimperative.g:9008:4: otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}'
        {
        otherlv_2=(Token)match(input,35,FollowSets000.FOLLOW_8); if (state.failed) return ;
        // InternalQVTimperative.g:9012:1: ( (lv_ownedPatternGuard_3_0= ruleExpCS ) )
        // InternalQVTimperative.g:9013:1: (lv_ownedPatternGuard_3_0= ruleExpCS )
        {
        // InternalQVTimperative.g:9013:1: (lv_ownedPatternGuard_3_0= ruleExpCS )
        // InternalQVTimperative.g:9014:3: lv_ownedPatternGuard_3_0= ruleExpCS
        {
        if ( state.backtracking==0 ) {

          	        newCompositeNode(grammarAccess.getTypeNameExpCSAccess().getOwnedPatternGuardExpCSParserRuleCall_1_1_1_0());

        }
        pushFollow(FollowSets000.FOLLOW_60);
        lv_ownedPatternGuard_3_0=ruleExpCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_4=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred342_InternalQVTimperative

    // $ANTLR start synpred343_InternalQVTimperative
    public final void synpred343_InternalQVTimperative_fragment() throws RecognitionException {
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedCurlyBracketedClause_1_0 = null;

        EObject lv_ownedPatternGuard_3_0 = null;


        // InternalQVTimperative.g:8990:3: ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )
        // InternalQVTimperative.g:8990:3: ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )?
        {
        // InternalQVTimperative.g:8990:3: ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) )
        // InternalQVTimperative.g:8991:1: (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS )
        {
        // InternalQVTimperative.g:8991:1: (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS )
        // InternalQVTimperative.g:8992:3: lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS
        {
        if ( state.backtracking==0 ) {

          	        newCompositeNode(grammarAccess.getTypeNameExpCSAccess().getOwnedCurlyBracketedClauseCurlyBracketedClauseCSParserRuleCall_1_0_0());

        }
        pushFollow(FollowSets000.FOLLOW_96);
        lv_ownedCurlyBracketedClause_1_0=ruleCurlyBracketedClauseCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalQVTimperative.g:9008:2: (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )?
        int alt339=2;
        int LA339_0 = input.LA(1);

        if ( (LA339_0==35) ) {
            alt339=1;
        }
        switch (alt339) {
            case 1 :
                // InternalQVTimperative.g:9008:4: otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}'
                {
                otherlv_2=(Token)match(input,35,FollowSets000.FOLLOW_8); if (state.failed) return ;
                // InternalQVTimperative.g:9012:1: ( (lv_ownedPatternGuard_3_0= ruleExpCS ) )
                // InternalQVTimperative.g:9013:1: (lv_ownedPatternGuard_3_0= ruleExpCS )
                {
                // InternalQVTimperative.g:9013:1: (lv_ownedPatternGuard_3_0= ruleExpCS )
                // InternalQVTimperative.g:9014:3: lv_ownedPatternGuard_3_0= ruleExpCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getTypeNameExpCSAccess().getOwnedPatternGuardExpCSParserRuleCall_1_1_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_60);
                lv_ownedPatternGuard_3_0=ruleExpCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                otherlv_4=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }
    }
    // $ANTLR end synpred343_InternalQVTimperative

    // $ANTLR start synpred345_InternalQVTimperative
    public final void synpred345_InternalQVTimperative_fragment() throws RecognitionException {
        EObject this_TypeLiteralCS_1 = null;


        // InternalQVTimperative.g:9069:2: (this_TypeLiteralCS_1= ruleTypeLiteralCS )
        // InternalQVTimperative.g:9069:2: this_TypeLiteralCS_1= ruleTypeLiteralCS
        {
        if ( state.backtracking==0 ) {

          	  /* */

        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_TypeLiteralCS_1=ruleTypeLiteralCS();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred345_InternalQVTimperative

    // $ANTLR start synpred348_InternalQVTimperative
    public final void synpred348_InternalQVTimperative_fragment() throws RecognitionException {
        EObject this_PrefixedPrimaryExpCS_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_ownedRight_3_0 = null;


        // InternalQVTimperative.g:9165:2: ( (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? ) )
        // InternalQVTimperative.g:9165:2: (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? )
        {
        // InternalQVTimperative.g:9165:2: (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? )
        // InternalQVTimperative.g:9166:2: this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )?
        {
        if ( state.backtracking==0 ) {

          	  /* */

        }
        pushFollow(FollowSets000.FOLLOW_130);
        this_PrefixedPrimaryExpCS_0=rulePrefixedPrimaryExpCS();

        state._fsp--;
        if (state.failed) return ;
        // InternalQVTimperative.g:9177:1: ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )?
        int alt340=2;
        int LA340_0 = input.LA(1);

        if ( (LA340_0==42||LA340_0==52||LA340_0==60||LA340_0==102||(LA340_0>=104 && LA340_0<=117)) ) {
            alt340=1;
        }
        switch (alt340) {
            case 1 :
                // InternalQVTimperative.g:9177:2: () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) )
                {
                // InternalQVTimperative.g:9177:2: ()
                // InternalQVTimperative.g:9178:2:
                {
                if ( state.backtracking==0 ) {

                  	  /* */

                }

                }

                // InternalQVTimperative.g:9186:2: ( (lv_name_2_0= ruleBinaryOperatorName ) )
                // InternalQVTimperative.g:9187:1: (lv_name_2_0= ruleBinaryOperatorName )
                {
                // InternalQVTimperative.g:9187:1: (lv_name_2_0= ruleBinaryOperatorName )
                // InternalQVTimperative.g:9188:3: lv_name_2_0= ruleBinaryOperatorName
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getExpCSAccess().getNameBinaryOperatorNameParserRuleCall_0_1_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_8);
                lv_name_2_0=ruleBinaryOperatorName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalQVTimperative.g:9204:2: ( (lv_ownedRight_3_0= ruleExpCS ) )
                // InternalQVTimperative.g:9205:1: (lv_ownedRight_3_0= ruleExpCS )
                {
                // InternalQVTimperative.g:9205:1: (lv_ownedRight_3_0= ruleExpCS )
                // InternalQVTimperative.g:9206:3: lv_ownedRight_3_0= ruleExpCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getExpCSAccess().getOwnedRightExpCSParserRuleCall_0_1_2_0());

                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_ownedRight_3_0=ruleExpCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred348_InternalQVTimperative

    // $ANTLR start synpred355_InternalQVTimperative
    public final void synpred355_InternalQVTimperative_fragment() throws RecognitionException {
        EObject this_TupleLiteralExpCS_4 = null;


        // InternalQVTimperative.g:9467:2: (this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS )
        // InternalQVTimperative.g:9467:2: this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS
        {
        if ( state.backtracking==0 ) {

          	  /* */

        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_TupleLiteralExpCS_4=ruleTupleLiteralExpCS();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred355_InternalQVTimperative

    // $ANTLR start synpred356_InternalQVTimperative
    public final void synpred356_InternalQVTimperative_fragment() throws RecognitionException {
        EObject this_MapLiteralExpCS_5 = null;


        // InternalQVTimperative.g:9480:2: (this_MapLiteralExpCS_5= ruleMapLiteralExpCS )
        // InternalQVTimperative.g:9480:2: this_MapLiteralExpCS_5= ruleMapLiteralExpCS
        {
        if ( state.backtracking==0 ) {

          	  /* */

        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_MapLiteralExpCS_5=ruleMapLiteralExpCS();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred356_InternalQVTimperative

    // $ANTLR start synpred357_InternalQVTimperative
    public final void synpred357_InternalQVTimperative_fragment() throws RecognitionException {
        EObject this_CollectionLiteralExpCS_6 = null;


        // InternalQVTimperative.g:9493:2: (this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS )
        // InternalQVTimperative.g:9493:2: this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS
        {
        if ( state.backtracking==0 ) {

          	  /* */

        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_CollectionLiteralExpCS_6=ruleCollectionLiteralExpCS();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred357_InternalQVTimperative

    // $ANTLR start synpred359_InternalQVTimperative
    public final void synpred359_InternalQVTimperative_fragment() throws RecognitionException {
        EObject this_TypeLiteralExpCS_8 = null;


        // InternalQVTimperative.g:9519:2: (this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS )
        // InternalQVTimperative.g:9519:2: this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS
        {
        if ( state.backtracking==0 ) {

          	  /* */

        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_TypeLiteralExpCS_8=ruleTypeLiteralExpCS();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred359_InternalQVTimperative

    // $ANTLR start synpred372_InternalQVTimperative
    public final void synpred372_InternalQVTimperative_fragment() throws RecognitionException {
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_ownedCoIterator_2_0 = null;

        EObject lv_ownedInitExpression_4_0 = null;


        // InternalQVTimperative.g:9948:3: ( (otherlv_1= '<-' ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? ) )
        // InternalQVTimperative.g:9948:3: (otherlv_1= '<-' ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? )
        {
        // InternalQVTimperative.g:9948:3: (otherlv_1= '<-' ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? )
        // InternalQVTimperative.g:9948:5: otherlv_1= '<-' ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )?
        {
        otherlv_1=(Token)match(input,135,FollowSets000.FOLLOW_5); if (state.failed) return ;
        // InternalQVTimperative.g:9952:1: ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) )
        // InternalQVTimperative.g:9953:1: (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS )
        {
        // InternalQVTimperative.g:9953:1: (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS )
        // InternalQVTimperative.g:9954:3: lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS
        {
        if ( state.backtracking==0 ) {

          	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_0_1_0_1_0());

        }
        pushFollow(FollowSets000.FOLLOW_141);
        lv_ownedCoIterator_2_0=ruleCoIteratorVariableCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalQVTimperative.g:9970:2: (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )?
        int alt345=2;
        int LA345_0 = input.LA(1);

        if ( (LA345_0==52) ) {
            alt345=1;
        }
        switch (alt345) {
            case 1 :
                // InternalQVTimperative.g:9970:4: otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) )
                {
                otherlv_3=(Token)match(input,52,FollowSets000.FOLLOW_8); if (state.failed) return ;
                // InternalQVTimperative.g:9974:1: ( (lv_ownedInitExpression_4_0= ruleExpCS ) )
                // InternalQVTimperative.g:9975:1: (lv_ownedInitExpression_4_0= ruleExpCS )
                {
                // InternalQVTimperative.g:9975:1: (lv_ownedInitExpression_4_0= ruleExpCS )
                // InternalQVTimperative.g:9976:3: lv_ownedInitExpression_4_0= ruleExpCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_1_0_2_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_ownedInitExpression_4_0=ruleExpCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred372_InternalQVTimperative

    // $ANTLR start synpred375_InternalQVTimperative
    public final void synpred375_InternalQVTimperative_fragment() throws RecognitionException {
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_ownedType_6_0 = null;

        EObject lv_ownedCoIterator_8_0 = null;

        EObject lv_ownedInitExpression_10_0 = null;


        // InternalQVTimperative.g:9993:6: ( (otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypeExpCS ) ) (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )? (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )? ) )
        // InternalQVTimperative.g:9993:6: (otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypeExpCS ) ) (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )? (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )? )
        {
        // InternalQVTimperative.g:9993:6: (otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypeExpCS ) ) (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )? (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )? )
        // InternalQVTimperative.g:9993:8: otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypeExpCS ) ) (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )? (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )?
        {
        otherlv_5=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return ;
        // InternalQVTimperative.g:9997:1: ( (lv_ownedType_6_0= ruleTypeExpCS ) )
        // InternalQVTimperative.g:9998:1: (lv_ownedType_6_0= ruleTypeExpCS )
        {
        // InternalQVTimperative.g:9998:1: (lv_ownedType_6_0= ruleTypeExpCS )
        // InternalQVTimperative.g:9999:3: lv_ownedType_6_0= ruleTypeExpCS
        {
        if ( state.backtracking==0 ) {

          	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_0_1_1_1_0());

        }
        pushFollow(FollowSets000.FOLLOW_142);
        lv_ownedType_6_0=ruleTypeExpCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalQVTimperative.g:10015:2: (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )?
        int alt346=2;
        int LA346_0 = input.LA(1);

        if ( (LA346_0==135) ) {
            alt346=1;
        }
        switch (alt346) {
            case 1 :
                // InternalQVTimperative.g:10015:4: otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) )
                {
                otherlv_7=(Token)match(input,135,FollowSets000.FOLLOW_5); if (state.failed) return ;
                // InternalQVTimperative.g:10019:1: ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) )
                // InternalQVTimperative.g:10020:1: (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS )
                {
                // InternalQVTimperative.g:10020:1: (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS )
                // InternalQVTimperative.g:10021:3: lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_0_1_1_2_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_141);
                lv_ownedCoIterator_8_0=ruleCoIteratorVariableCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalQVTimperative.g:10037:4: (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )?
        int alt347=2;
        int LA347_0 = input.LA(1);

        if ( (LA347_0==52) ) {
            alt347=1;
        }
        switch (alt347) {
            case 1 :
                // InternalQVTimperative.g:10037:6: otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) )
                {
                otherlv_9=(Token)match(input,52,FollowSets000.FOLLOW_8); if (state.failed) return ;
                // InternalQVTimperative.g:10041:1: ( (lv_ownedInitExpression_10_0= ruleExpCS ) )
                // InternalQVTimperative.g:10042:1: (lv_ownedInitExpression_10_0= ruleExpCS )
                {
                // InternalQVTimperative.g:10042:1: (lv_ownedInitExpression_10_0= ruleExpCS )
                // InternalQVTimperative.g:10043:3: lv_ownedInitExpression_10_0= ruleExpCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_1_1_3_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_ownedInitExpression_10_0=ruleExpCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred375_InternalQVTimperative

    // $ANTLR start synpred378_InternalQVTimperative
    public final void synpred378_InternalQVTimperative_fragment() throws RecognitionException {
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        EObject lv_ownedType_12_0 = null;

        EObject lv_ownedCoIterator_14_0 = null;

        EObject lv_ownedInitExpression_16_0 = null;


        // InternalQVTimperative.g:10060:6: ( ( (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )? (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )? otherlv_15= 'in' ( (lv_ownedInitExpression_16_0= ruleExpCS ) ) ) )
        // InternalQVTimperative.g:10060:6: ( (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )? (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )? otherlv_15= 'in' ( (lv_ownedInitExpression_16_0= ruleExpCS ) ) )
        {
        // InternalQVTimperative.g:10060:6: ( (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )? (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )? otherlv_15= 'in' ( (lv_ownedInitExpression_16_0= ruleExpCS ) ) )
        // InternalQVTimperative.g:10060:7: (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )? (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )? otherlv_15= 'in' ( (lv_ownedInitExpression_16_0= ruleExpCS ) )
        {
        // InternalQVTimperative.g:10060:7: (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )?
        int alt348=2;
        int LA348_0 = input.LA(1);

        if ( (LA348_0==24) ) {
            alt348=1;
        }
        switch (alt348) {
            case 1 :
                // InternalQVTimperative.g:10060:9: otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) )
                {
                otherlv_11=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return ;
                // InternalQVTimperative.g:10064:1: ( (lv_ownedType_12_0= ruleTypeExpCS ) )
                // InternalQVTimperative.g:10065:1: (lv_ownedType_12_0= ruleTypeExpCS )
                {
                // InternalQVTimperative.g:10065:1: (lv_ownedType_12_0= ruleTypeExpCS )
                // InternalQVTimperative.g:10066:3: lv_ownedType_12_0= ruleTypeExpCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_0_1_2_0_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_143);
                lv_ownedType_12_0=ruleTypeExpCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalQVTimperative.g:10082:4: (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )?
        int alt349=2;
        int LA349_0 = input.LA(1);

        if ( (LA349_0==135) ) {
            alt349=1;
        }
        switch (alt349) {
            case 1 :
                // InternalQVTimperative.g:10082:6: otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) )
                {
                otherlv_13=(Token)match(input,135,FollowSets000.FOLLOW_5); if (state.failed) return ;
                // InternalQVTimperative.g:10086:1: ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) )
                // InternalQVTimperative.g:10087:1: (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS )
                {
                // InternalQVTimperative.g:10087:1: (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS )
                // InternalQVTimperative.g:10088:3: lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_0_1_2_1_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_46);
                lv_ownedCoIterator_14_0=ruleCoIteratorVariableCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        otherlv_15=(Token)match(input,34,FollowSets000.FOLLOW_8); if (state.failed) return ;
        // InternalQVTimperative.g:10108:1: ( (lv_ownedInitExpression_16_0= ruleExpCS ) )
        // InternalQVTimperative.g:10109:1: (lv_ownedInitExpression_16_0= ruleExpCS )
        {
        // InternalQVTimperative.g:10109:1: (lv_ownedInitExpression_16_0= ruleExpCS )
        // InternalQVTimperative.g:10110:3: lv_ownedInitExpression_16_0= ruleExpCS
        {
        if ( state.backtracking==0 ) {

          	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_1_2_3_0());

        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_ownedInitExpression_16_0=ruleExpCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred378_InternalQVTimperative

    // $ANTLR start synpred383_InternalQVTimperative
    public final void synpred383_InternalQVTimperative_fragment() throws RecognitionException {
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedCoIterator_3_0 = null;

        EObject lv_ownedInitExpression_5_0 = null;


        // InternalQVTimperative.g:10301:3: ( (otherlv_2= '<-' ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) )
        // InternalQVTimperative.g:10301:3: (otherlv_2= '<-' ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )
        {
        // InternalQVTimperative.g:10301:3: (otherlv_2= '<-' ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )
        // InternalQVTimperative.g:10301:5: otherlv_2= '<-' ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
        {
        otherlv_2=(Token)match(input,135,FollowSets000.FOLLOW_5); if (state.failed) return ;
        // InternalQVTimperative.g:10305:1: ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) )
        // InternalQVTimperative.g:10306:1: (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS )
        {
        // InternalQVTimperative.g:10306:1: (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS )
        // InternalQVTimperative.g:10307:3: lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS
        {
        if ( state.backtracking==0 ) {

          	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_2_0_1_0());

        }
        pushFollow(FollowSets000.FOLLOW_141);
        lv_ownedCoIterator_3_0=ruleCoIteratorVariableCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalQVTimperative.g:10323:2: (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
        int alt357=2;
        int LA357_0 = input.LA(1);

        if ( (LA357_0==52) ) {
            alt357=1;
        }
        switch (alt357) {
            case 1 :
                // InternalQVTimperative.g:10323:4: otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                {
                otherlv_4=(Token)match(input,52,FollowSets000.FOLLOW_8); if (state.failed) return ;
                // InternalQVTimperative.g:10327:1: ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                // InternalQVTimperative.g:10328:1: (lv_ownedInitExpression_5_0= ruleExpCS )
                {
                // InternalQVTimperative.g:10328:1: (lv_ownedInitExpression_5_0= ruleExpCS )
                // InternalQVTimperative.g:10329:3: lv_ownedInitExpression_5_0= ruleExpCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_0_2_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_ownedInitExpression_5_0=ruleExpCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred383_InternalQVTimperative

    // $ANTLR start synpred386_InternalQVTimperative
    public final void synpred386_InternalQVTimperative_fragment() throws RecognitionException {
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        EObject lv_ownedType_7_0 = null;

        EObject lv_ownedCoIterator_9_0 = null;

        EObject lv_ownedInitExpression_11_0 = null;


        // InternalQVTimperative.g:10346:6: ( (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) (otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) ) )? (otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) ) )? ) )
        // InternalQVTimperative.g:10346:6: (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) (otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) ) )? (otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) ) )? )
        {
        // InternalQVTimperative.g:10346:6: (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) (otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) ) )? (otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) ) )? )
        // InternalQVTimperative.g:10346:8: otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) (otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) ) )? (otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) ) )?
        {
        otherlv_6=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return ;
        // InternalQVTimperative.g:10350:1: ( (lv_ownedType_7_0= ruleTypeExpCS ) )
        // InternalQVTimperative.g:10351:1: (lv_ownedType_7_0= ruleTypeExpCS )
        {
        // InternalQVTimperative.g:10351:1: (lv_ownedType_7_0= ruleTypeExpCS )
        // InternalQVTimperative.g:10352:3: lv_ownedType_7_0= ruleTypeExpCS
        {
        if ( state.backtracking==0 ) {

          	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_1_1_0());

        }
        pushFollow(FollowSets000.FOLLOW_142);
        lv_ownedType_7_0=ruleTypeExpCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalQVTimperative.g:10368:2: (otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) ) )?
        int alt358=2;
        int LA358_0 = input.LA(1);

        if ( (LA358_0==135) ) {
            alt358=1;
        }
        switch (alt358) {
            case 1 :
                // InternalQVTimperative.g:10368:4: otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) )
                {
                otherlv_8=(Token)match(input,135,FollowSets000.FOLLOW_5); if (state.failed) return ;
                // InternalQVTimperative.g:10372:1: ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) )
                // InternalQVTimperative.g:10373:1: (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS )
                {
                // InternalQVTimperative.g:10373:1: (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS )
                // InternalQVTimperative.g:10374:3: lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_2_1_2_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_141);
                lv_ownedCoIterator_9_0=ruleCoIteratorVariableCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalQVTimperative.g:10390:4: (otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) ) )?
        int alt359=2;
        int LA359_0 = input.LA(1);

        if ( (LA359_0==52) ) {
            alt359=1;
        }
        switch (alt359) {
            case 1 :
                // InternalQVTimperative.g:10390:6: otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) )
                {
                otherlv_10=(Token)match(input,52,FollowSets000.FOLLOW_8); if (state.failed) return ;
                // InternalQVTimperative.g:10394:1: ( (lv_ownedInitExpression_11_0= ruleExpCS ) )
                // InternalQVTimperative.g:10395:1: (lv_ownedInitExpression_11_0= ruleExpCS )
                {
                // InternalQVTimperative.g:10395:1: (lv_ownedInitExpression_11_0= ruleExpCS )
                // InternalQVTimperative.g:10396:3: lv_ownedInitExpression_11_0= ruleExpCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_1_3_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_ownedInitExpression_11_0=ruleExpCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred386_InternalQVTimperative

    // $ANTLR start synpred389_InternalQVTimperative
    public final void synpred389_InternalQVTimperative_fragment() throws RecognitionException {
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        EObject lv_ownedType_13_0 = null;

        EObject lv_ownedCoIterator_15_0 = null;

        EObject lv_ownedInitExpression_17_0 = null;


        // InternalQVTimperative.g:10413:6: ( ( (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) ) )? (otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) ) )? otherlv_16= 'in' ( (lv_ownedInitExpression_17_0= ruleExpCS ) ) ) )
        // InternalQVTimperative.g:10413:6: ( (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) ) )? (otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) ) )? otherlv_16= 'in' ( (lv_ownedInitExpression_17_0= ruleExpCS ) ) )
        {
        // InternalQVTimperative.g:10413:6: ( (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) ) )? (otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) ) )? otherlv_16= 'in' ( (lv_ownedInitExpression_17_0= ruleExpCS ) ) )
        // InternalQVTimperative.g:10413:7: (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) ) )? (otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) ) )? otherlv_16= 'in' ( (lv_ownedInitExpression_17_0= ruleExpCS ) )
        {
        // InternalQVTimperative.g:10413:7: (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) ) )?
        int alt360=2;
        int LA360_0 = input.LA(1);

        if ( (LA360_0==24) ) {
            alt360=1;
        }
        switch (alt360) {
            case 1 :
                // InternalQVTimperative.g:10413:9: otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) )
                {
                otherlv_12=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return ;
                // InternalQVTimperative.g:10417:1: ( (lv_ownedType_13_0= ruleTypeExpCS ) )
                // InternalQVTimperative.g:10418:1: (lv_ownedType_13_0= ruleTypeExpCS )
                {
                // InternalQVTimperative.g:10418:1: (lv_ownedType_13_0= ruleTypeExpCS )
                // InternalQVTimperative.g:10419:3: lv_ownedType_13_0= ruleTypeExpCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_2_0_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_143);
                lv_ownedType_13_0=ruleTypeExpCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalQVTimperative.g:10435:4: (otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) ) )?
        int alt361=2;
        int LA361_0 = input.LA(1);

        if ( (LA361_0==135) ) {
            alt361=1;
        }
        switch (alt361) {
            case 1 :
                // InternalQVTimperative.g:10435:6: otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) )
                {
                otherlv_14=(Token)match(input,135,FollowSets000.FOLLOW_5); if (state.failed) return ;
                // InternalQVTimperative.g:10439:1: ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) )
                // InternalQVTimperative.g:10440:1: (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS )
                {
                // InternalQVTimperative.g:10440:1: (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS )
                // InternalQVTimperative.g:10441:3: lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedCoIteratorCoIteratorVariableCSParserRuleCall_2_2_1_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_46);
                lv_ownedCoIterator_15_0=ruleCoIteratorVariableCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        otherlv_16=(Token)match(input,34,FollowSets000.FOLLOW_8); if (state.failed) return ;
        // InternalQVTimperative.g:10461:1: ( (lv_ownedInitExpression_17_0= ruleExpCS ) )
        // InternalQVTimperative.g:10462:1: (lv_ownedInitExpression_17_0= ruleExpCS )
        {
        // InternalQVTimperative.g:10462:1: (lv_ownedInitExpression_17_0= ruleExpCS )
        // InternalQVTimperative.g:10463:3: lv_ownedInitExpression_17_0= ruleExpCS
        {
        if ( state.backtracking==0 ) {

          	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_2_3_0());

        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_ownedInitExpression_17_0=ruleExpCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred389_InternalQVTimperative

    // Delegated rules

    public final boolean synpred23_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred348_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred348_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred372_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred372_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred378_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred378_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred389_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred389_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred356_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred356_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred386_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred386_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred120_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred120_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred383_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred383_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred357_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred357_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred24_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred359_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred359_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred89_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred89_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred343_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred343_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred342_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred342_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred345_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred345_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred355_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred355_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred375_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred375_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA11 dfa11 = new DFA11(this);
    protected DFA14 dfa14 = new DFA14(this);
    protected DFA32 dfa32 = new DFA32(this);
    protected DFA33 dfa33 = new DFA33(this);
    protected DFA46 dfa46 = new DFA46(this);
    protected DFA47 dfa47 = new DFA47(this);
    protected DFA55 dfa55 = new DFA55(this);
    protected DFA61 dfa61 = new DFA61(this);
    protected DFA71 dfa71 = new DFA71(this);
    protected DFA76 dfa76 = new DFA76(this);
    protected DFA77 dfa77 = new DFA77(this);
    protected DFA184 dfa184 = new DFA184(this);
    protected DFA187 dfa187 = new DFA187(this);
    protected DFA200 dfa200 = new DFA200(this);
    protected DFA199 dfa199 = new DFA199(this);
    protected DFA201 dfa201 = new DFA201(this);
    protected DFA204 dfa204 = new DFA204(this);
    protected DFA207 dfa207 = new DFA207(this);
    protected DFA210 dfa210 = new DFA210(this);
    protected DFA223 dfa223 = new DFA223(this);
    protected DFA232 dfa232 = new DFA232(this);
    protected DFA236 dfa236 = new DFA236(this);
    static final String dfa_1s = "\u0109\uffff";
    static final String dfa_2s = "\1\21\1\7\2\uffff\71\22\2\7\u0081\22\1\7\110\22";
    static final String dfa_3s = "\1\73\1\145\2\uffff\71\73\1\u0084\1\145\u0081\73\1\u0084\110\73";
    static final String dfa_4s = "\2\uffff\1\1\1\2\u0105\uffff";
    static final String dfa_5s = "\u0109\uffff}>";
    static final String[] dfa_6s = {
            "\1\1\37\uffff\2\2\7\uffff\2\3",
            "\1\4\1\5\10\uffff\1\64\1\uffff\1\42\2\uffff\1\44\1\43\1\uffff\1\70\1\45\2\uffff\1\47\1\74\1\51\1\55\1\52\5\uffff\1\71\3\uffff\1\60\1\61\1\46\1\56\1\57\1\53\1\50\1\62\1\65\1\uffff\1\36\1\66\2\uffff\1\54\1\63\1\67\1\uffff\1\73\1\72\1\34\1\14\1\7\1\15\1\uffff\1\21\1\uffff\1\26\1\uffff\1\31\2\uffff\1\37\1\uffff\1\40\1\uffff\1\41\1\uffff\1\22\1\16\1\27\1\13\1\33\1\uffff\1\17\1\24\1\25\1\35\1\10\1\30\1\uffff\1\12\1\uffff\1\32\1\uffff\1\6\1\11\1\20\1\23",
            "",
            "",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\77\1\100\10\uffff\1\157\1\uffff\1\135\2\uffff\1\137\1\136\1\uffff\1\163\1\140\2\uffff\1\142\1\167\1\144\1\150\1\145\5\uffff\1\164\3\uffff\1\153\1\154\1\141\1\151\1\152\1\146\1\143\1\155\1\160\1\uffff\1\131\1\161\2\uffff\1\147\1\156\1\162\1\uffff\1\166\1\165\1\127\1\107\1\102\1\110\1\uffff\1\114\1\uffff\1\121\1\uffff\1\124\2\uffff\1\132\1\uffff\1\133\1\uffff\1\134\1\uffff\1\115\1\111\1\122\1\106\1\126\1\uffff\1\112\1\117\1\120\1\130\1\103\1\123\1\uffff\1\105\1\uffff\1\125\1\uffff\1\101\1\104\1\113\1\116\20\uffff\1\u0085\1\u0086\1\175\1\176\1\177\1\u0080\1\u0081\1\u0082\1\u0083\1\u0084\1\170\1\171\1\172\1\173\1\174",
            "\1\u0087\1\u0088\10\uffff\1\u00b7\1\uffff\1\u00a5\2\uffff\1\u00a7\1\u00a6\1\uffff\1\u00bb\1\u00a8\2\uffff\1\u00aa\1\u00bf\1\u00ac\1\u00b0\1\u00ad\5\uffff\1\u00bc\3\uffff\1\u00b3\1\u00b4\1\u00a9\1\u00b1\1\u00b2\1\u00ae\1\u00ab\1\u00b5\1\u00b8\1\uffff\1\u00a1\1\u00b9\2\uffff\1\u00af\1\u00b6\1\u00ba\1\uffff\1\u00be\1\u00bd\1\u009f\1\u008f\1\u008a\1\u0090\1\uffff\1\u0094\1\uffff\1\u0099\1\uffff\1\u009c\2\uffff\1\u00a2\1\uffff\1\u00a3\1\uffff\1\u00a4\1\uffff\1\u0095\1\u0091\1\u009a\1\u008e\1\u009e\1\uffff\1\u0092\1\u0097\1\u0098\1\u00a0\1\u008b\1\u009b\1\uffff\1\u008d\1\uffff\1\u009d\1\uffff\1\u0089\1\u008c\1\u0093\1\u0096",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\75\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\u00c1\1\u00c2\10\uffff\1\u00f1\1\uffff\1\u00df\2\uffff\1\u00e1\1\u00e0\1\uffff\1\u00f5\1\u00e2\2\uffff\1\u00e4\1\u00f9\1\u00e6\1\u00ea\1\u00e7\5\uffff\1\u00f6\3\uffff\1\u00ed\1\u00ee\1\u00e3\1\u00eb\1\u00ec\1\u00e8\1\u00e5\1\u00ef\1\u00f2\1\uffff\1\u00db\1\u00f3\2\uffff\1\u00e9\1\u00f0\1\u00f4\1\uffff\1\u00f8\1\u00f7\1\u00d9\1\u00c9\1\u00c4\1\u00ca\1\uffff\1\u00ce\1\uffff\1\u00d3\1\uffff\1\u00d6\2\uffff\1\u00dc\1\uffff\1\u00dd\1\uffff\1\u00de\1\uffff\1\u00cf\1\u00cb\1\u00d4\1\u00c8\1\u00d8\1\uffff\1\u00cc\1\u00d1\1\u00d2\1\u00da\1\u00c5\1\u00d5\1\uffff\1\u00c7\1\uffff\1\u00d7\1\uffff\1\u00c3\1\u00c6\1\u00cd\1\u00d0\20\uffff\1\u0107\1\u0108\1\u00ff\1\u0100\1\u0101\1\u0102\1\u0103\1\u0104\1\u0105\1\u0106\1\u00fa\1\u00fb\1\u00fc\1\u00fd\1\u00fe",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3",
            "\1\76\26\uffff\1\u00c0\7\uffff\2\2\7\uffff\2\3"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA11 extends DFA {

        public DFA11(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 11;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "622:1: (this_NewStatementCS_0= ruleNewStatementCS | this_SetStatementCS_1= ruleSetStatementCS )";
        }
    }
    static final String dfa_7s = "\u010a\uffff";
    static final String dfa_8s = "\1\21\1\7\3\uffff\71\22\2\7\u0081\22\1\7\110\22";
    static final String dfa_9s = "\1\60\1\145\3\uffff\71\60\1\u0084\1\145\u0081\60\1\u0084\110\60";
    static final String dfa_10s = "\2\uffff\1\1\1\2\1\3\u0105\uffff";
    static final String dfa_11s = "\u010a\uffff}>";
    static final String[] dfa_12s = {
            "\1\1\1\uffff\1\2\31\uffff\3\3\1\4",
            "\1\5\1\6\10\uffff\1\65\1\uffff\1\43\2\uffff\1\45\1\44\1\uffff\1\71\1\46\2\uffff\1\50\1\75\1\52\1\56\1\53\5\uffff\1\72\3\uffff\1\61\1\62\1\47\1\57\1\60\1\54\1\51\1\63\1\66\1\uffff\1\37\1\67\2\uffff\1\55\1\64\1\70\1\uffff\1\74\1\73\1\35\1\15\1\10\1\16\1\uffff\1\22\1\uffff\1\27\1\uffff\1\32\2\uffff\1\40\1\uffff\1\41\1\uffff\1\42\1\uffff\1\23\1\17\1\30\1\14\1\34\1\uffff\1\20\1\25\1\26\1\36\1\11\1\31\1\uffff\1\13\1\uffff\1\33\1\uffff\1\7\1\12\1\21\1\24",
            "",
            "",
            "",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\100\1\101\10\uffff\1\160\1\uffff\1\136\2\uffff\1\140\1\137\1\uffff\1\164\1\141\2\uffff\1\143\1\170\1\145\1\151\1\146\5\uffff\1\165\3\uffff\1\154\1\155\1\142\1\152\1\153\1\147\1\144\1\156\1\161\1\uffff\1\132\1\162\2\uffff\1\150\1\157\1\163\1\uffff\1\167\1\166\1\130\1\110\1\103\1\111\1\uffff\1\115\1\uffff\1\122\1\uffff\1\125\2\uffff\1\133\1\uffff\1\134\1\uffff\1\135\1\uffff\1\116\1\112\1\123\1\107\1\127\1\uffff\1\113\1\120\1\121\1\131\1\104\1\124\1\uffff\1\106\1\uffff\1\126\1\uffff\1\102\1\105\1\114\1\117\20\uffff\1\u0086\1\u0087\1\176\1\177\1\u0080\1\u0081\1\u0082\1\u0083\1\u0084\1\u0085\1\171\1\172\1\173\1\174\1\175",
            "\1\u0088\1\u0089\10\uffff\1\u00b8\1\uffff\1\u00a6\2\uffff\1\u00a8\1\u00a7\1\uffff\1\u00bc\1\u00a9\2\uffff\1\u00ab\1\u00c0\1\u00ad\1\u00b1\1\u00ae\5\uffff\1\u00bd\3\uffff\1\u00b4\1\u00b5\1\u00aa\1\u00b2\1\u00b3\1\u00af\1\u00ac\1\u00b6\1\u00b9\1\uffff\1\u00a2\1\u00ba\2\uffff\1\u00b0\1\u00b7\1\u00bb\1\uffff\1\u00bf\1\u00be\1\u00a0\1\u0090\1\u008b\1\u0091\1\uffff\1\u0095\1\uffff\1\u009a\1\uffff\1\u009d\2\uffff\1\u00a3\1\uffff\1\u00a4\1\uffff\1\u00a5\1\uffff\1\u0096\1\u0092\1\u009b\1\u008f\1\u009f\1\uffff\1\u0093\1\u0098\1\u0099\1\u00a1\1\u008c\1\u009c\1\uffff\1\u008e\1\uffff\1\u009e\1\uffff\1\u008a\1\u008d\1\u0094\1\u0097",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\76\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\u00c2\1\u00c3\10\uffff\1\u00f2\1\uffff\1\u00e0\2\uffff\1\u00e2\1\u00e1\1\uffff\1\u00f6\1\u00e3\2\uffff\1\u00e5\1\u00fa\1\u00e7\1\u00eb\1\u00e8\5\uffff\1\u00f7\3\uffff\1\u00ee\1\u00ef\1\u00e4\1\u00ec\1\u00ed\1\u00e9\1\u00e6\1\u00f0\1\u00f3\1\uffff\1\u00dc\1\u00f4\2\uffff\1\u00ea\1\u00f1\1\u00f5\1\uffff\1\u00f9\1\u00f8\1\u00da\1\u00ca\1\u00c5\1\u00cb\1\uffff\1\u00cf\1\uffff\1\u00d4\1\uffff\1\u00d7\2\uffff\1\u00dd\1\uffff\1\u00de\1\uffff\1\u00df\1\uffff\1\u00d0\1\u00cc\1\u00d5\1\u00c9\1\u00d9\1\uffff\1\u00cd\1\u00d2\1\u00d3\1\u00db\1\u00c6\1\u00d6\1\uffff\1\u00c8\1\uffff\1\u00d8\1\uffff\1\u00c4\1\u00c7\1\u00ce\1\u00d1\20\uffff\1\u0108\1\u0109\1\u0100\1\u0101\1\u0102\1\u0103\1\u0104\1\u0105\1\u0106\1\u0107\1\u00fb\1\u00fc\1\u00fd\1\u00fe\1\u00ff",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4",
            "\1\77\1\2\25\uffff\1\u00c1\6\uffff\1\4"
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA14 extends DFA {

        public DFA14(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 14;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "759:1: (this_AddStatementCS_0= ruleAddStatementCS | this_MappingCallCS_1= ruleMappingCallCS | this_MappingLoopCS_2= ruleMappingLoopCS )";
        }
    }
    static final String dfa_13s = "\2\uffff\1\2\1\1\u0105\uffff";
    static final String[] dfa_14s = {
            "\1\1\1\uffff\1\2\5\uffff\2\3\2\uffff\2\3\5\uffff\1\2\10\uffff\6\2\7\uffff\2\2",
            "\1\4\1\5\10\uffff\1\64\1\uffff\1\42\2\uffff\1\44\1\43\1\uffff\1\70\1\45\2\uffff\1\47\1\74\1\51\1\55\1\52\5\uffff\1\71\3\uffff\1\60\1\61\1\46\1\56\1\57\1\53\1\50\1\62\1\65\1\uffff\1\36\1\66\2\uffff\1\54\1\63\1\67\1\uffff\1\73\1\72\1\34\1\14\1\7\1\15\1\uffff\1\21\1\uffff\1\26\1\uffff\1\31\2\uffff\1\37\1\uffff\1\40\1\uffff\1\41\1\uffff\1\22\1\16\1\27\1\13\1\33\1\uffff\1\17\1\24\1\25\1\35\1\10\1\30\1\uffff\1\12\1\uffff\1\32\1\uffff\1\6\1\11\1\20\1\23",
            "",
            "",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\77\1\100\10\uffff\1\157\1\uffff\1\135\2\uffff\1\137\1\136\1\uffff\1\163\1\140\2\uffff\1\142\1\167\1\144\1\150\1\145\5\uffff\1\164\3\uffff\1\153\1\154\1\141\1\151\1\152\1\146\1\143\1\155\1\160\1\uffff\1\131\1\161\2\uffff\1\147\1\156\1\162\1\uffff\1\166\1\165\1\127\1\107\1\102\1\110\1\uffff\1\114\1\uffff\1\121\1\uffff\1\124\2\uffff\1\132\1\uffff\1\133\1\uffff\1\134\1\uffff\1\115\1\111\1\122\1\106\1\126\1\uffff\1\112\1\117\1\120\1\130\1\103\1\123\1\uffff\1\105\1\uffff\1\125\1\uffff\1\101\1\104\1\113\1\116\20\uffff\1\u0085\1\u0086\1\175\1\176\1\177\1\u0080\1\u0081\1\u0082\1\u0083\1\u0084\1\170\1\171\1\172\1\173\1\174",
            "\1\u0087\1\u0088\10\uffff\1\u00b7\1\uffff\1\u00a5\2\uffff\1\u00a7\1\u00a6\1\uffff\1\u00bb\1\u00a8\2\uffff\1\u00aa\1\u00bf\1\u00ac\1\u00b0\1\u00ad\5\uffff\1\u00bc\3\uffff\1\u00b3\1\u00b4\1\u00a9\1\u00b1\1\u00b2\1\u00ae\1\u00ab\1\u00b5\1\u00b8\1\uffff\1\u00a1\1\u00b9\2\uffff\1\u00af\1\u00b6\1\u00ba\1\uffff\1\u00be\1\u00bd\1\u009f\1\u008f\1\u008a\1\u0090\1\uffff\1\u0094\1\uffff\1\u0099\1\uffff\1\u009c\2\uffff\1\u00a2\1\uffff\1\u00a3\1\uffff\1\u00a4\1\uffff\1\u0095\1\u0091\1\u009a\1\u008e\1\u009e\1\uffff\1\u0092\1\u0097\1\u0098\1\u00a0\1\u008b\1\u009b\1\uffff\1\u008d\1\uffff\1\u009d\1\uffff\1\u0089\1\u008c\1\u0093\1\u0096",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\75\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\u00c1\1\u00c2\10\uffff\1\u00f1\1\uffff\1\u00df\2\uffff\1\u00e1\1\u00e0\1\uffff\1\u00f5\1\u00e2\2\uffff\1\u00e4\1\u00f9\1\u00e6\1\u00ea\1\u00e7\5\uffff\1\u00f6\3\uffff\1\u00ed\1\u00ee\1\u00e3\1\u00eb\1\u00ec\1\u00e8\1\u00e5\1\u00ef\1\u00f2\1\uffff\1\u00db\1\u00f3\2\uffff\1\u00e9\1\u00f0\1\u00f4\1\uffff\1\u00f8\1\u00f7\1\u00d9\1\u00c9\1\u00c4\1\u00ca\1\uffff\1\u00ce\1\uffff\1\u00d3\1\uffff\1\u00d6\2\uffff\1\u00dc\1\uffff\1\u00dd\1\uffff\1\u00de\1\uffff\1\u00cf\1\u00cb\1\u00d4\1\u00c8\1\u00d8\1\uffff\1\u00cc\1\u00d1\1\u00d2\1\u00da\1\u00c5\1\u00d5\1\uffff\1\u00c7\1\uffff\1\u00d7\1\uffff\1\u00c3\1\u00c6\1\u00cd\1\u00d0\20\uffff\1\u0107\1\u0108\1\u00ff\1\u0100\1\u0101\1\u0102\1\u0103\1\u0104\1\u0105\1\u0106\1\u00fa\1\u00fb\1\u00fc\1\u00fd\1\u00fe",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2",
            "\1\76\1\2\11\uffff\2\3\12\uffff\1\u00c0\6\uffff\3\2\7\uffff\2\2"
    };
    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[][] dfa_14 = unpackEncodedStringArray(dfa_14s);

    class DFA32 extends DFA {

        public DFA32(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 32;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_13;
            this.special = dfa_5;
            this.transition = dfa_14;
        }
        public String getDescription() {
            return "()* loopback of 1313:3: ( (lv_ownedStatements_20_0= ruleGuardStatementCS ) )*";
        }
    }
    static final String[] dfa_15s = {
            "\1\1\1\uffff\1\2\20\uffff\1\2\10\uffff\4\2\2\3\7\uffff\2\3",
            "\1\4\1\5\10\uffff\1\64\1\uffff\1\42\2\uffff\1\44\1\43\1\uffff\1\70\1\45\2\uffff\1\47\1\74\1\51\1\55\1\52\5\uffff\1\71\3\uffff\1\60\1\61\1\46\1\56\1\57\1\53\1\50\1\62\1\65\1\uffff\1\36\1\66\2\uffff\1\54\1\63\1\67\1\uffff\1\73\1\72\1\34\1\14\1\7\1\15\1\uffff\1\21\1\uffff\1\26\1\uffff\1\31\2\uffff\1\37\1\uffff\1\40\1\uffff\1\41\1\uffff\1\22\1\16\1\27\1\13\1\33\1\uffff\1\17\1\24\1\25\1\35\1\10\1\30\1\uffff\1\12\1\uffff\1\32\1\uffff\1\6\1\11\1\20\1\23",
            "",
            "",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\77\1\100\10\uffff\1\157\1\uffff\1\135\2\uffff\1\137\1\136\1\uffff\1\163\1\140\2\uffff\1\142\1\167\1\144\1\150\1\145\5\uffff\1\164\3\uffff\1\153\1\154\1\141\1\151\1\152\1\146\1\143\1\155\1\160\1\uffff\1\131\1\161\2\uffff\1\147\1\156\1\162\1\uffff\1\166\1\165\1\127\1\107\1\102\1\110\1\uffff\1\114\1\uffff\1\121\1\uffff\1\124\2\uffff\1\132\1\uffff\1\133\1\uffff\1\134\1\uffff\1\115\1\111\1\122\1\106\1\126\1\uffff\1\112\1\117\1\120\1\130\1\103\1\123\1\uffff\1\105\1\uffff\1\125\1\uffff\1\101\1\104\1\113\1\116\20\uffff\1\u0085\1\u0086\1\175\1\176\1\177\1\u0080\1\u0081\1\u0082\1\u0083\1\u0084\1\170\1\171\1\172\1\173\1\174",
            "\1\u0087\1\u0088\10\uffff\1\u00b7\1\uffff\1\u00a5\2\uffff\1\u00a7\1\u00a6\1\uffff\1\u00bb\1\u00a8\2\uffff\1\u00aa\1\u00bf\1\u00ac\1\u00b0\1\u00ad\5\uffff\1\u00bc\3\uffff\1\u00b3\1\u00b4\1\u00a9\1\u00b1\1\u00b2\1\u00ae\1\u00ab\1\u00b5\1\u00b8\1\uffff\1\u00a1\1\u00b9\2\uffff\1\u00af\1\u00b6\1\u00ba\1\uffff\1\u00be\1\u00bd\1\u009f\1\u008f\1\u008a\1\u0090\1\uffff\1\u0094\1\uffff\1\u0099\1\uffff\1\u009c\2\uffff\1\u00a2\1\uffff\1\u00a3\1\uffff\1\u00a4\1\uffff\1\u0095\1\u0091\1\u009a\1\u008e\1\u009e\1\uffff\1\u0092\1\u0097\1\u0098\1\u00a0\1\u008b\1\u009b\1\uffff\1\u008d\1\uffff\1\u009d\1\uffff\1\u0089\1\u008c\1\u0093\1\u0096",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\75\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\u00c1\1\u00c2\10\uffff\1\u00f1\1\uffff\1\u00df\2\uffff\1\u00e1\1\u00e0\1\uffff\1\u00f5\1\u00e2\2\uffff\1\u00e4\1\u00f9\1\u00e6\1\u00ea\1\u00e7\5\uffff\1\u00f6\3\uffff\1\u00ed\1\u00ee\1\u00e3\1\u00eb\1\u00ec\1\u00e8\1\u00e5\1\u00ef\1\u00f2\1\uffff\1\u00db\1\u00f3\2\uffff\1\u00e9\1\u00f0\1\u00f4\1\uffff\1\u00f8\1\u00f7\1\u00d9\1\u00c9\1\u00c4\1\u00ca\1\uffff\1\u00ce\1\uffff\1\u00d3\1\uffff\1\u00d6\2\uffff\1\u00dc\1\uffff\1\u00dd\1\uffff\1\u00de\1\uffff\1\u00cf\1\u00cb\1\u00d4\1\u00c8\1\u00d8\1\uffff\1\u00cc\1\u00d1\1\u00d2\1\u00da\1\u00c5\1\u00d5\1\uffff\1\u00c7\1\uffff\1\u00d7\1\uffff\1\u00c3\1\u00c6\1\u00cd\1\u00d0\20\uffff\1\u0107\1\u0108\1\u00ff\1\u0100\1\u0101\1\u0102\1\u0103\1\u0104\1\u0105\1\u0106\1\u00fa\1\u00fb\1\u00fc\1\u00fd\1\u00fe",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\2\25\uffff\1\u00c0\6\uffff\1\2\2\3\7\uffff\2\3"
    };
    static final short[][] dfa_15 = unpackEncodedStringArray(dfa_15s);

    class DFA33 extends DFA {

        public DFA33(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 33;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_13;
            this.special = dfa_5;
            this.transition = dfa_15;
        }
        public String getDescription() {
            return "()* loopback of 1331:3: ( (lv_ownedStatements_21_0= ruleCommitStatementCS ) )*";
        }
    }

    class DFA46 extends DFA {

        public DFA46(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 46;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_13;
            this.special = dfa_5;
            this.transition = dfa_14;
        }
        public String getDescription() {
            return "()* loopback of 1959:3: ( (lv_ownedStatements_12_0= ruleGuardStatementCS ) )*";
        }
    }

    class DFA47 extends DFA {

        public DFA47(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 47;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_13;
            this.special = dfa_5;
            this.transition = dfa_15;
        }
        public String getDescription() {
            return "()* loopback of 1977:3: ( (lv_ownedStatements_13_0= ruleCommitStatementCS ) )*";
        }
    }
    static final String dfa_16s = "\173\uffff";
    static final String dfa_17s = "\1\7\43\26\1\7\25\26\4\uffff\40\45\1\7\13\45\1\7\12\45\1\4\1\45\1\4\1\7\1\4\1\7";
    static final String dfa_18s = "\1\145\43\75\1\145\25\75\4\uffff\40\75\1\145\13\75\1\145\12\75\1\u0097\1\75\1\u0097\1\145\1\u0097\1\u008e";
    static final String dfa_19s = "\72\uffff\1\2\1\1\1\4\1\3\75\uffff";
    static final String dfa_20s = "\173\uffff}>";
    static final String[] dfa_21s = {
            "\1\1\1\2\10\uffff\1\61\1\uffff\1\37\2\uffff\1\41\1\40\1\uffff\1\65\1\42\2\uffff\1\44\1\71\1\46\1\52\1\47\5\uffff\1\66\3\uffff\1\55\1\56\1\43\1\53\1\54\1\50\1\45\1\57\1\62\1\uffff\1\33\1\63\2\uffff\1\51\1\60\1\64\1\uffff\1\70\1\67\1\31\1\11\1\4\1\12\1\uffff\1\16\1\uffff\1\23\1\uffff\1\26\2\uffff\1\34\1\uffff\1\35\1\uffff\1\36\1\uffff\1\17\1\13\1\24\1\10\1\30\1\uffff\1\14\1\21\1\22\1\32\1\5\1\25\1\uffff\1\7\1\uffff\1\27\1\uffff\1\3\1\6\1\15\1\20",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\76\1\77\10\uffff\1\156\1\uffff\1\134\2\uffff\1\136\1\135\1\uffff\1\162\1\137\2\uffff\1\141\1\166\1\143\1\147\1\144\3\uffff\1\72\1\uffff\1\163\3\uffff\1\152\1\153\1\140\1\150\1\151\1\145\1\142\1\154\1\157\1\uffff\1\130\1\160\2\uffff\1\146\1\155\1\161\1\uffff\1\165\1\164\1\126\1\106\1\101\1\107\1\uffff\1\113\1\uffff\1\120\1\uffff\1\123\2\uffff\1\131\1\uffff\1\132\1\uffff\1\133\1\uffff\1\114\1\110\1\121\1\105\1\125\1\uffff\1\111\1\116\1\117\1\127\1\102\1\122\1\uffff\1\104\1\uffff\1\124\1\uffff\1\100\1\103\1\112\1\115",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\73\16\uffff\1\72\5\uffff\1\75\21\uffff\1\74",
            "",
            "",
            "",
            "",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\2\73\10\uffff\1\73\1\uffff\1\73\2\uffff\2\73\1\uffff\2\73\2\uffff\5\73\3\uffff\1\72\1\uffff\1\73\3\uffff\1\170\10\73\1\uffff\2\73\2\uffff\3\73\1\uffff\1\167\5\73\1\uffff\1\73\1\uffff\1\73\1\uffff\1\73\2\uffff\1\73\1\uffff\1\73\1\uffff\1\73\1\uffff\5\73\1\uffff\6\73\1\uffff\1\73\1\uffff\1\73\1\uffff\4\73",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\2\75\10\uffff\1\75\1\uffff\1\75\2\uffff\2\75\1\uffff\2\75\2\uffff\5\75\3\uffff\1\72\1\uffff\1\75\3\uffff\11\75\1\uffff\2\75\2\uffff\3\75\1\uffff\1\171\5\75\1\uffff\1\75\1\uffff\1\75\1\uffff\1\75\2\uffff\1\75\1\uffff\1\75\1\uffff\1\75\1\uffff\5\75\1\uffff\6\75\1\uffff\1\75\1\uffff\1\75\1\uffff\4\75",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\74\1\uffff\3\74\10\uffff\1\74\1\uffff\1\74\2\uffff\2\74\1\uffff\2\74\2\uffff\5\74\3\uffff\1\72\1\uffff\1\74\2\uffff\1\74\1\172\10\74\1\uffff\3\74\1\uffff\3\74\1\uffff\6\74\1\uffff\1\74\1\uffff\1\74\1\uffff\1\74\2\uffff\1\74\1\uffff\1\74\1\uffff\1\74\1\uffff\5\74\1\uffff\6\74\1\uffff\1\74\1\uffff\1\74\1\uffff\6\74\16\uffff\17\74\1\uffff\1\74\1\uffff\4\74\5\uffff\1\74\4\uffff\2\74",
            "\1\72\5\uffff\1\75\21\uffff\1\74",
            "\1\74\1\uffff\3\74\10\uffff\1\74\1\uffff\1\74\1\uffff\1\73\2\74\1\uffff\2\74\2\uffff\5\74\5\uffff\1\74\2\uffff\12\74\1\uffff\3\74\1\uffff\3\74\1\uffff\6\74\1\uffff\1\74\1\uffff\1\74\1\uffff\1\74\2\uffff\1\74\1\uffff\1\74\1\uffff\1\74\1\uffff\5\74\1\uffff\6\74\1\uffff\1\74\1\uffff\1\74\1\uffff\6\74\16\uffff\17\74\1\uffff\1\74\1\uffff\4\74\5\uffff\1\74\4\uffff\2\74",
            "\2\75\10\uffff\1\75\1\uffff\1\75\1\uffff\1\73\2\75\1\uffff\2\75\2\uffff\5\75\5\uffff\1\75\3\uffff\11\75\1\uffff\2\75\2\uffff\3\75\1\uffff\6\75\1\uffff\1\75\1\uffff\1\75\1\uffff\1\75\2\uffff\1\75\1\uffff\1\75\1\uffff\1\75\1\uffff\5\75\1\uffff\6\75\1\uffff\1\75\1\uffff\1\75\1\uffff\4\75",
            "\1\74\1\uffff\3\74\10\uffff\1\74\1\uffff\1\74\1\uffff\1\75\2\74\1\uffff\2\74\2\uffff\5\74\5\uffff\1\74\2\uffff\12\74\1\uffff\3\74\1\uffff\3\74\1\uffff\6\74\1\uffff\1\74\1\uffff\1\74\1\uffff\1\74\2\uffff\1\74\1\uffff\1\74\1\uffff\1\74\1\uffff\5\74\1\uffff\6\74\1\uffff\1\74\1\uffff\1\74\1\uffff\6\74\16\uffff\17\74\1\uffff\1\74\1\uffff\4\74\5\uffff\1\74\4\uffff\2\74",
            "\2\75\10\uffff\1\75\1\uffff\1\75\1\uffff\1\74\2\75\1\uffff\2\75\2\uffff\5\75\1\uffff\1\74\3\uffff\1\75\1\uffff\2\74\11\75\1\74\2\75\1\74\1\uffff\3\75\1\74\6\75\1\uffff\1\75\1\uffff\1\75\1\uffff\1\75\2\uffff\1\75\1\uffff\1\75\1\uffff\1\75\1\uffff\5\75\1\uffff\6\75\1\uffff\1\75\1\uffff\1\75\1\uffff\4\75\1\74\1\uffff\16\74\26\uffff\1\74\1\uffff\1\74"
    };

    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final char[] dfa_18 = DFA.unpackEncodedStringToUnsignedChars(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final short[][] dfa_21 = unpackEncodedStringArray(dfa_21s);

    class DFA55 extends DFA {

        public DFA55(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 55;
            this.eot = dfa_16;
            this.eof = dfa_16;
            this.min = dfa_17;
            this.max = dfa_18;
            this.accept = dfa_19;
            this.special = dfa_20;
            this.transition = dfa_21;
        }
        public String getDescription() {
            return "2344:1: (this_AppendParameterBindingCS_0= ruleAppendParameterBindingCS | this_GuardParameterBindingCS_1= ruleGuardParameterBindingCS | this_LoopParameterBindingCS_2= ruleLoopParameterBindingCS | this_SimpleParameterBindingCS_3= ruleSimpleParameterBindingCS )";
        }
    }
    static final String dfa_22s = "\74\uffff";
    static final String dfa_23s = "\1\7\71\25\2\uffff";
    static final String dfa_24s = "\1\145\71\64\2\uffff";
    static final String dfa_25s = "\72\uffff\1\1\1\2";
    static final String dfa_26s = "\74\uffff}>";
    static final String[] dfa_27s = {
            "\1\1\1\2\10\uffff\1\61\1\uffff\1\37\2\uffff\1\41\1\40\1\uffff\1\65\1\42\2\uffff\1\44\1\71\1\46\1\52\1\47\5\uffff\1\66\3\uffff\1\55\1\56\1\43\1\53\1\54\1\50\1\45\1\57\1\62\1\uffff\1\33\1\63\2\uffff\1\51\1\60\1\64\1\uffff\1\70\1\67\1\31\1\11\1\4\1\12\1\uffff\1\16\1\uffff\1\23\1\uffff\1\26\2\uffff\1\34\1\uffff\1\35\1\uffff\1\36\1\uffff\1\17\1\13\1\24\1\10\1\30\1\uffff\1\14\1\21\1\22\1\32\1\5\1\25\1\uffff\1\7\1\uffff\1\27\1\uffff\1\3\1\6\1\15\1\20",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "\1\73\2\uffff\1\73\12\uffff\1\73\5\uffff\1\72\12\uffff\1\73",
            "",
            ""
    };

    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final char[] dfa_24 = DFA.unpackEncodedStringToUnsignedChars(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final short[][] dfa_27 = unpackEncodedStringArray(dfa_27s);

    class DFA61 extends DFA {

        public DFA61(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 61;
            this.eot = dfa_22;
            this.eof = dfa_22;
            this.min = dfa_23;
            this.max = dfa_24;
            this.accept = dfa_25;
            this.special = dfa_26;
            this.transition = dfa_27;
        }
        public String getDescription() {
            return "2712:1: ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )?";
        }
    }
    static final String dfa_28s = "\113\uffff";
    static final String dfa_29s = "\1\72\112\uffff";
    static final String dfa_30s = "\1\7\71\25\1\uffff\17\43\1\uffff";
    static final String dfa_31s = "\1\u0084\71\67\1\uffff\17\51\1\uffff";
    static final String dfa_32s = "\72\uffff\1\2\17\uffff\1\1";
    static final String dfa_33s = "\113\uffff}>";
    static final String[] dfa_34s = {
            "\1\1\1\2\10\uffff\1\61\1\uffff\1\37\2\uffff\1\41\1\40\1\uffff\1\65\1\42\2\uffff\1\44\1\71\1\46\1\52\1\47\5\uffff\1\66\3\uffff\1\55\1\56\1\43\1\53\1\54\1\50\1\45\1\57\1\62\1\uffff\1\33\1\63\2\uffff\1\51\1\60\1\64\1\uffff\1\70\1\67\1\31\1\11\1\4\1\12\1\uffff\1\16\1\uffff\1\23\1\uffff\1\26\2\uffff\1\34\1\uffff\1\35\1\uffff\1\36\1\uffff\1\17\1\13\1\24\1\10\1\30\1\uffff\1\14\1\21\1\22\1\32\1\5\1\25\1\uffff\1\7\1\uffff\1\27\1\uffff\1\3\1\6\1\15\1\20\20\uffff\1\110\1\111\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107\1\73\1\74\1\75\1\76\1\77",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "\1\72\2\uffff\1\72\12\uffff\1\72\5\uffff\1\112\12\uffff\1\72\2\uffff\1\72",
            "",
            "\1\72\5\uffff\1\112",
            "\1\72\5\uffff\1\112",
            "\1\72\5\uffff\1\112",
            "\1\72\5\uffff\1\112",
            "\1\72\5\uffff\1\112",
            "\1\72\5\uffff\1\112",
            "\1\72\5\uffff\1\112",
            "\1\72\5\uffff\1\112",
            "\1\72\5\uffff\1\112",
            "\1\72\5\uffff\1\112",
            "\1\72\5\uffff\1\112",
            "\1\72\5\uffff\1\112",
            "\1\72\5\uffff\1\112",
            "\1\72\5\uffff\1\112",
            "\1\72\5\uffff\1\112",
            ""
    };

    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final char[] dfa_30 = DFA.unpackEncodedStringToUnsignedChars(dfa_30s);
    static final char[] dfa_31 = DFA.unpackEncodedStringToUnsignedChars(dfa_31s);
    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final short[][] dfa_34 = unpackEncodedStringArray(dfa_34s);

    class DFA71 extends DFA {

        public DFA71(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 71;
            this.eot = dfa_28;
            this.eof = dfa_29;
            this.min = dfa_30;
            this.max = dfa_31;
            this.accept = dfa_32;
            this.special = dfa_33;
            this.transition = dfa_34;
        }
        public String getDescription() {
            return "()* loopback of 3105:1: ( ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) otherlv_3= '::' )*";
        }
    }
    static final String dfa_35s = "\73\uffff";
    static final String dfa_36s = "\1\7\1\0\71\uffff";
    static final String dfa_37s = "\1\145\1\0\71\uffff";
    static final String dfa_38s = "\2\uffff\1\2\67\uffff\1\1";
    static final String dfa_39s = "\1\uffff\1\0\71\uffff}>";
    static final String[] dfa_40s = {
            "\2\2\10\uffff\1\2\1\uffff\1\2\2\uffff\2\2\1\uffff\2\2\2\uffff\1\1\4\2\5\uffff\1\2\3\uffff\11\2\1\uffff\2\2\2\uffff\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\4\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final char[] dfa_37 = DFA.unpackEncodedStringToUnsignedChars(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[][] dfa_40 = unpackEncodedStringArray(dfa_40s);

    class DFA76 extends DFA {

        public DFA76(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 76;
            this.eot = dfa_35;
            this.eof = dfa_35;
            this.min = dfa_36;
            this.max = dfa_37;
            this.accept = dfa_38;
            this.special = dfa_39;
            this.transition = dfa_40;
        }
        public String getDescription() {
            return "3314:2: ( (lv_isCheck_0_0= 'check' ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA76_1 = input.LA(1);


                        int index76_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalQVTimperative()) ) {s = 58;}

                        else if ( (true) ) {s = 2;}


                        input.seek(index76_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 76, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_41s = "\1\7\71\43\2\uffff";
    static final String dfa_42s = "\1\u0084\71\51\2\uffff";
    static final String dfa_43s = "\72\uffff\1\2\1\1";
    static final String[] dfa_44s = {
            "\1\1\1\2\10\uffff\1\61\1\uffff\1\37\2\uffff\1\41\1\40\1\uffff\1\65\1\42\2\uffff\1\44\1\71\1\46\1\52\1\47\5\uffff\1\66\3\uffff\1\55\1\56\1\43\1\53\1\54\1\50\1\45\1\57\1\62\1\uffff\1\33\1\63\2\uffff\1\51\1\60\1\64\1\uffff\1\70\1\67\1\31\1\11\1\4\1\12\1\uffff\1\16\1\uffff\1\23\1\uffff\1\26\2\uffff\1\34\1\uffff\1\35\1\uffff\1\36\1\uffff\1\17\1\13\1\24\1\10\1\30\1\uffff\1\14\1\21\1\22\1\32\1\5\1\25\1\uffff\1\7\1\uffff\1\27\1\uffff\1\3\1\6\1\15\1\20\20\uffff\17\72",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "\1\72\5\uffff\1\73",
            "",
            ""
    };
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[][] dfa_44 = unpackEncodedStringArray(dfa_44s);

    class DFA77 extends DFA {

        public DFA77(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 77;
            this.eot = dfa_22;
            this.eof = dfa_22;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_26;
            this.transition = dfa_44;
        }
        public String getDescription() {
            return "3489:1: ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )?";
        }
    }
    static final String dfa_45s = "\2\uffff\71\1\1\uffff";
    static final String dfa_46s = "\1\4\1\uffff\71\22\1\uffff";
    static final String dfa_47s = "\1\u0097\1\uffff\71\u008e\1\uffff";
    static final String dfa_48s = "\1\uffff\1\1\71\uffff\1\2";
    static final String[] dfa_49s = {
            "\1\1\1\uffff\1\1\1\2\1\3\10\uffff\1\62\1\uffff\1\40\2\uffff\1\42\1\41\1\73\1\66\1\43\2\uffff\1\45\1\72\1\47\1\53\1\50\5\uffff\1\67\2\uffff\1\1\1\56\1\57\1\44\1\54\1\55\1\51\1\46\1\60\1\63\1\uffff\1\34\1\64\1\1\1\uffff\1\52\1\61\1\65\1\uffff\1\71\1\70\1\32\1\12\1\5\1\13\1\uffff\1\17\1\uffff\1\24\1\uffff\1\27\2\uffff\1\35\1\uffff\1\36\1\uffff\1\37\1\uffff\1\20\1\14\1\25\1\11\1\31\1\uffff\1\15\1\22\1\23\1\33\1\6\1\26\1\uffff\1\10\1\uffff\1\30\1\uffff\1\4\1\7\1\16\1\21\2\1\16\uffff\17\1\1\uffff\1\1\1\uffff\4\1\5\uffff\1\1\4\uffff\2\1",
            "",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\2\uffff\1\1\7\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            ""
    };
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final char[] dfa_46 = DFA.unpackEncodedStringToUnsignedChars(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final short[][] dfa_49 = unpackEncodedStringArray(dfa_49s);

    class DFA184 extends DFA {

        public DFA184(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 184;
            this.eot = dfa_22;
            this.eof = dfa_45;
            this.min = dfa_46;
            this.max = dfa_47;
            this.accept = dfa_48;
            this.special = dfa_26;
            this.transition = dfa_49;
        }
        public String getDescription() {
            return "7777:1: ( ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )? ) | ( (lv_ownedExpression_3_0= rulePatternExpCS ) ) )";
        }
    }
    static final String[] dfa_50s = {
            "\1\1\1\uffff\1\1\1\2\1\3\10\uffff\1\62\1\uffff\1\40\2\uffff\1\42\1\41\1\73\1\66\1\43\2\uffff\1\45\1\72\1\47\1\53\1\50\5\uffff\1\67\2\uffff\1\1\1\56\1\57\1\44\1\54\1\55\1\51\1\46\1\60\1\63\1\uffff\1\34\1\64\1\1\1\uffff\1\52\1\61\1\65\1\uffff\1\71\1\70\1\32\1\12\1\5\1\13\1\uffff\1\17\1\uffff\1\24\1\uffff\1\27\2\uffff\1\35\1\uffff\1\36\1\uffff\1\37\1\uffff\1\20\1\14\1\25\1\11\1\31\1\uffff\1\15\1\22\1\23\1\33\1\6\1\26\1\uffff\1\10\1\uffff\1\30\1\uffff\1\4\1\7\1\16\1\21\2\1\16\uffff\17\1\1\uffff\1\1\1\uffff\4\1\5\uffff\1\1\4\uffff\2\1",
            "",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\73\12\uffff\2\1\4\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1",
            ""
    };
    static final short[][] dfa_50 = unpackEncodedStringArray(dfa_50s);

    class DFA187 extends DFA {

        public DFA187(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 187;
            this.eot = dfa_22;
            this.eof = dfa_45;
            this.min = dfa_46;
            this.max = dfa_47;
            this.accept = dfa_48;
            this.special = dfa_26;
            this.transition = dfa_50;
        }
        public String getDescription() {
            return "7990:1: (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS )";
        }
    }
    static final String dfa_51s = "\22\uffff";
    static final String dfa_52s = "\1\2\21\uffff";
    static final String dfa_53s = "\1\22\1\0\20\uffff";
    static final String dfa_54s = "\1\u0092\1\0\20\uffff";
    static final String dfa_55s = "\2\uffff\1\2\16\uffff\1\1";
    static final String dfa_56s = "\1\uffff\1\0\20\uffff}>";
    static final String[] dfa_57s = {
            "\1\2\2\uffff\1\2\6\uffff\1\2\5\uffff\1\2\1\1\1\2\2\uffff\1\2\14\uffff\1\2\3\uffff\2\2\113\uffff\1\2\1\uffff\1\2\6\uffff\1\2\1\uffff\1\2\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[][] dfa_57 = unpackEncodedStringArray(dfa_57s);

    class DFA200 extends DFA {

        public DFA200(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 200;
            this.eot = dfa_51;
            this.eof = dfa_52;
            this.min = dfa_53;
            this.max = dfa_54;
            this.accept = dfa_55;
            this.special = dfa_56;
            this.transition = dfa_57;
        }
        public String getDescription() {
            return "8990:2: ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA200_1 = input.LA(1);


                        int index200_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred343_InternalQVTimperative()) ) {s = 17;}

                        else if ( (true) ) {s = 2;}


                        input.seek(index200_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 200, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA199 extends DFA {

        public DFA199(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 199;
            this.eot = dfa_51;
            this.eof = dfa_52;
            this.min = dfa_53;
            this.max = dfa_54;
            this.accept = dfa_55;
            this.special = dfa_56;
            this.transition = dfa_57;
        }
        public String getDescription() {
            return "9008:2: (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA199_1 = input.LA(1);


                        int index199_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalQVTimperative()) ) {s = 17;}

                        else if ( (true) ) {s = 2;}


                        input.seek(index199_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 199, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_58s = "\112\uffff";
    static final String dfa_59s = "\1\7\101\uffff\5\0\3\uffff";
    static final String dfa_60s = "\1\u0084\101\uffff\5\0\3\uffff";
    static final String dfa_61s = "\1\uffff\1\1\70\uffff\1\2\16\uffff\1\3";
    static final String dfa_62s = "\102\uffff\1\0\1\1\1\2\1\3\1\4\3\uffff}>";
    static final String[] dfa_63s = {
            "\2\1\10\uffff\1\1\1\uffff\1\1\2\uffff\2\1\1\uffff\2\1\2\uffff\5\1\5\uffff\1\1\3\uffff\11\1\1\uffff\2\1\2\uffff\3\1\1\uffff\6\1\1\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\5\1\1\uffff\6\1\1\uffff\1\1\1\uffff\1\1\1\uffff\4\1\20\uffff\12\72\1\102\1\103\1\104\1\105\1\106",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final char[] dfa_59 = DFA.unpackEncodedStringToUnsignedChars(dfa_59s);
    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);
    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final short[][] dfa_63 = unpackEncodedStringArray(dfa_63s);

    class DFA201 extends DFA {

        public DFA201(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 201;
            this.eot = dfa_58;
            this.eof = dfa_58;
            this.min = dfa_59;
            this.max = dfa_60;
            this.accept = dfa_61;
            this.special = dfa_62;
            this.transition = dfa_63;
        }
        public String getDescription() {
            return "9055:1: (this_TypeNameExpCS_0= ruleTypeNameExpCS | this_TypeLiteralCS_1= ruleTypeLiteralCS | this_CollectionPatternCS_2= ruleCollectionPatternCS )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA201_66 = input.LA(1);


                        int index201_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred345_InternalQVTimperative()) ) {s = 58;}

                        else if ( (true) ) {s = 73;}


                        input.seek(index201_66);
                        if ( s>=0 ) return s;
                        break;
                    case 1 :
                        int LA201_67 = input.LA(1);


                        int index201_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred345_InternalQVTimperative()) ) {s = 58;}

                        else if ( (true) ) {s = 73;}


                        input.seek(index201_67);
                        if ( s>=0 ) return s;
                        break;
                    case 2 :
                        int LA201_68 = input.LA(1);


                        int index201_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred345_InternalQVTimperative()) ) {s = 58;}

                        else if ( (true) ) {s = 73;}


                        input.seek(index201_68);
                        if ( s>=0 ) return s;
                        break;
                    case 3 :
                        int LA201_69 = input.LA(1);


                        int index201_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred345_InternalQVTimperative()) ) {s = 58;}

                        else if ( (true) ) {s = 73;}


                        input.seek(index201_69);
                        if ( s>=0 ) return s;
                        break;
                    case 4 :
                        int LA201_70 = input.LA(1);


                        int index201_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred345_InternalQVTimperative()) ) {s = 58;}

                        else if ( (true) ) {s = 73;}


                        input.seek(index201_70);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 201, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_64s = "\127\uffff";
    static final String dfa_65s = "\1\4\2\0\124\uffff";
    static final String dfa_66s = "\1\u0097\2\0\124\uffff";
    static final String dfa_67s = "\3\uffff\1\1\122\uffff\1\2";
    static final String dfa_68s = "\1\uffff\1\0\1\1\124\uffff}>";
    static final String[] dfa_69s = {
            "\1\3\1\uffff\3\3\10\uffff\1\3\1\uffff\1\3\2\uffff\2\3\1\uffff\2\3\2\uffff\5\3\5\uffff\1\3\2\uffff\12\3\1\uffff\3\3\1\uffff\3\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\2\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\4\3\1\1\1\2\16\uffff\17\3\1\uffff\1\3\1\uffff\4\3\5\uffff\1\3\4\uffff\1\126\1\3",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final char[] dfa_65 = DFA.unpackEncodedStringToUnsignedChars(dfa_65s);
    static final char[] dfa_66 = DFA.unpackEncodedStringToUnsignedChars(dfa_66s);
    static final short[] dfa_67 = DFA.unpackEncodedString(dfa_67s);
    static final short[] dfa_68 = DFA.unpackEncodedString(dfa_68s);
    static final short[][] dfa_69 = unpackEncodedStringArray(dfa_69s);

    class DFA204 extends DFA {

        public DFA204(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 204;
            this.eot = dfa_64;
            this.eof = dfa_64;
            this.min = dfa_65;
            this.max = dfa_66;
            this.accept = dfa_67;
            this.special = dfa_68;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "9165:1: ( (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? ) | this_PrefixedLetExpCS_4= rulePrefixedLetExpCS )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA204_1 = input.LA(1);


                        int index204_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred348_InternalQVTimperative()) ) {s = 3;}

                        else if ( (true) ) {s = 86;}


                        input.seek(index204_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 :
                        int LA204_2 = input.LA(1);


                        int index204_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred348_InternalQVTimperative()) ) {s = 3;}

                        else if ( (true) ) {s = 86;}


                        input.seek(index204_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 204, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_70s = "\1\4\12\uffff\7\0\105\uffff";
    static final String dfa_71s = "\1\u0097\12\uffff\7\0\105\uffff";
    static final String dfa_72s = "\1\uffff\1\1\1\2\1\3\1\4\15\uffff\1\10\1\11\7\uffff\1\12\70\uffff\1\5\1\6\1\7";
    static final String dfa_73s = "\13\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\105\uffff}>";
    static final String[] dfa_74s = {
            "\1\4\1\uffff\1\4\2\33\10\uffff\1\33\1\uffff\1\33\2\uffff\2\33\1\uffff\2\33\2\uffff\5\33\5\uffff\1\33\2\uffff\1\4\11\33\1\uffff\2\33\1\1\1\uffff\3\33\1\uffff\6\33\1\uffff\1\33\1\uffff\1\33\1\uffff\1\33\2\uffff\1\33\1\uffff\1\33\1\uffff\1\33\1\uffff\5\33\1\uffff\6\33\1\uffff\1\33\1\uffff\1\33\1\uffff\4\33\20\uffff\1\14\1\13\10\23\1\15\1\16\1\17\1\20\1\21\1\uffff\1\22\1\uffff\4\4\5\uffff\1\2\5\uffff\1\3",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_70 = DFA.unpackEncodedStringToUnsignedChars(dfa_70s);
    static final char[] dfa_71 = DFA.unpackEncodedStringToUnsignedChars(dfa_71s);
    static final short[] dfa_72 = DFA.unpackEncodedString(dfa_72s);
    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final short[][] dfa_74 = unpackEncodedStringArray(dfa_74s);

    class DFA207 extends DFA {

        public DFA207(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 207;
            this.eot = dfa_64;
            this.eof = dfa_64;
            this.min = dfa_70;
            this.max = dfa_71;
            this.accept = dfa_72;
            this.special = dfa_73;
            this.transition = dfa_74;
        }
        public String getDescription() {
            return "9414:1: (this_NestedExpCS_0= ruleNestedExpCS | this_IfExpCS_1= ruleIfExpCS | this_SelfExpCS_2= ruleSelfExpCS | this_PrimitiveLiteralExpCS_3= rulePrimitiveLiteralExpCS | this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS | this_MapLiteralExpCS_5= ruleMapLiteralExpCS | this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS | this_LambdaLiteralExpCS_7= ruleLambdaLiteralExpCS | this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS | this_NameExpCS_9= ruleNameExpCS )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA207_11 = input.LA(1);


                        int index207_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred355_InternalQVTimperative()) ) {s = 84;}

                        else if ( (synpred359_InternalQVTimperative()) ) {s = 19;}


                        input.seek(index207_11);
                        if ( s>=0 ) return s;
                        break;
                    case 1 :
                        int LA207_12 = input.LA(1);


                        int index207_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_InternalQVTimperative()) ) {s = 85;}

                        else if ( (synpred359_InternalQVTimperative()) ) {s = 19;}


                        input.seek(index207_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 :
                        int LA207_13 = input.LA(1);


                        int index207_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred357_InternalQVTimperative()) ) {s = 86;}

                        else if ( (synpred359_InternalQVTimperative()) ) {s = 19;}


                        input.seek(index207_13);
                        if ( s>=0 ) return s;
                        break;
                    case 3 :
                        int LA207_14 = input.LA(1);


                        int index207_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred357_InternalQVTimperative()) ) {s = 86;}

                        else if ( (synpred359_InternalQVTimperative()) ) {s = 19;}


                        input.seek(index207_14);
                        if ( s>=0 ) return s;
                        break;
                    case 4 :
                        int LA207_15 = input.LA(1);


                        int index207_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred357_InternalQVTimperative()) ) {s = 86;}

                        else if ( (synpred359_InternalQVTimperative()) ) {s = 19;}


                        input.seek(index207_15);
                        if ( s>=0 ) return s;
                        break;
                    case 5 :
                        int LA207_16 = input.LA(1);


                        int index207_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred357_InternalQVTimperative()) ) {s = 86;}

                        else if ( (synpred359_InternalQVTimperative()) ) {s = 19;}


                        input.seek(index207_16);
                        if ( s>=0 ) return s;
                        break;
                    case 6 :
                        int LA207_17 = input.LA(1);


                        int index207_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred357_InternalQVTimperative()) ) {s = 86;}

                        else if ( (synpred359_InternalQVTimperative()) ) {s = 19;}


                        input.seek(index207_17);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 207, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_75s = "\12\uffff";
    static final String dfa_76s = "\1\2\11\uffff";
    static final String dfa_77s = "\1\22\1\4\2\uffff\6\7";
    static final String dfa_78s = "\1\u0095\1\145\2\uffff\6\145";
    static final String dfa_79s = "\2\uffff\1\2\1\1\6\uffff";
    static final String dfa_80s = "\12\uffff}>";
    static final String[] dfa_81s = {
            "\1\2\2\uffff\1\2\2\uffff\1\2\2\uffff\1\2\6\uffff\1\2\1\1\1\2\5\uffff\1\2\11\uffff\1\2\3\uffff\1\2\3\uffff\1\2\51\uffff\1\2\1\uffff\16\2\21\uffff\1\2\4\uffff\1\2\2\uffff\2\2\1\uffff\4\2",
            "\1\3\2\uffff\2\3\10\uffff\1\11\1\uffff\1\4\2\uffff\2\3\1\uffff\2\3\2\uffff\5\3\2\uffff\1\3\2\uffff\1\3\3\uffff\2\3\1\5\1\7\1\10\1\6\3\3\1\uffff\2\3\2\uffff\3\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\2\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\4\3",
            "",
            "",
            "\2\2\10\uffff\1\2\1\uffff\1\2\2\uffff\2\2\1\uffff\2\2\2\uffff\5\2\5\uffff\1\2\3\uffff\11\2\1\3\2\2\2\uffff\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\4\2",
            "\2\2\10\uffff\1\2\1\uffff\1\2\2\uffff\2\2\1\uffff\2\2\2\uffff\5\2\5\uffff\1\2\3\uffff\11\2\1\3\2\2\2\uffff\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\4\2",
            "\2\2\10\uffff\1\2\1\uffff\1\2\2\uffff\2\2\1\uffff\2\2\2\uffff\5\2\5\uffff\1\2\3\uffff\11\2\1\3\2\2\2\uffff\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\4\2",
            "\2\2\10\uffff\1\2\1\uffff\1\2\2\uffff\2\2\1\uffff\2\2\2\uffff\5\2\5\uffff\1\2\3\uffff\11\2\1\3\2\2\2\uffff\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\4\2",
            "\2\2\10\uffff\1\2\1\uffff\1\2\2\uffff\2\2\1\uffff\2\2\2\uffff\5\2\5\uffff\1\2\3\uffff\11\2\1\3\2\2\2\uffff\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\4\2",
            "\2\2\10\uffff\1\2\1\uffff\1\2\2\uffff\2\2\1\uffff\2\2\2\uffff\5\2\5\uffff\1\2\3\uffff\11\2\1\3\2\2\2\uffff\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\4\2"
    };

    static final short[] dfa_75 = DFA.unpackEncodedString(dfa_75s);
    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_76s);
    static final char[] dfa_77 = DFA.unpackEncodedStringToUnsignedChars(dfa_77s);
    static final char[] dfa_78 = DFA.unpackEncodedStringToUnsignedChars(dfa_78s);
    static final short[] dfa_79 = DFA.unpackEncodedString(dfa_79s);
    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final short[][] dfa_81 = unpackEncodedStringArray(dfa_81s);

    class DFA210 extends DFA {

        public DFA210(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 210;
            this.eot = dfa_75;
            this.eof = dfa_76;
            this.min = dfa_77;
            this.max = dfa_78;
            this.accept = dfa_79;
            this.special = dfa_80;
            this.transition = dfa_81;
        }
        public String getDescription() {
            return "9618:3: ( (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS ) )?";
        }
    }
    static final String dfa_82s = "\13\uffff";
    static final String dfa_83s = "\1\4\12\uffff";
    static final String dfa_84s = "\1\22\2\0\10\uffff";
    static final String dfa_85s = "\1\u0090\2\0\10\uffff";
    static final String dfa_86s = "\3\uffff\1\3\1\4\4\uffff\1\1\1\2";
    static final String dfa_87s = "\1\uffff\1\0\1\1\10\uffff}>";
    static final String[] dfa_88s = {
            "\1\4\2\uffff\1\4\2\uffff\1\2\11\uffff\1\3\25\uffff\1\4\116\uffff\1\1\10\uffff\1\4",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_82 = DFA.unpackEncodedString(dfa_82s);
    static final short[] dfa_83 = DFA.unpackEncodedString(dfa_83s);
    static final char[] dfa_84 = DFA.unpackEncodedStringToUnsignedChars(dfa_84s);
    static final char[] dfa_85 = DFA.unpackEncodedStringToUnsignedChars(dfa_85s);
    static final short[] dfa_86 = DFA.unpackEncodedString(dfa_86s);
    static final short[] dfa_87 = DFA.unpackEncodedString(dfa_87s);
    static final short[][] dfa_88 = unpackEncodedStringArray(dfa_88s);

    class DFA223 extends DFA {

        public DFA223(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 223;
            this.eot = dfa_82;
            this.eof = dfa_83;
            this.min = dfa_84;
            this.max = dfa_85;
            this.accept = dfa_86;
            this.special = dfa_87;
            this.transition = dfa_88;
        }
        public String getDescription() {
            return "9948:2: ( (otherlv_1= '<-' ( (lv_ownedCoIterator_2_0= ruleCoIteratorVariableCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? ) | (otherlv_5= ':' ( (lv_ownedType_6_0= ruleTypeExpCS ) ) (otherlv_7= '<-' ( (lv_ownedCoIterator_8_0= ruleCoIteratorVariableCS ) ) )? (otherlv_9= '=' ( (lv_ownedInitExpression_10_0= ruleExpCS ) ) )? ) | ( (otherlv_11= ':' ( (lv_ownedType_12_0= ruleTypeExpCS ) ) )? (otherlv_13= '<-' ( (lv_ownedCoIterator_14_0= ruleCoIteratorVariableCS ) ) )? otherlv_15= 'in' ( (lv_ownedInitExpression_16_0= ruleExpCS ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA223_1 = input.LA(1);


                        int index223_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred372_InternalQVTimperative()) ) {s = 9;}

                        else if ( (synpred378_InternalQVTimperative()) ) {s = 3;}


                        input.seek(index223_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 :
                        int LA223_2 = input.LA(1);


                        int index223_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred375_InternalQVTimperative()) ) {s = 10;}

                        else if ( (synpred378_InternalQVTimperative()) ) {s = 3;}


                        input.seek(index223_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 223, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA232 extends DFA {

        public DFA232(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 232;
            this.eot = dfa_82;
            this.eof = dfa_83;
            this.min = dfa_84;
            this.max = dfa_85;
            this.accept = dfa_86;
            this.special = dfa_87;
            this.transition = dfa_88;
        }
        public String getDescription() {
            return "10301:2: ( (otherlv_2= '<-' ( (lv_ownedCoIterator_3_0= ruleCoIteratorVariableCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypeExpCS ) ) (otherlv_8= '<-' ( (lv_ownedCoIterator_9_0= ruleCoIteratorVariableCS ) ) )? (otherlv_10= '=' ( (lv_ownedInitExpression_11_0= ruleExpCS ) ) )? ) | ( (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypeExpCS ) ) )? (otherlv_14= '<-' ( (lv_ownedCoIterator_15_0= ruleCoIteratorVariableCS ) ) )? otherlv_16= 'in' ( (lv_ownedInitExpression_17_0= ruleExpCS ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA232_1 = input.LA(1);


                        int index232_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred383_InternalQVTimperative()) ) {s = 9;}

                        else if ( (synpred389_InternalQVTimperative()) ) {s = 3;}


                        input.seek(index232_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 :
                        int LA232_2 = input.LA(1);


                        int index232_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred386_InternalQVTimperative()) ) {s = 10;}

                        else if ( (synpred389_InternalQVTimperative()) ) {s = 3;}


                        input.seek(index232_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 232, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_89s = "\1\4\1\uffff\71\30\1\uffff";
    static final String dfa_90s = "\1\u0097\1\uffff\71\u0092\1\uffff";
    static final String[] dfa_91s = {
            "\1\1\1\uffff\1\1\1\2\1\3\10\uffff\1\62\1\uffff\1\40\2\uffff\1\42\1\41\1\73\1\66\1\43\2\uffff\1\45\1\72\1\47\1\53\1\50\5\uffff\1\67\2\uffff\1\1\1\56\1\57\1\44\1\54\1\55\1\51\1\46\1\60\1\63\1\uffff\1\34\1\64\1\1\1\uffff\1\52\1\61\1\65\1\uffff\1\71\1\70\1\32\1\12\1\5\1\13\1\uffff\1\17\1\uffff\1\24\1\uffff\1\27\2\uffff\1\35\1\uffff\1\36\1\uffff\1\37\1\uffff\1\20\1\14\1\25\1\11\1\31\1\uffff\1\15\1\22\1\23\1\33\1\6\1\26\1\uffff\1\10\1\uffff\1\30\1\uffff\1\4\1\7\1\16\1\21\2\1\16\uffff\17\1\1\uffff\1\1\1\uffff\4\1\5\uffff\1\1\4\uffff\2\1",
            "",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\73\12\uffff\1\1\5\uffff\2\1\11\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\26\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            ""
    };
    static final char[] dfa_89 = DFA.unpackEncodedStringToUnsignedChars(dfa_89s);
    static final char[] dfa_90 = DFA.unpackEncodedStringToUnsignedChars(dfa_90s);
    static final short[][] dfa_91 = unpackEncodedStringArray(dfa_91s);

    class DFA236 extends DFA {

        public DFA236(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 236;
            this.eot = dfa_22;
            this.eof = dfa_22;
            this.min = dfa_89;
            this.max = dfa_90;
            this.accept = dfa_48;
            this.special = dfa_26;
            this.transition = dfa_91;
        }
        public String getDescription() {
            return "10698:1: (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS )";
        }
    }



    private static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x4068110202000002L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x4068100202000002L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0xEE6FF883E6CA0180L,0x0000003D5FBEA957L});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x00000000000C0000L});
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000100000L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0xEEEFFC83E6CA01D0L,0xFFC000FD5FBEA957L,0x0000000000C20F5FL});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000200000L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000400000L});
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000001000000L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0xEE6FF883E6CA0180L,0xFFC0003D5FBEA957L,0x000000000000001FL});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000004000000L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0xEE6FF883E7CA0180L,0x0000003D5FBEA957L});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0xEE6FF883EECA0180L,0x0000003D5FBEA957L});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000011200000L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000010200000L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000020040000L});
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000060040000L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000040000000L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000011000000L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000010000000L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0xEE6FF883E6CA0182L,0x0000003D5FBEA957L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000100000002L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000040002L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000200000000L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000CA0000000L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000C80040000L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000C00040000L});
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000800000000L});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0C07E054668A0000L});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0C07E010660A0000L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0C07E010000A0000L});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0001E010000A0000L});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000002000000000L});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000008000200000L});
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0xEE6FF883E6CA0190L,0x0000003D5FBEA957L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000020000200000L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000040000000000L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000080000000000L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000100000000000L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000C00000000L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0xEE6FF893E6CA0180L,0x0000003D5FBEA957L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0001000000040000L});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000400000000L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0001E000000A0000L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000001000002L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0006000000040000L});
        public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0004000000000000L});
        public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0010000801200000L});
        public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0010000800200000L});
        public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000800200000L});
        public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x4008001000000000L,0x0000000C00980000L});
        public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0040000000000000L});
        public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0080000000000000L});
        public static final BitSet FOLLOW_57 = new BitSet(new long[]{0xEF6FF883E6CA0180L,0x0000003D5FBEA957L});
        public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0100000000040000L});
        public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0200000800200000L});
        public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000001000000000L});
        public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_63 = new BitSet(new long[]{0xEE6FF883E6CA0182L,0xFFC0003D5FBEA957L,0x000000000000001FL});
        public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0C00000000040000L});
        public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000010100000L});
        public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x2000000000000000L});
        public static final BitSet FOLLOW_69 = new BitSet(new long[]{0xEE6FF893E6EA0180L,0x0000003D5FBEA957L});
        public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000003L});
        public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
        public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x8000000000000000L,0x0000000000000002L});
        public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0020000000000000L,0x000000000001FFFCL});
        public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0020001000040000L,0x000000000001FFFCL});
        public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0020001000000000L,0x000000000001FFFCL});
        public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000001000000000L,0x0000000000060000L});
        public static final BitSet FOLLOW_77 = new BitSet(new long[]{0xEEEFFC83E6EA01F0L,0xFFC000FD5FBEA957L,0x0000000000C20F5FL});
        public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
        public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0080000801200000L});
        public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000801200000L});
        public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000001000000000L,0x0000000000600000L});
        public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000001000000180L,0x0000000001000000L});
        public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000040L,0x0000004000000000L});
        public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000001L});
        public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
        public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x8000000000000000L,0x0000000002000000L});
        public static final BitSet FOLLOW_87 = new BitSet(new long[]{0xEEEFF883E6CA0180L,0x0000003D5FBEA957L});
        public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000801200000L,0x0000000004000000L});
        public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000800200000L,0x0000000004000000L});
        public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000800240000L});
        public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000000000L,0x00000000000018CCL});
        public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000001000040000L,0x00000000000018CCL});
        public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000001000000000L,0x00000000000018CCL});
        public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000001000000000L,0x0000000008000000L});
        public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000801000002L});
        public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000800000002L});
        public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000000000000L,0x00000000000018C0L});
        public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000001000040000L,0x00000000000018C0L});
        public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000001000000000L,0x00000000000018C0L});
        public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000001L});
        public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
        public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x8000000000000000L,0x0000000010000000L});
        public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0010000801200000L,0x0000000020000000L});
        public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0020000000000000L,0x00000003C001FFCCL});
        public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0020001000040000L,0x00000003C001FFCCL});
        public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0020001000000000L,0x00000003C001FFCCL});
        public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
        public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0080000801200000L,0x0000001000000000L});
        public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000801200000L,0x0000001000000000L});
        public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000000801240000L});
        public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000001000000000L,0x0000002000000000L});
        public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x8000001000000000L,0x0000000012000003L});
        public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000004000L});
        public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000020000000002L});
        public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0080000000000002L});
        public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0100000000000000L,0x0000000000000000L,0x0000000000004000L});
        public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0100000000000000L});
        public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000000000040000L});
        public static final BitSet FOLLOW_119 = new BitSet(new long[]{0xEEEFFC93E7CA01D0L,0xFFC000FD5FBEA957L,0x0000000000C20F5FL});
        public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000001000040000L});
        public static final BitSet FOLLOW_121 = new BitSet(new long[]{0xEEEFFC83E7CA01D0L,0xFFC000FD5FBEA957L,0x0000000000C20F5FL});
        public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000008000002L});
        public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0000000000040000L,0x0000000000000000L,0x0000000000000020L});
        public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000000000180L});
        public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0010000000000000L});
        public static final BitSet FOLLOW_126 = new BitSet(new long[]{0xEEEFFC93E6CA01D0L,0xFFC000FD5FBEA957L,0x0000000000C20F5FL});
        public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0010000001000000L});
        public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x1010040000000002L,0x003FFF4000000000L});
        public static final BitSet FOLLOW_131 = new BitSet(new long[]{0xEEEFFC83E6CA01D0L,0xFFC000FD5FBEA957L,0x0000000000820F5FL});
        public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0080000800000002L,0x0000000000000000L,0x0000000000005000L});
        public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000000800000002L,0x0000000000000000L,0x0000000000001000L});
        public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000001000L});
        public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
        public static final BitSet FOLLOW_136 = new BitSet(new long[]{0xEE6FF893E6CA0190L,0x0000003D5FBEA957L});
        public static final BitSet FOLLOW_137 = new BitSet(new long[]{0xEFEFFC83E7CA01D0L,0xFFC000FD5FBEA957L,0x0000000000C20F5FL});
        public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x0100000000240000L,0x0000000000000000L,0x0000000000010000L});
        public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x0000000000040000L,0x0000000000000000L,0x0000000000008000L});
        public static final BitSet FOLLOW_140 = new BitSet(new long[]{0x0000000401000002L,0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_141 = new BitSet(new long[]{0x0010000000000002L});
        public static final BitSet FOLLOW_142 = new BitSet(new long[]{0x0010000000000002L,0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_143 = new BitSet(new long[]{0x0000000400000000L,0x0000000000000000L,0x0000000000000080L});
        public static final BitSet FOLLOW_144 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
        public static final BitSet FOLLOW_145 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000280000L});
        public static final BitSet FOLLOW_146 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000100000L});
        public static final BitSet FOLLOW_147 = new BitSet(new long[]{0x0000000400040000L});
        public static final BitSet FOLLOW_148 = new BitSet(new long[]{0x0090000001000000L});
        public static final BitSet FOLLOW_149 = new BitSet(new long[]{0x0000040000000040L});
        public static final BitSet FOLLOW_150 = new BitSet(new long[]{0x0000040000000040L,0x0000020000000000L,0x0000000004000000L});
        public static final BitSet FOLLOW_151 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000003008000L});
        public static final BitSet FOLLOW_152 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
        public static final BitSet FOLLOW_153 = new BitSet(new long[]{0x0000000000040002L,0x0000000000000000L,0x0000000000004000L});
        public static final BitSet FOLLOW_154 = new BitSet(new long[]{0xEE6FF883E6CA0180L,0xFFC0003D5FBEA957L,0x000000000400001FL});
        public static final BitSet FOLLOW_155 = new BitSet(new long[]{0x0000000000000002L,0x0000001000000000L});
        public static final BitSet FOLLOW_156 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000008000000L});
    }


}