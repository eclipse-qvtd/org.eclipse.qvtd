package org.eclipse.qvtd.xtext.qvtimperative.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.qvtd.xtext.qvtimperative.services.QVTimperativeGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
/*******************************************************************************
 * Copyright (c) 2011, 2018 Willink Transformations and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     E.D.Willink - initial API and implementation
 *******************************************************************************/
@SuppressWarnings("all")
public class InternalQVTimperativeParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_SINGLE_QUOTED_STRING", "RULE_UNQUOTED_STRING", "RULE_INT", "RULE_SIMPLE_ID", "RULE_ESCAPED_ID", "RULE_ESCAPED_CHARACTER", "RULE_LETTER_CHARACTER", "RULE_DOUBLE_QUOTED_STRING", "RULE_ML_SINGLE_QUOTED_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'observe'", "','", "'add'", "'+='", "';'", "'appendsTo'", "'append'", "':'", "'strict'", "'buffer'", "':='", "'check'", "'var'", "'enforce'", "'imports'", "'consumes'", "'guard'", "'success'", "'import'", "'::'", "'*'", "'iterates'", "'map'", "'in'", "'{'", "'}'", "'call'", "'install'", "'invoke'", "'for'", "'contained'", "'new'", "'package'", "'='", "'transient'", "'query'", "'('", "')'", "'implementedby'", "'notify'", "'set'", "'.'", "'uses'", "'transformation'", "'static'", "'definition'", "'attribute'", "'derived'", "'!derived'", "'id'", "'!id'", "'ordered'", "'!ordered'", "'readonly'", "'!readonly'", "'!transient'", "'unique'", "'!unique'", "'unsettable'", "'!unsettable'", "'volatile'", "'!volatile'", "'initial'", "'derivation'", "'primitive'", "'datatype'", "'serializable'", "'!serializable'", "'enum'", "'literal'", "'operation'", "'throws'", "'body'", "'property'", "'#'", "'composes'", "'!composes'", "'resolve'", "'!resolve'", "'abstract'", "'class'", "'extends'", "'interface'", "'-'", "'not'", "'/'", "'+'", "'>'", "'<'", "'>='", "'<='", "'<>'", "'and'", "'or'", "'xor'", "'implies'", "'->'", "'?.'", "'?->'", "'Map'", "'Tuple'", "'Boolean'", "'Integer'", "'Real'", "'String'", "'UnlimitedNatural'", "'OclAny'", "'OclInvalid'", "'OclVoid'", "'Set'", "'Bag'", "'Sequence'", "'Collection'", "'OrderedSet'", "'..'", "'++'", "'Lambda'", "'<-'", "'true'", "'false'", "'invalid'", "'null'", "'@'", "'pre'", "'['", "']'", "'|'", "'if'", "'then'", "'else'", "'endif'", "'elseif'", "'let'", "'self'", "'|?'", "'|1'", "'?'", "'&&'"
    };
    public static final int T__144=144;
    public static final int T__143=143;
    public static final int T__146=146;
    public static final int T__50=50;
    public static final int T__145=145;
    public static final int T__140=140;
    public static final int T__142=142;
    public static final int T__141=141;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__53=53;
    public static final int T__139=139;
    public static final int T__54=54;
    public static final int T__138=138;
    public static final int T__133=133;
    public static final int T__132=132;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int T__131=131;
    public static final int T__130=130;
    public static final int RULE_INT=6;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=13;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__154=154;
    public static final int T__151=151;
    public static final int T__150=150;
    public static final int T__153=153;
    public static final int T__152=152;
    public static final int RULE_SINGLE_QUOTED_STRING=4;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int RULE_DOUBLE_QUOTED_STRING=11;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int RULE_ESCAPED_ID=8;
    public static final int T__40=40;
    public static final int T__148=148;
    public static final int T__41=41;
    public static final int T__147=147;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__149=149;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int RULE_LETTER_CHARACTER=10;
    public static final int T__19=19;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__99=99;
    public static final int RULE_ESCAPED_CHARACTER=9;
    public static final int T__95=95;
    public static final int RULE_ML_SINGLE_QUOTED_STRING=12;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__122=122;
    public static final int T__70=70;
    public static final int T__121=121;
    public static final int T__71=71;
    public static final int T__124=124;
    public static final int T__72=72;
    public static final int T__123=123;
    public static final int T__120=120;
    public static final int RULE_UNQUOTED_STRING=5;
    public static final int RULE_SL_COMMENT=14;
    public static final int T__77=77;
    public static final int T__119=119;
    public static final int T__78=78;
    public static final int T__118=118;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__114=114;
    public static final int T__75=75;
    public static final int T__117=117;
    public static final int T__76=76;
    public static final int T__116=116;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__113=113;
    public static final int RULE_SIMPLE_ID=7;
    public static final int T__83=83;
    public static final int T__112=112;
    public static final int RULE_WS=15;
    public static final int RULE_ANY_OTHER=16;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalQVTimperativeParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalQVTimperativeParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);

        }


    public String[] getTokenNames() { return InternalQVTimperativeParser.tokenNames; }
    public String getGrammarFileName() { return "InternalQVTimperative.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private QVTimperativeGrammarAccess grammarAccess;

        public InternalQVTimperativeParser(TokenStream input, QVTimperativeGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "TopLevelCS";
       	}

       	@Override
       	protected QVTimperativeGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}



    // $ANTLR start "entryRuleTopLevelCS"
    // InternalQVTimperative.g:80:1: entryRuleTopLevelCS returns [EObject current=null] : iv_ruleTopLevelCS= ruleTopLevelCS EOF ;
    public final EObject entryRuleTopLevelCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTopLevelCS = null;


        try {
            // InternalQVTimperative.g:81:2: (iv_ruleTopLevelCS= ruleTopLevelCS EOF )
            // InternalQVTimperative.g:82:2: iv_ruleTopLevelCS= ruleTopLevelCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTopLevelCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTopLevelCS=ruleTopLevelCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTopLevelCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTopLevelCS"


    // $ANTLR start "ruleTopLevelCS"
    // InternalQVTimperative.g:89:1: ruleTopLevelCS returns [EObject current=null] : ( ( (lv_ownedImports_0_0= ruleImportCS ) )* ( ( (lv_ownedPackages_1_0= ruleQualifiedPackageCS ) ) | ( (lv_ownedTransformations_2_0= ruleTransformationCS ) ) | ( (lv_ownedMappings_3_0= ruleMappingCS ) ) | ( (lv_ownedQueries_4_0= ruleQueryCS ) ) )* ) ;
    public final EObject ruleTopLevelCS() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedImports_0_0 = null;

        EObject lv_ownedPackages_1_0 = null;

        EObject lv_ownedTransformations_2_0 = null;

        EObject lv_ownedMappings_3_0 = null;

        EObject lv_ownedQueries_4_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:92:28: ( ( ( (lv_ownedImports_0_0= ruleImportCS ) )* ( ( (lv_ownedPackages_1_0= ruleQualifiedPackageCS ) ) | ( (lv_ownedTransformations_2_0= ruleTransformationCS ) ) | ( (lv_ownedMappings_3_0= ruleMappingCS ) ) | ( (lv_ownedQueries_4_0= ruleQueryCS ) ) )* ) )
            // InternalQVTimperative.g:93:1: ( ( (lv_ownedImports_0_0= ruleImportCS ) )* ( ( (lv_ownedPackages_1_0= ruleQualifiedPackageCS ) ) | ( (lv_ownedTransformations_2_0= ruleTransformationCS ) ) | ( (lv_ownedMappings_3_0= ruleMappingCS ) ) | ( (lv_ownedQueries_4_0= ruleQueryCS ) ) )* )
            {
            // InternalQVTimperative.g:93:1: ( ( (lv_ownedImports_0_0= ruleImportCS ) )* ( ( (lv_ownedPackages_1_0= ruleQualifiedPackageCS ) ) | ( (lv_ownedTransformations_2_0= ruleTransformationCS ) ) | ( (lv_ownedMappings_3_0= ruleMappingCS ) ) | ( (lv_ownedQueries_4_0= ruleQueryCS ) ) )* )
            // InternalQVTimperative.g:93:2: ( (lv_ownedImports_0_0= ruleImportCS ) )* ( ( (lv_ownedPackages_1_0= ruleQualifiedPackageCS ) ) | ( (lv_ownedTransformations_2_0= ruleTransformationCS ) ) | ( (lv_ownedMappings_3_0= ruleMappingCS ) ) | ( (lv_ownedQueries_4_0= ruleQueryCS ) ) )*
            {
            // InternalQVTimperative.g:93:2: ( (lv_ownedImports_0_0= ruleImportCS ) )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==35) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalQVTimperative.g:94:1: (lv_ownedImports_0_0= ruleImportCS )
            	    {
            	    // InternalQVTimperative.g:94:1: (lv_ownedImports_0_0= ruleImportCS )
            	    // InternalQVTimperative.g:95:3: lv_ownedImports_0_0= ruleImportCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getTopLevelCSAccess().getOwnedImportsImportCSParserRuleCall_0_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    lv_ownedImports_0_0=ruleImportCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTopLevelCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedImports",
            	              		lv_ownedImports_0_0,
            	              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.ImportCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            // InternalQVTimperative.g:111:3: ( ( (lv_ownedPackages_1_0= ruleQualifiedPackageCS ) ) | ( (lv_ownedTransformations_2_0= ruleTransformationCS ) ) | ( (lv_ownedMappings_3_0= ruleMappingCS ) ) | ( (lv_ownedQueries_4_0= ruleQueryCS ) ) )*
            loop2:
            do {
                int alt2=5;
                switch ( input.LA(1) ) {
                case 49:
                    {
                    alt2=1;
                    }
                    break;
                case 60:
                    {
                    alt2=2;
                    }
                    break;
                case 25:
                case 39:
                    {
                    alt2=3;
                    }
                    break;
                case 51:
                case 52:
                    {
                    alt2=4;
                    }
                    break;

                }

                switch (alt2) {
            	case 1 :
            	    // InternalQVTimperative.g:111:4: ( (lv_ownedPackages_1_0= ruleQualifiedPackageCS ) )
            	    {
            	    // InternalQVTimperative.g:111:4: ( (lv_ownedPackages_1_0= ruleQualifiedPackageCS ) )
            	    // InternalQVTimperative.g:112:1: (lv_ownedPackages_1_0= ruleQualifiedPackageCS )
            	    {
            	    // InternalQVTimperative.g:112:1: (lv_ownedPackages_1_0= ruleQualifiedPackageCS )
            	    // InternalQVTimperative.g:113:3: lv_ownedPackages_1_0= ruleQualifiedPackageCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getTopLevelCSAccess().getOwnedPackagesQualifiedPackageCSParserRuleCall_1_0_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_4);
            	    lv_ownedPackages_1_0=ruleQualifiedPackageCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTopLevelCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedPackages",
            	              		lv_ownedPackages_1_0,
            	              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.QualifiedPackageCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalQVTimperative.g:130:6: ( (lv_ownedTransformations_2_0= ruleTransformationCS ) )
            	    {
            	    // InternalQVTimperative.g:130:6: ( (lv_ownedTransformations_2_0= ruleTransformationCS ) )
            	    // InternalQVTimperative.g:131:1: (lv_ownedTransformations_2_0= ruleTransformationCS )
            	    {
            	    // InternalQVTimperative.g:131:1: (lv_ownedTransformations_2_0= ruleTransformationCS )
            	    // InternalQVTimperative.g:132:3: lv_ownedTransformations_2_0= ruleTransformationCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getTopLevelCSAccess().getOwnedTransformationsTransformationCSParserRuleCall_1_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_4);
            	    lv_ownedTransformations_2_0=ruleTransformationCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTopLevelCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedTransformations",
            	              		lv_ownedTransformations_2_0,
            	              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.TransformationCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalQVTimperative.g:149:6: ( (lv_ownedMappings_3_0= ruleMappingCS ) )
            	    {
            	    // InternalQVTimperative.g:149:6: ( (lv_ownedMappings_3_0= ruleMappingCS ) )
            	    // InternalQVTimperative.g:150:1: (lv_ownedMappings_3_0= ruleMappingCS )
            	    {
            	    // InternalQVTimperative.g:150:1: (lv_ownedMappings_3_0= ruleMappingCS )
            	    // InternalQVTimperative.g:151:3: lv_ownedMappings_3_0= ruleMappingCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getTopLevelCSAccess().getOwnedMappingsMappingCSParserRuleCall_1_2_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_4);
            	    lv_ownedMappings_3_0=ruleMappingCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTopLevelCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedMappings",
            	              		lv_ownedMappings_3_0,
            	              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.MappingCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalQVTimperative.g:168:6: ( (lv_ownedQueries_4_0= ruleQueryCS ) )
            	    {
            	    // InternalQVTimperative.g:168:6: ( (lv_ownedQueries_4_0= ruleQueryCS ) )
            	    // InternalQVTimperative.g:169:1: (lv_ownedQueries_4_0= ruleQueryCS )
            	    {
            	    // InternalQVTimperative.g:169:1: (lv_ownedQueries_4_0= ruleQueryCS )
            	    // InternalQVTimperative.g:170:3: lv_ownedQueries_4_0= ruleQueryCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getTopLevelCSAccess().getOwnedQueriesQueryCSParserRuleCall_1_3_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_4);
            	    lv_ownedQueries_4_0=ruleQueryCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTopLevelCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedQueries",
            	              		lv_ownedQueries_4_0,
            	              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.QueryCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTopLevelCS"


    // $ANTLR start "entryRuleAddStatementCS"
    // InternalQVTimperative.g:194:1: entryRuleAddStatementCS returns [EObject current=null] : iv_ruleAddStatementCS= ruleAddStatementCS EOF ;
    public final EObject entryRuleAddStatementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAddStatementCS = null;


        try {
            // InternalQVTimperative.g:195:2: (iv_ruleAddStatementCS= ruleAddStatementCS EOF )
            // InternalQVTimperative.g:196:2: iv_ruleAddStatementCS= ruleAddStatementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAddStatementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAddStatementCS=ruleAddStatementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAddStatementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAddStatementCS"


    // $ANTLR start "ruleAddStatementCS"
    // InternalQVTimperative.g:203:1: ruleAddStatementCS returns [EObject current=null] : ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'add' ( ( ruleUnrestrictedName ) ) otherlv_6= '+=' ( (lv_ownedExpression_7_0= ruleExpCS ) ) otherlv_8= ';' ) ;
    public final EObject ruleAddStatementCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        EObject lv_observedProperties_1_0 = null;

        EObject lv_observedProperties_3_0 = null;

        EObject lv_ownedExpression_7_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:206:28: ( ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'add' ( ( ruleUnrestrictedName ) ) otherlv_6= '+=' ( (lv_ownedExpression_7_0= ruleExpCS ) ) otherlv_8= ';' ) )
            // InternalQVTimperative.g:207:1: ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'add' ( ( ruleUnrestrictedName ) ) otherlv_6= '+=' ( (lv_ownedExpression_7_0= ruleExpCS ) ) otherlv_8= ';' )
            {
            // InternalQVTimperative.g:207:1: ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'add' ( ( ruleUnrestrictedName ) ) otherlv_6= '+=' ( (lv_ownedExpression_7_0= ruleExpCS ) ) otherlv_8= ';' )
            // InternalQVTimperative.g:207:2: (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'add' ( ( ruleUnrestrictedName ) ) otherlv_6= '+=' ( (lv_ownedExpression_7_0= ruleExpCS ) ) otherlv_8= ';'
            {
            // InternalQVTimperative.g:207:2: (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )?
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==17) ) {
                alt4=1;
            }
            switch (alt4) {
                case 1 :
                    // InternalQVTimperative.g:207:4: otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )*
                    {
                    otherlv_0=(Token)match(input,17,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getAddStatementCSAccess().getObserveKeyword_0_0());

                    }
                    // InternalQVTimperative.g:211:1: ( (lv_observedProperties_1_0= rulePathNameCS ) )
                    // InternalQVTimperative.g:212:1: (lv_observedProperties_1_0= rulePathNameCS )
                    {
                    // InternalQVTimperative.g:212:1: (lv_observedProperties_1_0= rulePathNameCS )
                    // InternalQVTimperative.g:213:3: lv_observedProperties_1_0= rulePathNameCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getAddStatementCSAccess().getObservedPropertiesPathNameCSParserRuleCall_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_6);
                    lv_observedProperties_1_0=rulePathNameCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAddStatementCSRule());
                      	        }
                             		add(
                             			current,
                             			"observedProperties",
                              		lv_observedProperties_1_0,
                              		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:229:2: (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )*
                    loop3:
                    do {
                        int alt3=2;
                        int LA3_0 = input.LA(1);

                        if ( (LA3_0==18) ) {
                            alt3=1;
                        }


                        switch (alt3) {
                    	case 1 :
                    	    // InternalQVTimperative.g:229:4: otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) )
                    	    {
                    	    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getAddStatementCSAccess().getCommaKeyword_0_2_0());

                    	    }
                    	    // InternalQVTimperative.g:233:1: ( (lv_observedProperties_3_0= rulePathNameCS ) )
                    	    // InternalQVTimperative.g:234:1: (lv_observedProperties_3_0= rulePathNameCS )
                    	    {
                    	    // InternalQVTimperative.g:234:1: (lv_observedProperties_3_0= rulePathNameCS )
                    	    // InternalQVTimperative.g:235:3: lv_observedProperties_3_0= rulePathNameCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getAddStatementCSAccess().getObservedPropertiesPathNameCSParserRuleCall_0_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_6);
                    	    lv_observedProperties_3_0=rulePathNameCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAddStatementCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"observedProperties",
                    	              		lv_observedProperties_3_0,
                    	              		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop3;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_4=(Token)match(input,19,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getAddStatementCSAccess().getAddKeyword_1());

            }
            // InternalQVTimperative.g:255:1: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:256:1: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:256:1: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:257:3: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              		  /* */

            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getAddStatementCSRule());
              	        }

            }
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getAddStatementCSAccess().getTargetVariableConnectionVariableCrossReference_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_7);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_6=(Token)match(input,20,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getAddStatementCSAccess().getPlusSignEqualsSignKeyword_3());

            }
            // InternalQVTimperative.g:277:1: ( (lv_ownedExpression_7_0= ruleExpCS ) )
            // InternalQVTimperative.g:278:1: (lv_ownedExpression_7_0= ruleExpCS )
            {
            // InternalQVTimperative.g:278:1: (lv_ownedExpression_7_0= ruleExpCS )
            // InternalQVTimperative.g:279:3: lv_ownedExpression_7_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getAddStatementCSAccess().getOwnedExpressionExpCSParserRuleCall_4_0());

            }
            pushFollow(FollowSets000.FOLLOW_9);
            lv_ownedExpression_7_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAddStatementCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedExpression",
                      		lv_ownedExpression_7_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_8=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getAddStatementCSAccess().getSemicolonKeyword_5());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAddStatementCS"


    // $ANTLR start "entryRuleAppendParameterBindingCS"
    // InternalQVTimperative.g:307:1: entryRuleAppendParameterBindingCS returns [EObject current=null] : iv_ruleAppendParameterBindingCS= ruleAppendParameterBindingCS EOF ;
    public final EObject entryRuleAppendParameterBindingCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAppendParameterBindingCS = null;


        try {
            // InternalQVTimperative.g:308:2: (iv_ruleAppendParameterBindingCS= ruleAppendParameterBindingCS EOF )
            // InternalQVTimperative.g:309:2: iv_ruleAppendParameterBindingCS= ruleAppendParameterBindingCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAppendParameterBindingCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAppendParameterBindingCS=ruleAppendParameterBindingCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAppendParameterBindingCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAppendParameterBindingCS"


    // $ANTLR start "ruleAppendParameterBindingCS"
    // InternalQVTimperative.g:316:1: ruleAppendParameterBindingCS returns [EObject current=null] : ( ( ( ruleUnrestrictedName ) ) otherlv_1= 'appendsTo' ( ( ruleUnrestrictedName ) ) otherlv_3= ';' ) ;
    public final EObject ruleAppendParameterBindingCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;

         enterRule();

        try {
            // InternalQVTimperative.g:319:28: ( ( ( ( ruleUnrestrictedName ) ) otherlv_1= 'appendsTo' ( ( ruleUnrestrictedName ) ) otherlv_3= ';' ) )
            // InternalQVTimperative.g:320:1: ( ( ( ruleUnrestrictedName ) ) otherlv_1= 'appendsTo' ( ( ruleUnrestrictedName ) ) otherlv_3= ';' )
            {
            // InternalQVTimperative.g:320:1: ( ( ( ruleUnrestrictedName ) ) otherlv_1= 'appendsTo' ( ( ruleUnrestrictedName ) ) otherlv_3= ';' )
            // InternalQVTimperative.g:320:2: ( ( ruleUnrestrictedName ) ) otherlv_1= 'appendsTo' ( ( ruleUnrestrictedName ) ) otherlv_3= ';'
            {
            // InternalQVTimperative.g:320:2: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:321:1: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:321:1: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:322:3: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              		  /* */

            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getAppendParameterBindingCSRule());
              	        }

            }
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getAppendParameterBindingCSAccess().getReferredVariableAppendParameterCrossReference_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_10);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_1=(Token)match(input,22,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAppendParameterBindingCSAccess().getAppendsToKeyword_1());

            }
            // InternalQVTimperative.g:342:1: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:343:1: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:343:1: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:344:3: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              		  /* */

            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getAppendParameterBindingCSRule());
              	        }

            }
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getAppendParameterBindingCSAccess().getValueConnectionVariableCrossReference_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_9);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_3=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getAppendParameterBindingCSAccess().getSemicolonKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAppendParameterBindingCS"


    // $ANTLR start "entryRuleAppendParameterCS"
    // InternalQVTimperative.g:372:1: entryRuleAppendParameterCS returns [EObject current=null] : iv_ruleAppendParameterCS= ruleAppendParameterCS EOF ;
    public final EObject entryRuleAppendParameterCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAppendParameterCS = null;


        try {
            // InternalQVTimperative.g:373:2: (iv_ruleAppendParameterCS= ruleAppendParameterCS EOF )
            // InternalQVTimperative.g:374:2: iv_ruleAppendParameterCS= ruleAppendParameterCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAppendParameterCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAppendParameterCS=ruleAppendParameterCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAppendParameterCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAppendParameterCS"


    // $ANTLR start "ruleAppendParameterCS"
    // InternalQVTimperative.g:381:1: ruleAppendParameterCS returns [EObject current=null] : (otherlv_0= 'append' ( (lv_name_1_0= ruleUnrestrictedName ) ) otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) otherlv_4= ';' ) ;
    public final EObject ruleAppendParameterCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_ownedType_3_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:384:28: ( (otherlv_0= 'append' ( (lv_name_1_0= ruleUnrestrictedName ) ) otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) otherlv_4= ';' ) )
            // InternalQVTimperative.g:385:1: (otherlv_0= 'append' ( (lv_name_1_0= ruleUnrestrictedName ) ) otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) otherlv_4= ';' )
            {
            // InternalQVTimperative.g:385:1: (otherlv_0= 'append' ( (lv_name_1_0= ruleUnrestrictedName ) ) otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) otherlv_4= ';' )
            // InternalQVTimperative.g:385:3: otherlv_0= 'append' ( (lv_name_1_0= ruleUnrestrictedName ) ) otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) otherlv_4= ';'
            {
            otherlv_0=(Token)match(input,23,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getAppendParameterCSAccess().getAppendKeyword_0());

            }
            // InternalQVTimperative.g:389:1: ( (lv_name_1_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:390:1: (lv_name_1_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:390:1: (lv_name_1_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:391:3: lv_name_1_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getAppendParameterCSAccess().getNameUnrestrictedNameParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_11);
            lv_name_1_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAppendParameterCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_1_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_2=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getAppendParameterCSAccess().getColonKeyword_2());

            }
            // InternalQVTimperative.g:411:1: ( (lv_ownedType_3_0= ruleTypeExpCS ) )
            // InternalQVTimperative.g:412:1: (lv_ownedType_3_0= ruleTypeExpCS )
            {
            // InternalQVTimperative.g:412:1: (lv_ownedType_3_0= ruleTypeExpCS )
            // InternalQVTimperative.g:413:3: lv_ownedType_3_0= ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getAppendParameterCSAccess().getOwnedTypeTypeExpCSParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_9);
            lv_ownedType_3_0=ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAppendParameterCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedType",
                      		lv_ownedType_3_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_4=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getAppendParameterCSAccess().getSemicolonKeyword_4());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAppendParameterCS"


    // $ANTLR start "entryRuleBufferStatementCS"
    // InternalQVTimperative.g:441:1: entryRuleBufferStatementCS returns [EObject current=null] : iv_ruleBufferStatementCS= ruleBufferStatementCS EOF ;
    public final EObject entryRuleBufferStatementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBufferStatementCS = null;


        try {
            // InternalQVTimperative.g:442:2: (iv_ruleBufferStatementCS= ruleBufferStatementCS EOF )
            // InternalQVTimperative.g:443:2: iv_ruleBufferStatementCS= ruleBufferStatementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBufferStatementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBufferStatementCS=ruleBufferStatementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBufferStatementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBufferStatementCS"


    // $ANTLR start "ruleBufferStatementCS"
    // InternalQVTimperative.g:450:1: ruleBufferStatementCS returns [EObject current=null] : ( ( (lv_isStrict_0_0= 'strict' ) )? otherlv_1= 'buffer' ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= ':' ( (lv_ownedType_4_0= ruleTypeExpCS ) ) )? (otherlv_5= ':=' ( (lv_ownedExpression_6_0= ruleExpCS ) ) )? otherlv_7= ';' ) ;
    public final EObject ruleBufferStatementCS() throws RecognitionException {
        EObject current = null;

        Token lv_isStrict_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_ownedType_4_0 = null;

        EObject lv_ownedExpression_6_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:453:28: ( ( ( (lv_isStrict_0_0= 'strict' ) )? otherlv_1= 'buffer' ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= ':' ( (lv_ownedType_4_0= ruleTypeExpCS ) ) )? (otherlv_5= ':=' ( (lv_ownedExpression_6_0= ruleExpCS ) ) )? otherlv_7= ';' ) )
            // InternalQVTimperative.g:454:1: ( ( (lv_isStrict_0_0= 'strict' ) )? otherlv_1= 'buffer' ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= ':' ( (lv_ownedType_4_0= ruleTypeExpCS ) ) )? (otherlv_5= ':=' ( (lv_ownedExpression_6_0= ruleExpCS ) ) )? otherlv_7= ';' )
            {
            // InternalQVTimperative.g:454:1: ( ( (lv_isStrict_0_0= 'strict' ) )? otherlv_1= 'buffer' ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= ':' ( (lv_ownedType_4_0= ruleTypeExpCS ) ) )? (otherlv_5= ':=' ( (lv_ownedExpression_6_0= ruleExpCS ) ) )? otherlv_7= ';' )
            // InternalQVTimperative.g:454:2: ( (lv_isStrict_0_0= 'strict' ) )? otherlv_1= 'buffer' ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= ':' ( (lv_ownedType_4_0= ruleTypeExpCS ) ) )? (otherlv_5= ':=' ( (lv_ownedExpression_6_0= ruleExpCS ) ) )? otherlv_7= ';'
            {
            // InternalQVTimperative.g:454:2: ( (lv_isStrict_0_0= 'strict' ) )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==25) ) {
                alt5=1;
            }
            switch (alt5) {
                case 1 :
                    // InternalQVTimperative.g:455:1: (lv_isStrict_0_0= 'strict' )
                    {
                    // InternalQVTimperative.g:455:1: (lv_isStrict_0_0= 'strict' )
                    // InternalQVTimperative.g:456:3: lv_isStrict_0_0= 'strict'
                    {
                    lv_isStrict_0_0=(Token)match(input,25,FollowSets000.FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isStrict_0_0, grammarAccess.getBufferStatementCSAccess().getIsStrictStrictKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getBufferStatementCSRule());
                      	        }
                             		setWithLastConsumed(current, "isStrict", true, "strict");

                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,26,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getBufferStatementCSAccess().getBufferKeyword_1());

            }
            // InternalQVTimperative.g:473:1: ( (lv_name_2_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:474:1: (lv_name_2_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:474:1: (lv_name_2_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:475:3: lv_name_2_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getBufferStatementCSAccess().getNameUnrestrictedNameParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_14);
            lv_name_2_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getBufferStatementCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_2_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:491:2: (otherlv_3= ':' ( (lv_ownedType_4_0= ruleTypeExpCS ) ) )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==24) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // InternalQVTimperative.g:491:4: otherlv_3= ':' ( (lv_ownedType_4_0= ruleTypeExpCS ) )
                    {
                    otherlv_3=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getBufferStatementCSAccess().getColonKeyword_3_0());

                    }
                    // InternalQVTimperative.g:495:1: ( (lv_ownedType_4_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:496:1: (lv_ownedType_4_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:496:1: (lv_ownedType_4_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:497:3: lv_ownedType_4_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getBufferStatementCSAccess().getOwnedTypeTypeExpCSParserRuleCall_3_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_15);
                    lv_ownedType_4_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBufferStatementCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_4_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:513:4: (otherlv_5= ':=' ( (lv_ownedExpression_6_0= ruleExpCS ) ) )?
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==27) ) {
                alt7=1;
            }
            switch (alt7) {
                case 1 :
                    // InternalQVTimperative.g:513:6: otherlv_5= ':=' ( (lv_ownedExpression_6_0= ruleExpCS ) )
                    {
                    otherlv_5=(Token)match(input,27,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getBufferStatementCSAccess().getColonEqualsSignKeyword_4_0());

                    }
                    // InternalQVTimperative.g:517:1: ( (lv_ownedExpression_6_0= ruleExpCS ) )
                    // InternalQVTimperative.g:518:1: (lv_ownedExpression_6_0= ruleExpCS )
                    {
                    // InternalQVTimperative.g:518:1: (lv_ownedExpression_6_0= ruleExpCS )
                    // InternalQVTimperative.g:519:3: lv_ownedExpression_6_0= ruleExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getBufferStatementCSAccess().getOwnedExpressionExpCSParserRuleCall_4_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_ownedExpression_6_0=ruleExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBufferStatementCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedExpression",
                              		lv_ownedExpression_6_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getBufferStatementCSAccess().getSemicolonKeyword_5());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBufferStatementCS"


    // $ANTLR start "entryRuleCommitStatementCS"
    // InternalQVTimperative.g:547:1: entryRuleCommitStatementCS returns [EObject current=null] : iv_ruleCommitStatementCS= ruleCommitStatementCS EOF ;
    public final EObject entryRuleCommitStatementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCommitStatementCS = null;


        try {
            // InternalQVTimperative.g:548:2: (iv_ruleCommitStatementCS= ruleCommitStatementCS EOF )
            // InternalQVTimperative.g:549:2: iv_ruleCommitStatementCS= ruleCommitStatementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommitStatementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCommitStatementCS=ruleCommitStatementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommitStatementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommitStatementCS"


    // $ANTLR start "ruleCommitStatementCS"
    // InternalQVTimperative.g:556:1: ruleCommitStatementCS returns [EObject current=null] : (this_NewStatementCS_0= ruleNewStatementCS | this_SetStatementCS_1= ruleSetStatementCS ) ;
    public final EObject ruleCommitStatementCS() throws RecognitionException {
        EObject current = null;

        EObject this_NewStatementCS_0 = null;

        EObject this_SetStatementCS_1 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:559:28: ( (this_NewStatementCS_0= ruleNewStatementCS | this_SetStatementCS_1= ruleSetStatementCS ) )
            // InternalQVTimperative.g:560:1: (this_NewStatementCS_0= ruleNewStatementCS | this_SetStatementCS_1= ruleSetStatementCS )
            {
            // InternalQVTimperative.g:560:1: (this_NewStatementCS_0= ruleNewStatementCS | this_SetStatementCS_1= ruleSetStatementCS )
            int alt8=2;
            alt8 = dfa8.predict(input);
            switch (alt8) {
                case 1 :
                    // InternalQVTimperative.g:561:2: this_NewStatementCS_0= ruleNewStatementCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getCommitStatementCSAccess().getNewStatementCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NewStatementCS_0=ruleNewStatementCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NewStatementCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:574:2: this_SetStatementCS_1= ruleSetStatementCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getCommitStatementCSAccess().getSetStatementCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SetStatementCS_1=ruleSetStatementCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_SetStatementCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommitStatementCS"


    // $ANTLR start "entryRuleCheckStatementCS"
    // InternalQVTimperative.g:593:1: entryRuleCheckStatementCS returns [EObject current=null] : iv_ruleCheckStatementCS= ruleCheckStatementCS EOF ;
    public final EObject entryRuleCheckStatementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCheckStatementCS = null;


        try {
            // InternalQVTimperative.g:594:2: (iv_ruleCheckStatementCS= ruleCheckStatementCS EOF )
            // InternalQVTimperative.g:595:2: iv_ruleCheckStatementCS= ruleCheckStatementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCheckStatementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCheckStatementCS=ruleCheckStatementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCheckStatementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCheckStatementCS"


    // $ANTLR start "ruleCheckStatementCS"
    // InternalQVTimperative.g:602:1: ruleCheckStatementCS returns [EObject current=null] : (otherlv_0= 'check' ( (lv_ownedCondition_1_0= ruleExpCS ) ) otherlv_2= ';' ) ;
    public final EObject ruleCheckStatementCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_ownedCondition_1_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:605:28: ( (otherlv_0= 'check' ( (lv_ownedCondition_1_0= ruleExpCS ) ) otherlv_2= ';' ) )
            // InternalQVTimperative.g:606:1: (otherlv_0= 'check' ( (lv_ownedCondition_1_0= ruleExpCS ) ) otherlv_2= ';' )
            {
            // InternalQVTimperative.g:606:1: (otherlv_0= 'check' ( (lv_ownedCondition_1_0= ruleExpCS ) ) otherlv_2= ';' )
            // InternalQVTimperative.g:606:3: otherlv_0= 'check' ( (lv_ownedCondition_1_0= ruleExpCS ) ) otherlv_2= ';'
            {
            otherlv_0=(Token)match(input,28,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getCheckStatementCSAccess().getCheckKeyword_0());

            }
            // InternalQVTimperative.g:610:1: ( (lv_ownedCondition_1_0= ruleExpCS ) )
            // InternalQVTimperative.g:611:1: (lv_ownedCondition_1_0= ruleExpCS )
            {
            // InternalQVTimperative.g:611:1: (lv_ownedCondition_1_0= ruleExpCS )
            // InternalQVTimperative.g:612:3: lv_ownedCondition_1_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getCheckStatementCSAccess().getOwnedConditionExpCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_9);
            lv_ownedCondition_1_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCheckStatementCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedCondition",
                      		lv_ownedCondition_1_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_2=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getCheckStatementCSAccess().getSemicolonKeyword_2());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCheckStatementCS"


    // $ANTLR start "entryRuleControlStatementCS"
    // InternalQVTimperative.g:640:1: entryRuleControlStatementCS returns [EObject current=null] : iv_ruleControlStatementCS= ruleControlStatementCS EOF ;
    public final EObject entryRuleControlStatementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleControlStatementCS = null;


        try {
            // InternalQVTimperative.g:641:2: (iv_ruleControlStatementCS= ruleControlStatementCS EOF )
            // InternalQVTimperative.g:642:2: iv_ruleControlStatementCS= ruleControlStatementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getControlStatementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleControlStatementCS=ruleControlStatementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleControlStatementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleControlStatementCS"


    // $ANTLR start "ruleControlStatementCS"
    // InternalQVTimperative.g:649:1: ruleControlStatementCS returns [EObject current=null] : (this_AddStatementCS_0= ruleAddStatementCS | this_MappingCallCS_1= ruleMappingCallCS | this_MappingLoopCS_2= ruleMappingLoopCS ) ;
    public final EObject ruleControlStatementCS() throws RecognitionException {
        EObject current = null;

        EObject this_AddStatementCS_0 = null;

        EObject this_MappingCallCS_1 = null;

        EObject this_MappingLoopCS_2 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:652:28: ( (this_AddStatementCS_0= ruleAddStatementCS | this_MappingCallCS_1= ruleMappingCallCS | this_MappingLoopCS_2= ruleMappingLoopCS ) )
            // InternalQVTimperative.g:653:1: (this_AddStatementCS_0= ruleAddStatementCS | this_MappingCallCS_1= ruleMappingCallCS | this_MappingLoopCS_2= ruleMappingLoopCS )
            {
            // InternalQVTimperative.g:653:1: (this_AddStatementCS_0= ruleAddStatementCS | this_MappingCallCS_1= ruleMappingCallCS | this_MappingLoopCS_2= ruleMappingLoopCS )
            int alt9=3;
            alt9 = dfa9.predict(input);
            switch (alt9) {
                case 1 :
                    // InternalQVTimperative.g:654:2: this_AddStatementCS_0= ruleAddStatementCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getControlStatementCSAccess().getAddStatementCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AddStatementCS_0=ruleAddStatementCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AddStatementCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:667:2: this_MappingCallCS_1= ruleMappingCallCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getControlStatementCSAccess().getMappingCallCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_MappingCallCS_1=ruleMappingCallCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MappingCallCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:680:2: this_MappingLoopCS_2= ruleMappingLoopCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getControlStatementCSAccess().getMappingLoopCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_MappingLoopCS_2=ruleMappingLoopCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MappingLoopCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleControlStatementCS"


    // $ANTLR start "entryRuleDeclareStatementCS"
    // InternalQVTimperative.g:699:1: entryRuleDeclareStatementCS returns [EObject current=null] : iv_ruleDeclareStatementCS= ruleDeclareStatementCS EOF ;
    public final EObject entryRuleDeclareStatementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclareStatementCS = null;


        try {
            // InternalQVTimperative.g:700:2: (iv_ruleDeclareStatementCS= ruleDeclareStatementCS EOF )
            // InternalQVTimperative.g:701:2: iv_ruleDeclareStatementCS= ruleDeclareStatementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclareStatementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclareStatementCS=ruleDeclareStatementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclareStatementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclareStatementCS"


    // $ANTLR start "ruleDeclareStatementCS"
    // InternalQVTimperative.g:708:1: ruleDeclareStatementCS returns [EObject current=null] : ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isCheck_4_0= 'check' ) )? otherlv_5= 'var' ( (lv_name_6_0= ruleUnrestrictedName ) ) (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) )? otherlv_9= ':=' ( (lv_ownedExpression_10_0= ruleExpCS ) ) otherlv_11= ';' ) ;
    public final EObject ruleDeclareStatementCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token lv_isCheck_4_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        EObject lv_observedProperties_1_0 = null;

        EObject lv_observedProperties_3_0 = null;

        AntlrDatatypeRuleToken lv_name_6_0 = null;

        EObject lv_ownedType_8_0 = null;

        EObject lv_ownedExpression_10_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:711:28: ( ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isCheck_4_0= 'check' ) )? otherlv_5= 'var' ( (lv_name_6_0= ruleUnrestrictedName ) ) (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) )? otherlv_9= ':=' ( (lv_ownedExpression_10_0= ruleExpCS ) ) otherlv_11= ';' ) )
            // InternalQVTimperative.g:712:1: ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isCheck_4_0= 'check' ) )? otherlv_5= 'var' ( (lv_name_6_0= ruleUnrestrictedName ) ) (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) )? otherlv_9= ':=' ( (lv_ownedExpression_10_0= ruleExpCS ) ) otherlv_11= ';' )
            {
            // InternalQVTimperative.g:712:1: ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isCheck_4_0= 'check' ) )? otherlv_5= 'var' ( (lv_name_6_0= ruleUnrestrictedName ) ) (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) )? otherlv_9= ':=' ( (lv_ownedExpression_10_0= ruleExpCS ) ) otherlv_11= ';' )
            // InternalQVTimperative.g:712:2: (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isCheck_4_0= 'check' ) )? otherlv_5= 'var' ( (lv_name_6_0= ruleUnrestrictedName ) ) (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) )? otherlv_9= ':=' ( (lv_ownedExpression_10_0= ruleExpCS ) ) otherlv_11= ';'
            {
            // InternalQVTimperative.g:712:2: (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==17) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // InternalQVTimperative.g:712:4: otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )*
                    {
                    otherlv_0=(Token)match(input,17,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getDeclareStatementCSAccess().getObserveKeyword_0_0());

                    }
                    // InternalQVTimperative.g:716:1: ( (lv_observedProperties_1_0= rulePathNameCS ) )
                    // InternalQVTimperative.g:717:1: (lv_observedProperties_1_0= rulePathNameCS )
                    {
                    // InternalQVTimperative.g:717:1: (lv_observedProperties_1_0= rulePathNameCS )
                    // InternalQVTimperative.g:718:3: lv_observedProperties_1_0= rulePathNameCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getDeclareStatementCSAccess().getObservedPropertiesPathNameCSParserRuleCall_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_16);
                    lv_observedProperties_1_0=rulePathNameCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDeclareStatementCSRule());
                      	        }
                             		add(
                             			current,
                             			"observedProperties",
                              		lv_observedProperties_1_0,
                              		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:734:2: (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )*
                    loop10:
                    do {
                        int alt10=2;
                        int LA10_0 = input.LA(1);

                        if ( (LA10_0==18) ) {
                            alt10=1;
                        }


                        switch (alt10) {
                    	case 1 :
                    	    // InternalQVTimperative.g:734:4: otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) )
                    	    {
                    	    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getDeclareStatementCSAccess().getCommaKeyword_0_2_0());

                    	    }
                    	    // InternalQVTimperative.g:738:1: ( (lv_observedProperties_3_0= rulePathNameCS ) )
                    	    // InternalQVTimperative.g:739:1: (lv_observedProperties_3_0= rulePathNameCS )
                    	    {
                    	    // InternalQVTimperative.g:739:1: (lv_observedProperties_3_0= rulePathNameCS )
                    	    // InternalQVTimperative.g:740:3: lv_observedProperties_3_0= rulePathNameCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getDeclareStatementCSAccess().getObservedPropertiesPathNameCSParserRuleCall_0_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_16);
                    	    lv_observedProperties_3_0=rulePathNameCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getDeclareStatementCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"observedProperties",
                    	              		lv_observedProperties_3_0,
                    	              		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop10;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalQVTimperative.g:756:6: ( (lv_isCheck_4_0= 'check' ) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==28) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // InternalQVTimperative.g:757:1: (lv_isCheck_4_0= 'check' )
                    {
                    // InternalQVTimperative.g:757:1: (lv_isCheck_4_0= 'check' )
                    // InternalQVTimperative.g:758:3: lv_isCheck_4_0= 'check'
                    {
                    lv_isCheck_4_0=(Token)match(input,28,FollowSets000.FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isCheck_4_0, grammarAccess.getDeclareStatementCSAccess().getIsCheckCheckKeyword_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDeclareStatementCSRule());
                      	        }
                             		setWithLastConsumed(current, "isCheck", true, "check");

                    }

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,29,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getDeclareStatementCSAccess().getVarKeyword_2());

            }
            // InternalQVTimperative.g:775:1: ( (lv_name_6_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:776:1: (lv_name_6_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:776:1: (lv_name_6_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:777:3: lv_name_6_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getDeclareStatementCSAccess().getNameUnrestrictedNameParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_18);
            lv_name_6_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDeclareStatementCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_6_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:793:2: (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==24) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // InternalQVTimperative.g:793:4: otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) )
                    {
                    otherlv_7=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getDeclareStatementCSAccess().getColonKeyword_4_0());

                    }
                    // InternalQVTimperative.g:797:1: ( (lv_ownedType_8_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:798:1: (lv_ownedType_8_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:798:1: (lv_ownedType_8_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:799:3: lv_ownedType_8_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getDeclareStatementCSAccess().getOwnedTypeTypeExpCSParserRuleCall_4_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_19);
                    lv_ownedType_8_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDeclareStatementCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_8_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_9=(Token)match(input,27,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getDeclareStatementCSAccess().getColonEqualsSignKeyword_5());

            }
            // InternalQVTimperative.g:819:1: ( (lv_ownedExpression_10_0= ruleExpCS ) )
            // InternalQVTimperative.g:820:1: (lv_ownedExpression_10_0= ruleExpCS )
            {
            // InternalQVTimperative.g:820:1: (lv_ownedExpression_10_0= ruleExpCS )
            // InternalQVTimperative.g:821:3: lv_ownedExpression_10_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getDeclareStatementCSAccess().getOwnedExpressionExpCSParserRuleCall_6_0());

            }
            pushFollow(FollowSets000.FOLLOW_9);
            lv_ownedExpression_10_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDeclareStatementCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedExpression",
                      		lv_ownedExpression_10_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_11=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_11, grammarAccess.getDeclareStatementCSAccess().getSemicolonKeyword_7());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclareStatementCS"


    // $ANTLR start "entryRuleDirectionCS"
    // InternalQVTimperative.g:849:1: entryRuleDirectionCS returns [EObject current=null] : iv_ruleDirectionCS= ruleDirectionCS EOF ;
    public final EObject entryRuleDirectionCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDirectionCS = null;


        try {
            // InternalQVTimperative.g:850:2: (iv_ruleDirectionCS= ruleDirectionCS EOF )
            // InternalQVTimperative.g:851:2: iv_ruleDirectionCS= ruleDirectionCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDirectionCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDirectionCS=ruleDirectionCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDirectionCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDirectionCS"


    // $ANTLR start "ruleDirectionCS"
    // InternalQVTimperative.g:858:1: ruleDirectionCS returns [EObject current=null] : ( () ( ( (lv_isChecked_1_0= 'check' ) ) | ( (lv_isEnforced_2_0= 'enforce' ) ) )? ( (lv_name_3_0= ruleUnrestrictedName ) )? (otherlv_4= 'imports' ( ( ruleUnrestrictedName ) ) (otherlv_6= ',' ( ( ruleUnrestrictedName ) ) )* )? ) ;
    public final EObject ruleDirectionCS() throws RecognitionException {
        EObject current = null;

        Token lv_isChecked_1_0=null;
        Token lv_isEnforced_2_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_3_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:861:28: ( ( () ( ( (lv_isChecked_1_0= 'check' ) ) | ( (lv_isEnforced_2_0= 'enforce' ) ) )? ( (lv_name_3_0= ruleUnrestrictedName ) )? (otherlv_4= 'imports' ( ( ruleUnrestrictedName ) ) (otherlv_6= ',' ( ( ruleUnrestrictedName ) ) )* )? ) )
            // InternalQVTimperative.g:862:1: ( () ( ( (lv_isChecked_1_0= 'check' ) ) | ( (lv_isEnforced_2_0= 'enforce' ) ) )? ( (lv_name_3_0= ruleUnrestrictedName ) )? (otherlv_4= 'imports' ( ( ruleUnrestrictedName ) ) (otherlv_6= ',' ( ( ruleUnrestrictedName ) ) )* )? )
            {
            // InternalQVTimperative.g:862:1: ( () ( ( (lv_isChecked_1_0= 'check' ) ) | ( (lv_isEnforced_2_0= 'enforce' ) ) )? ( (lv_name_3_0= ruleUnrestrictedName ) )? (otherlv_4= 'imports' ( ( ruleUnrestrictedName ) ) (otherlv_6= ',' ( ( ruleUnrestrictedName ) ) )* )? )
            // InternalQVTimperative.g:862:2: () ( ( (lv_isChecked_1_0= 'check' ) ) | ( (lv_isEnforced_2_0= 'enforce' ) ) )? ( (lv_name_3_0= ruleUnrestrictedName ) )? (otherlv_4= 'imports' ( ( ruleUnrestrictedName ) ) (otherlv_6= ',' ( ( ruleUnrestrictedName ) ) )* )?
            {
            // InternalQVTimperative.g:862:2: ()
            // InternalQVTimperative.g:863:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getDirectionCSAccess().getDirectionCSAction_0(),
                          current);

            }

            }

            // InternalQVTimperative.g:871:2: ( ( (lv_isChecked_1_0= 'check' ) ) | ( (lv_isEnforced_2_0= 'enforce' ) ) )?
            int alt14=3;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==28) ) {
                int LA14_1 = input.LA(2);

                if ( (synpred18_InternalQVTimperative()) ) {
                    alt14=1;
                }
            }
            else if ( (LA14_0==30) ) {
                int LA14_2 = input.LA(2);

                if ( (synpred19_InternalQVTimperative()) ) {
                    alt14=2;
                }
            }
            switch (alt14) {
                case 1 :
                    // InternalQVTimperative.g:871:3: ( (lv_isChecked_1_0= 'check' ) )
                    {
                    // InternalQVTimperative.g:871:3: ( (lv_isChecked_1_0= 'check' ) )
                    // InternalQVTimperative.g:872:1: (lv_isChecked_1_0= 'check' )
                    {
                    // InternalQVTimperative.g:872:1: (lv_isChecked_1_0= 'check' )
                    // InternalQVTimperative.g:873:3: lv_isChecked_1_0= 'check'
                    {
                    lv_isChecked_1_0=(Token)match(input,28,FollowSets000.FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isChecked_1_0, grammarAccess.getDirectionCSAccess().getIsCheckedCheckKeyword_1_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDirectionCSRule());
                      	        }
                             		setWithLastConsumed(current, "isChecked", true, "check");

                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:887:6: ( (lv_isEnforced_2_0= 'enforce' ) )
                    {
                    // InternalQVTimperative.g:887:6: ( (lv_isEnforced_2_0= 'enforce' ) )
                    // InternalQVTimperative.g:888:1: (lv_isEnforced_2_0= 'enforce' )
                    {
                    // InternalQVTimperative.g:888:1: (lv_isEnforced_2_0= 'enforce' )
                    // InternalQVTimperative.g:889:3: lv_isEnforced_2_0= 'enforce'
                    {
                    lv_isEnforced_2_0=(Token)match(input,30,FollowSets000.FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isEnforced_2_0, grammarAccess.getDirectionCSAccess().getIsEnforcedEnforceKeyword_1_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDirectionCSRule());
                      	        }
                             		setWithLastConsumed(current, "isEnforced", true, "enforce");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:902:4: ( (lv_name_3_0= ruleUnrestrictedName ) )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( ((LA15_0>=RULE_SIMPLE_ID && LA15_0<=RULE_ESCAPED_ID)||LA15_0==17||LA15_0==19||(LA15_0>=22 && LA15_0<=23)||(LA15_0>=25 && LA15_0<=26)||(LA15_0>=28 && LA15_0<=30)||LA15_0==34||(LA15_0>=38 && LA15_0<=39)||(LA15_0>=43 && LA15_0<=49)||(LA15_0>=51 && LA15_0<=52)||(LA15_0>=55 && LA15_0<=57)||(LA15_0>=59 && LA15_0<=64)||LA15_0==66||LA15_0==68||LA15_0==70||LA15_0==73||LA15_0==75||LA15_0==77||(LA15_0>=79 && LA15_0<=83)||(LA15_0>=85 && LA15_0<=90)||LA15_0==92||LA15_0==94||(LA15_0>=96 && LA15_0<=99)) ) {
                alt15=1;
            }
            else if ( (LA15_0==31) ) {
                int LA15_2 = input.LA(2);

                if ( (LA15_2==31) ) {
                    int LA15_4 = input.LA(3);

                    if ( ((LA15_4>=RULE_SIMPLE_ID && LA15_4<=RULE_ESCAPED_ID)||LA15_4==17||LA15_4==19||(LA15_4>=22 && LA15_4<=23)||(LA15_4>=25 && LA15_4<=26)||(LA15_4>=28 && LA15_4<=31)||LA15_4==34||(LA15_4>=38 && LA15_4<=39)||(LA15_4>=43 && LA15_4<=49)||(LA15_4>=51 && LA15_4<=52)||(LA15_4>=55 && LA15_4<=57)||(LA15_4>=59 && LA15_4<=64)||LA15_4==66||LA15_4==68||LA15_4==70||LA15_4==73||LA15_4==75||LA15_4==77||(LA15_4>=79 && LA15_4<=83)||(LA15_4>=85 && LA15_4<=90)||LA15_4==92||LA15_4==94||(LA15_4>=96 && LA15_4<=99)) ) {
                        alt15=1;
                    }
                }
                else if ( (LA15_2==EOF||LA15_2==21) ) {
                    alt15=1;
                }
            }
            switch (alt15) {
                case 1 :
                    // InternalQVTimperative.g:903:1: (lv_name_3_0= ruleUnrestrictedName )
                    {
                    // InternalQVTimperative.g:903:1: (lv_name_3_0= ruleUnrestrictedName )
                    // InternalQVTimperative.g:904:3: lv_name_3_0= ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getDirectionCSAccess().getNameUnrestrictedNameParserRuleCall_2_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_21);
                    lv_name_3_0=ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDirectionCSRule());
                      	        }
                             		set(
                             			current,
                             			"name",
                              		lv_name_3_0,
                              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:920:3: (otherlv_4= 'imports' ( ( ruleUnrestrictedName ) ) (otherlv_6= ',' ( ( ruleUnrestrictedName ) ) )* )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==31) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // InternalQVTimperative.g:920:5: otherlv_4= 'imports' ( ( ruleUnrestrictedName ) ) (otherlv_6= ',' ( ( ruleUnrestrictedName ) ) )*
                    {
                    otherlv_4=(Token)match(input,31,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getDirectionCSAccess().getImportsKeyword_3_0());

                    }
                    // InternalQVTimperative.g:924:1: ( ( ruleUnrestrictedName ) )
                    // InternalQVTimperative.g:925:1: ( ruleUnrestrictedName )
                    {
                    // InternalQVTimperative.g:925:1: ( ruleUnrestrictedName )
                    // InternalQVTimperative.g:926:3: ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      		  /* */

                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getDirectionCSRule());
                      	        }

                    }
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getDirectionCSAccess().getImportsPackageCrossReference_3_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_22);
                    ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:942:2: (otherlv_6= ',' ( ( ruleUnrestrictedName ) ) )*
                    loop16:
                    do {
                        int alt16=2;
                        int LA16_0 = input.LA(1);

                        if ( (LA16_0==18) ) {
                            alt16=1;
                        }


                        switch (alt16) {
                    	case 1 :
                    	    // InternalQVTimperative.g:942:4: otherlv_6= ',' ( ( ruleUnrestrictedName ) )
                    	    {
                    	    otherlv_6=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_6, grammarAccess.getDirectionCSAccess().getCommaKeyword_3_2_0());

                    	    }
                    	    // InternalQVTimperative.g:946:1: ( ( ruleUnrestrictedName ) )
                    	    // InternalQVTimperative.g:947:1: ( ruleUnrestrictedName )
                    	    {
                    	    // InternalQVTimperative.g:947:1: ( ruleUnrestrictedName )
                    	    // InternalQVTimperative.g:948:3: ruleUnrestrictedName
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      		  /* */

                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      			if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getDirectionCSRule());
                    	      	        }

                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getDirectionCSAccess().getImportsPackageCrossReference_3_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_22);
                    	    ruleUnrestrictedName();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop16;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDirectionCS"


    // $ANTLR start "entryRuleGuardParameterBindingCS"
    // InternalQVTimperative.g:972:1: entryRuleGuardParameterBindingCS returns [EObject current=null] : iv_ruleGuardParameterBindingCS= ruleGuardParameterBindingCS EOF ;
    public final EObject entryRuleGuardParameterBindingCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGuardParameterBindingCS = null;


        try {
            // InternalQVTimperative.g:973:2: (iv_ruleGuardParameterBindingCS= ruleGuardParameterBindingCS EOF )
            // InternalQVTimperative.g:974:2: iv_ruleGuardParameterBindingCS= ruleGuardParameterBindingCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGuardParameterBindingCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleGuardParameterBindingCS=ruleGuardParameterBindingCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGuardParameterBindingCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGuardParameterBindingCS"


    // $ANTLR start "ruleGuardParameterBindingCS"
    // InternalQVTimperative.g:981:1: ruleGuardParameterBindingCS returns [EObject current=null] : ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'consumes' ( ( ruleUnrestrictedName ) ) otherlv_4= ';' ) ;
    public final EObject ruleGuardParameterBindingCS() throws RecognitionException {
        EObject current = null;

        Token lv_isCheck_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;

         enterRule();

        try {
            // InternalQVTimperative.g:984:28: ( ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'consumes' ( ( ruleUnrestrictedName ) ) otherlv_4= ';' ) )
            // InternalQVTimperative.g:985:1: ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'consumes' ( ( ruleUnrestrictedName ) ) otherlv_4= ';' )
            {
            // InternalQVTimperative.g:985:1: ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'consumes' ( ( ruleUnrestrictedName ) ) otherlv_4= ';' )
            // InternalQVTimperative.g:985:2: ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'consumes' ( ( ruleUnrestrictedName ) ) otherlv_4= ';'
            {
            // InternalQVTimperative.g:985:2: ( (lv_isCheck_0_0= 'check' ) )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==28) ) {
                int LA18_1 = input.LA(2);

                if ( ((LA18_1>=RULE_SIMPLE_ID && LA18_1<=RULE_ESCAPED_ID)||LA18_1==17||LA18_1==19||(LA18_1>=22 && LA18_1<=23)||(LA18_1>=25 && LA18_1<=26)||(LA18_1>=28 && LA18_1<=31)||LA18_1==34||(LA18_1>=38 && LA18_1<=39)||(LA18_1>=43 && LA18_1<=49)||(LA18_1>=51 && LA18_1<=52)||(LA18_1>=55 && LA18_1<=57)||(LA18_1>=59 && LA18_1<=64)||LA18_1==66||LA18_1==68||LA18_1==70||LA18_1==73||LA18_1==75||LA18_1==77||(LA18_1>=79 && LA18_1<=83)||(LA18_1>=85 && LA18_1<=90)||LA18_1==92||LA18_1==94||(LA18_1>=96 && LA18_1<=99)) ) {
                    alt18=1;
                }
            }
            switch (alt18) {
                case 1 :
                    // InternalQVTimperative.g:986:1: (lv_isCheck_0_0= 'check' )
                    {
                    // InternalQVTimperative.g:986:1: (lv_isCheck_0_0= 'check' )
                    // InternalQVTimperative.g:987:3: lv_isCheck_0_0= 'check'
                    {
                    lv_isCheck_0_0=(Token)match(input,28,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isCheck_0_0, grammarAccess.getGuardParameterBindingCSAccess().getIsCheckCheckKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getGuardParameterBindingCSRule());
                      	        }
                             		setWithLastConsumed(current, "isCheck", true, "check");

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:1000:3: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:1001:1: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:1001:1: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:1002:3: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              		  /* */

            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getGuardParameterBindingCSRule());
              	        }

            }
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getGuardParameterBindingCSAccess().getReferredVariableGuardParameterCrossReference_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_23);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_2=(Token)match(input,32,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getGuardParameterBindingCSAccess().getConsumesKeyword_2());

            }
            // InternalQVTimperative.g:1022:1: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:1023:1: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:1023:1: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:1024:3: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              		  /* */

            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getGuardParameterBindingCSRule());
              	        }

            }
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getGuardParameterBindingCSAccess().getValueConnectionVariableCrossReference_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_9);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_4=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getGuardParameterBindingCSAccess().getSemicolonKeyword_4());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGuardParameterBindingCS"


    // $ANTLR start "entryRuleGuardParameterCS"
    // InternalQVTimperative.g:1052:1: entryRuleGuardParameterCS returns [EObject current=null] : iv_ruleGuardParameterCS= ruleGuardParameterCS EOF ;
    public final EObject entryRuleGuardParameterCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGuardParameterCS = null;


        try {
            // InternalQVTimperative.g:1053:2: (iv_ruleGuardParameterCS= ruleGuardParameterCS EOF )
            // InternalQVTimperative.g:1054:2: iv_ruleGuardParameterCS= ruleGuardParameterCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGuardParameterCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleGuardParameterCS=ruleGuardParameterCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGuardParameterCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGuardParameterCS"


    // $ANTLR start "ruleGuardParameterCS"
    // InternalQVTimperative.g:1061:1: ruleGuardParameterCS returns [EObject current=null] : (otherlv_0= 'guard' otherlv_1= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' ( (lv_ownedType_5_0= ruleTypeExpCS ) ) (otherlv_6= 'success' ( ( ruleUnrestrictedName ) ) )? otherlv_8= ';' ) ;
    public final EObject ruleGuardParameterCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_ownedType_5_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:1064:28: ( (otherlv_0= 'guard' otherlv_1= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' ( (lv_ownedType_5_0= ruleTypeExpCS ) ) (otherlv_6= 'success' ( ( ruleUnrestrictedName ) ) )? otherlv_8= ';' ) )
            // InternalQVTimperative.g:1065:1: (otherlv_0= 'guard' otherlv_1= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' ( (lv_ownedType_5_0= ruleTypeExpCS ) ) (otherlv_6= 'success' ( ( ruleUnrestrictedName ) ) )? otherlv_8= ';' )
            {
            // InternalQVTimperative.g:1065:1: (otherlv_0= 'guard' otherlv_1= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' ( (lv_ownedType_5_0= ruleTypeExpCS ) ) (otherlv_6= 'success' ( ( ruleUnrestrictedName ) ) )? otherlv_8= ';' )
            // InternalQVTimperative.g:1065:3: otherlv_0= 'guard' otherlv_1= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' ( (lv_ownedType_5_0= ruleTypeExpCS ) ) (otherlv_6= 'success' ( ( ruleUnrestrictedName ) ) )? otherlv_8= ';'
            {
            otherlv_0=(Token)match(input,33,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getGuardParameterCSAccess().getGuardKeyword_0());

            }
            otherlv_1=(Token)match(input,24,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getGuardParameterCSAccess().getColonKeyword_1());

            }
            // InternalQVTimperative.g:1073:1: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:1074:1: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:1074:1: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:1075:3: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              		  /* */

            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getGuardParameterCSRule());
              	        }

            }
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getGuardParameterCSAccess().getReferredTypedModelImperativeTypedModelCrossReference_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_5);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:1091:2: ( (lv_name_3_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:1092:1: (lv_name_3_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:1092:1: (lv_name_3_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:1093:3: lv_name_3_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getGuardParameterCSAccess().getNameUnrestrictedNameParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_11);
            lv_name_3_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getGuardParameterCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_3_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_4=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getGuardParameterCSAccess().getColonKeyword_4());

            }
            // InternalQVTimperative.g:1113:1: ( (lv_ownedType_5_0= ruleTypeExpCS ) )
            // InternalQVTimperative.g:1114:1: (lv_ownedType_5_0= ruleTypeExpCS )
            {
            // InternalQVTimperative.g:1114:1: (lv_ownedType_5_0= ruleTypeExpCS )
            // InternalQVTimperative.g:1115:3: lv_ownedType_5_0= ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getGuardParameterCSAccess().getOwnedTypeTypeExpCSParserRuleCall_5_0());

            }
            pushFollow(FollowSets000.FOLLOW_24);
            lv_ownedType_5_0=ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getGuardParameterCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedType",
                      		lv_ownedType_5_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:1131:2: (otherlv_6= 'success' ( ( ruleUnrestrictedName ) ) )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==34) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // InternalQVTimperative.g:1131:4: otherlv_6= 'success' ( ( ruleUnrestrictedName ) )
                    {
                    otherlv_6=(Token)match(input,34,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getGuardParameterCSAccess().getSuccessKeyword_6_0());

                    }
                    // InternalQVTimperative.g:1135:1: ( ( ruleUnrestrictedName ) )
                    // InternalQVTimperative.g:1136:1: ( ruleUnrestrictedName )
                    {
                    // InternalQVTimperative.g:1136:1: ( ruleUnrestrictedName )
                    // InternalQVTimperative.g:1137:3: ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      		  /* */

                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getGuardParameterCSRule());
                      	        }

                    }
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getGuardParameterCSAccess().getSuccessPropertyPropertyCrossReference_6_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getGuardParameterCSAccess().getSemicolonKeyword_7());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGuardParameterCS"


    // $ANTLR start "entryRuleGuardStatementCS"
    // InternalQVTimperative.g:1165:1: entryRuleGuardStatementCS returns [EObject current=null] : iv_ruleGuardStatementCS= ruleGuardStatementCS EOF ;
    public final EObject entryRuleGuardStatementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGuardStatementCS = null;


        try {
            // InternalQVTimperative.g:1166:2: (iv_ruleGuardStatementCS= ruleGuardStatementCS EOF )
            // InternalQVTimperative.g:1167:2: iv_ruleGuardStatementCS= ruleGuardStatementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGuardStatementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleGuardStatementCS=ruleGuardStatementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGuardStatementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGuardStatementCS"


    // $ANTLR start "ruleGuardStatementCS"
    // InternalQVTimperative.g:1174:1: ruleGuardStatementCS returns [EObject current=null] : (this_BufferStatementCS_0= ruleBufferStatementCS | this_DeclareStatementCS_1= ruleDeclareStatementCS | this_DeclareStatementCS_2= ruleDeclareStatementCS | this_CheckStatementCS_3= ruleCheckStatementCS ) ;
    public final EObject ruleGuardStatementCS() throws RecognitionException {
        EObject current = null;

        EObject this_BufferStatementCS_0 = null;

        EObject this_DeclareStatementCS_1 = null;

        EObject this_DeclareStatementCS_2 = null;

        EObject this_CheckStatementCS_3 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:1177:28: ( (this_BufferStatementCS_0= ruleBufferStatementCS | this_DeclareStatementCS_1= ruleDeclareStatementCS | this_DeclareStatementCS_2= ruleDeclareStatementCS | this_CheckStatementCS_3= ruleCheckStatementCS ) )
            // InternalQVTimperative.g:1178:1: (this_BufferStatementCS_0= ruleBufferStatementCS | this_DeclareStatementCS_1= ruleDeclareStatementCS | this_DeclareStatementCS_2= ruleDeclareStatementCS | this_CheckStatementCS_3= ruleCheckStatementCS )
            {
            // InternalQVTimperative.g:1178:1: (this_BufferStatementCS_0= ruleBufferStatementCS | this_DeclareStatementCS_1= ruleDeclareStatementCS | this_DeclareStatementCS_2= ruleDeclareStatementCS | this_CheckStatementCS_3= ruleCheckStatementCS )
            int alt20=4;
            switch ( input.LA(1) ) {
            case 25:
            case 26:
                {
                alt20=1;
                }
                break;
            case 17:
                {
                int LA20_3 = input.LA(2);

                if ( (synpred26_InternalQVTimperative()) ) {
                    alt20=2;
                }
                else if ( (synpred27_InternalQVTimperative()) ) {
                    alt20=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 20, 3, input);

                    throw nvae;
                }
                }
                break;
            case 28:
                {
                int LA20_4 = input.LA(2);

                if ( (synpred26_InternalQVTimperative()) ) {
                    alt20=2;
                }
                else if ( (synpred27_InternalQVTimperative()) ) {
                    alt20=3;
                }
                else if ( (true) ) {
                    alt20=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 20, 4, input);

                    throw nvae;
                }
                }
                break;
            case 29:
                {
                int LA20_5 = input.LA(2);

                if ( (synpred26_InternalQVTimperative()) ) {
                    alt20=2;
                }
                else if ( (synpred27_InternalQVTimperative()) ) {
                    alt20=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 20, 5, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }

            switch (alt20) {
                case 1 :
                    // InternalQVTimperative.g:1179:2: this_BufferStatementCS_0= ruleBufferStatementCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getGuardStatementCSAccess().getBufferStatementCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BufferStatementCS_0=ruleBufferStatementCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BufferStatementCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:1192:2: this_DeclareStatementCS_1= ruleDeclareStatementCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getGuardStatementCSAccess().getDeclareStatementCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DeclareStatementCS_1=ruleDeclareStatementCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_DeclareStatementCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:1205:2: this_DeclareStatementCS_2= ruleDeclareStatementCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getGuardStatementCSAccess().getDeclareStatementCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DeclareStatementCS_2=ruleDeclareStatementCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_DeclareStatementCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:1218:2: this_CheckStatementCS_3= ruleCheckStatementCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getGuardStatementCSAccess().getCheckStatementCSParserRuleCall_3());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CheckStatementCS_3=ruleCheckStatementCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_CheckStatementCS_3;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGuardStatementCS"


    // $ANTLR start "entryRuleImportCS"
    // InternalQVTimperative.g:1237:1: entryRuleImportCS returns [EObject current=null] : iv_ruleImportCS= ruleImportCS EOF ;
    public final EObject entryRuleImportCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImportCS = null;


        try {
            // InternalQVTimperative.g:1238:2: (iv_ruleImportCS= ruleImportCS EOF )
            // InternalQVTimperative.g:1239:2: iv_ruleImportCS= ruleImportCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleImportCS=ruleImportCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImportCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImportCS"


    // $ANTLR start "ruleImportCS"
    // InternalQVTimperative.g:1246:1: ruleImportCS returns [EObject current=null] : (otherlv_0= 'import' ( ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= ':' )? ( (lv_ownedPathName_3_0= ruleURIPathNameCS ) ) ( ( (lv_isAll_4_0= '::' ) ) otherlv_5= '*' )? otherlv_6= ';' ) ;
    public final EObject ruleImportCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token lv_isAll_4_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_ownedPathName_3_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:1249:28: ( (otherlv_0= 'import' ( ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= ':' )? ( (lv_ownedPathName_3_0= ruleURIPathNameCS ) ) ( ( (lv_isAll_4_0= '::' ) ) otherlv_5= '*' )? otherlv_6= ';' ) )
            // InternalQVTimperative.g:1250:1: (otherlv_0= 'import' ( ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= ':' )? ( (lv_ownedPathName_3_0= ruleURIPathNameCS ) ) ( ( (lv_isAll_4_0= '::' ) ) otherlv_5= '*' )? otherlv_6= ';' )
            {
            // InternalQVTimperative.g:1250:1: (otherlv_0= 'import' ( ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= ':' )? ( (lv_ownedPathName_3_0= ruleURIPathNameCS ) ) ( ( (lv_isAll_4_0= '::' ) ) otherlv_5= '*' )? otherlv_6= ';' )
            // InternalQVTimperative.g:1250:3: otherlv_0= 'import' ( ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= ':' )? ( (lv_ownedPathName_3_0= ruleURIPathNameCS ) ) ( ( (lv_isAll_4_0= '::' ) ) otherlv_5= '*' )? otherlv_6= ';'
            {
            otherlv_0=(Token)match(input,35,FollowSets000.FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getImportCSAccess().getImportKeyword_0());

            }
            // InternalQVTimperative.g:1254:1: ( ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= ':' )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==RULE_SIMPLE_ID) ) {
                int LA21_1 = input.LA(2);

                if ( (LA21_1==24) ) {
                    alt21=1;
                }
            }
            else if ( (LA21_0==RULE_ESCAPED_ID) ) {
                int LA21_2 = input.LA(2);

                if ( (LA21_2==24) ) {
                    alt21=1;
                }
            }
            switch (alt21) {
                case 1 :
                    // InternalQVTimperative.g:1254:2: ( (lv_name_1_0= ruleIdentifier ) ) otherlv_2= ':'
                    {
                    // InternalQVTimperative.g:1254:2: ( (lv_name_1_0= ruleIdentifier ) )
                    // InternalQVTimperative.g:1255:1: (lv_name_1_0= ruleIdentifier )
                    {
                    // InternalQVTimperative.g:1255:1: (lv_name_1_0= ruleIdentifier )
                    // InternalQVTimperative.g:1256:3: lv_name_1_0= ruleIdentifier
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getImportCSAccess().getNameIdentifierParserRuleCall_1_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_name_1_0=ruleIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getImportCSRule());
                      	        }
                             		set(
                             			current,
                             			"name",
                              		lv_name_1_0,
                              		"org.eclipse.ocl.xtext.base.Base.Identifier");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    otherlv_2=(Token)match(input,24,FollowSets000.FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getImportCSAccess().getColonKeyword_1_1());

                    }

                    }
                    break;

            }

            // InternalQVTimperative.g:1276:3: ( (lv_ownedPathName_3_0= ruleURIPathNameCS ) )
            // InternalQVTimperative.g:1277:1: (lv_ownedPathName_3_0= ruleURIPathNameCS )
            {
            // InternalQVTimperative.g:1277:1: (lv_ownedPathName_3_0= ruleURIPathNameCS )
            // InternalQVTimperative.g:1278:3: lv_ownedPathName_3_0= ruleURIPathNameCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getImportCSAccess().getOwnedPathNameURIPathNameCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_26);
            lv_ownedPathName_3_0=ruleURIPathNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getImportCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedPathName",
                      		lv_ownedPathName_3_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.URIPathNameCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:1294:2: ( ( (lv_isAll_4_0= '::' ) ) otherlv_5= '*' )?
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==36) ) {
                alt22=1;
            }
            switch (alt22) {
                case 1 :
                    // InternalQVTimperative.g:1294:3: ( (lv_isAll_4_0= '::' ) ) otherlv_5= '*'
                    {
                    // InternalQVTimperative.g:1294:3: ( (lv_isAll_4_0= '::' ) )
                    // InternalQVTimperative.g:1295:1: (lv_isAll_4_0= '::' )
                    {
                    // InternalQVTimperative.g:1295:1: (lv_isAll_4_0= '::' )
                    // InternalQVTimperative.g:1296:3: lv_isAll_4_0= '::'
                    {
                    lv_isAll_4_0=(Token)match(input,36,FollowSets000.FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isAll_4_0, grammarAccess.getImportCSAccess().getIsAllColonColonKeyword_3_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getImportCSRule());
                      	        }
                             		setWithLastConsumed(current, "isAll", true, "::");

                    }

                    }


                    }

                    otherlv_5=(Token)match(input,37,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getImportCSAccess().getAsteriskKeyword_3_1());

                    }

                    }
                    break;

            }

            otherlv_6=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getImportCSAccess().getSemicolonKeyword_4());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImportCS"


    // $ANTLR start "entryRuleLoopParameterBindingCS"
    // InternalQVTimperative.g:1325:1: entryRuleLoopParameterBindingCS returns [EObject current=null] : iv_ruleLoopParameterBindingCS= ruleLoopParameterBindingCS EOF ;
    public final EObject entryRuleLoopParameterBindingCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLoopParameterBindingCS = null;


        try {
            // InternalQVTimperative.g:1326:2: (iv_ruleLoopParameterBindingCS= ruleLoopParameterBindingCS EOF )
            // InternalQVTimperative.g:1327:2: iv_ruleLoopParameterBindingCS= ruleLoopParameterBindingCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLoopParameterBindingCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLoopParameterBindingCS=ruleLoopParameterBindingCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLoopParameterBindingCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLoopParameterBindingCS"


    // $ANTLR start "ruleLoopParameterBindingCS"
    // InternalQVTimperative.g:1334:1: ruleLoopParameterBindingCS returns [EObject current=null] : ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'iterates' ( ( ruleUnrestrictedName ) ) otherlv_4= ';' ) ;
    public final EObject ruleLoopParameterBindingCS() throws RecognitionException {
        EObject current = null;

        Token lv_isCheck_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;

         enterRule();

        try {
            // InternalQVTimperative.g:1337:28: ( ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'iterates' ( ( ruleUnrestrictedName ) ) otherlv_4= ';' ) )
            // InternalQVTimperative.g:1338:1: ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'iterates' ( ( ruleUnrestrictedName ) ) otherlv_4= ';' )
            {
            // InternalQVTimperative.g:1338:1: ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'iterates' ( ( ruleUnrestrictedName ) ) otherlv_4= ';' )
            // InternalQVTimperative.g:1338:2: ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'iterates' ( ( ruleUnrestrictedName ) ) otherlv_4= ';'
            {
            // InternalQVTimperative.g:1338:2: ( (lv_isCheck_0_0= 'check' ) )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==28) ) {
                int LA23_1 = input.LA(2);

                if ( (LA23_1==38) ) {
                    int LA23_3 = input.LA(3);

                    if ( (LA23_3==38) ) {
                        int LA23_5 = input.LA(4);

                        if ( ((LA23_5>=RULE_SIMPLE_ID && LA23_5<=RULE_ESCAPED_ID)||LA23_5==17||LA23_5==19||(LA23_5>=22 && LA23_5<=23)||(LA23_5>=25 && LA23_5<=26)||(LA23_5>=28 && LA23_5<=31)||LA23_5==34||(LA23_5>=38 && LA23_5<=39)||(LA23_5>=43 && LA23_5<=49)||(LA23_5>=51 && LA23_5<=52)||(LA23_5>=55 && LA23_5<=57)||(LA23_5>=59 && LA23_5<=64)||LA23_5==66||LA23_5==68||LA23_5==70||LA23_5==73||LA23_5==75||LA23_5==77||(LA23_5>=79 && LA23_5<=83)||(LA23_5>=85 && LA23_5<=90)||LA23_5==92||LA23_5==94||(LA23_5>=96 && LA23_5<=99)) ) {
                            alt23=1;
                        }
                    }
                }
                else if ( ((LA23_1>=RULE_SIMPLE_ID && LA23_1<=RULE_ESCAPED_ID)||LA23_1==17||LA23_1==19||(LA23_1>=22 && LA23_1<=23)||(LA23_1>=25 && LA23_1<=26)||(LA23_1>=28 && LA23_1<=31)||LA23_1==34||LA23_1==39||(LA23_1>=43 && LA23_1<=49)||(LA23_1>=51 && LA23_1<=52)||(LA23_1>=55 && LA23_1<=57)||(LA23_1>=59 && LA23_1<=64)||LA23_1==66||LA23_1==68||LA23_1==70||LA23_1==73||LA23_1==75||LA23_1==77||(LA23_1>=79 && LA23_1<=83)||(LA23_1>=85 && LA23_1<=90)||LA23_1==92||LA23_1==94||(LA23_1>=96 && LA23_1<=99)) ) {
                    alt23=1;
                }
            }
            switch (alt23) {
                case 1 :
                    // InternalQVTimperative.g:1339:1: (lv_isCheck_0_0= 'check' )
                    {
                    // InternalQVTimperative.g:1339:1: (lv_isCheck_0_0= 'check' )
                    // InternalQVTimperative.g:1340:3: lv_isCheck_0_0= 'check'
                    {
                    lv_isCheck_0_0=(Token)match(input,28,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isCheck_0_0, grammarAccess.getLoopParameterBindingCSAccess().getIsCheckCheckKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getLoopParameterBindingCSRule());
                      	        }
                             		setWithLastConsumed(current, "isCheck", true, "check");

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:1353:3: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:1354:1: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:1354:1: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:1355:3: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              		  /* */

            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getLoopParameterBindingCSRule());
              	        }

            }
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getLoopParameterBindingCSAccess().getReferredVariableGuardParameterCrossReference_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_28);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_2=(Token)match(input,38,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getLoopParameterBindingCSAccess().getIteratesKeyword_2());

            }
            // InternalQVTimperative.g:1375:1: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:1376:1: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:1376:1: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:1377:3: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              		  /* */

            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getLoopParameterBindingCSRule());
              	        }

            }
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getLoopParameterBindingCSAccess().getValueLoopVariableCrossReference_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_9);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_4=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getLoopParameterBindingCSAccess().getSemicolonKeyword_4());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLoopParameterBindingCS"


    // $ANTLR start "entryRuleMappingCS"
    // InternalQVTimperative.g:1405:1: entryRuleMappingCS returns [EObject current=null] : iv_ruleMappingCS= ruleMappingCS EOF ;
    public final EObject entryRuleMappingCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMappingCS = null;


        try {
            // InternalQVTimperative.g:1406:2: (iv_ruleMappingCS= ruleMappingCS EOF )
            // InternalQVTimperative.g:1407:2: iv_ruleMappingCS= ruleMappingCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMappingCS=ruleMappingCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMappingCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMappingCS"


    // $ANTLR start "ruleMappingCS"
    // InternalQVTimperative.g:1414:1: ruleMappingCS returns [EObject current=null] : ( () ( (lv_isStrict_1_0= 'strict' ) )? otherlv_2= 'map' ( (lv_name_3_0= ruleUnrestrictedName ) ) (otherlv_4= 'in' ( (lv_ownedInPathName_5_0= rulePathNameCS ) ) )? otherlv_6= '{' ( (lv_ownedParameters_7_0= ruleMappingParameterCS ) )* ( (lv_ownedStatements_8_0= ruleGuardStatementCS ) )* ( (lv_ownedStatements_9_0= ruleCommitStatementCS ) )* ( (lv_ownedStatements_10_0= ruleControlStatementCS ) )* otherlv_11= '}' ) ;
    public final EObject ruleMappingCS() throws RecognitionException {
        EObject current = null;

        Token lv_isStrict_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_11=null;
        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_ownedInPathName_5_0 = null;

        EObject lv_ownedParameters_7_0 = null;

        EObject lv_ownedStatements_8_0 = null;

        EObject lv_ownedStatements_9_0 = null;

        EObject lv_ownedStatements_10_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:1417:28: ( ( () ( (lv_isStrict_1_0= 'strict' ) )? otherlv_2= 'map' ( (lv_name_3_0= ruleUnrestrictedName ) ) (otherlv_4= 'in' ( (lv_ownedInPathName_5_0= rulePathNameCS ) ) )? otherlv_6= '{' ( (lv_ownedParameters_7_0= ruleMappingParameterCS ) )* ( (lv_ownedStatements_8_0= ruleGuardStatementCS ) )* ( (lv_ownedStatements_9_0= ruleCommitStatementCS ) )* ( (lv_ownedStatements_10_0= ruleControlStatementCS ) )* otherlv_11= '}' ) )
            // InternalQVTimperative.g:1418:1: ( () ( (lv_isStrict_1_0= 'strict' ) )? otherlv_2= 'map' ( (lv_name_3_0= ruleUnrestrictedName ) ) (otherlv_4= 'in' ( (lv_ownedInPathName_5_0= rulePathNameCS ) ) )? otherlv_6= '{' ( (lv_ownedParameters_7_0= ruleMappingParameterCS ) )* ( (lv_ownedStatements_8_0= ruleGuardStatementCS ) )* ( (lv_ownedStatements_9_0= ruleCommitStatementCS ) )* ( (lv_ownedStatements_10_0= ruleControlStatementCS ) )* otherlv_11= '}' )
            {
            // InternalQVTimperative.g:1418:1: ( () ( (lv_isStrict_1_0= 'strict' ) )? otherlv_2= 'map' ( (lv_name_3_0= ruleUnrestrictedName ) ) (otherlv_4= 'in' ( (lv_ownedInPathName_5_0= rulePathNameCS ) ) )? otherlv_6= '{' ( (lv_ownedParameters_7_0= ruleMappingParameterCS ) )* ( (lv_ownedStatements_8_0= ruleGuardStatementCS ) )* ( (lv_ownedStatements_9_0= ruleCommitStatementCS ) )* ( (lv_ownedStatements_10_0= ruleControlStatementCS ) )* otherlv_11= '}' )
            // InternalQVTimperative.g:1418:2: () ( (lv_isStrict_1_0= 'strict' ) )? otherlv_2= 'map' ( (lv_name_3_0= ruleUnrestrictedName ) ) (otherlv_4= 'in' ( (lv_ownedInPathName_5_0= rulePathNameCS ) ) )? otherlv_6= '{' ( (lv_ownedParameters_7_0= ruleMappingParameterCS ) )* ( (lv_ownedStatements_8_0= ruleGuardStatementCS ) )* ( (lv_ownedStatements_9_0= ruleCommitStatementCS ) )* ( (lv_ownedStatements_10_0= ruleControlStatementCS ) )* otherlv_11= '}'
            {
            // InternalQVTimperative.g:1418:2: ()
            // InternalQVTimperative.g:1419:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getMappingCSAccess().getMappingCSAction_0(),
                          current);

            }

            }

            // InternalQVTimperative.g:1427:2: ( (lv_isStrict_1_0= 'strict' ) )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==25) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // InternalQVTimperative.g:1428:1: (lv_isStrict_1_0= 'strict' )
                    {
                    // InternalQVTimperative.g:1428:1: (lv_isStrict_1_0= 'strict' )
                    // InternalQVTimperative.g:1429:3: lv_isStrict_1_0= 'strict'
                    {
                    lv_isStrict_1_0=(Token)match(input,25,FollowSets000.FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isStrict_1_0, grammarAccess.getMappingCSAccess().getIsStrictStrictKeyword_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMappingCSRule());
                      	        }
                             		setWithLastConsumed(current, "isStrict", true, "strict");

                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,39,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getMappingCSAccess().getMapKeyword_2());

            }
            // InternalQVTimperative.g:1446:1: ( (lv_name_3_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:1447:1: (lv_name_3_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:1447:1: (lv_name_3_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:1448:3: lv_name_3_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getMappingCSAccess().getNameUnrestrictedNameParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_30);
            lv_name_3_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMappingCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_3_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:1464:2: (otherlv_4= 'in' ( (lv_ownedInPathName_5_0= rulePathNameCS ) ) )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==40) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // InternalQVTimperative.g:1464:4: otherlv_4= 'in' ( (lv_ownedInPathName_5_0= rulePathNameCS ) )
                    {
                    otherlv_4=(Token)match(input,40,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getMappingCSAccess().getInKeyword_4_0());

                    }
                    // InternalQVTimperative.g:1468:1: ( (lv_ownedInPathName_5_0= rulePathNameCS ) )
                    // InternalQVTimperative.g:1469:1: (lv_ownedInPathName_5_0= rulePathNameCS )
                    {
                    // InternalQVTimperative.g:1469:1: (lv_ownedInPathName_5_0= rulePathNameCS )
                    // InternalQVTimperative.g:1470:3: lv_ownedInPathName_5_0= rulePathNameCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getMappingCSAccess().getOwnedInPathNamePathNameCSParserRuleCall_4_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_31);
                    lv_ownedInPathName_5_0=rulePathNameCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMappingCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedInPathName",
                              		lv_ownedInPathName_5_0,
                              		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_6=(Token)match(input,41,FollowSets000.FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getMappingCSAccess().getLeftCurlyBracketKeyword_5());

            }
            // InternalQVTimperative.g:1490:1: ( (lv_ownedParameters_7_0= ruleMappingParameterCS ) )*
            loop26:
            do {
                int alt26=2;
                int LA26_0 = input.LA(1);

                if ( (LA26_0==23||LA26_0==33||LA26_0==40) ) {
                    alt26=1;
                }


                switch (alt26) {
            	case 1 :
            	    // InternalQVTimperative.g:1491:1: (lv_ownedParameters_7_0= ruleMappingParameterCS )
            	    {
            	    // InternalQVTimperative.g:1491:1: (lv_ownedParameters_7_0= ruleMappingParameterCS )
            	    // InternalQVTimperative.g:1492:3: lv_ownedParameters_7_0= ruleMappingParameterCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getMappingCSAccess().getOwnedParametersMappingParameterCSParserRuleCall_6_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_32);
            	    lv_ownedParameters_7_0=ruleMappingParameterCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMappingCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedParameters",
            	              		lv_ownedParameters_7_0,
            	              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.MappingParameterCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop26;
                }
            } while (true);

            // InternalQVTimperative.g:1508:3: ( (lv_ownedStatements_8_0= ruleGuardStatementCS ) )*
            loop27:
            do {
                int alt27=2;
                alt27 = dfa27.predict(input);
                switch (alt27) {
            	case 1 :
            	    // InternalQVTimperative.g:1509:1: (lv_ownedStatements_8_0= ruleGuardStatementCS )
            	    {
            	    // InternalQVTimperative.g:1509:1: (lv_ownedStatements_8_0= ruleGuardStatementCS )
            	    // InternalQVTimperative.g:1510:3: lv_ownedStatements_8_0= ruleGuardStatementCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getMappingCSAccess().getOwnedStatementsGuardStatementCSParserRuleCall_7_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_33);
            	    lv_ownedStatements_8_0=ruleGuardStatementCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMappingCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedStatements",
            	              		lv_ownedStatements_8_0,
            	              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.GuardStatementCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);

            // InternalQVTimperative.g:1526:3: ( (lv_ownedStatements_9_0= ruleCommitStatementCS ) )*
            loop28:
            do {
                int alt28=2;
                alt28 = dfa28.predict(input);
                switch (alt28) {
            	case 1 :
            	    // InternalQVTimperative.g:1527:1: (lv_ownedStatements_9_0= ruleCommitStatementCS )
            	    {
            	    // InternalQVTimperative.g:1527:1: (lv_ownedStatements_9_0= ruleCommitStatementCS )
            	    // InternalQVTimperative.g:1528:3: lv_ownedStatements_9_0= ruleCommitStatementCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getMappingCSAccess().getOwnedStatementsCommitStatementCSParserRuleCall_8_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_34);
            	    lv_ownedStatements_9_0=ruleCommitStatementCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMappingCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedStatements",
            	              		lv_ownedStatements_9_0,
            	              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.CommitStatementCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop28;
                }
            } while (true);

            // InternalQVTimperative.g:1544:3: ( (lv_ownedStatements_10_0= ruleControlStatementCS ) )*
            loop29:
            do {
                int alt29=2;
                int LA29_0 = input.LA(1);

                if ( (LA29_0==17||LA29_0==19||(LA29_0>=43 && LA29_0<=46)) ) {
                    alt29=1;
                }


                switch (alt29) {
            	case 1 :
            	    // InternalQVTimperative.g:1545:1: (lv_ownedStatements_10_0= ruleControlStatementCS )
            	    {
            	    // InternalQVTimperative.g:1545:1: (lv_ownedStatements_10_0= ruleControlStatementCS )
            	    // InternalQVTimperative.g:1546:3: lv_ownedStatements_10_0= ruleControlStatementCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getMappingCSAccess().getOwnedStatementsControlStatementCSParserRuleCall_9_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_35);
            	    lv_ownedStatements_10_0=ruleControlStatementCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMappingCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedStatements",
            	              		lv_ownedStatements_10_0,
            	              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.ControlStatementCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop29;
                }
            } while (true);

            otherlv_11=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_11, grammarAccess.getMappingCSAccess().getRightCurlyBracketKeyword_10());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMappingCS"


    // $ANTLR start "entryRuleMappingCallCS"
    // InternalQVTimperative.g:1574:1: entryRuleMappingCallCS returns [EObject current=null] : iv_ruleMappingCallCS= ruleMappingCallCS EOF ;
    public final EObject entryRuleMappingCallCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMappingCallCS = null;


        try {
            // InternalQVTimperative.g:1575:2: (iv_ruleMappingCallCS= ruleMappingCallCS EOF )
            // InternalQVTimperative.g:1576:2: iv_ruleMappingCallCS= ruleMappingCallCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingCallCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMappingCallCS=ruleMappingCallCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMappingCallCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMappingCallCS"


    // $ANTLR start "ruleMappingCallCS"
    // InternalQVTimperative.g:1583:1: ruleMappingCallCS returns [EObject current=null] : ( () (otherlv_1= 'call' | ( (lv_isInstall_2_0= 'install' ) ) | ( (lv_isInvoke_3_0= 'invoke' ) ) ) ( (lv_ownedPathName_4_0= rulePathNameCS ) ) otherlv_5= '{' ( (lv_ownedBindings_6_0= ruleMappingParameterBindingCS ) )* otherlv_7= '}' ) ;
    public final EObject ruleMappingCallCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_isInstall_2_0=null;
        Token lv_isInvoke_3_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_ownedPathName_4_0 = null;

        EObject lv_ownedBindings_6_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:1586:28: ( ( () (otherlv_1= 'call' | ( (lv_isInstall_2_0= 'install' ) ) | ( (lv_isInvoke_3_0= 'invoke' ) ) ) ( (lv_ownedPathName_4_0= rulePathNameCS ) ) otherlv_5= '{' ( (lv_ownedBindings_6_0= ruleMappingParameterBindingCS ) )* otherlv_7= '}' ) )
            // InternalQVTimperative.g:1587:1: ( () (otherlv_1= 'call' | ( (lv_isInstall_2_0= 'install' ) ) | ( (lv_isInvoke_3_0= 'invoke' ) ) ) ( (lv_ownedPathName_4_0= rulePathNameCS ) ) otherlv_5= '{' ( (lv_ownedBindings_6_0= ruleMappingParameterBindingCS ) )* otherlv_7= '}' )
            {
            // InternalQVTimperative.g:1587:1: ( () (otherlv_1= 'call' | ( (lv_isInstall_2_0= 'install' ) ) | ( (lv_isInvoke_3_0= 'invoke' ) ) ) ( (lv_ownedPathName_4_0= rulePathNameCS ) ) otherlv_5= '{' ( (lv_ownedBindings_6_0= ruleMappingParameterBindingCS ) )* otherlv_7= '}' )
            // InternalQVTimperative.g:1587:2: () (otherlv_1= 'call' | ( (lv_isInstall_2_0= 'install' ) ) | ( (lv_isInvoke_3_0= 'invoke' ) ) ) ( (lv_ownedPathName_4_0= rulePathNameCS ) ) otherlv_5= '{' ( (lv_ownedBindings_6_0= ruleMappingParameterBindingCS ) )* otherlv_7= '}'
            {
            // InternalQVTimperative.g:1587:2: ()
            // InternalQVTimperative.g:1588:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getMappingCallCSAccess().getMappingCallCSAction_0(),
                          current);

            }

            }

            // InternalQVTimperative.g:1596:2: (otherlv_1= 'call' | ( (lv_isInstall_2_0= 'install' ) ) | ( (lv_isInvoke_3_0= 'invoke' ) ) )
            int alt30=3;
            switch ( input.LA(1) ) {
            case 43:
                {
                alt30=1;
                }
                break;
            case 44:
                {
                alt30=2;
                }
                break;
            case 45:
                {
                alt30=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }

            switch (alt30) {
                case 1 :
                    // InternalQVTimperative.g:1596:4: otherlv_1= 'call'
                    {
                    otherlv_1=(Token)match(input,43,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getMappingCallCSAccess().getCallKeyword_1_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:1601:6: ( (lv_isInstall_2_0= 'install' ) )
                    {
                    // InternalQVTimperative.g:1601:6: ( (lv_isInstall_2_0= 'install' ) )
                    // InternalQVTimperative.g:1602:1: (lv_isInstall_2_0= 'install' )
                    {
                    // InternalQVTimperative.g:1602:1: (lv_isInstall_2_0= 'install' )
                    // InternalQVTimperative.g:1603:3: lv_isInstall_2_0= 'install'
                    {
                    lv_isInstall_2_0=(Token)match(input,44,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isInstall_2_0, grammarAccess.getMappingCallCSAccess().getIsInstallInstallKeyword_1_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMappingCallCSRule());
                      	        }
                             		setWithLastConsumed(current, "isInstall", true, "install");

                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:1617:6: ( (lv_isInvoke_3_0= 'invoke' ) )
                    {
                    // InternalQVTimperative.g:1617:6: ( (lv_isInvoke_3_0= 'invoke' ) )
                    // InternalQVTimperative.g:1618:1: (lv_isInvoke_3_0= 'invoke' )
                    {
                    // InternalQVTimperative.g:1618:1: (lv_isInvoke_3_0= 'invoke' )
                    // InternalQVTimperative.g:1619:3: lv_isInvoke_3_0= 'invoke'
                    {
                    lv_isInvoke_3_0=(Token)match(input,45,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isInvoke_3_0, grammarAccess.getMappingCallCSAccess().getIsInvokeInvokeKeyword_1_2_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMappingCallCSRule());
                      	        }
                             		setWithLastConsumed(current, "isInvoke", true, "invoke");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:1632:3: ( (lv_ownedPathName_4_0= rulePathNameCS ) )
            // InternalQVTimperative.g:1633:1: (lv_ownedPathName_4_0= rulePathNameCS )
            {
            // InternalQVTimperative.g:1633:1: (lv_ownedPathName_4_0= rulePathNameCS )
            // InternalQVTimperative.g:1634:3: lv_ownedPathName_4_0= rulePathNameCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getMappingCallCSAccess().getOwnedPathNamePathNameCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_31);
            lv_ownedPathName_4_0=rulePathNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMappingCallCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedPathName",
                      		lv_ownedPathName_4_0,
                      		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_5=(Token)match(input,41,FollowSets000.FOLLOW_36); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getMappingCallCSAccess().getLeftCurlyBracketKeyword_3());

            }
            // InternalQVTimperative.g:1654:1: ( (lv_ownedBindings_6_0= ruleMappingParameterBindingCS ) )*
            loop31:
            do {
                int alt31=2;
                int LA31_0 = input.LA(1);

                if ( ((LA31_0>=RULE_SIMPLE_ID && LA31_0<=RULE_ESCAPED_ID)||LA31_0==17||LA31_0==19||(LA31_0>=22 && LA31_0<=23)||(LA31_0>=25 && LA31_0<=26)||(LA31_0>=28 && LA31_0<=31)||LA31_0==34||(LA31_0>=38 && LA31_0<=39)||(LA31_0>=43 && LA31_0<=49)||(LA31_0>=51 && LA31_0<=52)||(LA31_0>=55 && LA31_0<=57)||(LA31_0>=59 && LA31_0<=64)||LA31_0==66||LA31_0==68||LA31_0==70||LA31_0==73||LA31_0==75||LA31_0==77||(LA31_0>=79 && LA31_0<=83)||(LA31_0>=85 && LA31_0<=90)||LA31_0==92||LA31_0==94||(LA31_0>=96 && LA31_0<=99)) ) {
                    alt31=1;
                }


                switch (alt31) {
            	case 1 :
            	    // InternalQVTimperative.g:1655:1: (lv_ownedBindings_6_0= ruleMappingParameterBindingCS )
            	    {
            	    // InternalQVTimperative.g:1655:1: (lv_ownedBindings_6_0= ruleMappingParameterBindingCS )
            	    // InternalQVTimperative.g:1656:3: lv_ownedBindings_6_0= ruleMappingParameterBindingCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getMappingCallCSAccess().getOwnedBindingsMappingParameterBindingCSParserRuleCall_4_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    lv_ownedBindings_6_0=ruleMappingParameterBindingCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMappingCallCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedBindings",
            	              		lv_ownedBindings_6_0,
            	              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.MappingParameterBindingCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop31;
                }
            } while (true);

            otherlv_7=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getMappingCallCSAccess().getRightCurlyBracketKeyword_5());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMappingCallCS"


    // $ANTLR start "entryRuleMappingLoopCS"
    // InternalQVTimperative.g:1684:1: entryRuleMappingLoopCS returns [EObject current=null] : iv_ruleMappingLoopCS= ruleMappingLoopCS EOF ;
    public final EObject entryRuleMappingLoopCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMappingLoopCS = null;


        try {
            // InternalQVTimperative.g:1685:2: (iv_ruleMappingLoopCS= ruleMappingLoopCS EOF )
            // InternalQVTimperative.g:1686:2: iv_ruleMappingLoopCS= ruleMappingLoopCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingLoopCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMappingLoopCS=ruleMappingLoopCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMappingLoopCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMappingLoopCS"


    // $ANTLR start "ruleMappingLoopCS"
    // InternalQVTimperative.g:1693:1: ruleMappingLoopCS returns [EObject current=null] : ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'for' ( (lv_ownedIterator_5_0= ruleMappingIteratorCS ) ) otherlv_6= 'in' ( (lv_ownedInExpression_7_0= ruleExpCS ) ) otherlv_8= '{' ( (lv_ownedMappingStatements_9_0= ruleControlStatementCS ) )+ otherlv_10= '}' ) ;
    public final EObject ruleMappingLoopCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        EObject lv_observedProperties_1_0 = null;

        EObject lv_observedProperties_3_0 = null;

        EObject lv_ownedIterator_5_0 = null;

        EObject lv_ownedInExpression_7_0 = null;

        EObject lv_ownedMappingStatements_9_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:1696:28: ( ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'for' ( (lv_ownedIterator_5_0= ruleMappingIteratorCS ) ) otherlv_6= 'in' ( (lv_ownedInExpression_7_0= ruleExpCS ) ) otherlv_8= '{' ( (lv_ownedMappingStatements_9_0= ruleControlStatementCS ) )+ otherlv_10= '}' ) )
            // InternalQVTimperative.g:1697:1: ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'for' ( (lv_ownedIterator_5_0= ruleMappingIteratorCS ) ) otherlv_6= 'in' ( (lv_ownedInExpression_7_0= ruleExpCS ) ) otherlv_8= '{' ( (lv_ownedMappingStatements_9_0= ruleControlStatementCS ) )+ otherlv_10= '}' )
            {
            // InternalQVTimperative.g:1697:1: ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'for' ( (lv_ownedIterator_5_0= ruleMappingIteratorCS ) ) otherlv_6= 'in' ( (lv_ownedInExpression_7_0= ruleExpCS ) ) otherlv_8= '{' ( (lv_ownedMappingStatements_9_0= ruleControlStatementCS ) )+ otherlv_10= '}' )
            // InternalQVTimperative.g:1697:2: (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? otherlv_4= 'for' ( (lv_ownedIterator_5_0= ruleMappingIteratorCS ) ) otherlv_6= 'in' ( (lv_ownedInExpression_7_0= ruleExpCS ) ) otherlv_8= '{' ( (lv_ownedMappingStatements_9_0= ruleControlStatementCS ) )+ otherlv_10= '}'
            {
            // InternalQVTimperative.g:1697:2: (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )?
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==17) ) {
                alt33=1;
            }
            switch (alt33) {
                case 1 :
                    // InternalQVTimperative.g:1697:4: otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )*
                    {
                    otherlv_0=(Token)match(input,17,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getMappingLoopCSAccess().getObserveKeyword_0_0());

                    }
                    // InternalQVTimperative.g:1701:1: ( (lv_observedProperties_1_0= rulePathNameCS ) )
                    // InternalQVTimperative.g:1702:1: (lv_observedProperties_1_0= rulePathNameCS )
                    {
                    // InternalQVTimperative.g:1702:1: (lv_observedProperties_1_0= rulePathNameCS )
                    // InternalQVTimperative.g:1703:3: lv_observedProperties_1_0= rulePathNameCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getMappingLoopCSAccess().getObservedPropertiesPathNameCSParserRuleCall_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_37);
                    lv_observedProperties_1_0=rulePathNameCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMappingLoopCSRule());
                      	        }
                             		add(
                             			current,
                             			"observedProperties",
                              		lv_observedProperties_1_0,
                              		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:1719:2: (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )*
                    loop32:
                    do {
                        int alt32=2;
                        int LA32_0 = input.LA(1);

                        if ( (LA32_0==18) ) {
                            alt32=1;
                        }


                        switch (alt32) {
                    	case 1 :
                    	    // InternalQVTimperative.g:1719:4: otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) )
                    	    {
                    	    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getMappingLoopCSAccess().getCommaKeyword_0_2_0());

                    	    }
                    	    // InternalQVTimperative.g:1723:1: ( (lv_observedProperties_3_0= rulePathNameCS ) )
                    	    // InternalQVTimperative.g:1724:1: (lv_observedProperties_3_0= rulePathNameCS )
                    	    {
                    	    // InternalQVTimperative.g:1724:1: (lv_observedProperties_3_0= rulePathNameCS )
                    	    // InternalQVTimperative.g:1725:3: lv_observedProperties_3_0= rulePathNameCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getMappingLoopCSAccess().getObservedPropertiesPathNameCSParserRuleCall_0_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_37);
                    	    lv_observedProperties_3_0=rulePathNameCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMappingLoopCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"observedProperties",
                    	              		lv_observedProperties_3_0,
                    	              		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop32;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_4=(Token)match(input,46,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getMappingLoopCSAccess().getForKeyword_1());

            }
            // InternalQVTimperative.g:1745:1: ( (lv_ownedIterator_5_0= ruleMappingIteratorCS ) )
            // InternalQVTimperative.g:1746:1: (lv_ownedIterator_5_0= ruleMappingIteratorCS )
            {
            // InternalQVTimperative.g:1746:1: (lv_ownedIterator_5_0= ruleMappingIteratorCS )
            // InternalQVTimperative.g:1747:3: lv_ownedIterator_5_0= ruleMappingIteratorCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getMappingLoopCSAccess().getOwnedIteratorMappingIteratorCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_38);
            lv_ownedIterator_5_0=ruleMappingIteratorCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMappingLoopCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedIterator",
                      		lv_ownedIterator_5_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.MappingIteratorCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_6=(Token)match(input,40,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getMappingLoopCSAccess().getInKeyword_3());

            }
            // InternalQVTimperative.g:1767:1: ( (lv_ownedInExpression_7_0= ruleExpCS ) )
            // InternalQVTimperative.g:1768:1: (lv_ownedInExpression_7_0= ruleExpCS )
            {
            // InternalQVTimperative.g:1768:1: (lv_ownedInExpression_7_0= ruleExpCS )
            // InternalQVTimperative.g:1769:3: lv_ownedInExpression_7_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getMappingLoopCSAccess().getOwnedInExpressionExpCSParserRuleCall_4_0());

            }
            pushFollow(FollowSets000.FOLLOW_31);
            lv_ownedInExpression_7_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMappingLoopCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedInExpression",
                      		lv_ownedInExpression_7_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_8=(Token)match(input,41,FollowSets000.FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getMappingLoopCSAccess().getLeftCurlyBracketKeyword_5());

            }
            // InternalQVTimperative.g:1789:1: ( (lv_ownedMappingStatements_9_0= ruleControlStatementCS ) )+
            int cnt34=0;
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( (LA34_0==17||LA34_0==19||(LA34_0>=43 && LA34_0<=46)) ) {
                    alt34=1;
                }


                switch (alt34) {
            	case 1 :
            	    // InternalQVTimperative.g:1790:1: (lv_ownedMappingStatements_9_0= ruleControlStatementCS )
            	    {
            	    // InternalQVTimperative.g:1790:1: (lv_ownedMappingStatements_9_0= ruleControlStatementCS )
            	    // InternalQVTimperative.g:1791:3: lv_ownedMappingStatements_9_0= ruleControlStatementCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getMappingLoopCSAccess().getOwnedMappingStatementsControlStatementCSParserRuleCall_6_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_35);
            	    lv_ownedMappingStatements_9_0=ruleControlStatementCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMappingLoopCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedMappingStatements",
            	              		lv_ownedMappingStatements_9_0,
            	              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.ControlStatementCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt34 >= 1 ) break loop34;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(34, input);
                        throw eee;
                }
                cnt34++;
            } while (true);

            otherlv_10=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_10, grammarAccess.getMappingLoopCSAccess().getRightCurlyBracketKeyword_7());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMappingLoopCS"


    // $ANTLR start "entryRuleMappingIteratorCS"
    // InternalQVTimperative.g:1819:1: entryRuleMappingIteratorCS returns [EObject current=null] : iv_ruleMappingIteratorCS= ruleMappingIteratorCS EOF ;
    public final EObject entryRuleMappingIteratorCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMappingIteratorCS = null;


        try {
            // InternalQVTimperative.g:1820:2: (iv_ruleMappingIteratorCS= ruleMappingIteratorCS EOF )
            // InternalQVTimperative.g:1821:2: iv_ruleMappingIteratorCS= ruleMappingIteratorCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingIteratorCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMappingIteratorCS=ruleMappingIteratorCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMappingIteratorCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMappingIteratorCS"


    // $ANTLR start "ruleMappingIteratorCS"
    // InternalQVTimperative.g:1828:1: ruleMappingIteratorCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? ) ;
    public final EObject ruleMappingIteratorCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedType_2_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:1831:28: ( ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? ) )
            // InternalQVTimperative.g:1832:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? )
            {
            // InternalQVTimperative.g:1832:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? )
            // InternalQVTimperative.g:1832:2: ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )?
            {
            // InternalQVTimperative.g:1832:2: ( (lv_name_0_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:1833:1: (lv_name_0_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:1833:1: (lv_name_0_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:1834:3: lv_name_0_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getMappingIteratorCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_40);
            lv_name_0_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMappingIteratorCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_0_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:1850:2: (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==24) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // InternalQVTimperative.g:1850:4: otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) )
                    {
                    otherlv_1=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getMappingIteratorCSAccess().getColonKeyword_1_0());

                    }
                    // InternalQVTimperative.g:1854:1: ( (lv_ownedType_2_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:1855:1: (lv_ownedType_2_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:1855:1: (lv_ownedType_2_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:1856:3: lv_ownedType_2_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getMappingIteratorCSAccess().getOwnedTypeTypeExpCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedType_2_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMappingIteratorCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMappingIteratorCS"


    // $ANTLR start "entryRuleMappingParameterBindingCS"
    // InternalQVTimperative.g:1880:1: entryRuleMappingParameterBindingCS returns [EObject current=null] : iv_ruleMappingParameterBindingCS= ruleMappingParameterBindingCS EOF ;
    public final EObject entryRuleMappingParameterBindingCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMappingParameterBindingCS = null;


        try {
            // InternalQVTimperative.g:1881:2: (iv_ruleMappingParameterBindingCS= ruleMappingParameterBindingCS EOF )
            // InternalQVTimperative.g:1882:2: iv_ruleMappingParameterBindingCS= ruleMappingParameterBindingCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingParameterBindingCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMappingParameterBindingCS=ruleMappingParameterBindingCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMappingParameterBindingCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMappingParameterBindingCS"


    // $ANTLR start "ruleMappingParameterBindingCS"
    // InternalQVTimperative.g:1889:1: ruleMappingParameterBindingCS returns [EObject current=null] : (this_AppendParameterBindingCS_0= ruleAppendParameterBindingCS | this_GuardParameterBindingCS_1= ruleGuardParameterBindingCS | this_LoopParameterBindingCS_2= ruleLoopParameterBindingCS | this_SimpleParameterBindingCS_3= ruleSimpleParameterBindingCS ) ;
    public final EObject ruleMappingParameterBindingCS() throws RecognitionException {
        EObject current = null;

        EObject this_AppendParameterBindingCS_0 = null;

        EObject this_GuardParameterBindingCS_1 = null;

        EObject this_LoopParameterBindingCS_2 = null;

        EObject this_SimpleParameterBindingCS_3 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:1892:28: ( (this_AppendParameterBindingCS_0= ruleAppendParameterBindingCS | this_GuardParameterBindingCS_1= ruleGuardParameterBindingCS | this_LoopParameterBindingCS_2= ruleLoopParameterBindingCS | this_SimpleParameterBindingCS_3= ruleSimpleParameterBindingCS ) )
            // InternalQVTimperative.g:1893:1: (this_AppendParameterBindingCS_0= ruleAppendParameterBindingCS | this_GuardParameterBindingCS_1= ruleGuardParameterBindingCS | this_LoopParameterBindingCS_2= ruleLoopParameterBindingCS | this_SimpleParameterBindingCS_3= ruleSimpleParameterBindingCS )
            {
            // InternalQVTimperative.g:1893:1: (this_AppendParameterBindingCS_0= ruleAppendParameterBindingCS | this_GuardParameterBindingCS_1= ruleGuardParameterBindingCS | this_LoopParameterBindingCS_2= ruleLoopParameterBindingCS | this_SimpleParameterBindingCS_3= ruleSimpleParameterBindingCS )
            int alt36=4;
            alt36 = dfa36.predict(input);
            switch (alt36) {
                case 1 :
                    // InternalQVTimperative.g:1894:2: this_AppendParameterBindingCS_0= ruleAppendParameterBindingCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getMappingParameterBindingCSAccess().getAppendParameterBindingCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AppendParameterBindingCS_0=ruleAppendParameterBindingCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AppendParameterBindingCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:1907:2: this_GuardParameterBindingCS_1= ruleGuardParameterBindingCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getMappingParameterBindingCSAccess().getGuardParameterBindingCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_GuardParameterBindingCS_1=ruleGuardParameterBindingCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_GuardParameterBindingCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:1920:2: this_LoopParameterBindingCS_2= ruleLoopParameterBindingCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getMappingParameterBindingCSAccess().getLoopParameterBindingCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_LoopParameterBindingCS_2=ruleLoopParameterBindingCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_LoopParameterBindingCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:1933:2: this_SimpleParameterBindingCS_3= ruleSimpleParameterBindingCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getMappingParameterBindingCSAccess().getSimpleParameterBindingCSParserRuleCall_3());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SimpleParameterBindingCS_3=ruleSimpleParameterBindingCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_SimpleParameterBindingCS_3;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMappingParameterBindingCS"


    // $ANTLR start "entryRuleMappingParameterCS"
    // InternalQVTimperative.g:1952:1: entryRuleMappingParameterCS returns [EObject current=null] : iv_ruleMappingParameterCS= ruleMappingParameterCS EOF ;
    public final EObject entryRuleMappingParameterCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMappingParameterCS = null;


        try {
            // InternalQVTimperative.g:1953:2: (iv_ruleMappingParameterCS= ruleMappingParameterCS EOF )
            // InternalQVTimperative.g:1954:2: iv_ruleMappingParameterCS= ruleMappingParameterCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappingParameterCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMappingParameterCS=ruleMappingParameterCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMappingParameterCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMappingParameterCS"


    // $ANTLR start "ruleMappingParameterCS"
    // InternalQVTimperative.g:1961:1: ruleMappingParameterCS returns [EObject current=null] : (this_AppendParameterCS_0= ruleAppendParameterCS | this_GuardParameterCS_1= ruleGuardParameterCS | this_SimpleParameterCS_2= ruleSimpleParameterCS ) ;
    public final EObject ruleMappingParameterCS() throws RecognitionException {
        EObject current = null;

        EObject this_AppendParameterCS_0 = null;

        EObject this_GuardParameterCS_1 = null;

        EObject this_SimpleParameterCS_2 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:1964:28: ( (this_AppendParameterCS_0= ruleAppendParameterCS | this_GuardParameterCS_1= ruleGuardParameterCS | this_SimpleParameterCS_2= ruleSimpleParameterCS ) )
            // InternalQVTimperative.g:1965:1: (this_AppendParameterCS_0= ruleAppendParameterCS | this_GuardParameterCS_1= ruleGuardParameterCS | this_SimpleParameterCS_2= ruleSimpleParameterCS )
            {
            // InternalQVTimperative.g:1965:1: (this_AppendParameterCS_0= ruleAppendParameterCS | this_GuardParameterCS_1= ruleGuardParameterCS | this_SimpleParameterCS_2= ruleSimpleParameterCS )
            int alt37=3;
            switch ( input.LA(1) ) {
            case 23:
                {
                alt37=1;
                }
                break;
            case 33:
                {
                alt37=2;
                }
                break;
            case 40:
                {
                alt37=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }

            switch (alt37) {
                case 1 :
                    // InternalQVTimperative.g:1966:2: this_AppendParameterCS_0= ruleAppendParameterCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getMappingParameterCSAccess().getAppendParameterCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AppendParameterCS_0=ruleAppendParameterCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AppendParameterCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:1979:2: this_GuardParameterCS_1= ruleGuardParameterCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getMappingParameterCSAccess().getGuardParameterCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_GuardParameterCS_1=ruleGuardParameterCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_GuardParameterCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:1992:2: this_SimpleParameterCS_2= ruleSimpleParameterCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getMappingParameterCSAccess().getSimpleParameterCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SimpleParameterCS_2=ruleSimpleParameterCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_SimpleParameterCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMappingParameterCS"


    // $ANTLR start "entryRuleNewStatementCS"
    // InternalQVTimperative.g:2011:1: entryRuleNewStatementCS returns [EObject current=null] : iv_ruleNewStatementCS= ruleNewStatementCS EOF ;
    public final EObject entryRuleNewStatementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNewStatementCS = null;


        try {
            // InternalQVTimperative.g:2012:2: (iv_ruleNewStatementCS= ruleNewStatementCS EOF )
            // InternalQVTimperative.g:2013:2: iv_ruleNewStatementCS= ruleNewStatementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNewStatementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNewStatementCS=ruleNewStatementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNewStatementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNewStatementCS"


    // $ANTLR start "ruleNewStatementCS"
    // InternalQVTimperative.g:2020:1: ruleNewStatementCS returns [EObject current=null] : ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isContained_4_0= 'contained' ) )? otherlv_5= 'new' otherlv_6= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_8_0= ruleUnrestrictedName ) ) otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypeExpCS ) ) (otherlv_11= ':=' ( (lv_ownedExpression_12_0= ruleExpCS ) ) )? otherlv_13= ';' ) ;
    public final EObject ruleNewStatementCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token lv_isContained_4_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_observedProperties_1_0 = null;

        EObject lv_observedProperties_3_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_ownedType_10_0 = null;

        EObject lv_ownedExpression_12_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:2023:28: ( ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isContained_4_0= 'contained' ) )? otherlv_5= 'new' otherlv_6= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_8_0= ruleUnrestrictedName ) ) otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypeExpCS ) ) (otherlv_11= ':=' ( (lv_ownedExpression_12_0= ruleExpCS ) ) )? otherlv_13= ';' ) )
            // InternalQVTimperative.g:2024:1: ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isContained_4_0= 'contained' ) )? otherlv_5= 'new' otherlv_6= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_8_0= ruleUnrestrictedName ) ) otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypeExpCS ) ) (otherlv_11= ':=' ( (lv_ownedExpression_12_0= ruleExpCS ) ) )? otherlv_13= ';' )
            {
            // InternalQVTimperative.g:2024:1: ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isContained_4_0= 'contained' ) )? otherlv_5= 'new' otherlv_6= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_8_0= ruleUnrestrictedName ) ) otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypeExpCS ) ) (otherlv_11= ':=' ( (lv_ownedExpression_12_0= ruleExpCS ) ) )? otherlv_13= ';' )
            // InternalQVTimperative.g:2024:2: (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isContained_4_0= 'contained' ) )? otherlv_5= 'new' otherlv_6= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_8_0= ruleUnrestrictedName ) ) otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypeExpCS ) ) (otherlv_11= ':=' ( (lv_ownedExpression_12_0= ruleExpCS ) ) )? otherlv_13= ';'
            {
            // InternalQVTimperative.g:2024:2: (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==17) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalQVTimperative.g:2024:4: otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )*
                    {
                    otherlv_0=(Token)match(input,17,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getNewStatementCSAccess().getObserveKeyword_0_0());

                    }
                    // InternalQVTimperative.g:2028:1: ( (lv_observedProperties_1_0= rulePathNameCS ) )
                    // InternalQVTimperative.g:2029:1: (lv_observedProperties_1_0= rulePathNameCS )
                    {
                    // InternalQVTimperative.g:2029:1: (lv_observedProperties_1_0= rulePathNameCS )
                    // InternalQVTimperative.g:2030:3: lv_observedProperties_1_0= rulePathNameCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNewStatementCSAccess().getObservedPropertiesPathNameCSParserRuleCall_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_41);
                    lv_observedProperties_1_0=rulePathNameCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNewStatementCSRule());
                      	        }
                             		add(
                             			current,
                             			"observedProperties",
                              		lv_observedProperties_1_0,
                              		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:2046:2: (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )*
                    loop38:
                    do {
                        int alt38=2;
                        int LA38_0 = input.LA(1);

                        if ( (LA38_0==18) ) {
                            alt38=1;
                        }


                        switch (alt38) {
                    	case 1 :
                    	    // InternalQVTimperative.g:2046:4: otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) )
                    	    {
                    	    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getNewStatementCSAccess().getCommaKeyword_0_2_0());

                    	    }
                    	    // InternalQVTimperative.g:2050:1: ( (lv_observedProperties_3_0= rulePathNameCS ) )
                    	    // InternalQVTimperative.g:2051:1: (lv_observedProperties_3_0= rulePathNameCS )
                    	    {
                    	    // InternalQVTimperative.g:2051:1: (lv_observedProperties_3_0= rulePathNameCS )
                    	    // InternalQVTimperative.g:2052:3: lv_observedProperties_3_0= rulePathNameCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getNewStatementCSAccess().getObservedPropertiesPathNameCSParserRuleCall_0_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_41);
                    	    lv_observedProperties_3_0=rulePathNameCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getNewStatementCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"observedProperties",
                    	              		lv_observedProperties_3_0,
                    	              		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop38;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalQVTimperative.g:2068:6: ( (lv_isContained_4_0= 'contained' ) )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==47) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // InternalQVTimperative.g:2069:1: (lv_isContained_4_0= 'contained' )
                    {
                    // InternalQVTimperative.g:2069:1: (lv_isContained_4_0= 'contained' )
                    // InternalQVTimperative.g:2070:3: lv_isContained_4_0= 'contained'
                    {
                    lv_isContained_4_0=(Token)match(input,47,FollowSets000.FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isContained_4_0, grammarAccess.getNewStatementCSAccess().getIsContainedContainedKeyword_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getNewStatementCSRule());
                      	        }
                             		setWithLastConsumed(current, "isContained", true, "contained");

                    }

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,48,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getNewStatementCSAccess().getNewKeyword_2());

            }
            otherlv_6=(Token)match(input,24,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getNewStatementCSAccess().getColonKeyword_3());

            }
            // InternalQVTimperative.g:2091:1: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:2092:1: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:2092:1: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:2093:3: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              		  /* */

            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getNewStatementCSRule());
              	        }

            }
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getNewStatementCSAccess().getReferredTypedModelImperativeTypedModelCrossReference_4_0());

            }
            pushFollow(FollowSets000.FOLLOW_5);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:2109:2: ( (lv_name_8_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:2110:1: (lv_name_8_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:2110:1: (lv_name_8_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:2111:3: lv_name_8_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getNewStatementCSAccess().getNameUnrestrictedNameParserRuleCall_5_0());

            }
            pushFollow(FollowSets000.FOLLOW_11);
            lv_name_8_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNewStatementCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_8_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_9=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getNewStatementCSAccess().getColonKeyword_6());

            }
            // InternalQVTimperative.g:2131:1: ( (lv_ownedType_10_0= ruleTypeExpCS ) )
            // InternalQVTimperative.g:2132:1: (lv_ownedType_10_0= ruleTypeExpCS )
            {
            // InternalQVTimperative.g:2132:1: (lv_ownedType_10_0= ruleTypeExpCS )
            // InternalQVTimperative.g:2133:3: lv_ownedType_10_0= ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getNewStatementCSAccess().getOwnedTypeTypeExpCSParserRuleCall_7_0());

            }
            pushFollow(FollowSets000.FOLLOW_15);
            lv_ownedType_10_0=ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNewStatementCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedType",
                      		lv_ownedType_10_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:2149:2: (otherlv_11= ':=' ( (lv_ownedExpression_12_0= ruleExpCS ) ) )?
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==27) ) {
                alt41=1;
            }
            switch (alt41) {
                case 1 :
                    // InternalQVTimperative.g:2149:4: otherlv_11= ':=' ( (lv_ownedExpression_12_0= ruleExpCS ) )
                    {
                    otherlv_11=(Token)match(input,27,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_11, grammarAccess.getNewStatementCSAccess().getColonEqualsSignKeyword_8_0());

                    }
                    // InternalQVTimperative.g:2153:1: ( (lv_ownedExpression_12_0= ruleExpCS ) )
                    // InternalQVTimperative.g:2154:1: (lv_ownedExpression_12_0= ruleExpCS )
                    {
                    // InternalQVTimperative.g:2154:1: (lv_ownedExpression_12_0= ruleExpCS )
                    // InternalQVTimperative.g:2155:3: lv_ownedExpression_12_0= ruleExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNewStatementCSAccess().getOwnedExpressionExpCSParserRuleCall_8_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_ownedExpression_12_0=ruleExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNewStatementCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedExpression",
                              		lv_ownedExpression_12_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_13=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_13, grammarAccess.getNewStatementCSAccess().getSemicolonKeyword_9());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNewStatementCS"


    // $ANTLR start "entryRuleParamDeclarationCS"
    // InternalQVTimperative.g:2183:1: entryRuleParamDeclarationCS returns [EObject current=null] : iv_ruleParamDeclarationCS= ruleParamDeclarationCS EOF ;
    public final EObject entryRuleParamDeclarationCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParamDeclarationCS = null;


        try {
            // InternalQVTimperative.g:2184:2: (iv_ruleParamDeclarationCS= ruleParamDeclarationCS EOF )
            // InternalQVTimperative.g:2185:2: iv_ruleParamDeclarationCS= ruleParamDeclarationCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParamDeclarationCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleParamDeclarationCS=ruleParamDeclarationCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParamDeclarationCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParamDeclarationCS"


    // $ANTLR start "ruleParamDeclarationCS"
    // InternalQVTimperative.g:2192:1: ruleParamDeclarationCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) ) ;
    public final EObject ruleParamDeclarationCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedType_2_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:2195:28: ( ( ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) ) )
            // InternalQVTimperative.g:2196:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )
            {
            // InternalQVTimperative.g:2196:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )
            // InternalQVTimperative.g:2196:2: ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) )
            {
            // InternalQVTimperative.g:2196:2: ( (lv_name_0_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:2197:1: (lv_name_0_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:2197:1: (lv_name_0_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:2198:3: lv_name_0_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getParamDeclarationCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_11);
            lv_name_0_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParamDeclarationCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_0_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_1=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getParamDeclarationCSAccess().getColonKeyword_1());

            }
            // InternalQVTimperative.g:2218:1: ( (lv_ownedType_2_0= ruleTypeExpCS ) )
            // InternalQVTimperative.g:2219:1: (lv_ownedType_2_0= ruleTypeExpCS )
            {
            // InternalQVTimperative.g:2219:1: (lv_ownedType_2_0= ruleTypeExpCS )
            // InternalQVTimperative.g:2220:3: lv_ownedType_2_0= ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getParamDeclarationCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedType_2_0=ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParamDeclarationCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedType",
                      		lv_ownedType_2_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParamDeclarationCS"


    // $ANTLR start "entryRuleQualifiedPackageCS"
    // InternalQVTimperative.g:2244:1: entryRuleQualifiedPackageCS returns [EObject current=null] : iv_ruleQualifiedPackageCS= ruleQualifiedPackageCS EOF ;
    public final EObject entryRuleQualifiedPackageCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQualifiedPackageCS = null;


        try {
            // InternalQVTimperative.g:2245:2: (iv_ruleQualifiedPackageCS= ruleQualifiedPackageCS EOF )
            // InternalQVTimperative.g:2246:2: iv_ruleQualifiedPackageCS= ruleQualifiedPackageCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedPackageCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQualifiedPackageCS=ruleQualifiedPackageCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedPackageCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedPackageCS"


    // $ANTLR start "ruleQualifiedPackageCS"
    // InternalQVTimperative.g:2253:1: ruleQualifiedPackageCS returns [EObject current=null] : (otherlv_0= 'package' ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )? ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= ':' ( (lv_nsPrefix_4_0= ruleUnrestrictedName ) ) )? (otherlv_5= '=' ( (lv_nsURI_6_0= ruleURI ) ) )? ( (otherlv_7= '{' ( ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) ) | ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) ) )* otherlv_10= '}' ) | otherlv_11= ';' ) ) ;
    public final EObject ruleQualifiedPackageCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        EObject lv_ownedPathName_1_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        AntlrDatatypeRuleToken lv_nsPrefix_4_0 = null;

        AntlrDatatypeRuleToken lv_nsURI_6_0 = null;

        EObject lv_ownedPackages_8_0 = null;

        EObject lv_ownedClasses_9_1 = null;

        EObject lv_ownedClasses_9_2 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:2256:28: ( (otherlv_0= 'package' ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )? ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= ':' ( (lv_nsPrefix_4_0= ruleUnrestrictedName ) ) )? (otherlv_5= '=' ( (lv_nsURI_6_0= ruleURI ) ) )? ( (otherlv_7= '{' ( ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) ) | ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) ) )* otherlv_10= '}' ) | otherlv_11= ';' ) ) )
            // InternalQVTimperative.g:2257:1: (otherlv_0= 'package' ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )? ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= ':' ( (lv_nsPrefix_4_0= ruleUnrestrictedName ) ) )? (otherlv_5= '=' ( (lv_nsURI_6_0= ruleURI ) ) )? ( (otherlv_7= '{' ( ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) ) | ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) ) )* otherlv_10= '}' ) | otherlv_11= ';' ) )
            {
            // InternalQVTimperative.g:2257:1: (otherlv_0= 'package' ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )? ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= ':' ( (lv_nsPrefix_4_0= ruleUnrestrictedName ) ) )? (otherlv_5= '=' ( (lv_nsURI_6_0= ruleURI ) ) )? ( (otherlv_7= '{' ( ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) ) | ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) ) )* otherlv_10= '}' ) | otherlv_11= ';' ) )
            // InternalQVTimperative.g:2257:3: otherlv_0= 'package' ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )? ( (lv_name_2_0= ruleUnrestrictedName ) ) (otherlv_3= ':' ( (lv_nsPrefix_4_0= ruleUnrestrictedName ) ) )? (otherlv_5= '=' ( (lv_nsURI_6_0= ruleURI ) ) )? ( (otherlv_7= '{' ( ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) ) | ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) ) )* otherlv_10= '}' ) | otherlv_11= ';' )
            {
            otherlv_0=(Token)match(input,49,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getQualifiedPackageCSAccess().getPackageKeyword_0());

            }
            // InternalQVTimperative.g:2261:1: ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )?
            int alt42=2;
            alt42 = dfa42.predict(input);
            switch (alt42) {
                case 1 :
                    // InternalQVTimperative.g:2262:1: (lv_ownedPathName_1_0= ruleScopeNameCS )
                    {
                    // InternalQVTimperative.g:2262:1: (lv_ownedPathName_1_0= ruleScopeNameCS )
                    // InternalQVTimperative.g:2263:3: lv_ownedPathName_1_0= ruleScopeNameCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getQualifiedPackageCSAccess().getOwnedPathNameScopeNameCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_5);
                    lv_ownedPathName_1_0=ruleScopeNameCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getQualifiedPackageCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedPathName",
                              		lv_ownedPathName_1_0,
                              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.ScopeNameCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:2279:3: ( (lv_name_2_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:2280:1: (lv_name_2_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:2280:1: (lv_name_2_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:2281:3: lv_name_2_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getQualifiedPackageCSAccess().getNameUnrestrictedNameParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_43);
            lv_name_2_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getQualifiedPackageCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_2_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:2297:2: (otherlv_3= ':' ( (lv_nsPrefix_4_0= ruleUnrestrictedName ) ) )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==24) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // InternalQVTimperative.g:2297:4: otherlv_3= ':' ( (lv_nsPrefix_4_0= ruleUnrestrictedName ) )
                    {
                    otherlv_3=(Token)match(input,24,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getQualifiedPackageCSAccess().getColonKeyword_3_0());

                    }
                    // InternalQVTimperative.g:2301:1: ( (lv_nsPrefix_4_0= ruleUnrestrictedName ) )
                    // InternalQVTimperative.g:2302:1: (lv_nsPrefix_4_0= ruleUnrestrictedName )
                    {
                    // InternalQVTimperative.g:2302:1: (lv_nsPrefix_4_0= ruleUnrestrictedName )
                    // InternalQVTimperative.g:2303:3: lv_nsPrefix_4_0= ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getQualifiedPackageCSAccess().getNsPrefixUnrestrictedNameParserRuleCall_3_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_44);
                    lv_nsPrefix_4_0=ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getQualifiedPackageCSRule());
                      	        }
                             		set(
                             			current,
                             			"nsPrefix",
                              		lv_nsPrefix_4_0,
                              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:2319:4: (otherlv_5= '=' ( (lv_nsURI_6_0= ruleURI ) ) )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==50) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalQVTimperative.g:2319:6: otherlv_5= '=' ( (lv_nsURI_6_0= ruleURI ) )
                    {
                    otherlv_5=(Token)match(input,50,FollowSets000.FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getQualifiedPackageCSAccess().getEqualsSignKeyword_4_0());

                    }
                    // InternalQVTimperative.g:2323:1: ( (lv_nsURI_6_0= ruleURI ) )
                    // InternalQVTimperative.g:2324:1: (lv_nsURI_6_0= ruleURI )
                    {
                    // InternalQVTimperative.g:2324:1: (lv_nsURI_6_0= ruleURI )
                    // InternalQVTimperative.g:2325:3: lv_nsURI_6_0= ruleURI
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getQualifiedPackageCSAccess().getNsURIURIParserRuleCall_4_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_45);
                    lv_nsURI_6_0=ruleURI();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getQualifiedPackageCSRule());
                      	        }
                             		set(
                             			current,
                             			"nsURI",
                              		lv_nsURI_6_0,
                              		"org.eclipse.ocl.xtext.base.Base.URI");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:2341:4: ( (otherlv_7= '{' ( ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) ) | ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) ) )* otherlv_10= '}' ) | otherlv_11= ';' )
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==41) ) {
                alt47=1;
            }
            else if ( (LA47_0==21) ) {
                alt47=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 47, 0, input);

                throw nvae;
            }
            switch (alt47) {
                case 1 :
                    // InternalQVTimperative.g:2341:5: (otherlv_7= '{' ( ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) ) | ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) ) )* otherlv_10= '}' )
                    {
                    // InternalQVTimperative.g:2341:5: (otherlv_7= '{' ( ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) ) | ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) ) )* otherlv_10= '}' )
                    // InternalQVTimperative.g:2341:7: otherlv_7= '{' ( ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) ) | ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) ) )* otherlv_10= '}'
                    {
                    otherlv_7=(Token)match(input,41,FollowSets000.FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getQualifiedPackageCSAccess().getLeftCurlyBracketKeyword_5_0_0());

                    }
                    // InternalQVTimperative.g:2345:1: ( ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) ) | ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) ) )*
                    loop46:
                    do {
                        int alt46=3;
                        int LA46_0 = input.LA(1);

                        if ( (LA46_0==49) ) {
                            alt46=1;
                        }
                        else if ( (LA46_0==60||(LA46_0>=81 && LA46_0<=82)||LA46_0==85||(LA46_0>=96 && LA46_0<=97)) ) {
                            alt46=2;
                        }


                        switch (alt46) {
                    	case 1 :
                    	    // InternalQVTimperative.g:2345:2: ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) )
                    	    {
                    	    // InternalQVTimperative.g:2345:2: ( (lv_ownedPackages_8_0= ruleQualifiedPackageCS ) )
                    	    // InternalQVTimperative.g:2346:1: (lv_ownedPackages_8_0= ruleQualifiedPackageCS )
                    	    {
                    	    // InternalQVTimperative.g:2346:1: (lv_ownedPackages_8_0= ruleQualifiedPackageCS )
                    	    // InternalQVTimperative.g:2347:3: lv_ownedPackages_8_0= ruleQualifiedPackageCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getQualifiedPackageCSAccess().getOwnedPackagesQualifiedPackageCSParserRuleCall_5_0_1_0_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_46);
                    	    lv_ownedPackages_8_0=ruleQualifiedPackageCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getQualifiedPackageCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedPackages",
                    	              		lv_ownedPackages_8_0,
                    	              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.QualifiedPackageCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQVTimperative.g:2364:6: ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) )
                    	    {
                    	    // InternalQVTimperative.g:2364:6: ( ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) ) )
                    	    // InternalQVTimperative.g:2365:1: ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) )
                    	    {
                    	    // InternalQVTimperative.g:2365:1: ( (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS ) )
                    	    // InternalQVTimperative.g:2366:1: (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS )
                    	    {
                    	    // InternalQVTimperative.g:2366:1: (lv_ownedClasses_9_1= ruleClassCS | lv_ownedClasses_9_2= ruleTransformationCS )
                    	    int alt45=2;
                    	    int LA45_0 = input.LA(1);

                    	    if ( ((LA45_0>=81 && LA45_0<=82)||LA45_0==85||(LA45_0>=96 && LA45_0<=97)) ) {
                    	        alt45=1;
                    	    }
                    	    else if ( (LA45_0==60) ) {
                    	        alt45=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 45, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt45) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:2367:3: lv_ownedClasses_9_1= ruleClassCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	        newCompositeNode(grammarAccess.getQualifiedPackageCSAccess().getOwnedClassesClassCSParserRuleCall_5_0_1_1_0_0());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_46);
                    	            lv_ownedClasses_9_1=ruleClassCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getQualifiedPackageCSRule());
                    	              	        }
                    	                     		add(
                    	                     			current,
                    	                     			"ownedClasses",
                    	                      		lv_ownedClasses_9_1,
                    	                      		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.ClassCS");
                    	              	        afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalQVTimperative.g:2382:8: lv_ownedClasses_9_2= ruleTransformationCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	        newCompositeNode(grammarAccess.getQualifiedPackageCSAccess().getOwnedClassesTransformationCSParserRuleCall_5_0_1_1_0_1());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_46);
                    	            lv_ownedClasses_9_2=ruleTransformationCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getQualifiedPackageCSRule());
                    	              	        }
                    	                     		add(
                    	                     			current,
                    	                     			"ownedClasses",
                    	                      		lv_ownedClasses_9_2,
                    	                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.TransformationCS");
                    	              	        afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop46;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getQualifiedPackageCSAccess().getRightCurlyBracketKeyword_5_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:2405:7: otherlv_11= ';'
                    {
                    otherlv_11=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_11, grammarAccess.getQualifiedPackageCSAccess().getSemicolonKeyword_5_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedPackageCS"


    // $ANTLR start "entryRuleQueryCS"
    // InternalQVTimperative.g:2417:1: entryRuleQueryCS returns [EObject current=null] : iv_ruleQueryCS= ruleQueryCS EOF ;
    public final EObject entryRuleQueryCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQueryCS = null;


        try {
            // InternalQVTimperative.g:2418:2: (iv_ruleQueryCS= ruleQueryCS EOF )
            // InternalQVTimperative.g:2419:2: iv_ruleQueryCS= ruleQueryCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQueryCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQueryCS=ruleQueryCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQueryCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQueryCS"


    // $ANTLR start "ruleQueryCS"
    // InternalQVTimperative.g:2426:1: ruleQueryCS returns [EObject current=null] : ( ( (lv_isTransient_0_0= 'transient' ) )? otherlv_1= 'query' ( (lv_ownedPathName_2_0= ruleScopeNameCS ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= '(' ( ( (lv_ownedParameters_5_0= ruleParamDeclarationCS ) ) (otherlv_6= ',' ( (lv_ownedParameters_7_0= ruleParamDeclarationCS ) ) )* )? otherlv_8= ')' otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypeExpCS ) ) (otherlv_11= ';' | (otherlv_12= '{' ( (lv_ownedExpression_13_0= ruleExpCS ) ) otherlv_14= '}' ) | (otherlv_15= 'implementedby' ( (otherlv_16= RULE_SINGLE_QUOTED_STRING ) ) otherlv_17= ';' ) ) ) ;
    public final EObject ruleQueryCS() throws RecognitionException {
        EObject current = null;

        Token lv_isTransient_0_0=null;
        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        EObject lv_ownedPathName_2_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_ownedParameters_5_0 = null;

        EObject lv_ownedParameters_7_0 = null;

        EObject lv_ownedType_10_0 = null;

        EObject lv_ownedExpression_13_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:2429:28: ( ( ( (lv_isTransient_0_0= 'transient' ) )? otherlv_1= 'query' ( (lv_ownedPathName_2_0= ruleScopeNameCS ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= '(' ( ( (lv_ownedParameters_5_0= ruleParamDeclarationCS ) ) (otherlv_6= ',' ( (lv_ownedParameters_7_0= ruleParamDeclarationCS ) ) )* )? otherlv_8= ')' otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypeExpCS ) ) (otherlv_11= ';' | (otherlv_12= '{' ( (lv_ownedExpression_13_0= ruleExpCS ) ) otherlv_14= '}' ) | (otherlv_15= 'implementedby' ( (otherlv_16= RULE_SINGLE_QUOTED_STRING ) ) otherlv_17= ';' ) ) ) )
            // InternalQVTimperative.g:2430:1: ( ( (lv_isTransient_0_0= 'transient' ) )? otherlv_1= 'query' ( (lv_ownedPathName_2_0= ruleScopeNameCS ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= '(' ( ( (lv_ownedParameters_5_0= ruleParamDeclarationCS ) ) (otherlv_6= ',' ( (lv_ownedParameters_7_0= ruleParamDeclarationCS ) ) )* )? otherlv_8= ')' otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypeExpCS ) ) (otherlv_11= ';' | (otherlv_12= '{' ( (lv_ownedExpression_13_0= ruleExpCS ) ) otherlv_14= '}' ) | (otherlv_15= 'implementedby' ( (otherlv_16= RULE_SINGLE_QUOTED_STRING ) ) otherlv_17= ';' ) ) )
            {
            // InternalQVTimperative.g:2430:1: ( ( (lv_isTransient_0_0= 'transient' ) )? otherlv_1= 'query' ( (lv_ownedPathName_2_0= ruleScopeNameCS ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= '(' ( ( (lv_ownedParameters_5_0= ruleParamDeclarationCS ) ) (otherlv_6= ',' ( (lv_ownedParameters_7_0= ruleParamDeclarationCS ) ) )* )? otherlv_8= ')' otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypeExpCS ) ) (otherlv_11= ';' | (otherlv_12= '{' ( (lv_ownedExpression_13_0= ruleExpCS ) ) otherlv_14= '}' ) | (otherlv_15= 'implementedby' ( (otherlv_16= RULE_SINGLE_QUOTED_STRING ) ) otherlv_17= ';' ) ) )
            // InternalQVTimperative.g:2430:2: ( (lv_isTransient_0_0= 'transient' ) )? otherlv_1= 'query' ( (lv_ownedPathName_2_0= ruleScopeNameCS ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= '(' ( ( (lv_ownedParameters_5_0= ruleParamDeclarationCS ) ) (otherlv_6= ',' ( (lv_ownedParameters_7_0= ruleParamDeclarationCS ) ) )* )? otherlv_8= ')' otherlv_9= ':' ( (lv_ownedType_10_0= ruleTypeExpCS ) ) (otherlv_11= ';' | (otherlv_12= '{' ( (lv_ownedExpression_13_0= ruleExpCS ) ) otherlv_14= '}' ) | (otherlv_15= 'implementedby' ( (otherlv_16= RULE_SINGLE_QUOTED_STRING ) ) otherlv_17= ';' ) )
            {
            // InternalQVTimperative.g:2430:2: ( (lv_isTransient_0_0= 'transient' ) )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==51) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalQVTimperative.g:2431:1: (lv_isTransient_0_0= 'transient' )
                    {
                    // InternalQVTimperative.g:2431:1: (lv_isTransient_0_0= 'transient' )
                    // InternalQVTimperative.g:2432:3: lv_isTransient_0_0= 'transient'
                    {
                    lv_isTransient_0_0=(Token)match(input,51,FollowSets000.FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isTransient_0_0, grammarAccess.getQueryCSAccess().getIsTransientTransientKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getQueryCSRule());
                      	        }
                             		setWithLastConsumed(current, "isTransient", true, "transient");

                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,52,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getQueryCSAccess().getQueryKeyword_1());

            }
            // InternalQVTimperative.g:2449:1: ( (lv_ownedPathName_2_0= ruleScopeNameCS ) )
            // InternalQVTimperative.g:2450:1: (lv_ownedPathName_2_0= ruleScopeNameCS )
            {
            // InternalQVTimperative.g:2450:1: (lv_ownedPathName_2_0= ruleScopeNameCS )
            // InternalQVTimperative.g:2451:3: lv_ownedPathName_2_0= ruleScopeNameCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getQueryCSAccess().getOwnedPathNameScopeNameCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_5);
            lv_ownedPathName_2_0=ruleScopeNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getQueryCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedPathName",
                      		lv_ownedPathName_2_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.ScopeNameCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:2467:2: ( (lv_name_3_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:2468:1: (lv_name_3_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:2468:1: (lv_name_3_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:2469:3: lv_name_3_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getQueryCSAccess().getNameUnrestrictedNameParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_48);
            lv_name_3_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getQueryCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_3_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_4=(Token)match(input,53,FollowSets000.FOLLOW_49); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getQueryCSAccess().getLeftParenthesisKeyword_4());

            }
            // InternalQVTimperative.g:2489:1: ( ( (lv_ownedParameters_5_0= ruleParamDeclarationCS ) ) (otherlv_6= ',' ( (lv_ownedParameters_7_0= ruleParamDeclarationCS ) ) )* )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( ((LA50_0>=RULE_SIMPLE_ID && LA50_0<=RULE_ESCAPED_ID)||LA50_0==17||LA50_0==19||(LA50_0>=22 && LA50_0<=23)||(LA50_0>=25 && LA50_0<=26)||(LA50_0>=28 && LA50_0<=31)||LA50_0==34||(LA50_0>=38 && LA50_0<=39)||(LA50_0>=43 && LA50_0<=49)||(LA50_0>=51 && LA50_0<=52)||(LA50_0>=55 && LA50_0<=57)||(LA50_0>=59 && LA50_0<=64)||LA50_0==66||LA50_0==68||LA50_0==70||LA50_0==73||LA50_0==75||LA50_0==77||(LA50_0>=79 && LA50_0<=83)||(LA50_0>=85 && LA50_0<=90)||LA50_0==92||LA50_0==94||(LA50_0>=96 && LA50_0<=99)) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // InternalQVTimperative.g:2489:2: ( (lv_ownedParameters_5_0= ruleParamDeclarationCS ) ) (otherlv_6= ',' ( (lv_ownedParameters_7_0= ruleParamDeclarationCS ) ) )*
                    {
                    // InternalQVTimperative.g:2489:2: ( (lv_ownedParameters_5_0= ruleParamDeclarationCS ) )
                    // InternalQVTimperative.g:2490:1: (lv_ownedParameters_5_0= ruleParamDeclarationCS )
                    {
                    // InternalQVTimperative.g:2490:1: (lv_ownedParameters_5_0= ruleParamDeclarationCS )
                    // InternalQVTimperative.g:2491:3: lv_ownedParameters_5_0= ruleParamDeclarationCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getQueryCSAccess().getOwnedParametersParamDeclarationCSParserRuleCall_5_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_50);
                    lv_ownedParameters_5_0=ruleParamDeclarationCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getQueryCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedParameters",
                              		lv_ownedParameters_5_0,
                              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.ParamDeclarationCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:2507:2: (otherlv_6= ',' ( (lv_ownedParameters_7_0= ruleParamDeclarationCS ) ) )*
                    loop49:
                    do {
                        int alt49=2;
                        int LA49_0 = input.LA(1);

                        if ( (LA49_0==18) ) {
                            alt49=1;
                        }


                        switch (alt49) {
                    	case 1 :
                    	    // InternalQVTimperative.g:2507:4: otherlv_6= ',' ( (lv_ownedParameters_7_0= ruleParamDeclarationCS ) )
                    	    {
                    	    otherlv_6=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_6, grammarAccess.getQueryCSAccess().getCommaKeyword_5_1_0());

                    	    }
                    	    // InternalQVTimperative.g:2511:1: ( (lv_ownedParameters_7_0= ruleParamDeclarationCS ) )
                    	    // InternalQVTimperative.g:2512:1: (lv_ownedParameters_7_0= ruleParamDeclarationCS )
                    	    {
                    	    // InternalQVTimperative.g:2512:1: (lv_ownedParameters_7_0= ruleParamDeclarationCS )
                    	    // InternalQVTimperative.g:2513:3: lv_ownedParameters_7_0= ruleParamDeclarationCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getQueryCSAccess().getOwnedParametersParamDeclarationCSParserRuleCall_5_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_50);
                    	    lv_ownedParameters_7_0=ruleParamDeclarationCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getQueryCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedParameters",
                    	              		lv_ownedParameters_7_0,
                    	              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.ParamDeclarationCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop49;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_8=(Token)match(input,54,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getQueryCSAccess().getRightParenthesisKeyword_6());

            }
            otherlv_9=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getQueryCSAccess().getColonKeyword_7());

            }
            // InternalQVTimperative.g:2537:1: ( (lv_ownedType_10_0= ruleTypeExpCS ) )
            // InternalQVTimperative.g:2538:1: (lv_ownedType_10_0= ruleTypeExpCS )
            {
            // InternalQVTimperative.g:2538:1: (lv_ownedType_10_0= ruleTypeExpCS )
            // InternalQVTimperative.g:2539:3: lv_ownedType_10_0= ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getQueryCSAccess().getOwnedTypeTypeExpCSParserRuleCall_8_0());

            }
            pushFollow(FollowSets000.FOLLOW_51);
            lv_ownedType_10_0=ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getQueryCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedType",
                      		lv_ownedType_10_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:2555:2: (otherlv_11= ';' | (otherlv_12= '{' ( (lv_ownedExpression_13_0= ruleExpCS ) ) otherlv_14= '}' ) | (otherlv_15= 'implementedby' ( (otherlv_16= RULE_SINGLE_QUOTED_STRING ) ) otherlv_17= ';' ) )
            int alt51=3;
            switch ( input.LA(1) ) {
            case 21:
                {
                alt51=1;
                }
                break;
            case 41:
                {
                alt51=2;
                }
                break;
            case 55:
                {
                alt51=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 51, 0, input);

                throw nvae;
            }

            switch (alt51) {
                case 1 :
                    // InternalQVTimperative.g:2555:4: otherlv_11= ';'
                    {
                    otherlv_11=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_11, grammarAccess.getQueryCSAccess().getSemicolonKeyword_9_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:2560:6: (otherlv_12= '{' ( (lv_ownedExpression_13_0= ruleExpCS ) ) otherlv_14= '}' )
                    {
                    // InternalQVTimperative.g:2560:6: (otherlv_12= '{' ( (lv_ownedExpression_13_0= ruleExpCS ) ) otherlv_14= '}' )
                    // InternalQVTimperative.g:2560:8: otherlv_12= '{' ( (lv_ownedExpression_13_0= ruleExpCS ) ) otherlv_14= '}'
                    {
                    otherlv_12=(Token)match(input,41,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getQueryCSAccess().getLeftCurlyBracketKeyword_9_1_0());

                    }
                    // InternalQVTimperative.g:2564:1: ( (lv_ownedExpression_13_0= ruleExpCS ) )
                    // InternalQVTimperative.g:2565:1: (lv_ownedExpression_13_0= ruleExpCS )
                    {
                    // InternalQVTimperative.g:2565:1: (lv_ownedExpression_13_0= ruleExpCS )
                    // InternalQVTimperative.g:2566:3: lv_ownedExpression_13_0= ruleExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getQueryCSAccess().getOwnedExpressionExpCSParserRuleCall_9_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_52);
                    lv_ownedExpression_13_0=ruleExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getQueryCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedExpression",
                              		lv_ownedExpression_13_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    otherlv_14=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_14, grammarAccess.getQueryCSAccess().getRightCurlyBracketKeyword_9_1_2());

                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:2587:6: (otherlv_15= 'implementedby' ( (otherlv_16= RULE_SINGLE_QUOTED_STRING ) ) otherlv_17= ';' )
                    {
                    // InternalQVTimperative.g:2587:6: (otherlv_15= 'implementedby' ( (otherlv_16= RULE_SINGLE_QUOTED_STRING ) ) otherlv_17= ';' )
                    // InternalQVTimperative.g:2587:8: otherlv_15= 'implementedby' ( (otherlv_16= RULE_SINGLE_QUOTED_STRING ) ) otherlv_17= ';'
                    {
                    otherlv_15=(Token)match(input,55,FollowSets000.FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_15, grammarAccess.getQueryCSAccess().getImplementedbyKeyword_9_2_0());

                    }
                    // InternalQVTimperative.g:2591:1: ( (otherlv_16= RULE_SINGLE_QUOTED_STRING ) )
                    // InternalQVTimperative.g:2592:1: (otherlv_16= RULE_SINGLE_QUOTED_STRING )
                    {
                    // InternalQVTimperative.g:2592:1: (otherlv_16= RULE_SINGLE_QUOTED_STRING )
                    // InternalQVTimperative.g:2593:3: otherlv_16= RULE_SINGLE_QUOTED_STRING
                    {
                    if ( state.backtracking==0 ) {

                      		  /* */

                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getQueryCSRule());
                      	        }

                    }
                    otherlv_16=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_16, grammarAccess.getQueryCSAccess().getImplementationJavaClassCSCrossReference_9_2_1_0());

                    }

                    }


                    }

                    otherlv_17=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_17, grammarAccess.getQueryCSAccess().getSemicolonKeyword_9_2_2());

                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQueryCS"


    // $ANTLR start "entryRuleScopeNameCS"
    // InternalQVTimperative.g:2619:1: entryRuleScopeNameCS returns [EObject current=null] : iv_ruleScopeNameCS= ruleScopeNameCS EOF ;
    public final EObject entryRuleScopeNameCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScopeNameCS = null;


        try {
            // InternalQVTimperative.g:2620:2: (iv_ruleScopeNameCS= ruleScopeNameCS EOF )
            // InternalQVTimperative.g:2621:2: iv_ruleScopeNameCS= ruleScopeNameCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScopeNameCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScopeNameCS=ruleScopeNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScopeNameCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScopeNameCS"


    // $ANTLR start "ruleScopeNameCS"
    // InternalQVTimperative.g:2628:1: ruleScopeNameCS returns [EObject current=null] : ( ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) otherlv_1= '::' ( ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) otherlv_3= '::' )* ) ;
    public final EObject ruleScopeNameCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_ownedPathElements_0_0 = null;

        EObject lv_ownedPathElements_2_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:2631:28: ( ( ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) otherlv_1= '::' ( ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) otherlv_3= '::' )* ) )
            // InternalQVTimperative.g:2632:1: ( ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) otherlv_1= '::' ( ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) otherlv_3= '::' )* )
            {
            // InternalQVTimperative.g:2632:1: ( ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) otherlv_1= '::' ( ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) otherlv_3= '::' )* )
            // InternalQVTimperative.g:2632:2: ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) otherlv_1= '::' ( ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) otherlv_3= '::' )*
            {
            // InternalQVTimperative.g:2632:2: ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) )
            // InternalQVTimperative.g:2633:1: (lv_ownedPathElements_0_0= ruleFirstPathElementCS )
            {
            // InternalQVTimperative.g:2633:1: (lv_ownedPathElements_0_0= ruleFirstPathElementCS )
            // InternalQVTimperative.g:2634:3: lv_ownedPathElements_0_0= ruleFirstPathElementCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getScopeNameCSAccess().getOwnedPathElementsFirstPathElementCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_54);
            lv_ownedPathElements_0_0=ruleFirstPathElementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getScopeNameCSRule());
              	        }
                     		add(
                     			current,
                     			"ownedPathElements",
                      		lv_ownedPathElements_0_0,
                      		"org.eclipse.ocl.xtext.base.Base.FirstPathElementCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_1=(Token)match(input,36,FollowSets000.FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getScopeNameCSAccess().getColonColonKeyword_1());

            }
            // InternalQVTimperative.g:2654:1: ( ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) otherlv_3= '::' )*
            loop52:
            do {
                int alt52=2;
                alt52 = dfa52.predict(input);
                switch (alt52) {
            	case 1 :
            	    // InternalQVTimperative.g:2654:2: ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) otherlv_3= '::'
            	    {
            	    // InternalQVTimperative.g:2654:2: ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) )
            	    // InternalQVTimperative.g:2655:1: (lv_ownedPathElements_2_0= ruleNextPathElementCS )
            	    {
            	    // InternalQVTimperative.g:2655:1: (lv_ownedPathElements_2_0= ruleNextPathElementCS )
            	    // InternalQVTimperative.g:2656:3: lv_ownedPathElements_2_0= ruleNextPathElementCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getScopeNameCSAccess().getOwnedPathElementsNextPathElementCSParserRuleCall_2_0_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_54);
            	    lv_ownedPathElements_2_0=ruleNextPathElementCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getScopeNameCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedPathElements",
            	              		lv_ownedPathElements_2_0,
            	              		"org.eclipse.ocl.xtext.base.Base.NextPathElementCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }

            	    otherlv_3=(Token)match(input,36,FollowSets000.FOLLOW_55); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getScopeNameCSAccess().getColonColonKeyword_2_1());

            	    }

            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScopeNameCS"


    // $ANTLR start "entryRuleSetStatementCS"
    // InternalQVTimperative.g:2684:1: entryRuleSetStatementCS returns [EObject current=null] : iv_ruleSetStatementCS= ruleSetStatementCS EOF ;
    public final EObject entryRuleSetStatementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSetStatementCS = null;


        try {
            // InternalQVTimperative.g:2685:2: (iv_ruleSetStatementCS= ruleSetStatementCS EOF )
            // InternalQVTimperative.g:2686:2: iv_ruleSetStatementCS= ruleSetStatementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSetStatementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSetStatementCS=ruleSetStatementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSetStatementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSetStatementCS"


    // $ANTLR start "ruleSetStatementCS"
    // InternalQVTimperative.g:2693:1: ruleSetStatementCS returns [EObject current=null] : ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isNotify_4_0= 'notify' ) )? otherlv_5= 'set' ( ( ruleUnrestrictedName ) ) otherlv_7= '.' ( ( ruleUnrestrictedName ) ) (otherlv_9= ':=' | ( (lv_isPartial_10_0= '+=' ) ) ) ( (lv_ownedExpression_11_0= ruleExpCS ) ) otherlv_12= ';' ) ;
    public final EObject ruleSetStatementCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token lv_isNotify_4_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token lv_isPartial_10_0=null;
        Token otherlv_12=null;
        EObject lv_observedProperties_1_0 = null;

        EObject lv_observedProperties_3_0 = null;

        EObject lv_ownedExpression_11_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:2696:28: ( ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isNotify_4_0= 'notify' ) )? otherlv_5= 'set' ( ( ruleUnrestrictedName ) ) otherlv_7= '.' ( ( ruleUnrestrictedName ) ) (otherlv_9= ':=' | ( (lv_isPartial_10_0= '+=' ) ) ) ( (lv_ownedExpression_11_0= ruleExpCS ) ) otherlv_12= ';' ) )
            // InternalQVTimperative.g:2697:1: ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isNotify_4_0= 'notify' ) )? otherlv_5= 'set' ( ( ruleUnrestrictedName ) ) otherlv_7= '.' ( ( ruleUnrestrictedName ) ) (otherlv_9= ':=' | ( (lv_isPartial_10_0= '+=' ) ) ) ( (lv_ownedExpression_11_0= ruleExpCS ) ) otherlv_12= ';' )
            {
            // InternalQVTimperative.g:2697:1: ( (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isNotify_4_0= 'notify' ) )? otherlv_5= 'set' ( ( ruleUnrestrictedName ) ) otherlv_7= '.' ( ( ruleUnrestrictedName ) ) (otherlv_9= ':=' | ( (lv_isPartial_10_0= '+=' ) ) ) ( (lv_ownedExpression_11_0= ruleExpCS ) ) otherlv_12= ';' )
            // InternalQVTimperative.g:2697:2: (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )? ( (lv_isNotify_4_0= 'notify' ) )? otherlv_5= 'set' ( ( ruleUnrestrictedName ) ) otherlv_7= '.' ( ( ruleUnrestrictedName ) ) (otherlv_9= ':=' | ( (lv_isPartial_10_0= '+=' ) ) ) ( (lv_ownedExpression_11_0= ruleExpCS ) ) otherlv_12= ';'
            {
            // InternalQVTimperative.g:2697:2: (otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )* )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==17) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalQVTimperative.g:2697:4: otherlv_0= 'observe' ( (lv_observedProperties_1_0= rulePathNameCS ) ) (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )*
                    {
                    otherlv_0=(Token)match(input,17,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getSetStatementCSAccess().getObserveKeyword_0_0());

                    }
                    // InternalQVTimperative.g:2701:1: ( (lv_observedProperties_1_0= rulePathNameCS ) )
                    // InternalQVTimperative.g:2702:1: (lv_observedProperties_1_0= rulePathNameCS )
                    {
                    // InternalQVTimperative.g:2702:1: (lv_observedProperties_1_0= rulePathNameCS )
                    // InternalQVTimperative.g:2703:3: lv_observedProperties_1_0= rulePathNameCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getSetStatementCSAccess().getObservedPropertiesPathNameCSParserRuleCall_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_56);
                    lv_observedProperties_1_0=rulePathNameCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSetStatementCSRule());
                      	        }
                             		add(
                             			current,
                             			"observedProperties",
                              		lv_observedProperties_1_0,
                              		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:2719:2: (otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) ) )*
                    loop53:
                    do {
                        int alt53=2;
                        int LA53_0 = input.LA(1);

                        if ( (LA53_0==18) ) {
                            alt53=1;
                        }


                        switch (alt53) {
                    	case 1 :
                    	    // InternalQVTimperative.g:2719:4: otherlv_2= ',' ( (lv_observedProperties_3_0= rulePathNameCS ) )
                    	    {
                    	    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getSetStatementCSAccess().getCommaKeyword_0_2_0());

                    	    }
                    	    // InternalQVTimperative.g:2723:1: ( (lv_observedProperties_3_0= rulePathNameCS ) )
                    	    // InternalQVTimperative.g:2724:1: (lv_observedProperties_3_0= rulePathNameCS )
                    	    {
                    	    // InternalQVTimperative.g:2724:1: (lv_observedProperties_3_0= rulePathNameCS )
                    	    // InternalQVTimperative.g:2725:3: lv_observedProperties_3_0= rulePathNameCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getSetStatementCSAccess().getObservedPropertiesPathNameCSParserRuleCall_0_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_56);
                    	    lv_observedProperties_3_0=rulePathNameCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getSetStatementCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"observedProperties",
                    	              		lv_observedProperties_3_0,
                    	              		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop53;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalQVTimperative.g:2741:6: ( (lv_isNotify_4_0= 'notify' ) )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==56) ) {
                alt55=1;
            }
            switch (alt55) {
                case 1 :
                    // InternalQVTimperative.g:2742:1: (lv_isNotify_4_0= 'notify' )
                    {
                    // InternalQVTimperative.g:2742:1: (lv_isNotify_4_0= 'notify' )
                    // InternalQVTimperative.g:2743:3: lv_isNotify_4_0= 'notify'
                    {
                    lv_isNotify_4_0=(Token)match(input,56,FollowSets000.FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isNotify_4_0, grammarAccess.getSetStatementCSAccess().getIsNotifyNotifyKeyword_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getSetStatementCSRule());
                      	        }
                             		setWithLastConsumed(current, "isNotify", true, "notify");

                    }

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,57,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getSetStatementCSAccess().getSetKeyword_2());

            }
            // InternalQVTimperative.g:2760:1: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:2761:1: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:2761:1: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:2762:3: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              		  /* */

            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getSetStatementCSRule());
              	        }

            }
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getSetStatementCSAccess().getReferredVariableVariableDeclarationCrossReference_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_58);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_7=(Token)match(input,58,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getSetStatementCSAccess().getFullStopKeyword_4());

            }
            // InternalQVTimperative.g:2782:1: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:2783:1: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:2783:1: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:2784:3: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              		  /* */

            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getSetStatementCSRule());
              	        }

            }
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getSetStatementCSAccess().getReferredPropertyPropertyCrossReference_5_0());

            }
            pushFollow(FollowSets000.FOLLOW_59);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:2800:2: (otherlv_9= ':=' | ( (lv_isPartial_10_0= '+=' ) ) )
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==27) ) {
                alt56=1;
            }
            else if ( (LA56_0==20) ) {
                alt56=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;
            }
            switch (alt56) {
                case 1 :
                    // InternalQVTimperative.g:2800:4: otherlv_9= ':='
                    {
                    otherlv_9=(Token)match(input,27,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getSetStatementCSAccess().getColonEqualsSignKeyword_6_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:2805:6: ( (lv_isPartial_10_0= '+=' ) )
                    {
                    // InternalQVTimperative.g:2805:6: ( (lv_isPartial_10_0= '+=' ) )
                    // InternalQVTimperative.g:2806:1: (lv_isPartial_10_0= '+=' )
                    {
                    // InternalQVTimperative.g:2806:1: (lv_isPartial_10_0= '+=' )
                    // InternalQVTimperative.g:2807:3: lv_isPartial_10_0= '+='
                    {
                    lv_isPartial_10_0=(Token)match(input,20,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isPartial_10_0, grammarAccess.getSetStatementCSAccess().getIsPartialPlusSignEqualsSignKeyword_6_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getSetStatementCSRule());
                      	        }
                             		setWithLastConsumed(current, "isPartial", true, "+=");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:2820:3: ( (lv_ownedExpression_11_0= ruleExpCS ) )
            // InternalQVTimperative.g:2821:1: (lv_ownedExpression_11_0= ruleExpCS )
            {
            // InternalQVTimperative.g:2821:1: (lv_ownedExpression_11_0= ruleExpCS )
            // InternalQVTimperative.g:2822:3: lv_ownedExpression_11_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getSetStatementCSAccess().getOwnedExpressionExpCSParserRuleCall_7_0());

            }
            pushFollow(FollowSets000.FOLLOW_9);
            lv_ownedExpression_11_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSetStatementCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedExpression",
                      		lv_ownedExpression_11_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_12=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_12, grammarAccess.getSetStatementCSAccess().getSemicolonKeyword_8());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSetStatementCS"


    // $ANTLR start "entryRuleSimpleParameterBindingCS"
    // InternalQVTimperative.g:2850:1: entryRuleSimpleParameterBindingCS returns [EObject current=null] : iv_ruleSimpleParameterBindingCS= ruleSimpleParameterBindingCS EOF ;
    public final EObject entryRuleSimpleParameterBindingCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleParameterBindingCS = null;


        try {
            // InternalQVTimperative.g:2851:2: (iv_ruleSimpleParameterBindingCS= ruleSimpleParameterBindingCS EOF )
            // InternalQVTimperative.g:2852:2: iv_ruleSimpleParameterBindingCS= ruleSimpleParameterBindingCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleParameterBindingCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSimpleParameterBindingCS=ruleSimpleParameterBindingCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleParameterBindingCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleParameterBindingCS"


    // $ANTLR start "ruleSimpleParameterBindingCS"
    // InternalQVTimperative.g:2859:1: ruleSimpleParameterBindingCS returns [EObject current=null] : ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'uses' ( (lv_ownedValue_3_0= ruleExpCS ) ) otherlv_4= ';' ) ;
    public final EObject ruleSimpleParameterBindingCS() throws RecognitionException {
        EObject current = null;

        Token lv_isCheck_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedValue_3_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:2862:28: ( ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'uses' ( (lv_ownedValue_3_0= ruleExpCS ) ) otherlv_4= ';' ) )
            // InternalQVTimperative.g:2863:1: ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'uses' ( (lv_ownedValue_3_0= ruleExpCS ) ) otherlv_4= ';' )
            {
            // InternalQVTimperative.g:2863:1: ( ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'uses' ( (lv_ownedValue_3_0= ruleExpCS ) ) otherlv_4= ';' )
            // InternalQVTimperative.g:2863:2: ( (lv_isCheck_0_0= 'check' ) )? ( ( ruleUnrestrictedName ) ) otherlv_2= 'uses' ( (lv_ownedValue_3_0= ruleExpCS ) ) otherlv_4= ';'
            {
            // InternalQVTimperative.g:2863:2: ( (lv_isCheck_0_0= 'check' ) )?
            int alt57=2;
            alt57 = dfa57.predict(input);
            switch (alt57) {
                case 1 :
                    // InternalQVTimperative.g:2864:1: (lv_isCheck_0_0= 'check' )
                    {
                    // InternalQVTimperative.g:2864:1: (lv_isCheck_0_0= 'check' )
                    // InternalQVTimperative.g:2865:3: lv_isCheck_0_0= 'check'
                    {
                    lv_isCheck_0_0=(Token)match(input,28,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isCheck_0_0, grammarAccess.getSimpleParameterBindingCSAccess().getIsCheckCheckKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getSimpleParameterBindingCSRule());
                      	        }
                             		setWithLastConsumed(current, "isCheck", true, "check");

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:2878:3: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:2879:1: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:2879:1: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:2880:3: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              		  /* */

            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getSimpleParameterBindingCSRule());
              	        }

            }
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getSimpleParameterBindingCSAccess().getReferredVariableSimpleParameterCrossReference_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_60);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_2=(Token)match(input,59,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getSimpleParameterBindingCSAccess().getUsesKeyword_2());

            }
            // InternalQVTimperative.g:2900:1: ( (lv_ownedValue_3_0= ruleExpCS ) )
            // InternalQVTimperative.g:2901:1: (lv_ownedValue_3_0= ruleExpCS )
            {
            // InternalQVTimperative.g:2901:1: (lv_ownedValue_3_0= ruleExpCS )
            // InternalQVTimperative.g:2902:3: lv_ownedValue_3_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getSimpleParameterBindingCSAccess().getOwnedValueExpCSParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_9);
            lv_ownedValue_3_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSimpleParameterBindingCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedValue",
                      		lv_ownedValue_3_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_4=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getSimpleParameterBindingCSAccess().getSemicolonKeyword_4());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleParameterBindingCS"


    // $ANTLR start "entryRuleSimpleParameterCS"
    // InternalQVTimperative.g:2930:1: entryRuleSimpleParameterCS returns [EObject current=null] : iv_ruleSimpleParameterCS= ruleSimpleParameterCS EOF ;
    public final EObject entryRuleSimpleParameterCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleParameterCS = null;


        try {
            // InternalQVTimperative.g:2931:2: (iv_ruleSimpleParameterCS= ruleSimpleParameterCS EOF )
            // InternalQVTimperative.g:2932:2: iv_ruleSimpleParameterCS= ruleSimpleParameterCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleParameterCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSimpleParameterCS=ruleSimpleParameterCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleParameterCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleParameterCS"


    // $ANTLR start "ruleSimpleParameterCS"
    // InternalQVTimperative.g:2939:1: ruleSimpleParameterCS returns [EObject current=null] : (otherlv_0= 'in' otherlv_1= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' ( (lv_ownedType_5_0= ruleTypeExpCS ) ) otherlv_6= ';' ) ;
    public final EObject ruleSimpleParameterCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_ownedType_5_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:2942:28: ( (otherlv_0= 'in' otherlv_1= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' ( (lv_ownedType_5_0= ruleTypeExpCS ) ) otherlv_6= ';' ) )
            // InternalQVTimperative.g:2943:1: (otherlv_0= 'in' otherlv_1= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' ( (lv_ownedType_5_0= ruleTypeExpCS ) ) otherlv_6= ';' )
            {
            // InternalQVTimperative.g:2943:1: (otherlv_0= 'in' otherlv_1= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' ( (lv_ownedType_5_0= ruleTypeExpCS ) ) otherlv_6= ';' )
            // InternalQVTimperative.g:2943:3: otherlv_0= 'in' otherlv_1= ':' ( ( ruleUnrestrictedName ) ) ( (lv_name_3_0= ruleUnrestrictedName ) ) otherlv_4= ':' ( (lv_ownedType_5_0= ruleTypeExpCS ) ) otherlv_6= ';'
            {
            otherlv_0=(Token)match(input,40,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getSimpleParameterCSAccess().getInKeyword_0());

            }
            otherlv_1=(Token)match(input,24,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getSimpleParameterCSAccess().getColonKeyword_1());

            }
            // InternalQVTimperative.g:2951:1: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:2952:1: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:2952:1: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:2953:3: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              		  /* */

            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getSimpleParameterCSRule());
              	        }

            }
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getSimpleParameterCSAccess().getReferredTypedModelImperativeTypedModelCrossReference_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_5);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:2969:2: ( (lv_name_3_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:2970:1: (lv_name_3_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:2970:1: (lv_name_3_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:2971:3: lv_name_3_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getSimpleParameterCSAccess().getNameUnrestrictedNameParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_11);
            lv_name_3_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSimpleParameterCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_3_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_4=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getSimpleParameterCSAccess().getColonKeyword_4());

            }
            // InternalQVTimperative.g:2991:1: ( (lv_ownedType_5_0= ruleTypeExpCS ) )
            // InternalQVTimperative.g:2992:1: (lv_ownedType_5_0= ruleTypeExpCS )
            {
            // InternalQVTimperative.g:2992:1: (lv_ownedType_5_0= ruleTypeExpCS )
            // InternalQVTimperative.g:2993:3: lv_ownedType_5_0= ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getSimpleParameterCSAccess().getOwnedTypeTypeExpCSParserRuleCall_5_0());

            }
            pushFollow(FollowSets000.FOLLOW_9);
            lv_ownedType_5_0=ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSimpleParameterCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedType",
                      		lv_ownedType_5_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_6=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getSimpleParameterCSAccess().getSemicolonKeyword_6());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleParameterCS"


    // $ANTLR start "entryRuleTransformationCS"
    // InternalQVTimperative.g:3021:1: entryRuleTransformationCS returns [EObject current=null] : iv_ruleTransformationCS= ruleTransformationCS EOF ;
    public final EObject entryRuleTransformationCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTransformationCS = null;


        try {
            // InternalQVTimperative.g:3022:2: (iv_ruleTransformationCS= ruleTransformationCS EOF )
            // InternalQVTimperative.g:3023:2: iv_ruleTransformationCS= ruleTransformationCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTransformationCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTransformationCS=ruleTransformationCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTransformationCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTransformationCS"


    // $ANTLR start "ruleTransformationCS"
    // InternalQVTimperative.g:3030:1: ruleTransformationCS returns [EObject current=null] : (otherlv_0= 'transformation' ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )? ( (lv_name_2_0= ruleUnreservedName ) ) otherlv_3= '{' ( ( (lv_ownedDirections_4_0= ruleDirectionCS ) ) otherlv_5= ';' )* otherlv_6= '}' ) ;
    public final EObject ruleTransformationCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_ownedPathName_1_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_ownedDirections_4_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:3033:28: ( (otherlv_0= 'transformation' ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )? ( (lv_name_2_0= ruleUnreservedName ) ) otherlv_3= '{' ( ( (lv_ownedDirections_4_0= ruleDirectionCS ) ) otherlv_5= ';' )* otherlv_6= '}' ) )
            // InternalQVTimperative.g:3034:1: (otherlv_0= 'transformation' ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )? ( (lv_name_2_0= ruleUnreservedName ) ) otherlv_3= '{' ( ( (lv_ownedDirections_4_0= ruleDirectionCS ) ) otherlv_5= ';' )* otherlv_6= '}' )
            {
            // InternalQVTimperative.g:3034:1: (otherlv_0= 'transformation' ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )? ( (lv_name_2_0= ruleUnreservedName ) ) otherlv_3= '{' ( ( (lv_ownedDirections_4_0= ruleDirectionCS ) ) otherlv_5= ';' )* otherlv_6= '}' )
            // InternalQVTimperative.g:3034:3: otherlv_0= 'transformation' ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )? ( (lv_name_2_0= ruleUnreservedName ) ) otherlv_3= '{' ( ( (lv_ownedDirections_4_0= ruleDirectionCS ) ) otherlv_5= ';' )* otherlv_6= '}'
            {
            otherlv_0=(Token)match(input,60,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTransformationCSAccess().getTransformationKeyword_0());

            }
            // InternalQVTimperative.g:3038:1: ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )?
            int alt58=2;
            alt58 = dfa58.predict(input);
            switch (alt58) {
                case 1 :
                    // InternalQVTimperative.g:3039:1: (lv_ownedPathName_1_0= ruleScopeNameCS )
                    {
                    // InternalQVTimperative.g:3039:1: (lv_ownedPathName_1_0= ruleScopeNameCS )
                    // InternalQVTimperative.g:3040:3: lv_ownedPathName_1_0= ruleScopeNameCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTransformationCSAccess().getOwnedPathNameScopeNameCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_12);
                    lv_ownedPathName_1_0=ruleScopeNameCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTransformationCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedPathName",
                              		lv_ownedPathName_1_0,
                              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.ScopeNameCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:3056:3: ( (lv_name_2_0= ruleUnreservedName ) )
            // InternalQVTimperative.g:3057:1: (lv_name_2_0= ruleUnreservedName )
            {
            // InternalQVTimperative.g:3057:1: (lv_name_2_0= ruleUnreservedName )
            // InternalQVTimperative.g:3058:3: lv_name_2_0= ruleUnreservedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTransformationCSAccess().getNameUnreservedNameParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_31);
            lv_name_2_0=ruleUnreservedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTransformationCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_2_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.UnreservedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_3=(Token)match(input,41,FollowSets000.FOLLOW_61); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getTransformationCSAccess().getLeftCurlyBracketKeyword_3());

            }
            // InternalQVTimperative.g:3078:1: ( ( (lv_ownedDirections_4_0= ruleDirectionCS ) ) otherlv_5= ';' )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==EOF||(LA59_0>=RULE_SIMPLE_ID && LA59_0<=RULE_ESCAPED_ID)||LA59_0==17||LA59_0==19||(LA59_0>=21 && LA59_0<=23)||(LA59_0>=25 && LA59_0<=26)||(LA59_0>=28 && LA59_0<=31)||LA59_0==34||(LA59_0>=38 && LA59_0<=39)||(LA59_0>=43 && LA59_0<=49)||(LA59_0>=51 && LA59_0<=52)||(LA59_0>=55 && LA59_0<=57)||(LA59_0>=59 && LA59_0<=64)||LA59_0==66||LA59_0==68||LA59_0==70||LA59_0==73||LA59_0==75||LA59_0==77||(LA59_0>=79 && LA59_0<=83)||(LA59_0>=85 && LA59_0<=90)||LA59_0==92||LA59_0==94||(LA59_0>=96 && LA59_0<=99)) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // InternalQVTimperative.g:3078:2: ( (lv_ownedDirections_4_0= ruleDirectionCS ) ) otherlv_5= ';'
            	    {
            	    // InternalQVTimperative.g:3078:2: ( (lv_ownedDirections_4_0= ruleDirectionCS ) )
            	    // InternalQVTimperative.g:3079:1: (lv_ownedDirections_4_0= ruleDirectionCS )
            	    {
            	    // InternalQVTimperative.g:3079:1: (lv_ownedDirections_4_0= ruleDirectionCS )
            	    // InternalQVTimperative.g:3080:3: lv_ownedDirections_4_0= ruleDirectionCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getTransformationCSAccess().getOwnedDirectionsDirectionCSParserRuleCall_4_0_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_9);
            	    lv_ownedDirections_4_0=ruleDirectionCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTransformationCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedDirections",
            	              		lv_ownedDirections_4_0,
            	              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.DirectionCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }

            	    otherlv_5=(Token)match(input,21,FollowSets000.FOLLOW_61); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_5, grammarAccess.getTransformationCSAccess().getSemicolonKeyword_4_1());

            	    }

            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);

            otherlv_6=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getTransformationCSAccess().getRightCurlyBracketKeyword_5());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTransformationCS"


    // $ANTLR start "entryRuleQVTimperativeUnrestrictedName"
    // InternalQVTimperative.g:3112:1: entryRuleQVTimperativeUnrestrictedName returns [String current=null] : iv_ruleQVTimperativeUnrestrictedName= ruleQVTimperativeUnrestrictedName EOF ;
    public final String entryRuleQVTimperativeUnrestrictedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQVTimperativeUnrestrictedName = null;


        try {
            // InternalQVTimperative.g:3113:2: (iv_ruleQVTimperativeUnrestrictedName= ruleQVTimperativeUnrestrictedName EOF )
            // InternalQVTimperative.g:3114:2: iv_ruleQVTimperativeUnrestrictedName= ruleQVTimperativeUnrestrictedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQVTimperativeUnrestrictedNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQVTimperativeUnrestrictedName=ruleQVTimperativeUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQVTimperativeUnrestrictedName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQVTimperativeUnrestrictedName"


    // $ANTLR start "ruleQVTimperativeUnrestrictedName"
    // InternalQVTimperative.g:3121:1: ruleQVTimperativeUnrestrictedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'add' | kw= 'append' | kw= 'appendsTo' | kw= 'buffer' | kw= 'call' | kw= 'check' | kw= 'contained' | kw= 'enforce' | kw= 'for' | kw= 'implementedby' | kw= 'imports' | kw= 'install' | kw= 'invoke' | kw= 'iterates' | kw= 'map' | kw= 'new' | kw= 'notify' | kw= 'observe' | kw= 'package' | kw= 'query' | kw= 'set' | kw= 'strict' | kw= 'success' | kw= 'transformation' | kw= 'transient' | kw= 'uses' | kw= 'var' ) ;
    public final AntlrDatatypeRuleToken ruleQVTimperativeUnrestrictedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule();

        try {
            // InternalQVTimperative.g:3124:28: ( (kw= 'add' | kw= 'append' | kw= 'appendsTo' | kw= 'buffer' | kw= 'call' | kw= 'check' | kw= 'contained' | kw= 'enforce' | kw= 'for' | kw= 'implementedby' | kw= 'imports' | kw= 'install' | kw= 'invoke' | kw= 'iterates' | kw= 'map' | kw= 'new' | kw= 'notify' | kw= 'observe' | kw= 'package' | kw= 'query' | kw= 'set' | kw= 'strict' | kw= 'success' | kw= 'transformation' | kw= 'transient' | kw= 'uses' | kw= 'var' ) )
            // InternalQVTimperative.g:3125:1: (kw= 'add' | kw= 'append' | kw= 'appendsTo' | kw= 'buffer' | kw= 'call' | kw= 'check' | kw= 'contained' | kw= 'enforce' | kw= 'for' | kw= 'implementedby' | kw= 'imports' | kw= 'install' | kw= 'invoke' | kw= 'iterates' | kw= 'map' | kw= 'new' | kw= 'notify' | kw= 'observe' | kw= 'package' | kw= 'query' | kw= 'set' | kw= 'strict' | kw= 'success' | kw= 'transformation' | kw= 'transient' | kw= 'uses' | kw= 'var' )
            {
            // InternalQVTimperative.g:3125:1: (kw= 'add' | kw= 'append' | kw= 'appendsTo' | kw= 'buffer' | kw= 'call' | kw= 'check' | kw= 'contained' | kw= 'enforce' | kw= 'for' | kw= 'implementedby' | kw= 'imports' | kw= 'install' | kw= 'invoke' | kw= 'iterates' | kw= 'map' | kw= 'new' | kw= 'notify' | kw= 'observe' | kw= 'package' | kw= 'query' | kw= 'set' | kw= 'strict' | kw= 'success' | kw= 'transformation' | kw= 'transient' | kw= 'uses' | kw= 'var' )
            int alt60=27;
            switch ( input.LA(1) ) {
            case 19:
                {
                alt60=1;
                }
                break;
            case 23:
                {
                alt60=2;
                }
                break;
            case 22:
                {
                alt60=3;
                }
                break;
            case 26:
                {
                alt60=4;
                }
                break;
            case 43:
                {
                alt60=5;
                }
                break;
            case 28:
                {
                alt60=6;
                }
                break;
            case 47:
                {
                alt60=7;
                }
                break;
            case 30:
                {
                alt60=8;
                }
                break;
            case 46:
                {
                alt60=9;
                }
                break;
            case 55:
                {
                alt60=10;
                }
                break;
            case 31:
                {
                alt60=11;
                }
                break;
            case 44:
                {
                alt60=12;
                }
                break;
            case 45:
                {
                alt60=13;
                }
                break;
            case 38:
                {
                alt60=14;
                }
                break;
            case 39:
                {
                alt60=15;
                }
                break;
            case 48:
                {
                alt60=16;
                }
                break;
            case 56:
                {
                alt60=17;
                }
                break;
            case 17:
                {
                alt60=18;
                }
                break;
            case 49:
                {
                alt60=19;
                }
                break;
            case 52:
                {
                alt60=20;
                }
                break;
            case 57:
                {
                alt60=21;
                }
                break;
            case 25:
                {
                alt60=22;
                }
                break;
            case 34:
                {
                alt60=23;
                }
                break;
            case 60:
                {
                alt60=24;
                }
                break;
            case 51:
                {
                alt60=25;
                }
                break;
            case 59:
                {
                alt60=26;
                }
                break;
            case 29:
                {
                alt60=27;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 60, 0, input);

                throw nvae;
            }

            switch (alt60) {
                case 1 :
                    // InternalQVTimperative.g:3126:2: kw= 'add'
                    {
                    kw=(Token)match(input,19,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getAddKeyword_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:3133:2: kw= 'append'
                    {
                    kw=(Token)match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getAppendKeyword_1());

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:3140:2: kw= 'appendsTo'
                    {
                    kw=(Token)match(input,22,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getAppendsToKeyword_2());

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:3147:2: kw= 'buffer'
                    {
                    kw=(Token)match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getBufferKeyword_3());

                    }

                    }
                    break;
                case 5 :
                    // InternalQVTimperative.g:3154:2: kw= 'call'
                    {
                    kw=(Token)match(input,43,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getCallKeyword_4());

                    }

                    }
                    break;
                case 6 :
                    // InternalQVTimperative.g:3161:2: kw= 'check'
                    {
                    kw=(Token)match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getCheckKeyword_5());

                    }

                    }
                    break;
                case 7 :
                    // InternalQVTimperative.g:3168:2: kw= 'contained'
                    {
                    kw=(Token)match(input,47,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getContainedKeyword_6());

                    }

                    }
                    break;
                case 8 :
                    // InternalQVTimperative.g:3175:2: kw= 'enforce'
                    {
                    kw=(Token)match(input,30,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getEnforceKeyword_7());

                    }

                    }
                    break;
                case 9 :
                    // InternalQVTimperative.g:3182:2: kw= 'for'
                    {
                    kw=(Token)match(input,46,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getForKeyword_8());

                    }

                    }
                    break;
                case 10 :
                    // InternalQVTimperative.g:3189:2: kw= 'implementedby'
                    {
                    kw=(Token)match(input,55,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getImplementedbyKeyword_9());

                    }

                    }
                    break;
                case 11 :
                    // InternalQVTimperative.g:3196:2: kw= 'imports'
                    {
                    kw=(Token)match(input,31,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getImportsKeyword_10());

                    }

                    }
                    break;
                case 12 :
                    // InternalQVTimperative.g:3203:2: kw= 'install'
                    {
                    kw=(Token)match(input,44,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getInstallKeyword_11());

                    }

                    }
                    break;
                case 13 :
                    // InternalQVTimperative.g:3210:2: kw= 'invoke'
                    {
                    kw=(Token)match(input,45,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getInvokeKeyword_12());

                    }

                    }
                    break;
                case 14 :
                    // InternalQVTimperative.g:3217:2: kw= 'iterates'
                    {
                    kw=(Token)match(input,38,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getIteratesKeyword_13());

                    }

                    }
                    break;
                case 15 :
                    // InternalQVTimperative.g:3224:2: kw= 'map'
                    {
                    kw=(Token)match(input,39,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getMapKeyword_14());

                    }

                    }
                    break;
                case 16 :
                    // InternalQVTimperative.g:3231:2: kw= 'new'
                    {
                    kw=(Token)match(input,48,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getNewKeyword_15());

                    }

                    }
                    break;
                case 17 :
                    // InternalQVTimperative.g:3238:2: kw= 'notify'
                    {
                    kw=(Token)match(input,56,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getNotifyKeyword_16());

                    }

                    }
                    break;
                case 18 :
                    // InternalQVTimperative.g:3245:2: kw= 'observe'
                    {
                    kw=(Token)match(input,17,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getObserveKeyword_17());

                    }

                    }
                    break;
                case 19 :
                    // InternalQVTimperative.g:3252:2: kw= 'package'
                    {
                    kw=(Token)match(input,49,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getPackageKeyword_18());

                    }

                    }
                    break;
                case 20 :
                    // InternalQVTimperative.g:3259:2: kw= 'query'
                    {
                    kw=(Token)match(input,52,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getQueryKeyword_19());

                    }

                    }
                    break;
                case 21 :
                    // InternalQVTimperative.g:3266:2: kw= 'set'
                    {
                    kw=(Token)match(input,57,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getSetKeyword_20());

                    }

                    }
                    break;
                case 22 :
                    // InternalQVTimperative.g:3273:2: kw= 'strict'
                    {
                    kw=(Token)match(input,25,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getStrictKeyword_21());

                    }

                    }
                    break;
                case 23 :
                    // InternalQVTimperative.g:3280:2: kw= 'success'
                    {
                    kw=(Token)match(input,34,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getSuccessKeyword_22());

                    }

                    }
                    break;
                case 24 :
                    // InternalQVTimperative.g:3287:2: kw= 'transformation'
                    {
                    kw=(Token)match(input,60,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getTransformationKeyword_23());

                    }

                    }
                    break;
                case 25 :
                    // InternalQVTimperative.g:3294:2: kw= 'transient'
                    {
                    kw=(Token)match(input,51,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getTransientKeyword_24());

                    }

                    }
                    break;
                case 26 :
                    // InternalQVTimperative.g:3301:2: kw= 'uses'
                    {
                    kw=(Token)match(input,59,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getUsesKeyword_25());

                    }

                    }
                    break;
                case 27 :
                    // InternalQVTimperative.g:3308:2: kw= 'var'
                    {
                    kw=(Token)match(input,29,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTimperativeUnrestrictedNameAccess().getVarKeyword_26());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQVTimperativeUnrestrictedName"


    // $ANTLR start "entryRuleUnrestrictedName"
    // InternalQVTimperative.g:3321:1: entryRuleUnrestrictedName returns [String current=null] : iv_ruleUnrestrictedName= ruleUnrestrictedName EOF ;
    public final String entryRuleUnrestrictedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUnrestrictedName = null;


        try {
            // InternalQVTimperative.g:3322:2: (iv_ruleUnrestrictedName= ruleUnrestrictedName EOF )
            // InternalQVTimperative.g:3323:2: iv_ruleUnrestrictedName= ruleUnrestrictedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnrestrictedNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleUnrestrictedName=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnrestrictedName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnrestrictedName"


    // $ANTLR start "ruleUnrestrictedName"
    // InternalQVTimperative.g:3330:1: ruleUnrestrictedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_EssentialOCLUnrestrictedName_0= ruleEssentialOCLUnrestrictedName | this_QVTbaseUnrestrictedName_1= ruleQVTbaseUnrestrictedName | this_QVTimperativeUnrestrictedName_2= ruleQVTimperativeUnrestrictedName ) ;
    public final AntlrDatatypeRuleToken ruleUnrestrictedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_EssentialOCLUnrestrictedName_0 = null;

        AntlrDatatypeRuleToken this_QVTbaseUnrestrictedName_1 = null;

        AntlrDatatypeRuleToken this_QVTimperativeUnrestrictedName_2 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:3333:28: ( (this_EssentialOCLUnrestrictedName_0= ruleEssentialOCLUnrestrictedName | this_QVTbaseUnrestrictedName_1= ruleQVTbaseUnrestrictedName | this_QVTimperativeUnrestrictedName_2= ruleQVTimperativeUnrestrictedName ) )
            // InternalQVTimperative.g:3334:1: (this_EssentialOCLUnrestrictedName_0= ruleEssentialOCLUnrestrictedName | this_QVTbaseUnrestrictedName_1= ruleQVTbaseUnrestrictedName | this_QVTimperativeUnrestrictedName_2= ruleQVTimperativeUnrestrictedName )
            {
            // InternalQVTimperative.g:3334:1: (this_EssentialOCLUnrestrictedName_0= ruleEssentialOCLUnrestrictedName | this_QVTbaseUnrestrictedName_1= ruleQVTbaseUnrestrictedName | this_QVTimperativeUnrestrictedName_2= ruleQVTimperativeUnrestrictedName )
            int alt61=3;
            switch ( input.LA(1) ) {
            case RULE_SIMPLE_ID:
            case RULE_ESCAPED_ID:
                {
                alt61=1;
                }
                break;
            case 61:
            case 62:
            case 63:
            case 64:
            case 66:
            case 68:
            case 70:
            case 73:
            case 75:
            case 77:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 92:
            case 94:
            case 96:
            case 97:
            case 98:
            case 99:
                {
                alt61=2;
                }
                break;
            case 51:
                {
                int LA61_3 = input.LA(2);

                if ( (synpred100_InternalQVTimperative()) ) {
                    alt61=2;
                }
                else if ( (true) ) {
                    alt61=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 3, input);

                    throw nvae;
                }
                }
                break;
            case 17:
            case 19:
            case 22:
            case 23:
            case 25:
            case 26:
            case 28:
            case 29:
            case 30:
            case 31:
            case 34:
            case 38:
            case 39:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
            case 52:
            case 55:
            case 56:
            case 57:
            case 59:
            case 60:
                {
                alt61=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 61, 0, input);

                throw nvae;
            }

            switch (alt61) {
                case 1 :
                    // InternalQVTimperative.g:3335:5: this_EssentialOCLUnrestrictedName_0= ruleEssentialOCLUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getUnrestrictedNameAccess().getEssentialOCLUnrestrictedNameParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EssentialOCLUnrestrictedName_0=ruleEssentialOCLUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_EssentialOCLUnrestrictedName_0);

                    }
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:3347:5: this_QVTbaseUnrestrictedName_1= ruleQVTbaseUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getUnrestrictedNameAccess().getQVTbaseUnrestrictedNameParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_QVTbaseUnrestrictedName_1=ruleQVTbaseUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_QVTbaseUnrestrictedName_1);

                    }
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:3359:5: this_QVTimperativeUnrestrictedName_2= ruleQVTimperativeUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getUnrestrictedNameAccess().getQVTimperativeUnrestrictedNameParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_QVTimperativeUnrestrictedName_2=ruleQVTimperativeUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_QVTimperativeUnrestrictedName_2);

                    }
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnrestrictedName"


    // $ANTLR start "entryRuleAttributeCS"
    // InternalQVTimperative.g:3377:1: entryRuleAttributeCS returns [EObject current=null] : iv_ruleAttributeCS= ruleAttributeCS EOF ;
    public final EObject entryRuleAttributeCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAttributeCS = null;


        try {
            // InternalQVTimperative.g:3378:2: (iv_ruleAttributeCS= ruleAttributeCS EOF )
            // InternalQVTimperative.g:3379:2: iv_ruleAttributeCS= ruleAttributeCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAttributeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAttributeCS=ruleAttributeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAttributeCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAttributeCS"


    // $ANTLR start "ruleAttributeCS"
    // InternalQVTimperative.g:3386:1: ruleAttributeCS returns [EObject current=null] : ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'attribute' ( (lv_name_5_0= ruleUnrestrictedName ) ) (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_8= '=' ( (lv_default_9_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_10= '{' ( ( ( (lv_qualifiers_11_0= 'derived' ) ) | ( (lv_qualifiers_12_0= '!derived' ) ) | ( (lv_qualifiers_13_0= 'id' ) ) | ( (lv_qualifiers_14_0= '!id' ) ) | ( (lv_qualifiers_15_0= 'ordered' ) ) | ( (lv_qualifiers_16_0= '!ordered' ) ) | ( (lv_qualifiers_17_0= 'readonly' ) ) | ( (lv_qualifiers_18_0= '!readonly' ) ) | ( (lv_qualifiers_19_0= 'transient' ) ) | ( (lv_qualifiers_20_0= '!transient' ) ) | ( (lv_qualifiers_21_0= 'unique' ) ) | ( (lv_qualifiers_22_0= '!unique' ) ) | ( (lv_qualifiers_23_0= 'unsettable' ) ) | ( (lv_qualifiers_24_0= '!unsettable' ) ) | ( (lv_qualifiers_25_0= 'volatile' ) ) | ( (lv_qualifiers_26_0= '!volatile' ) ) ) (otherlv_27= ',' )? )+ otherlv_28= '}' )? ( (otherlv_29= '{' ( (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' ) | (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' ) )* otherlv_40= '}' ) | otherlv_41= ';' ) ) ;
    public final EObject ruleAttributeCS() throws RecognitionException {
        EObject current = null;

        Token lv_qualifiers_0_0=null;
        Token lv_qualifiers_1_0=null;
        Token lv_qualifiers_2_0=null;
        Token lv_qualifiers_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_default_9_0=null;
        Token otherlv_10=null;
        Token lv_qualifiers_11_0=null;
        Token lv_qualifiers_12_0=null;
        Token lv_qualifiers_13_0=null;
        Token lv_qualifiers_14_0=null;
        Token lv_qualifiers_15_0=null;
        Token lv_qualifiers_16_0=null;
        Token lv_qualifiers_17_0=null;
        Token lv_qualifiers_18_0=null;
        Token lv_qualifiers_19_0=null;
        Token lv_qualifiers_20_0=null;
        Token lv_qualifiers_21_0=null;
        Token lv_qualifiers_22_0=null;
        Token lv_qualifiers_23_0=null;
        Token lv_qualifiers_24_0=null;
        Token lv_qualifiers_25_0=null;
        Token lv_qualifiers_26_0=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token otherlv_30=null;
        Token otherlv_32=null;
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token otherlv_37=null;
        Token otherlv_39=null;
        Token otherlv_40=null;
        Token otherlv_41=null;
        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_ownedType_7_0 = null;

        EObject lv_ownedDefaultExpressions_33_0 = null;

        EObject lv_ownedDefaultExpressions_38_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:3389:28: ( ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'attribute' ( (lv_name_5_0= ruleUnrestrictedName ) ) (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_8= '=' ( (lv_default_9_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_10= '{' ( ( ( (lv_qualifiers_11_0= 'derived' ) ) | ( (lv_qualifiers_12_0= '!derived' ) ) | ( (lv_qualifiers_13_0= 'id' ) ) | ( (lv_qualifiers_14_0= '!id' ) ) | ( (lv_qualifiers_15_0= 'ordered' ) ) | ( (lv_qualifiers_16_0= '!ordered' ) ) | ( (lv_qualifiers_17_0= 'readonly' ) ) | ( (lv_qualifiers_18_0= '!readonly' ) ) | ( (lv_qualifiers_19_0= 'transient' ) ) | ( (lv_qualifiers_20_0= '!transient' ) ) | ( (lv_qualifiers_21_0= 'unique' ) ) | ( (lv_qualifiers_22_0= '!unique' ) ) | ( (lv_qualifiers_23_0= 'unsettable' ) ) | ( (lv_qualifiers_24_0= '!unsettable' ) ) | ( (lv_qualifiers_25_0= 'volatile' ) ) | ( (lv_qualifiers_26_0= '!volatile' ) ) ) (otherlv_27= ',' )? )+ otherlv_28= '}' )? ( (otherlv_29= '{' ( (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' ) | (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' ) )* otherlv_40= '}' ) | otherlv_41= ';' ) ) )
            // InternalQVTimperative.g:3390:1: ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'attribute' ( (lv_name_5_0= ruleUnrestrictedName ) ) (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_8= '=' ( (lv_default_9_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_10= '{' ( ( ( (lv_qualifiers_11_0= 'derived' ) ) | ( (lv_qualifiers_12_0= '!derived' ) ) | ( (lv_qualifiers_13_0= 'id' ) ) | ( (lv_qualifiers_14_0= '!id' ) ) | ( (lv_qualifiers_15_0= 'ordered' ) ) | ( (lv_qualifiers_16_0= '!ordered' ) ) | ( (lv_qualifiers_17_0= 'readonly' ) ) | ( (lv_qualifiers_18_0= '!readonly' ) ) | ( (lv_qualifiers_19_0= 'transient' ) ) | ( (lv_qualifiers_20_0= '!transient' ) ) | ( (lv_qualifiers_21_0= 'unique' ) ) | ( (lv_qualifiers_22_0= '!unique' ) ) | ( (lv_qualifiers_23_0= 'unsettable' ) ) | ( (lv_qualifiers_24_0= '!unsettable' ) ) | ( (lv_qualifiers_25_0= 'volatile' ) ) | ( (lv_qualifiers_26_0= '!volatile' ) ) ) (otherlv_27= ',' )? )+ otherlv_28= '}' )? ( (otherlv_29= '{' ( (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' ) | (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' ) )* otherlv_40= '}' ) | otherlv_41= ';' ) )
            {
            // InternalQVTimperative.g:3390:1: ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'attribute' ( (lv_name_5_0= ruleUnrestrictedName ) ) (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_8= '=' ( (lv_default_9_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_10= '{' ( ( ( (lv_qualifiers_11_0= 'derived' ) ) | ( (lv_qualifiers_12_0= '!derived' ) ) | ( (lv_qualifiers_13_0= 'id' ) ) | ( (lv_qualifiers_14_0= '!id' ) ) | ( (lv_qualifiers_15_0= 'ordered' ) ) | ( (lv_qualifiers_16_0= '!ordered' ) ) | ( (lv_qualifiers_17_0= 'readonly' ) ) | ( (lv_qualifiers_18_0= '!readonly' ) ) | ( (lv_qualifiers_19_0= 'transient' ) ) | ( (lv_qualifiers_20_0= '!transient' ) ) | ( (lv_qualifiers_21_0= 'unique' ) ) | ( (lv_qualifiers_22_0= '!unique' ) ) | ( (lv_qualifiers_23_0= 'unsettable' ) ) | ( (lv_qualifiers_24_0= '!unsettable' ) ) | ( (lv_qualifiers_25_0= 'volatile' ) ) | ( (lv_qualifiers_26_0= '!volatile' ) ) ) (otherlv_27= ',' )? )+ otherlv_28= '}' )? ( (otherlv_29= '{' ( (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' ) | (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' ) )* otherlv_40= '}' ) | otherlv_41= ';' ) )
            // InternalQVTimperative.g:3390:2: ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'attribute' ( (lv_name_5_0= ruleUnrestrictedName ) ) (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_8= '=' ( (lv_default_9_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_10= '{' ( ( ( (lv_qualifiers_11_0= 'derived' ) ) | ( (lv_qualifiers_12_0= '!derived' ) ) | ( (lv_qualifiers_13_0= 'id' ) ) | ( (lv_qualifiers_14_0= '!id' ) ) | ( (lv_qualifiers_15_0= 'ordered' ) ) | ( (lv_qualifiers_16_0= '!ordered' ) ) | ( (lv_qualifiers_17_0= 'readonly' ) ) | ( (lv_qualifiers_18_0= '!readonly' ) ) | ( (lv_qualifiers_19_0= 'transient' ) ) | ( (lv_qualifiers_20_0= '!transient' ) ) | ( (lv_qualifiers_21_0= 'unique' ) ) | ( (lv_qualifiers_22_0= '!unique' ) ) | ( (lv_qualifiers_23_0= 'unsettable' ) ) | ( (lv_qualifiers_24_0= '!unsettable' ) ) | ( (lv_qualifiers_25_0= 'volatile' ) ) | ( (lv_qualifiers_26_0= '!volatile' ) ) ) (otherlv_27= ',' )? )+ otherlv_28= '}' )? ( (otherlv_29= '{' ( (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' ) | (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' ) )* otherlv_40= '}' ) | otherlv_41= ';' )
            {
            // InternalQVTimperative.g:3390:2: ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )?
            int alt64=3;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==61) ) {
                alt64=1;
            }
            else if ( (LA64_0==62) ) {
                alt64=2;
            }
            switch (alt64) {
                case 1 :
                    // InternalQVTimperative.g:3390:3: ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? )
                    {
                    // InternalQVTimperative.g:3390:3: ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? )
                    // InternalQVTimperative.g:3390:4: ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )?
                    {
                    // InternalQVTimperative.g:3390:4: ( (lv_qualifiers_0_0= 'static' ) )
                    // InternalQVTimperative.g:3391:1: (lv_qualifiers_0_0= 'static' )
                    {
                    // InternalQVTimperative.g:3391:1: (lv_qualifiers_0_0= 'static' )
                    // InternalQVTimperative.g:3392:3: lv_qualifiers_0_0= 'static'
                    {
                    lv_qualifiers_0_0=(Token)match(input,61,FollowSets000.FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_qualifiers_0_0, grammarAccess.getAttributeCSAccess().getQualifiersStaticKeyword_0_0_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getAttributeCSRule());
                      	        }
                             		addWithLastConsumed(current, "qualifiers", lv_qualifiers_0_0, "static");

                    }

                    }


                    }

                    // InternalQVTimperative.g:3405:2: ( (lv_qualifiers_1_0= 'definition' ) )?
                    int alt62=2;
                    int LA62_0 = input.LA(1);

                    if ( (LA62_0==62) ) {
                        alt62=1;
                    }
                    switch (alt62) {
                        case 1 :
                            // InternalQVTimperative.g:3406:1: (lv_qualifiers_1_0= 'definition' )
                            {
                            // InternalQVTimperative.g:3406:1: (lv_qualifiers_1_0= 'definition' )
                            // InternalQVTimperative.g:3407:3: lv_qualifiers_1_0= 'definition'
                            {
                            lv_qualifiers_1_0=(Token)match(input,62,FollowSets000.FOLLOW_63); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_qualifiers_1_0, grammarAccess.getAttributeCSAccess().getQualifiersDefinitionKeyword_0_0_1_0());

                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                              	        }
                                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_1_0, "definition");

                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:3421:6: ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? )
                    {
                    // InternalQVTimperative.g:3421:6: ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? )
                    // InternalQVTimperative.g:3421:7: ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )?
                    {
                    // InternalQVTimperative.g:3421:7: ( (lv_qualifiers_2_0= 'definition' ) )
                    // InternalQVTimperative.g:3422:1: (lv_qualifiers_2_0= 'definition' )
                    {
                    // InternalQVTimperative.g:3422:1: (lv_qualifiers_2_0= 'definition' )
                    // InternalQVTimperative.g:3423:3: lv_qualifiers_2_0= 'definition'
                    {
                    lv_qualifiers_2_0=(Token)match(input,62,FollowSets000.FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_qualifiers_2_0, grammarAccess.getAttributeCSAccess().getQualifiersDefinitionKeyword_0_1_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getAttributeCSRule());
                      	        }
                             		addWithLastConsumed(current, "qualifiers", lv_qualifiers_2_0, "definition");

                    }

                    }


                    }

                    // InternalQVTimperative.g:3436:2: ( (lv_qualifiers_3_0= 'static' ) )?
                    int alt63=2;
                    int LA63_0 = input.LA(1);

                    if ( (LA63_0==61) ) {
                        alt63=1;
                    }
                    switch (alt63) {
                        case 1 :
                            // InternalQVTimperative.g:3437:1: (lv_qualifiers_3_0= 'static' )
                            {
                            // InternalQVTimperative.g:3437:1: (lv_qualifiers_3_0= 'static' )
                            // InternalQVTimperative.g:3438:3: lv_qualifiers_3_0= 'static'
                            {
                            lv_qualifiers_3_0=(Token)match(input,61,FollowSets000.FOLLOW_63); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_qualifiers_3_0, grammarAccess.getAttributeCSAccess().getQualifiersStaticKeyword_0_1_1_0());

                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                              	        }
                                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_3_0, "static");

                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,63,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getAttributeCSAccess().getAttributeKeyword_1());

            }
            // InternalQVTimperative.g:3455:1: ( (lv_name_5_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:3456:1: (lv_name_5_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:3456:1: (lv_name_5_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:3457:3: lv_name_5_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getAttributeCSAccess().getNameUnrestrictedNameParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_43);
            lv_name_5_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAttributeCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_5_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:3473:2: (otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypedMultiplicityRefCS ) ) )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==24) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // InternalQVTimperative.g:3473:4: otherlv_6= ':' ( (lv_ownedType_7_0= ruleTypedMultiplicityRefCS ) )
                    {
                    otherlv_6=(Token)match(input,24,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getAttributeCSAccess().getColonKeyword_3_0());

                    }
                    // InternalQVTimperative.g:3477:1: ( (lv_ownedType_7_0= ruleTypedMultiplicityRefCS ) )
                    // InternalQVTimperative.g:3478:1: (lv_ownedType_7_0= ruleTypedMultiplicityRefCS )
                    {
                    // InternalQVTimperative.g:3478:1: (lv_ownedType_7_0= ruleTypedMultiplicityRefCS )
                    // InternalQVTimperative.g:3479:3: lv_ownedType_7_0= ruleTypedMultiplicityRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getAttributeCSAccess().getOwnedTypeTypedMultiplicityRefCSParserRuleCall_3_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_44);
                    lv_ownedType_7_0=ruleTypedMultiplicityRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAttributeCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_7_0,
                              		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.TypedMultiplicityRefCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:3495:4: (otherlv_8= '=' ( (lv_default_9_0= RULE_SINGLE_QUOTED_STRING ) ) )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==50) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalQVTimperative.g:3495:6: otherlv_8= '=' ( (lv_default_9_0= RULE_SINGLE_QUOTED_STRING ) )
                    {
                    otherlv_8=(Token)match(input,50,FollowSets000.FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getAttributeCSAccess().getEqualsSignKeyword_4_0());

                    }
                    // InternalQVTimperative.g:3499:1: ( (lv_default_9_0= RULE_SINGLE_QUOTED_STRING ) )
                    // InternalQVTimperative.g:3500:1: (lv_default_9_0= RULE_SINGLE_QUOTED_STRING )
                    {
                    // InternalQVTimperative.g:3500:1: (lv_default_9_0= RULE_SINGLE_QUOTED_STRING )
                    // InternalQVTimperative.g:3501:3: lv_default_9_0= RULE_SINGLE_QUOTED_STRING
                    {
                    lv_default_9_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_default_9_0, grammarAccess.getAttributeCSAccess().getDefaultSINGLE_QUOTED_STRINGTerminalRuleCall_4_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getAttributeCSRule());
                      	        }
                             		setWithLastConsumed(
                             			current,
                             			"default",
                              		lv_default_9_0,
                              		"org.eclipse.ocl.xtext.base.Base.SINGLE_QUOTED_STRING");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:3517:4: (otherlv_10= '{' ( ( ( (lv_qualifiers_11_0= 'derived' ) ) | ( (lv_qualifiers_12_0= '!derived' ) ) | ( (lv_qualifiers_13_0= 'id' ) ) | ( (lv_qualifiers_14_0= '!id' ) ) | ( (lv_qualifiers_15_0= 'ordered' ) ) | ( (lv_qualifiers_16_0= '!ordered' ) ) | ( (lv_qualifiers_17_0= 'readonly' ) ) | ( (lv_qualifiers_18_0= '!readonly' ) ) | ( (lv_qualifiers_19_0= 'transient' ) ) | ( (lv_qualifiers_20_0= '!transient' ) ) | ( (lv_qualifiers_21_0= 'unique' ) ) | ( (lv_qualifiers_22_0= '!unique' ) ) | ( (lv_qualifiers_23_0= 'unsettable' ) ) | ( (lv_qualifiers_24_0= '!unsettable' ) ) | ( (lv_qualifiers_25_0= 'volatile' ) ) | ( (lv_qualifiers_26_0= '!volatile' ) ) ) (otherlv_27= ',' )? )+ otherlv_28= '}' )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==41) ) {
                int LA70_1 = input.LA(2);

                if ( (LA70_1==51||(LA70_1>=64 && LA70_1<=78)) ) {
                    alt70=1;
                }
            }
            switch (alt70) {
                case 1 :
                    // InternalQVTimperative.g:3517:6: otherlv_10= '{' ( ( ( (lv_qualifiers_11_0= 'derived' ) ) | ( (lv_qualifiers_12_0= '!derived' ) ) | ( (lv_qualifiers_13_0= 'id' ) ) | ( (lv_qualifiers_14_0= '!id' ) ) | ( (lv_qualifiers_15_0= 'ordered' ) ) | ( (lv_qualifiers_16_0= '!ordered' ) ) | ( (lv_qualifiers_17_0= 'readonly' ) ) | ( (lv_qualifiers_18_0= '!readonly' ) ) | ( (lv_qualifiers_19_0= 'transient' ) ) | ( (lv_qualifiers_20_0= '!transient' ) ) | ( (lv_qualifiers_21_0= 'unique' ) ) | ( (lv_qualifiers_22_0= '!unique' ) ) | ( (lv_qualifiers_23_0= 'unsettable' ) ) | ( (lv_qualifiers_24_0= '!unsettable' ) ) | ( (lv_qualifiers_25_0= 'volatile' ) ) | ( (lv_qualifiers_26_0= '!volatile' ) ) ) (otherlv_27= ',' )? )+ otherlv_28= '}'
                    {
                    otherlv_10=(Token)match(input,41,FollowSets000.FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getAttributeCSAccess().getLeftCurlyBracketKeyword_5_0());

                    }
                    // InternalQVTimperative.g:3521:1: ( ( ( (lv_qualifiers_11_0= 'derived' ) ) | ( (lv_qualifiers_12_0= '!derived' ) ) | ( (lv_qualifiers_13_0= 'id' ) ) | ( (lv_qualifiers_14_0= '!id' ) ) | ( (lv_qualifiers_15_0= 'ordered' ) ) | ( (lv_qualifiers_16_0= '!ordered' ) ) | ( (lv_qualifiers_17_0= 'readonly' ) ) | ( (lv_qualifiers_18_0= '!readonly' ) ) | ( (lv_qualifiers_19_0= 'transient' ) ) | ( (lv_qualifiers_20_0= '!transient' ) ) | ( (lv_qualifiers_21_0= 'unique' ) ) | ( (lv_qualifiers_22_0= '!unique' ) ) | ( (lv_qualifiers_23_0= 'unsettable' ) ) | ( (lv_qualifiers_24_0= '!unsettable' ) ) | ( (lv_qualifiers_25_0= 'volatile' ) ) | ( (lv_qualifiers_26_0= '!volatile' ) ) ) (otherlv_27= ',' )? )+
                    int cnt69=0;
                    loop69:
                    do {
                        int alt69=2;
                        int LA69_0 = input.LA(1);

                        if ( (LA69_0==51||(LA69_0>=64 && LA69_0<=78)) ) {
                            alt69=1;
                        }


                        switch (alt69) {
                    	case 1 :
                    	    // InternalQVTimperative.g:3521:2: ( ( (lv_qualifiers_11_0= 'derived' ) ) | ( (lv_qualifiers_12_0= '!derived' ) ) | ( (lv_qualifiers_13_0= 'id' ) ) | ( (lv_qualifiers_14_0= '!id' ) ) | ( (lv_qualifiers_15_0= 'ordered' ) ) | ( (lv_qualifiers_16_0= '!ordered' ) ) | ( (lv_qualifiers_17_0= 'readonly' ) ) | ( (lv_qualifiers_18_0= '!readonly' ) ) | ( (lv_qualifiers_19_0= 'transient' ) ) | ( (lv_qualifiers_20_0= '!transient' ) ) | ( (lv_qualifiers_21_0= 'unique' ) ) | ( (lv_qualifiers_22_0= '!unique' ) ) | ( (lv_qualifiers_23_0= 'unsettable' ) ) | ( (lv_qualifiers_24_0= '!unsettable' ) ) | ( (lv_qualifiers_25_0= 'volatile' ) ) | ( (lv_qualifiers_26_0= '!volatile' ) ) ) (otherlv_27= ',' )?
                    	    {
                    	    // InternalQVTimperative.g:3521:2: ( ( (lv_qualifiers_11_0= 'derived' ) ) | ( (lv_qualifiers_12_0= '!derived' ) ) | ( (lv_qualifiers_13_0= 'id' ) ) | ( (lv_qualifiers_14_0= '!id' ) ) | ( (lv_qualifiers_15_0= 'ordered' ) ) | ( (lv_qualifiers_16_0= '!ordered' ) ) | ( (lv_qualifiers_17_0= 'readonly' ) ) | ( (lv_qualifiers_18_0= '!readonly' ) ) | ( (lv_qualifiers_19_0= 'transient' ) ) | ( (lv_qualifiers_20_0= '!transient' ) ) | ( (lv_qualifiers_21_0= 'unique' ) ) | ( (lv_qualifiers_22_0= '!unique' ) ) | ( (lv_qualifiers_23_0= 'unsettable' ) ) | ( (lv_qualifiers_24_0= '!unsettable' ) ) | ( (lv_qualifiers_25_0= 'volatile' ) ) | ( (lv_qualifiers_26_0= '!volatile' ) ) )
                    	    int alt67=16;
                    	    switch ( input.LA(1) ) {
                    	    case 64:
                    	        {
                    	        alt67=1;
                    	        }
                    	        break;
                    	    case 65:
                    	        {
                    	        alt67=2;
                    	        }
                    	        break;
                    	    case 66:
                    	        {
                    	        alt67=3;
                    	        }
                    	        break;
                    	    case 67:
                    	        {
                    	        alt67=4;
                    	        }
                    	        break;
                    	    case 68:
                    	        {
                    	        alt67=5;
                    	        }
                    	        break;
                    	    case 69:
                    	        {
                    	        alt67=6;
                    	        }
                    	        break;
                    	    case 70:
                    	        {
                    	        alt67=7;
                    	        }
                    	        break;
                    	    case 71:
                    	        {
                    	        alt67=8;
                    	        }
                    	        break;
                    	    case 51:
                    	        {
                    	        alt67=9;
                    	        }
                    	        break;
                    	    case 72:
                    	        {
                    	        alt67=10;
                    	        }
                    	        break;
                    	    case 73:
                    	        {
                    	        alt67=11;
                    	        }
                    	        break;
                    	    case 74:
                    	        {
                    	        alt67=12;
                    	        }
                    	        break;
                    	    case 75:
                    	        {
                    	        alt67=13;
                    	        }
                    	        break;
                    	    case 76:
                    	        {
                    	        alt67=14;
                    	        }
                    	        break;
                    	    case 77:
                    	        {
                    	        alt67=15;
                    	        }
                    	        break;
                    	    case 78:
                    	        {
                    	        alt67=16;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 67, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt67) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:3521:3: ( (lv_qualifiers_11_0= 'derived' ) )
                    	            {
                    	            // InternalQVTimperative.g:3521:3: ( (lv_qualifiers_11_0= 'derived' ) )
                    	            // InternalQVTimperative.g:3522:1: (lv_qualifiers_11_0= 'derived' )
                    	            {
                    	            // InternalQVTimperative.g:3522:1: (lv_qualifiers_11_0= 'derived' )
                    	            // InternalQVTimperative.g:3523:3: lv_qualifiers_11_0= 'derived'
                    	            {
                    	            lv_qualifiers_11_0=(Token)match(input,64,FollowSets000.FOLLOW_66); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_11_0, grammarAccess.getAttributeCSAccess().getQualifiersDerivedKeyword_5_1_0_0_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_11_0, "derived");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalQVTimperative.g:3537:6: ( (lv_qualifiers_12_0= '!derived' ) )
                    	            {
                    	            // InternalQVTimperative.g:3537:6: ( (lv_qualifiers_12_0= '!derived' ) )
                    	            // InternalQVTimperative.g:3538:1: (lv_qualifiers_12_0= '!derived' )
                    	            {
                    	            // InternalQVTimperative.g:3538:1: (lv_qualifiers_12_0= '!derived' )
                    	            // InternalQVTimperative.g:3539:3: lv_qualifiers_12_0= '!derived'
                    	            {
                    	            lv_qualifiers_12_0=(Token)match(input,65,FollowSets000.FOLLOW_66); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_12_0, grammarAccess.getAttributeCSAccess().getQualifiersDerivedKeyword_5_1_0_1_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_12_0, "!derived");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 3 :
                    	            // InternalQVTimperative.g:3553:6: ( (lv_qualifiers_13_0= 'id' ) )
                    	            {
                    	            // InternalQVTimperative.g:3553:6: ( (lv_qualifiers_13_0= 'id' ) )
                    	            // InternalQVTimperative.g:3554:1: (lv_qualifiers_13_0= 'id' )
                    	            {
                    	            // InternalQVTimperative.g:3554:1: (lv_qualifiers_13_0= 'id' )
                    	            // InternalQVTimperative.g:3555:3: lv_qualifiers_13_0= 'id'
                    	            {
                    	            lv_qualifiers_13_0=(Token)match(input,66,FollowSets000.FOLLOW_66); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_13_0, grammarAccess.getAttributeCSAccess().getQualifiersIdKeyword_5_1_0_2_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_13_0, "id");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 4 :
                    	            // InternalQVTimperative.g:3569:6: ( (lv_qualifiers_14_0= '!id' ) )
                    	            {
                    	            // InternalQVTimperative.g:3569:6: ( (lv_qualifiers_14_0= '!id' ) )
                    	            // InternalQVTimperative.g:3570:1: (lv_qualifiers_14_0= '!id' )
                    	            {
                    	            // InternalQVTimperative.g:3570:1: (lv_qualifiers_14_0= '!id' )
                    	            // InternalQVTimperative.g:3571:3: lv_qualifiers_14_0= '!id'
                    	            {
                    	            lv_qualifiers_14_0=(Token)match(input,67,FollowSets000.FOLLOW_66); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_14_0, grammarAccess.getAttributeCSAccess().getQualifiersIdKeyword_5_1_0_3_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_14_0, "!id");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 5 :
                    	            // InternalQVTimperative.g:3585:6: ( (lv_qualifiers_15_0= 'ordered' ) )
                    	            {
                    	            // InternalQVTimperative.g:3585:6: ( (lv_qualifiers_15_0= 'ordered' ) )
                    	            // InternalQVTimperative.g:3586:1: (lv_qualifiers_15_0= 'ordered' )
                    	            {
                    	            // InternalQVTimperative.g:3586:1: (lv_qualifiers_15_0= 'ordered' )
                    	            // InternalQVTimperative.g:3587:3: lv_qualifiers_15_0= 'ordered'
                    	            {
                    	            lv_qualifiers_15_0=(Token)match(input,68,FollowSets000.FOLLOW_66); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_15_0, grammarAccess.getAttributeCSAccess().getQualifiersOrderedKeyword_5_1_0_4_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_15_0, "ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 6 :
                    	            // InternalQVTimperative.g:3601:6: ( (lv_qualifiers_16_0= '!ordered' ) )
                    	            {
                    	            // InternalQVTimperative.g:3601:6: ( (lv_qualifiers_16_0= '!ordered' ) )
                    	            // InternalQVTimperative.g:3602:1: (lv_qualifiers_16_0= '!ordered' )
                    	            {
                    	            // InternalQVTimperative.g:3602:1: (lv_qualifiers_16_0= '!ordered' )
                    	            // InternalQVTimperative.g:3603:3: lv_qualifiers_16_0= '!ordered'
                    	            {
                    	            lv_qualifiers_16_0=(Token)match(input,69,FollowSets000.FOLLOW_66); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_16_0, grammarAccess.getAttributeCSAccess().getQualifiersOrderedKeyword_5_1_0_5_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_16_0, "!ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 7 :
                    	            // InternalQVTimperative.g:3617:6: ( (lv_qualifiers_17_0= 'readonly' ) )
                    	            {
                    	            // InternalQVTimperative.g:3617:6: ( (lv_qualifiers_17_0= 'readonly' ) )
                    	            // InternalQVTimperative.g:3618:1: (lv_qualifiers_17_0= 'readonly' )
                    	            {
                    	            // InternalQVTimperative.g:3618:1: (lv_qualifiers_17_0= 'readonly' )
                    	            // InternalQVTimperative.g:3619:3: lv_qualifiers_17_0= 'readonly'
                    	            {
                    	            lv_qualifiers_17_0=(Token)match(input,70,FollowSets000.FOLLOW_66); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_17_0, grammarAccess.getAttributeCSAccess().getQualifiersReadonlyKeyword_5_1_0_6_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_17_0, "readonly");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 8 :
                    	            // InternalQVTimperative.g:3633:6: ( (lv_qualifiers_18_0= '!readonly' ) )
                    	            {
                    	            // InternalQVTimperative.g:3633:6: ( (lv_qualifiers_18_0= '!readonly' ) )
                    	            // InternalQVTimperative.g:3634:1: (lv_qualifiers_18_0= '!readonly' )
                    	            {
                    	            // InternalQVTimperative.g:3634:1: (lv_qualifiers_18_0= '!readonly' )
                    	            // InternalQVTimperative.g:3635:3: lv_qualifiers_18_0= '!readonly'
                    	            {
                    	            lv_qualifiers_18_0=(Token)match(input,71,FollowSets000.FOLLOW_66); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_18_0, grammarAccess.getAttributeCSAccess().getQualifiersReadonlyKeyword_5_1_0_7_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_18_0, "!readonly");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 9 :
                    	            // InternalQVTimperative.g:3649:6: ( (lv_qualifiers_19_0= 'transient' ) )
                    	            {
                    	            // InternalQVTimperative.g:3649:6: ( (lv_qualifiers_19_0= 'transient' ) )
                    	            // InternalQVTimperative.g:3650:1: (lv_qualifiers_19_0= 'transient' )
                    	            {
                    	            // InternalQVTimperative.g:3650:1: (lv_qualifiers_19_0= 'transient' )
                    	            // InternalQVTimperative.g:3651:3: lv_qualifiers_19_0= 'transient'
                    	            {
                    	            lv_qualifiers_19_0=(Token)match(input,51,FollowSets000.FOLLOW_66); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_19_0, grammarAccess.getAttributeCSAccess().getQualifiersTransientKeyword_5_1_0_8_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_19_0, "transient");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 10 :
                    	            // InternalQVTimperative.g:3665:6: ( (lv_qualifiers_20_0= '!transient' ) )
                    	            {
                    	            // InternalQVTimperative.g:3665:6: ( (lv_qualifiers_20_0= '!transient' ) )
                    	            // InternalQVTimperative.g:3666:1: (lv_qualifiers_20_0= '!transient' )
                    	            {
                    	            // InternalQVTimperative.g:3666:1: (lv_qualifiers_20_0= '!transient' )
                    	            // InternalQVTimperative.g:3667:3: lv_qualifiers_20_0= '!transient'
                    	            {
                    	            lv_qualifiers_20_0=(Token)match(input,72,FollowSets000.FOLLOW_66); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_20_0, grammarAccess.getAttributeCSAccess().getQualifiersTransientKeyword_5_1_0_9_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_20_0, "!transient");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 11 :
                    	            // InternalQVTimperative.g:3681:6: ( (lv_qualifiers_21_0= 'unique' ) )
                    	            {
                    	            // InternalQVTimperative.g:3681:6: ( (lv_qualifiers_21_0= 'unique' ) )
                    	            // InternalQVTimperative.g:3682:1: (lv_qualifiers_21_0= 'unique' )
                    	            {
                    	            // InternalQVTimperative.g:3682:1: (lv_qualifiers_21_0= 'unique' )
                    	            // InternalQVTimperative.g:3683:3: lv_qualifiers_21_0= 'unique'
                    	            {
                    	            lv_qualifiers_21_0=(Token)match(input,73,FollowSets000.FOLLOW_66); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_21_0, grammarAccess.getAttributeCSAccess().getQualifiersUniqueKeyword_5_1_0_10_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_21_0, "unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 12 :
                    	            // InternalQVTimperative.g:3697:6: ( (lv_qualifiers_22_0= '!unique' ) )
                    	            {
                    	            // InternalQVTimperative.g:3697:6: ( (lv_qualifiers_22_0= '!unique' ) )
                    	            // InternalQVTimperative.g:3698:1: (lv_qualifiers_22_0= '!unique' )
                    	            {
                    	            // InternalQVTimperative.g:3698:1: (lv_qualifiers_22_0= '!unique' )
                    	            // InternalQVTimperative.g:3699:3: lv_qualifiers_22_0= '!unique'
                    	            {
                    	            lv_qualifiers_22_0=(Token)match(input,74,FollowSets000.FOLLOW_66); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_22_0, grammarAccess.getAttributeCSAccess().getQualifiersUniqueKeyword_5_1_0_11_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_22_0, "!unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 13 :
                    	            // InternalQVTimperative.g:3713:6: ( (lv_qualifiers_23_0= 'unsettable' ) )
                    	            {
                    	            // InternalQVTimperative.g:3713:6: ( (lv_qualifiers_23_0= 'unsettable' ) )
                    	            // InternalQVTimperative.g:3714:1: (lv_qualifiers_23_0= 'unsettable' )
                    	            {
                    	            // InternalQVTimperative.g:3714:1: (lv_qualifiers_23_0= 'unsettable' )
                    	            // InternalQVTimperative.g:3715:3: lv_qualifiers_23_0= 'unsettable'
                    	            {
                    	            lv_qualifiers_23_0=(Token)match(input,75,FollowSets000.FOLLOW_66); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_23_0, grammarAccess.getAttributeCSAccess().getQualifiersUnsettableKeyword_5_1_0_12_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_23_0, "unsettable");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 14 :
                    	            // InternalQVTimperative.g:3729:6: ( (lv_qualifiers_24_0= '!unsettable' ) )
                    	            {
                    	            // InternalQVTimperative.g:3729:6: ( (lv_qualifiers_24_0= '!unsettable' ) )
                    	            // InternalQVTimperative.g:3730:1: (lv_qualifiers_24_0= '!unsettable' )
                    	            {
                    	            // InternalQVTimperative.g:3730:1: (lv_qualifiers_24_0= '!unsettable' )
                    	            // InternalQVTimperative.g:3731:3: lv_qualifiers_24_0= '!unsettable'
                    	            {
                    	            lv_qualifiers_24_0=(Token)match(input,76,FollowSets000.FOLLOW_66); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_24_0, grammarAccess.getAttributeCSAccess().getQualifiersUnsettableKeyword_5_1_0_13_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_24_0, "!unsettable");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 15 :
                    	            // InternalQVTimperative.g:3745:6: ( (lv_qualifiers_25_0= 'volatile' ) )
                    	            {
                    	            // InternalQVTimperative.g:3745:6: ( (lv_qualifiers_25_0= 'volatile' ) )
                    	            // InternalQVTimperative.g:3746:1: (lv_qualifiers_25_0= 'volatile' )
                    	            {
                    	            // InternalQVTimperative.g:3746:1: (lv_qualifiers_25_0= 'volatile' )
                    	            // InternalQVTimperative.g:3747:3: lv_qualifiers_25_0= 'volatile'
                    	            {
                    	            lv_qualifiers_25_0=(Token)match(input,77,FollowSets000.FOLLOW_66); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_25_0, grammarAccess.getAttributeCSAccess().getQualifiersVolatileKeyword_5_1_0_14_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_25_0, "volatile");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 16 :
                    	            // InternalQVTimperative.g:3761:6: ( (lv_qualifiers_26_0= '!volatile' ) )
                    	            {
                    	            // InternalQVTimperative.g:3761:6: ( (lv_qualifiers_26_0= '!volatile' ) )
                    	            // InternalQVTimperative.g:3762:1: (lv_qualifiers_26_0= '!volatile' )
                    	            {
                    	            // InternalQVTimperative.g:3762:1: (lv_qualifiers_26_0= '!volatile' )
                    	            // InternalQVTimperative.g:3763:3: lv_qualifiers_26_0= '!volatile'
                    	            {
                    	            lv_qualifiers_26_0=(Token)match(input,78,FollowSets000.FOLLOW_66); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_26_0, grammarAccess.getAttributeCSAccess().getQualifiersVolatileKeyword_5_1_0_15_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_26_0, "!volatile");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalQVTimperative.g:3776:3: (otherlv_27= ',' )?
                    	    int alt68=2;
                    	    int LA68_0 = input.LA(1);

                    	    if ( (LA68_0==18) ) {
                    	        alt68=1;
                    	    }
                    	    switch (alt68) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:3776:5: otherlv_27= ','
                    	            {
                    	            otherlv_27=(Token)match(input,18,FollowSets000.FOLLOW_67); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                  	newLeafNode(otherlv_27, grammarAccess.getAttributeCSAccess().getCommaKeyword_5_1_1());

                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt69 >= 1 ) break loop69;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(69, input);
                                throw eee;
                        }
                        cnt69++;
                    } while (true);

                    otherlv_28=(Token)match(input,42,FollowSets000.FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_28, grammarAccess.getAttributeCSAccess().getRightCurlyBracketKeyword_5_2());

                    }

                    }
                    break;

            }

            // InternalQVTimperative.g:3784:3: ( (otherlv_29= '{' ( (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' ) | (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' ) )* otherlv_40= '}' ) | otherlv_41= ';' )
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==41) ) {
                alt76=1;
            }
            else if ( (LA76_0==21) ) {
                alt76=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 76, 0, input);

                throw nvae;
            }
            switch (alt76) {
                case 1 :
                    // InternalQVTimperative.g:3784:4: (otherlv_29= '{' ( (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' ) | (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' ) )* otherlv_40= '}' )
                    {
                    // InternalQVTimperative.g:3784:4: (otherlv_29= '{' ( (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' ) | (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' ) )* otherlv_40= '}' )
                    // InternalQVTimperative.g:3784:6: otherlv_29= '{' ( (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' ) | (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' ) )* otherlv_40= '}'
                    {
                    otherlv_29=(Token)match(input,41,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_29, grammarAccess.getAttributeCSAccess().getLeftCurlyBracketKeyword_6_0_0());

                    }
                    // InternalQVTimperative.g:3788:1: ( (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' ) | (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' ) )*
                    loop75:
                    do {
                        int alt75=3;
                        int LA75_0 = input.LA(1);

                        if ( (LA75_0==79) ) {
                            alt75=1;
                        }
                        else if ( (LA75_0==80) ) {
                            alt75=2;
                        }


                        switch (alt75) {
                    	case 1 :
                    	    // InternalQVTimperative.g:3788:2: (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' )
                    	    {
                    	    // InternalQVTimperative.g:3788:2: (otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';' )
                    	    // InternalQVTimperative.g:3788:4: otherlv_30= 'initial' ( ruleUnrestrictedName )? otherlv_32= ':' ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )? otherlv_34= ';'
                    	    {
                    	    otherlv_30=(Token)match(input,79,FollowSets000.FOLLOW_69); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_30, grammarAccess.getAttributeCSAccess().getInitialKeyword_6_0_1_0_0());

                    	    }
                    	    // InternalQVTimperative.g:3792:1: ( ruleUnrestrictedName )?
                    	    int alt71=2;
                    	    int LA71_0 = input.LA(1);

                    	    if ( ((LA71_0>=RULE_SIMPLE_ID && LA71_0<=RULE_ESCAPED_ID)||LA71_0==17||LA71_0==19||(LA71_0>=22 && LA71_0<=23)||(LA71_0>=25 && LA71_0<=26)||(LA71_0>=28 && LA71_0<=31)||LA71_0==34||(LA71_0>=38 && LA71_0<=39)||(LA71_0>=43 && LA71_0<=49)||(LA71_0>=51 && LA71_0<=52)||(LA71_0>=55 && LA71_0<=57)||(LA71_0>=59 && LA71_0<=64)||LA71_0==66||LA71_0==68||LA71_0==70||LA71_0==73||LA71_0==75||LA71_0==77||(LA71_0>=79 && LA71_0<=83)||(LA71_0>=85 && LA71_0<=90)||LA71_0==92||LA71_0==94||(LA71_0>=96 && LA71_0<=99)) ) {
                    	        alt71=1;
                    	    }
                    	    switch (alt71) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:3793:2: ruleUnrestrictedName
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	  /* */

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	                      newCompositeNode(grammarAccess.getAttributeCSAccess().getUnrestrictedNameParserRuleCall_6_0_1_0_1());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_11);
                    	            ruleUnrestrictedName();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;

                    	    }

                    	    otherlv_32=(Token)match(input,24,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_32, grammarAccess.getAttributeCSAccess().getColonKeyword_6_0_1_0_2());

                    	    }
                    	    // InternalQVTimperative.g:3807:1: ( (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS ) )?
                    	    int alt72=2;
                    	    int LA72_0 = input.LA(1);

                    	    if ( ((LA72_0>=RULE_SINGLE_QUOTED_STRING && LA72_0<=RULE_ESCAPED_ID)||LA72_0==17||LA72_0==19||(LA72_0>=22 && LA72_0<=23)||(LA72_0>=25 && LA72_0<=26)||(LA72_0>=28 && LA72_0<=31)||LA72_0==34||(LA72_0>=37 && LA72_0<=39)||(LA72_0>=43 && LA72_0<=49)||(LA72_0>=51 && LA72_0<=53)||(LA72_0>=55 && LA72_0<=57)||(LA72_0>=59 && LA72_0<=64)||LA72_0==66||LA72_0==68||LA72_0==70||LA72_0==73||LA72_0==75||LA72_0==77||(LA72_0>=79 && LA72_0<=83)||(LA72_0>=85 && LA72_0<=90)||LA72_0==92||LA72_0==94||(LA72_0>=96 && LA72_0<=101)||(LA72_0>=116 && LA72_0<=130)||LA72_0==133||(LA72_0>=135 && LA72_0<=138)||LA72_0==144||(LA72_0>=149 && LA72_0<=150)) ) {
                    	        alt72=1;
                    	    }
                    	    switch (alt72) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:3808:1: (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS )
                    	            {
                    	            // InternalQVTimperative.g:3808:1: (lv_ownedDefaultExpressions_33_0= ruleSpecificationCS )
                    	            // InternalQVTimperative.g:3809:3: lv_ownedDefaultExpressions_33_0= ruleSpecificationCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	        newCompositeNode(grammarAccess.getAttributeCSAccess().getOwnedDefaultExpressionsSpecificationCSParserRuleCall_6_0_1_0_3_0());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_9);
                    	            lv_ownedDefaultExpressions_33_0=ruleSpecificationCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		add(
                    	                     			current,
                    	                     			"ownedDefaultExpressions",
                    	                      		lv_ownedDefaultExpressions_33_0,
                    	                      		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.SpecificationCS");
                    	              	        afterParserOrEnumRuleCall();

                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    otherlv_34=(Token)match(input,21,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_34, grammarAccess.getAttributeCSAccess().getSemicolonKeyword_6_0_1_0_4());

                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQVTimperative.g:3830:6: (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' )
                    	    {
                    	    // InternalQVTimperative.g:3830:6: (otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';' )
                    	    // InternalQVTimperative.g:3830:8: otherlv_35= 'derivation' ( ruleUnrestrictedName )? otherlv_37= ':' ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )? otherlv_39= ';'
                    	    {
                    	    otherlv_35=(Token)match(input,80,FollowSets000.FOLLOW_69); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_35, grammarAccess.getAttributeCSAccess().getDerivationKeyword_6_0_1_1_0());

                    	    }
                    	    // InternalQVTimperative.g:3834:1: ( ruleUnrestrictedName )?
                    	    int alt73=2;
                    	    int LA73_0 = input.LA(1);

                    	    if ( ((LA73_0>=RULE_SIMPLE_ID && LA73_0<=RULE_ESCAPED_ID)||LA73_0==17||LA73_0==19||(LA73_0>=22 && LA73_0<=23)||(LA73_0>=25 && LA73_0<=26)||(LA73_0>=28 && LA73_0<=31)||LA73_0==34||(LA73_0>=38 && LA73_0<=39)||(LA73_0>=43 && LA73_0<=49)||(LA73_0>=51 && LA73_0<=52)||(LA73_0>=55 && LA73_0<=57)||(LA73_0>=59 && LA73_0<=64)||LA73_0==66||LA73_0==68||LA73_0==70||LA73_0==73||LA73_0==75||LA73_0==77||(LA73_0>=79 && LA73_0<=83)||(LA73_0>=85 && LA73_0<=90)||LA73_0==92||LA73_0==94||(LA73_0>=96 && LA73_0<=99)) ) {
                    	        alt73=1;
                    	    }
                    	    switch (alt73) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:3835:2: ruleUnrestrictedName
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	  /* */

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	                      newCompositeNode(grammarAccess.getAttributeCSAccess().getUnrestrictedNameParserRuleCall_6_0_1_1_1());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_11);
                    	            ruleUnrestrictedName();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;

                    	    }

                    	    otherlv_37=(Token)match(input,24,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_37, grammarAccess.getAttributeCSAccess().getColonKeyword_6_0_1_1_2());

                    	    }
                    	    // InternalQVTimperative.g:3849:1: ( (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS ) )?
                    	    int alt74=2;
                    	    int LA74_0 = input.LA(1);

                    	    if ( ((LA74_0>=RULE_SINGLE_QUOTED_STRING && LA74_0<=RULE_ESCAPED_ID)||LA74_0==17||LA74_0==19||(LA74_0>=22 && LA74_0<=23)||(LA74_0>=25 && LA74_0<=26)||(LA74_0>=28 && LA74_0<=31)||LA74_0==34||(LA74_0>=37 && LA74_0<=39)||(LA74_0>=43 && LA74_0<=49)||(LA74_0>=51 && LA74_0<=53)||(LA74_0>=55 && LA74_0<=57)||(LA74_0>=59 && LA74_0<=64)||LA74_0==66||LA74_0==68||LA74_0==70||LA74_0==73||LA74_0==75||LA74_0==77||(LA74_0>=79 && LA74_0<=83)||(LA74_0>=85 && LA74_0<=90)||LA74_0==92||LA74_0==94||(LA74_0>=96 && LA74_0<=101)||(LA74_0>=116 && LA74_0<=130)||LA74_0==133||(LA74_0>=135 && LA74_0<=138)||LA74_0==144||(LA74_0>=149 && LA74_0<=150)) ) {
                    	        alt74=1;
                    	    }
                    	    switch (alt74) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:3850:1: (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS )
                    	            {
                    	            // InternalQVTimperative.g:3850:1: (lv_ownedDefaultExpressions_38_0= ruleSpecificationCS )
                    	            // InternalQVTimperative.g:3851:3: lv_ownedDefaultExpressions_38_0= ruleSpecificationCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	        newCompositeNode(grammarAccess.getAttributeCSAccess().getOwnedDefaultExpressionsSpecificationCSParserRuleCall_6_0_1_1_3_0());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_9);
                    	            lv_ownedDefaultExpressions_38_0=ruleSpecificationCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getAttributeCSRule());
                    	              	        }
                    	                     		add(
                    	                     			current,
                    	                     			"ownedDefaultExpressions",
                    	                      		lv_ownedDefaultExpressions_38_0,
                    	                      		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.SpecificationCS");
                    	              	        afterParserOrEnumRuleCall();

                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    otherlv_39=(Token)match(input,21,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_39, grammarAccess.getAttributeCSAccess().getSemicolonKeyword_6_0_1_1_4());

                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop75;
                        }
                    } while (true);

                    otherlv_40=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_40, grammarAccess.getAttributeCSAccess().getRightCurlyBracketKeyword_6_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:3876:7: otherlv_41= ';'
                    {
                    otherlv_41=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_41, grammarAccess.getAttributeCSAccess().getSemicolonKeyword_6_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAttributeCS"


    // $ANTLR start "entryRuleClassCS"
    // InternalQVTimperative.g:3888:1: entryRuleClassCS returns [EObject current=null] : iv_ruleClassCS= ruleClassCS EOF ;
    public final EObject entryRuleClassCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassCS = null;


        try {
            // InternalQVTimperative.g:3889:2: (iv_ruleClassCS= ruleClassCS EOF )
            // InternalQVTimperative.g:3890:2: iv_ruleClassCS= ruleClassCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleClassCS=ruleClassCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassCS"


    // $ANTLR start "ruleClassCS"
    // InternalQVTimperative.g:3897:1: ruleClassCS returns [EObject current=null] : (this_StructuredClassCS_0= ruleStructuredClassCS | this_DataTypeCS_1= ruleDataTypeCS | this_EnumerationCS_2= ruleEnumerationCS ) ;
    public final EObject ruleClassCS() throws RecognitionException {
        EObject current = null;

        EObject this_StructuredClassCS_0 = null;

        EObject this_DataTypeCS_1 = null;

        EObject this_EnumerationCS_2 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:3900:28: ( (this_StructuredClassCS_0= ruleStructuredClassCS | this_DataTypeCS_1= ruleDataTypeCS | this_EnumerationCS_2= ruleEnumerationCS ) )
            // InternalQVTimperative.g:3901:1: (this_StructuredClassCS_0= ruleStructuredClassCS | this_DataTypeCS_1= ruleDataTypeCS | this_EnumerationCS_2= ruleEnumerationCS )
            {
            // InternalQVTimperative.g:3901:1: (this_StructuredClassCS_0= ruleStructuredClassCS | this_DataTypeCS_1= ruleDataTypeCS | this_EnumerationCS_2= ruleEnumerationCS )
            int alt77=3;
            switch ( input.LA(1) ) {
            case 96:
            case 97:
                {
                alt77=1;
                }
                break;
            case 81:
            case 82:
                {
                alt77=2;
                }
                break;
            case 85:
                {
                alt77=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 77, 0, input);

                throw nvae;
            }

            switch (alt77) {
                case 1 :
                    // InternalQVTimperative.g:3902:2: this_StructuredClassCS_0= ruleStructuredClassCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getClassCSAccess().getStructuredClassCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StructuredClassCS_0=ruleStructuredClassCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_StructuredClassCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:3915:2: this_DataTypeCS_1= ruleDataTypeCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getClassCSAccess().getDataTypeCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DataTypeCS_1=ruleDataTypeCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_DataTypeCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:3928:2: this_EnumerationCS_2= ruleEnumerationCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getClassCSAccess().getEnumerationCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EnumerationCS_2=ruleEnumerationCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_EnumerationCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassCS"


    // $ANTLR start "entryRuleDataTypeCS"
    // InternalQVTimperative.g:3947:1: entryRuleDataTypeCS returns [EObject current=null] : iv_ruleDataTypeCS= ruleDataTypeCS EOF ;
    public final EObject entryRuleDataTypeCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDataTypeCS = null;


        try {
            // InternalQVTimperative.g:3948:2: (iv_ruleDataTypeCS= ruleDataTypeCS EOF )
            // InternalQVTimperative.g:3949:2: iv_ruleDataTypeCS= ruleDataTypeCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDataTypeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDataTypeCS=ruleDataTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDataTypeCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDataTypeCS"


    // $ANTLR start "ruleDataTypeCS"
    // InternalQVTimperative.g:3956:1: ruleDataTypeCS returns [EObject current=null] : ( ( (lv_isPrimitive_0_0= 'primitive' ) )? otherlv_1= 'datatype' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= ':' ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_6= '{' ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )? otherlv_9= '}' )? ( (otherlv_10= '{' otherlv_11= '}' ) | otherlv_12= ';' ) ) ;
    public final EObject ruleDataTypeCS() throws RecognitionException {
        EObject current = null;

        Token lv_isPrimitive_0_0=null;
        Token otherlv_1=null;
        Token otherlv_4=null;
        Token lv_instanceClassName_5_0=null;
        Token otherlv_6=null;
        Token lv_isSerializable_7_0=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_ownedSignature_3_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:3959:28: ( ( ( (lv_isPrimitive_0_0= 'primitive' ) )? otherlv_1= 'datatype' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= ':' ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_6= '{' ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )? otherlv_9= '}' )? ( (otherlv_10= '{' otherlv_11= '}' ) | otherlv_12= ';' ) ) )
            // InternalQVTimperative.g:3960:1: ( ( (lv_isPrimitive_0_0= 'primitive' ) )? otherlv_1= 'datatype' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= ':' ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_6= '{' ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )? otherlv_9= '}' )? ( (otherlv_10= '{' otherlv_11= '}' ) | otherlv_12= ';' ) )
            {
            // InternalQVTimperative.g:3960:1: ( ( (lv_isPrimitive_0_0= 'primitive' ) )? otherlv_1= 'datatype' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= ':' ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_6= '{' ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )? otherlv_9= '}' )? ( (otherlv_10= '{' otherlv_11= '}' ) | otherlv_12= ';' ) )
            // InternalQVTimperative.g:3960:2: ( (lv_isPrimitive_0_0= 'primitive' ) )? otherlv_1= 'datatype' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= ':' ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_6= '{' ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )? otherlv_9= '}' )? ( (otherlv_10= '{' otherlv_11= '}' ) | otherlv_12= ';' )
            {
            // InternalQVTimperative.g:3960:2: ( (lv_isPrimitive_0_0= 'primitive' ) )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==81) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalQVTimperative.g:3961:1: (lv_isPrimitive_0_0= 'primitive' )
                    {
                    // InternalQVTimperative.g:3961:1: (lv_isPrimitive_0_0= 'primitive' )
                    // InternalQVTimperative.g:3962:3: lv_isPrimitive_0_0= 'primitive'
                    {
                    lv_isPrimitive_0_0=(Token)match(input,81,FollowSets000.FOLLOW_71); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isPrimitive_0_0, grammarAccess.getDataTypeCSAccess().getIsPrimitivePrimitiveKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDataTypeCSRule());
                      	        }
                             		setWithLastConsumed(current, "isPrimitive", true, "primitive");

                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,82,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getDataTypeCSAccess().getDatatypeKeyword_1());

            }
            // InternalQVTimperative.g:3979:1: ( (lv_name_2_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:3980:1: (lv_name_2_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:3980:1: (lv_name_2_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:3981:3: lv_name_2_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getDataTypeCSAccess().getNameUnrestrictedNameParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_72);
            lv_name_2_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDataTypeCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_2_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:3997:2: ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==53) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // InternalQVTimperative.g:3998:1: (lv_ownedSignature_3_0= ruleTemplateSignatureCS )
                    {
                    // InternalQVTimperative.g:3998:1: (lv_ownedSignature_3_0= ruleTemplateSignatureCS )
                    // InternalQVTimperative.g:3999:3: lv_ownedSignature_3_0= ruleTemplateSignatureCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getDataTypeCSAccess().getOwnedSignatureTemplateSignatureCSParserRuleCall_3_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_73);
                    lv_ownedSignature_3_0=ruleTemplateSignatureCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDataTypeCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedSignature",
                              		lv_ownedSignature_3_0,
                              		"org.eclipse.ocl.xtext.base.Base.TemplateSignatureCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:4015:3: (otherlv_4= ':' ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) ) )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==24) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // InternalQVTimperative.g:4015:5: otherlv_4= ':' ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) )
                    {
                    otherlv_4=(Token)match(input,24,FollowSets000.FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getDataTypeCSAccess().getColonKeyword_4_0());

                    }
                    // InternalQVTimperative.g:4019:1: ( (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING ) )
                    // InternalQVTimperative.g:4020:1: (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING )
                    {
                    // InternalQVTimperative.g:4020:1: (lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING )
                    // InternalQVTimperative.g:4021:3: lv_instanceClassName_5_0= RULE_SINGLE_QUOTED_STRING
                    {
                    lv_instanceClassName_5_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_instanceClassName_5_0, grammarAccess.getDataTypeCSAccess().getInstanceClassNameSINGLE_QUOTED_STRINGTerminalRuleCall_4_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDataTypeCSRule());
                      	        }
                             		setWithLastConsumed(
                             			current,
                             			"instanceClassName",
                              		lv_instanceClassName_5_0,
                              		"org.eclipse.ocl.xtext.base.Base.SINGLE_QUOTED_STRING");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:4037:4: (otherlv_6= '{' ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )? otherlv_9= '}' )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==41) ) {
                int LA82_1 = input.LA(2);

                if ( ((LA82_1>=83 && LA82_1<=84)) ) {
                    alt82=1;
                }
                else if ( (LA82_1==42) ) {
                    int LA82_4 = input.LA(3);

                    if ( (LA82_4==21||LA82_4==41) ) {
                        alt82=1;
                    }
                }
            }
            switch (alt82) {
                case 1 :
                    // InternalQVTimperative.g:4037:6: otherlv_6= '{' ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )? otherlv_9= '}'
                    {
                    otherlv_6=(Token)match(input,41,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getDataTypeCSAccess().getLeftCurlyBracketKeyword_5_0());

                    }
                    // InternalQVTimperative.g:4041:1: ( ( (lv_isSerializable_7_0= 'serializable' ) ) | otherlv_8= '!serializable' )?
                    int alt81=3;
                    int LA81_0 = input.LA(1);

                    if ( (LA81_0==83) ) {
                        alt81=1;
                    }
                    else if ( (LA81_0==84) ) {
                        alt81=2;
                    }
                    switch (alt81) {
                        case 1 :
                            // InternalQVTimperative.g:4041:2: ( (lv_isSerializable_7_0= 'serializable' ) )
                            {
                            // InternalQVTimperative.g:4041:2: ( (lv_isSerializable_7_0= 'serializable' ) )
                            // InternalQVTimperative.g:4042:1: (lv_isSerializable_7_0= 'serializable' )
                            {
                            // InternalQVTimperative.g:4042:1: (lv_isSerializable_7_0= 'serializable' )
                            // InternalQVTimperative.g:4043:3: lv_isSerializable_7_0= 'serializable'
                            {
                            lv_isSerializable_7_0=(Token)match(input,83,FollowSets000.FOLLOW_52); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_isSerializable_7_0, grammarAccess.getDataTypeCSAccess().getIsSerializableSerializableKeyword_5_1_0_0());

                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getDataTypeCSRule());
                              	        }
                                     		setWithLastConsumed(current, "isSerializable", true, "serializable");

                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalQVTimperative.g:4057:7: otherlv_8= '!serializable'
                            {
                            otherlv_8=(Token)match(input,84,FollowSets000.FOLLOW_52); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_8, grammarAccess.getDataTypeCSAccess().getSerializableKeyword_5_1_1());

                            }

                            }
                            break;

                    }

                    otherlv_9=(Token)match(input,42,FollowSets000.FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getDataTypeCSAccess().getRightCurlyBracketKeyword_5_2());

                    }

                    }
                    break;

            }

            // InternalQVTimperative.g:4065:3: ( (otherlv_10= '{' otherlv_11= '}' ) | otherlv_12= ';' )
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==41) ) {
                alt83=1;
            }
            else if ( (LA83_0==21) ) {
                alt83=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 83, 0, input);

                throw nvae;
            }
            switch (alt83) {
                case 1 :
                    // InternalQVTimperative.g:4065:4: (otherlv_10= '{' otherlv_11= '}' )
                    {
                    // InternalQVTimperative.g:4065:4: (otherlv_10= '{' otherlv_11= '}' )
                    // InternalQVTimperative.g:4065:6: otherlv_10= '{' otherlv_11= '}'
                    {
                    otherlv_10=(Token)match(input,41,FollowSets000.FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getDataTypeCSAccess().getLeftCurlyBracketKeyword_6_0_0());

                    }
                    otherlv_11=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_11, grammarAccess.getDataTypeCSAccess().getRightCurlyBracketKeyword_6_0_1());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:4074:7: otherlv_12= ';'
                    {
                    otherlv_12=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getDataTypeCSAccess().getSemicolonKeyword_6_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDataTypeCS"


    // $ANTLR start "entryRuleEnumerationCS"
    // InternalQVTimperative.g:4086:1: entryRuleEnumerationCS returns [EObject current=null] : iv_ruleEnumerationCS= ruleEnumerationCS EOF ;
    public final EObject entryRuleEnumerationCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnumerationCS = null;


        try {
            // InternalQVTimperative.g:4087:2: (iv_ruleEnumerationCS= ruleEnumerationCS EOF )
            // InternalQVTimperative.g:4088:2: iv_ruleEnumerationCS= ruleEnumerationCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumerationCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEnumerationCS=ruleEnumerationCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumerationCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumerationCS"


    // $ANTLR start "ruleEnumerationCS"
    // InternalQVTimperative.g:4095:1: ruleEnumerationCS returns [EObject current=null] : (otherlv_0= 'enum' ( (lv_name_1_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_2_0= ruleTemplateSignatureCS ) )? (otherlv_3= ':' ( (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_5= '{' ( ( (lv_isSerializable_6_0= 'serializable' ) ) | otherlv_7= '!serializable' )? otherlv_8= '}' )? ( (otherlv_9= '{' ( (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS ) )* otherlv_11= '}' ) | otherlv_12= ';' ) ) ;
    public final EObject ruleEnumerationCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token lv_instanceClassName_4_0=null;
        Token otherlv_5=null;
        Token lv_isSerializable_6_0=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_ownedSignature_2_0 = null;

        EObject lv_ownedLiterals_10_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:4098:28: ( (otherlv_0= 'enum' ( (lv_name_1_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_2_0= ruleTemplateSignatureCS ) )? (otherlv_3= ':' ( (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_5= '{' ( ( (lv_isSerializable_6_0= 'serializable' ) ) | otherlv_7= '!serializable' )? otherlv_8= '}' )? ( (otherlv_9= '{' ( (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS ) )* otherlv_11= '}' ) | otherlv_12= ';' ) ) )
            // InternalQVTimperative.g:4099:1: (otherlv_0= 'enum' ( (lv_name_1_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_2_0= ruleTemplateSignatureCS ) )? (otherlv_3= ':' ( (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_5= '{' ( ( (lv_isSerializable_6_0= 'serializable' ) ) | otherlv_7= '!serializable' )? otherlv_8= '}' )? ( (otherlv_9= '{' ( (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS ) )* otherlv_11= '}' ) | otherlv_12= ';' ) )
            {
            // InternalQVTimperative.g:4099:1: (otherlv_0= 'enum' ( (lv_name_1_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_2_0= ruleTemplateSignatureCS ) )? (otherlv_3= ':' ( (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_5= '{' ( ( (lv_isSerializable_6_0= 'serializable' ) ) | otherlv_7= '!serializable' )? otherlv_8= '}' )? ( (otherlv_9= '{' ( (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS ) )* otherlv_11= '}' ) | otherlv_12= ';' ) )
            // InternalQVTimperative.g:4099:3: otherlv_0= 'enum' ( (lv_name_1_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_2_0= ruleTemplateSignatureCS ) )? (otherlv_3= ':' ( (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_5= '{' ( ( (lv_isSerializable_6_0= 'serializable' ) ) | otherlv_7= '!serializable' )? otherlv_8= '}' )? ( (otherlv_9= '{' ( (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS ) )* otherlv_11= '}' ) | otherlv_12= ';' )
            {
            otherlv_0=(Token)match(input,85,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getEnumerationCSAccess().getEnumKeyword_0());

            }
            // InternalQVTimperative.g:4103:1: ( (lv_name_1_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:4104:1: (lv_name_1_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:4104:1: (lv_name_1_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:4105:3: lv_name_1_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getEnumerationCSAccess().getNameUnrestrictedNameParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_72);
            lv_name_1_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getEnumerationCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_1_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:4121:2: ( (lv_ownedSignature_2_0= ruleTemplateSignatureCS ) )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==53) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalQVTimperative.g:4122:1: (lv_ownedSignature_2_0= ruleTemplateSignatureCS )
                    {
                    // InternalQVTimperative.g:4122:1: (lv_ownedSignature_2_0= ruleTemplateSignatureCS )
                    // InternalQVTimperative.g:4123:3: lv_ownedSignature_2_0= ruleTemplateSignatureCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getEnumerationCSAccess().getOwnedSignatureTemplateSignatureCSParserRuleCall_2_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_73);
                    lv_ownedSignature_2_0=ruleTemplateSignatureCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getEnumerationCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedSignature",
                              		lv_ownedSignature_2_0,
                              		"org.eclipse.ocl.xtext.base.Base.TemplateSignatureCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:4139:3: (otherlv_3= ':' ( (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING ) ) )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==24) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalQVTimperative.g:4139:5: otherlv_3= ':' ( (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING ) )
                    {
                    otherlv_3=(Token)match(input,24,FollowSets000.FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getEnumerationCSAccess().getColonKeyword_3_0());

                    }
                    // InternalQVTimperative.g:4143:1: ( (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING ) )
                    // InternalQVTimperative.g:4144:1: (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING )
                    {
                    // InternalQVTimperative.g:4144:1: (lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING )
                    // InternalQVTimperative.g:4145:3: lv_instanceClassName_4_0= RULE_SINGLE_QUOTED_STRING
                    {
                    lv_instanceClassName_4_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_instanceClassName_4_0, grammarAccess.getEnumerationCSAccess().getInstanceClassNameSINGLE_QUOTED_STRINGTerminalRuleCall_3_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getEnumerationCSRule());
                      	        }
                             		setWithLastConsumed(
                             			current,
                             			"instanceClassName",
                              		lv_instanceClassName_4_0,
                              		"org.eclipse.ocl.xtext.base.Base.SINGLE_QUOTED_STRING");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:4161:4: (otherlv_5= '{' ( ( (lv_isSerializable_6_0= 'serializable' ) ) | otherlv_7= '!serializable' )? otherlv_8= '}' )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==41) ) {
                int LA87_1 = input.LA(2);

                if ( ((LA87_1>=83 && LA87_1<=84)) ) {
                    alt87=1;
                }
                else if ( (LA87_1==42) ) {
                    int LA87_4 = input.LA(3);

                    if ( (LA87_4==21||LA87_4==41) ) {
                        alt87=1;
                    }
                }
            }
            switch (alt87) {
                case 1 :
                    // InternalQVTimperative.g:4161:6: otherlv_5= '{' ( ( (lv_isSerializable_6_0= 'serializable' ) ) | otherlv_7= '!serializable' )? otherlv_8= '}'
                    {
                    otherlv_5=(Token)match(input,41,FollowSets000.FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getEnumerationCSAccess().getLeftCurlyBracketKeyword_4_0());

                    }
                    // InternalQVTimperative.g:4165:1: ( ( (lv_isSerializable_6_0= 'serializable' ) ) | otherlv_7= '!serializable' )?
                    int alt86=3;
                    int LA86_0 = input.LA(1);

                    if ( (LA86_0==83) ) {
                        alt86=1;
                    }
                    else if ( (LA86_0==84) ) {
                        alt86=2;
                    }
                    switch (alt86) {
                        case 1 :
                            // InternalQVTimperative.g:4165:2: ( (lv_isSerializable_6_0= 'serializable' ) )
                            {
                            // InternalQVTimperative.g:4165:2: ( (lv_isSerializable_6_0= 'serializable' ) )
                            // InternalQVTimperative.g:4166:1: (lv_isSerializable_6_0= 'serializable' )
                            {
                            // InternalQVTimperative.g:4166:1: (lv_isSerializable_6_0= 'serializable' )
                            // InternalQVTimperative.g:4167:3: lv_isSerializable_6_0= 'serializable'
                            {
                            lv_isSerializable_6_0=(Token)match(input,83,FollowSets000.FOLLOW_52); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_isSerializable_6_0, grammarAccess.getEnumerationCSAccess().getIsSerializableSerializableKeyword_4_1_0_0());

                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getEnumerationCSRule());
                              	        }
                                     		setWithLastConsumed(current, "isSerializable", true, "serializable");

                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalQVTimperative.g:4181:7: otherlv_7= '!serializable'
                            {
                            otherlv_7=(Token)match(input,84,FollowSets000.FOLLOW_52); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_7, grammarAccess.getEnumerationCSAccess().getSerializableKeyword_4_1_1());

                            }

                            }
                            break;

                    }

                    otherlv_8=(Token)match(input,42,FollowSets000.FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getEnumerationCSAccess().getRightCurlyBracketKeyword_4_2());

                    }

                    }
                    break;

            }

            // InternalQVTimperative.g:4189:3: ( (otherlv_9= '{' ( (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS ) )* otherlv_11= '}' ) | otherlv_12= ';' )
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==41) ) {
                alt89=1;
            }
            else if ( (LA89_0==21) ) {
                alt89=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 89, 0, input);

                throw nvae;
            }
            switch (alt89) {
                case 1 :
                    // InternalQVTimperative.g:4189:4: (otherlv_9= '{' ( (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS ) )* otherlv_11= '}' )
                    {
                    // InternalQVTimperative.g:4189:4: (otherlv_9= '{' ( (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS ) )* otherlv_11= '}' )
                    // InternalQVTimperative.g:4189:6: otherlv_9= '{' ( (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS ) )* otherlv_11= '}'
                    {
                    otherlv_9=(Token)match(input,41,FollowSets000.FOLLOW_75); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getEnumerationCSAccess().getLeftCurlyBracketKeyword_5_0_0());

                    }
                    // InternalQVTimperative.g:4193:1: ( (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS ) )*
                    loop88:
                    do {
                        int alt88=2;
                        int LA88_0 = input.LA(1);

                        if ( ((LA88_0>=RULE_SIMPLE_ID && LA88_0<=RULE_ESCAPED_ID)||LA88_0==86) ) {
                            alt88=1;
                        }


                        switch (alt88) {
                    	case 1 :
                    	    // InternalQVTimperative.g:4194:1: (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS )
                    	    {
                    	    // InternalQVTimperative.g:4194:1: (lv_ownedLiterals_10_0= ruleEnumerationLiteralCS )
                    	    // InternalQVTimperative.g:4195:3: lv_ownedLiterals_10_0= ruleEnumerationLiteralCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getEnumerationCSAccess().getOwnedLiteralsEnumerationLiteralCSParserRuleCall_5_0_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_75);
                    	    lv_ownedLiterals_10_0=ruleEnumerationLiteralCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getEnumerationCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedLiterals",
                    	              		lv_ownedLiterals_10_0,
                    	              		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.EnumerationLiteralCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop88;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_11, grammarAccess.getEnumerationCSAccess().getRightCurlyBracketKeyword_5_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:4216:7: otherlv_12= ';'
                    {
                    otherlv_12=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getEnumerationCSAccess().getSemicolonKeyword_5_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumerationCS"


    // $ANTLR start "entryRuleEnumerationLiteralCS"
    // InternalQVTimperative.g:4228:1: entryRuleEnumerationLiteralCS returns [EObject current=null] : iv_ruleEnumerationLiteralCS= ruleEnumerationLiteralCS EOF ;
    public final EObject entryRuleEnumerationLiteralCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnumerationLiteralCS = null;


        try {
            // InternalQVTimperative.g:4229:2: (iv_ruleEnumerationLiteralCS= ruleEnumerationLiteralCS EOF )
            // InternalQVTimperative.g:4230:2: iv_ruleEnumerationLiteralCS= ruleEnumerationLiteralCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumerationLiteralCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEnumerationLiteralCS=ruleEnumerationLiteralCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumerationLiteralCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumerationLiteralCS"


    // $ANTLR start "ruleEnumerationLiteralCS"
    // InternalQVTimperative.g:4237:1: ruleEnumerationLiteralCS returns [EObject current=null] : ( ( (otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) ) ) | ( (lv_name_2_0= ruleEnumerationLiteralName ) ) ) (otherlv_3= '=' ( (lv_value_4_0= ruleSIGNED ) ) )? ( (otherlv_5= '{' otherlv_6= '}' ) | otherlv_7= ';' ) ) ;
    public final EObject ruleEnumerationLiteralCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        AntlrDatatypeRuleToken lv_value_4_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:4240:28: ( ( ( (otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) ) ) | ( (lv_name_2_0= ruleEnumerationLiteralName ) ) ) (otherlv_3= '=' ( (lv_value_4_0= ruleSIGNED ) ) )? ( (otherlv_5= '{' otherlv_6= '}' ) | otherlv_7= ';' ) ) )
            // InternalQVTimperative.g:4241:1: ( ( (otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) ) ) | ( (lv_name_2_0= ruleEnumerationLiteralName ) ) ) (otherlv_3= '=' ( (lv_value_4_0= ruleSIGNED ) ) )? ( (otherlv_5= '{' otherlv_6= '}' ) | otherlv_7= ';' ) )
            {
            // InternalQVTimperative.g:4241:1: ( ( (otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) ) ) | ( (lv_name_2_0= ruleEnumerationLiteralName ) ) ) (otherlv_3= '=' ( (lv_value_4_0= ruleSIGNED ) ) )? ( (otherlv_5= '{' otherlv_6= '}' ) | otherlv_7= ';' ) )
            // InternalQVTimperative.g:4241:2: ( (otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) ) ) | ( (lv_name_2_0= ruleEnumerationLiteralName ) ) ) (otherlv_3= '=' ( (lv_value_4_0= ruleSIGNED ) ) )? ( (otherlv_5= '{' otherlv_6= '}' ) | otherlv_7= ';' )
            {
            // InternalQVTimperative.g:4241:2: ( (otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) ) ) | ( (lv_name_2_0= ruleEnumerationLiteralName ) ) )
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==86) ) {
                alt90=1;
            }
            else if ( ((LA90_0>=RULE_SIMPLE_ID && LA90_0<=RULE_ESCAPED_ID)) ) {
                alt90=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 90, 0, input);

                throw nvae;
            }
            switch (alt90) {
                case 1 :
                    // InternalQVTimperative.g:4241:3: (otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) ) )
                    {
                    // InternalQVTimperative.g:4241:3: (otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) ) )
                    // InternalQVTimperative.g:4241:5: otherlv_0= 'literal' ( (lv_name_1_0= ruleUnrestrictedName ) )
                    {
                    otherlv_0=(Token)match(input,86,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getEnumerationLiteralCSAccess().getLiteralKeyword_0_0_0());

                    }
                    // InternalQVTimperative.g:4245:1: ( (lv_name_1_0= ruleUnrestrictedName ) )
                    // InternalQVTimperative.g:4246:1: (lv_name_1_0= ruleUnrestrictedName )
                    {
                    // InternalQVTimperative.g:4246:1: (lv_name_1_0= ruleUnrestrictedName )
                    // InternalQVTimperative.g:4247:3: lv_name_1_0= ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getEnumerationLiteralCSAccess().getNameUnrestrictedNameParserRuleCall_0_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_44);
                    lv_name_1_0=ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getEnumerationLiteralCSRule());
                      	        }
                             		set(
                             			current,
                             			"name",
                              		lv_name_1_0,
                              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:4264:6: ( (lv_name_2_0= ruleEnumerationLiteralName ) )
                    {
                    // InternalQVTimperative.g:4264:6: ( (lv_name_2_0= ruleEnumerationLiteralName ) )
                    // InternalQVTimperative.g:4265:1: (lv_name_2_0= ruleEnumerationLiteralName )
                    {
                    // InternalQVTimperative.g:4265:1: (lv_name_2_0= ruleEnumerationLiteralName )
                    // InternalQVTimperative.g:4266:3: lv_name_2_0= ruleEnumerationLiteralName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getEnumerationLiteralCSAccess().getNameEnumerationLiteralNameParserRuleCall_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_44);
                    lv_name_2_0=ruleEnumerationLiteralName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getEnumerationLiteralCSRule());
                      	        }
                             		set(
                             			current,
                             			"name",
                              		lv_name_2_0,
                              		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.EnumerationLiteralName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:4282:3: (otherlv_3= '=' ( (lv_value_4_0= ruleSIGNED ) ) )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==50) ) {
                alt91=1;
            }
            switch (alt91) {
                case 1 :
                    // InternalQVTimperative.g:4282:5: otherlv_3= '=' ( (lv_value_4_0= ruleSIGNED ) )
                    {
                    otherlv_3=(Token)match(input,50,FollowSets000.FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getEnumerationLiteralCSAccess().getEqualsSignKeyword_1_0());

                    }
                    // InternalQVTimperative.g:4286:1: ( (lv_value_4_0= ruleSIGNED ) )
                    // InternalQVTimperative.g:4287:1: (lv_value_4_0= ruleSIGNED )
                    {
                    // InternalQVTimperative.g:4287:1: (lv_value_4_0= ruleSIGNED )
                    // InternalQVTimperative.g:4288:3: lv_value_4_0= ruleSIGNED
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getEnumerationLiteralCSAccess().getValueSIGNEDParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_45);
                    lv_value_4_0=ruleSIGNED();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getEnumerationLiteralCSRule());
                      	        }
                             		set(
                             			current,
                             			"value",
                              		lv_value_4_0,
                              		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.SIGNED");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:4304:4: ( (otherlv_5= '{' otherlv_6= '}' ) | otherlv_7= ';' )
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==41) ) {
                alt92=1;
            }
            else if ( (LA92_0==21) ) {
                alt92=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 92, 0, input);

                throw nvae;
            }
            switch (alt92) {
                case 1 :
                    // InternalQVTimperative.g:4304:5: (otherlv_5= '{' otherlv_6= '}' )
                    {
                    // InternalQVTimperative.g:4304:5: (otherlv_5= '{' otherlv_6= '}' )
                    // InternalQVTimperative.g:4304:7: otherlv_5= '{' otherlv_6= '}'
                    {
                    otherlv_5=(Token)match(input,41,FollowSets000.FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getEnumerationLiteralCSAccess().getLeftCurlyBracketKeyword_2_0_0());

                    }
                    otherlv_6=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getEnumerationLiteralCSAccess().getRightCurlyBracketKeyword_2_0_1());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:4313:7: otherlv_7= ';'
                    {
                    otherlv_7=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getEnumerationLiteralCSAccess().getSemicolonKeyword_2_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumerationLiteralCS"


    // $ANTLR start "entryRuleOperationCS"
    // InternalQVTimperative.g:4325:1: entryRuleOperationCS returns [EObject current=null] : iv_ruleOperationCS= ruleOperationCS EOF ;
    public final EObject entryRuleOperationCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOperationCS = null;


        try {
            // InternalQVTimperative.g:4326:2: (iv_ruleOperationCS= ruleOperationCS EOF )
            // InternalQVTimperative.g:4327:2: iv_ruleOperationCS= ruleOperationCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOperationCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOperationCS=ruleOperationCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOperationCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOperationCS"


    // $ANTLR start "ruleOperationCS"
    // InternalQVTimperative.g:4334:1: ruleOperationCS returns [EObject current=null] : ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'operation' ( (lv_ownedSignature_5_0= ruleTemplateSignatureCS ) )? ( (lv_name_6_0= ruleUnrestrictedName ) ) otherlv_7= '(' ( ( (lv_ownedParameters_8_0= ruleParameterCS ) ) (otherlv_9= ',' ( (lv_ownedParameters_10_0= ruleParameterCS ) ) )* )? otherlv_11= ')' (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_14= 'throws' ( (lv_ownedExceptions_15_0= ruleTypedRefCS ) ) (otherlv_16= ',' ( (lv_ownedExceptions_17_0= ruleTypedRefCS ) ) )* )? (otherlv_18= '{' ( ( ( (lv_qualifiers_19_0= 'derived' ) ) | ( (lv_qualifiers_20_0= '!derived' ) ) | ( (lv_qualifiers_21_0= 'ordered' ) ) | ( (lv_qualifiers_22_0= '!ordered' ) ) | ( (lv_qualifiers_23_0= 'unique' ) ) | ( (lv_qualifiers_24_0= '!unique' ) ) ) (otherlv_25= ',' )? )+ otherlv_26= '}' )? ( (otherlv_27= '{' (otherlv_28= 'body' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' )* otherlv_33= '}' ) | otherlv_34= ';' ) ) ;
    public final EObject ruleOperationCS() throws RecognitionException {
        EObject current = null;

        Token lv_qualifiers_0_0=null;
        Token lv_qualifiers_1_0=null;
        Token lv_qualifiers_2_0=null;
        Token lv_qualifiers_3_0=null;
        Token otherlv_4=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token lv_qualifiers_19_0=null;
        Token lv_qualifiers_20_0=null;
        Token lv_qualifiers_21_0=null;
        Token lv_qualifiers_22_0=null;
        Token lv_qualifiers_23_0=null;
        Token lv_qualifiers_24_0=null;
        Token otherlv_25=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token otherlv_30=null;
        Token otherlv_32=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        EObject lv_ownedSignature_5_0 = null;

        AntlrDatatypeRuleToken lv_name_6_0 = null;

        EObject lv_ownedParameters_8_0 = null;

        EObject lv_ownedParameters_10_0 = null;

        EObject lv_ownedType_13_0 = null;

        EObject lv_ownedExceptions_15_0 = null;

        EObject lv_ownedExceptions_17_0 = null;

        EObject lv_ownedBodyExpressions_31_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:4337:28: ( ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'operation' ( (lv_ownedSignature_5_0= ruleTemplateSignatureCS ) )? ( (lv_name_6_0= ruleUnrestrictedName ) ) otherlv_7= '(' ( ( (lv_ownedParameters_8_0= ruleParameterCS ) ) (otherlv_9= ',' ( (lv_ownedParameters_10_0= ruleParameterCS ) ) )* )? otherlv_11= ')' (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_14= 'throws' ( (lv_ownedExceptions_15_0= ruleTypedRefCS ) ) (otherlv_16= ',' ( (lv_ownedExceptions_17_0= ruleTypedRefCS ) ) )* )? (otherlv_18= '{' ( ( ( (lv_qualifiers_19_0= 'derived' ) ) | ( (lv_qualifiers_20_0= '!derived' ) ) | ( (lv_qualifiers_21_0= 'ordered' ) ) | ( (lv_qualifiers_22_0= '!ordered' ) ) | ( (lv_qualifiers_23_0= 'unique' ) ) | ( (lv_qualifiers_24_0= '!unique' ) ) ) (otherlv_25= ',' )? )+ otherlv_26= '}' )? ( (otherlv_27= '{' (otherlv_28= 'body' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' )* otherlv_33= '}' ) | otherlv_34= ';' ) ) )
            // InternalQVTimperative.g:4338:1: ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'operation' ( (lv_ownedSignature_5_0= ruleTemplateSignatureCS ) )? ( (lv_name_6_0= ruleUnrestrictedName ) ) otherlv_7= '(' ( ( (lv_ownedParameters_8_0= ruleParameterCS ) ) (otherlv_9= ',' ( (lv_ownedParameters_10_0= ruleParameterCS ) ) )* )? otherlv_11= ')' (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_14= 'throws' ( (lv_ownedExceptions_15_0= ruleTypedRefCS ) ) (otherlv_16= ',' ( (lv_ownedExceptions_17_0= ruleTypedRefCS ) ) )* )? (otherlv_18= '{' ( ( ( (lv_qualifiers_19_0= 'derived' ) ) | ( (lv_qualifiers_20_0= '!derived' ) ) | ( (lv_qualifiers_21_0= 'ordered' ) ) | ( (lv_qualifiers_22_0= '!ordered' ) ) | ( (lv_qualifiers_23_0= 'unique' ) ) | ( (lv_qualifiers_24_0= '!unique' ) ) ) (otherlv_25= ',' )? )+ otherlv_26= '}' )? ( (otherlv_27= '{' (otherlv_28= 'body' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' )* otherlv_33= '}' ) | otherlv_34= ';' ) )
            {
            // InternalQVTimperative.g:4338:1: ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'operation' ( (lv_ownedSignature_5_0= ruleTemplateSignatureCS ) )? ( (lv_name_6_0= ruleUnrestrictedName ) ) otherlv_7= '(' ( ( (lv_ownedParameters_8_0= ruleParameterCS ) ) (otherlv_9= ',' ( (lv_ownedParameters_10_0= ruleParameterCS ) ) )* )? otherlv_11= ')' (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_14= 'throws' ( (lv_ownedExceptions_15_0= ruleTypedRefCS ) ) (otherlv_16= ',' ( (lv_ownedExceptions_17_0= ruleTypedRefCS ) ) )* )? (otherlv_18= '{' ( ( ( (lv_qualifiers_19_0= 'derived' ) ) | ( (lv_qualifiers_20_0= '!derived' ) ) | ( (lv_qualifiers_21_0= 'ordered' ) ) | ( (lv_qualifiers_22_0= '!ordered' ) ) | ( (lv_qualifiers_23_0= 'unique' ) ) | ( (lv_qualifiers_24_0= '!unique' ) ) ) (otherlv_25= ',' )? )+ otherlv_26= '}' )? ( (otherlv_27= '{' (otherlv_28= 'body' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' )* otherlv_33= '}' ) | otherlv_34= ';' ) )
            // InternalQVTimperative.g:4338:2: ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'operation' ( (lv_ownedSignature_5_0= ruleTemplateSignatureCS ) )? ( (lv_name_6_0= ruleUnrestrictedName ) ) otherlv_7= '(' ( ( (lv_ownedParameters_8_0= ruleParameterCS ) ) (otherlv_9= ',' ( (lv_ownedParameters_10_0= ruleParameterCS ) ) )* )? otherlv_11= ')' (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_14= 'throws' ( (lv_ownedExceptions_15_0= ruleTypedRefCS ) ) (otherlv_16= ',' ( (lv_ownedExceptions_17_0= ruleTypedRefCS ) ) )* )? (otherlv_18= '{' ( ( ( (lv_qualifiers_19_0= 'derived' ) ) | ( (lv_qualifiers_20_0= '!derived' ) ) | ( (lv_qualifiers_21_0= 'ordered' ) ) | ( (lv_qualifiers_22_0= '!ordered' ) ) | ( (lv_qualifiers_23_0= 'unique' ) ) | ( (lv_qualifiers_24_0= '!unique' ) ) ) (otherlv_25= ',' )? )+ otherlv_26= '}' )? ( (otherlv_27= '{' (otherlv_28= 'body' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' )* otherlv_33= '}' ) | otherlv_34= ';' )
            {
            // InternalQVTimperative.g:4338:2: ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )?
            int alt95=3;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==61) ) {
                alt95=1;
            }
            else if ( (LA95_0==62) ) {
                alt95=2;
            }
            switch (alt95) {
                case 1 :
                    // InternalQVTimperative.g:4338:3: ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? )
                    {
                    // InternalQVTimperative.g:4338:3: ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? )
                    // InternalQVTimperative.g:4338:4: ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )?
                    {
                    // InternalQVTimperative.g:4338:4: ( (lv_qualifiers_0_0= 'static' ) )
                    // InternalQVTimperative.g:4339:1: (lv_qualifiers_0_0= 'static' )
                    {
                    // InternalQVTimperative.g:4339:1: (lv_qualifiers_0_0= 'static' )
                    // InternalQVTimperative.g:4340:3: lv_qualifiers_0_0= 'static'
                    {
                    lv_qualifiers_0_0=(Token)match(input,61,FollowSets000.FOLLOW_77); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_qualifiers_0_0, grammarAccess.getOperationCSAccess().getQualifiersStaticKeyword_0_0_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getOperationCSRule());
                      	        }
                             		addWithLastConsumed(current, "qualifiers", lv_qualifiers_0_0, "static");

                    }

                    }


                    }

                    // InternalQVTimperative.g:4353:2: ( (lv_qualifiers_1_0= 'definition' ) )?
                    int alt93=2;
                    int LA93_0 = input.LA(1);

                    if ( (LA93_0==62) ) {
                        alt93=1;
                    }
                    switch (alt93) {
                        case 1 :
                            // InternalQVTimperative.g:4354:1: (lv_qualifiers_1_0= 'definition' )
                            {
                            // InternalQVTimperative.g:4354:1: (lv_qualifiers_1_0= 'definition' )
                            // InternalQVTimperative.g:4355:3: lv_qualifiers_1_0= 'definition'
                            {
                            lv_qualifiers_1_0=(Token)match(input,62,FollowSets000.FOLLOW_78); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_qualifiers_1_0, grammarAccess.getOperationCSAccess().getQualifiersDefinitionKeyword_0_0_1_0());

                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getOperationCSRule());
                              	        }
                                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_1_0, "definition");

                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:4369:6: ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? )
                    {
                    // InternalQVTimperative.g:4369:6: ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? )
                    // InternalQVTimperative.g:4369:7: ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )?
                    {
                    // InternalQVTimperative.g:4369:7: ( (lv_qualifiers_2_0= 'definition' ) )
                    // InternalQVTimperative.g:4370:1: (lv_qualifiers_2_0= 'definition' )
                    {
                    // InternalQVTimperative.g:4370:1: (lv_qualifiers_2_0= 'definition' )
                    // InternalQVTimperative.g:4371:3: lv_qualifiers_2_0= 'definition'
                    {
                    lv_qualifiers_2_0=(Token)match(input,62,FollowSets000.FOLLOW_79); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_qualifiers_2_0, grammarAccess.getOperationCSAccess().getQualifiersDefinitionKeyword_0_1_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getOperationCSRule());
                      	        }
                             		addWithLastConsumed(current, "qualifiers", lv_qualifiers_2_0, "definition");

                    }

                    }


                    }

                    // InternalQVTimperative.g:4384:2: ( (lv_qualifiers_3_0= 'static' ) )?
                    int alt94=2;
                    int LA94_0 = input.LA(1);

                    if ( (LA94_0==61) ) {
                        alt94=1;
                    }
                    switch (alt94) {
                        case 1 :
                            // InternalQVTimperative.g:4385:1: (lv_qualifiers_3_0= 'static' )
                            {
                            // InternalQVTimperative.g:4385:1: (lv_qualifiers_3_0= 'static' )
                            // InternalQVTimperative.g:4386:3: lv_qualifiers_3_0= 'static'
                            {
                            lv_qualifiers_3_0=(Token)match(input,61,FollowSets000.FOLLOW_78); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_qualifiers_3_0, grammarAccess.getOperationCSAccess().getQualifiersStaticKeyword_0_1_1_0());

                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getOperationCSRule());
                              	        }
                                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_3_0, "static");

                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,87,FollowSets000.FOLLOW_80); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getOperationCSAccess().getOperationKeyword_1());

            }
            // InternalQVTimperative.g:4403:1: ( (lv_ownedSignature_5_0= ruleTemplateSignatureCS ) )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==53) ) {
                alt96=1;
            }
            switch (alt96) {
                case 1 :
                    // InternalQVTimperative.g:4404:1: (lv_ownedSignature_5_0= ruleTemplateSignatureCS )
                    {
                    // InternalQVTimperative.g:4404:1: (lv_ownedSignature_5_0= ruleTemplateSignatureCS )
                    // InternalQVTimperative.g:4405:3: lv_ownedSignature_5_0= ruleTemplateSignatureCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedSignatureTemplateSignatureCSParserRuleCall_2_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_5);
                    lv_ownedSignature_5_0=ruleTemplateSignatureCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedSignature",
                              		lv_ownedSignature_5_0,
                              		"org.eclipse.ocl.xtext.base.Base.TemplateSignatureCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:4421:3: ( (lv_name_6_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:4422:1: (lv_name_6_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:4422:1: (lv_name_6_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:4423:3: lv_name_6_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getOperationCSAccess().getNameUnrestrictedNameParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_48);
            lv_name_6_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_6_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_7=(Token)match(input,53,FollowSets000.FOLLOW_49); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getOperationCSAccess().getLeftParenthesisKeyword_4());

            }
            // InternalQVTimperative.g:4443:1: ( ( (lv_ownedParameters_8_0= ruleParameterCS ) ) (otherlv_9= ',' ( (lv_ownedParameters_10_0= ruleParameterCS ) ) )* )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( ((LA98_0>=RULE_SIMPLE_ID && LA98_0<=RULE_ESCAPED_ID)||LA98_0==17||LA98_0==19||(LA98_0>=22 && LA98_0<=23)||(LA98_0>=25 && LA98_0<=26)||(LA98_0>=28 && LA98_0<=31)||LA98_0==34||(LA98_0>=38 && LA98_0<=39)||(LA98_0>=43 && LA98_0<=49)||(LA98_0>=51 && LA98_0<=52)||(LA98_0>=55 && LA98_0<=57)||(LA98_0>=59 && LA98_0<=64)||LA98_0==66||LA98_0==68||LA98_0==70||LA98_0==73||LA98_0==75||LA98_0==77||(LA98_0>=79 && LA98_0<=83)||(LA98_0>=85 && LA98_0<=90)||LA98_0==92||LA98_0==94||(LA98_0>=96 && LA98_0<=99)) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // InternalQVTimperative.g:4443:2: ( (lv_ownedParameters_8_0= ruleParameterCS ) ) (otherlv_9= ',' ( (lv_ownedParameters_10_0= ruleParameterCS ) ) )*
                    {
                    // InternalQVTimperative.g:4443:2: ( (lv_ownedParameters_8_0= ruleParameterCS ) )
                    // InternalQVTimperative.g:4444:1: (lv_ownedParameters_8_0= ruleParameterCS )
                    {
                    // InternalQVTimperative.g:4444:1: (lv_ownedParameters_8_0= ruleParameterCS )
                    // InternalQVTimperative.g:4445:3: lv_ownedParameters_8_0= ruleParameterCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedParametersParameterCSParserRuleCall_5_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_50);
                    lv_ownedParameters_8_0=ruleParameterCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedParameters",
                              		lv_ownedParameters_8_0,
                              		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.ParameterCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:4461:2: (otherlv_9= ',' ( (lv_ownedParameters_10_0= ruleParameterCS ) ) )*
                    loop97:
                    do {
                        int alt97=2;
                        int LA97_0 = input.LA(1);

                        if ( (LA97_0==18) ) {
                            alt97=1;
                        }


                        switch (alt97) {
                    	case 1 :
                    	    // InternalQVTimperative.g:4461:4: otherlv_9= ',' ( (lv_ownedParameters_10_0= ruleParameterCS ) )
                    	    {
                    	    otherlv_9=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_9, grammarAccess.getOperationCSAccess().getCommaKeyword_5_1_0());

                    	    }
                    	    // InternalQVTimperative.g:4465:1: ( (lv_ownedParameters_10_0= ruleParameterCS ) )
                    	    // InternalQVTimperative.g:4466:1: (lv_ownedParameters_10_0= ruleParameterCS )
                    	    {
                    	    // InternalQVTimperative.g:4466:1: (lv_ownedParameters_10_0= ruleParameterCS )
                    	    // InternalQVTimperative.g:4467:3: lv_ownedParameters_10_0= ruleParameterCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedParametersParameterCSParserRuleCall_5_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_50);
                    	    lv_ownedParameters_10_0=ruleParameterCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedParameters",
                    	              		lv_ownedParameters_10_0,
                    	              		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.ParameterCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop97;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_11=(Token)match(input,54,FollowSets000.FOLLOW_81); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_11, grammarAccess.getOperationCSAccess().getRightParenthesisKeyword_6());

            }
            // InternalQVTimperative.g:4487:1: (otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypedMultiplicityRefCS ) ) )?
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==24) ) {
                alt99=1;
            }
            switch (alt99) {
                case 1 :
                    // InternalQVTimperative.g:4487:3: otherlv_12= ':' ( (lv_ownedType_13_0= ruleTypedMultiplicityRefCS ) )
                    {
                    otherlv_12=(Token)match(input,24,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getOperationCSAccess().getColonKeyword_7_0());

                    }
                    // InternalQVTimperative.g:4491:1: ( (lv_ownedType_13_0= ruleTypedMultiplicityRefCS ) )
                    // InternalQVTimperative.g:4492:1: (lv_ownedType_13_0= ruleTypedMultiplicityRefCS )
                    {
                    // InternalQVTimperative.g:4492:1: (lv_ownedType_13_0= ruleTypedMultiplicityRefCS )
                    // InternalQVTimperative.g:4493:3: lv_ownedType_13_0= ruleTypedMultiplicityRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedTypeTypedMultiplicityRefCSParserRuleCall_7_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_82);
                    lv_ownedType_13_0=ruleTypedMultiplicityRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_13_0,
                              		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.TypedMultiplicityRefCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:4509:4: (otherlv_14= 'throws' ( (lv_ownedExceptions_15_0= ruleTypedRefCS ) ) (otherlv_16= ',' ( (lv_ownedExceptions_17_0= ruleTypedRefCS ) ) )* )?
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==88) ) {
                alt101=1;
            }
            switch (alt101) {
                case 1 :
                    // InternalQVTimperative.g:4509:6: otherlv_14= 'throws' ( (lv_ownedExceptions_15_0= ruleTypedRefCS ) ) (otherlv_16= ',' ( (lv_ownedExceptions_17_0= ruleTypedRefCS ) ) )*
                    {
                    otherlv_14=(Token)match(input,88,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_14, grammarAccess.getOperationCSAccess().getThrowsKeyword_8_0());

                    }
                    // InternalQVTimperative.g:4513:1: ( (lv_ownedExceptions_15_0= ruleTypedRefCS ) )
                    // InternalQVTimperative.g:4514:1: (lv_ownedExceptions_15_0= ruleTypedRefCS )
                    {
                    // InternalQVTimperative.g:4514:1: (lv_ownedExceptions_15_0= ruleTypedRefCS )
                    // InternalQVTimperative.g:4515:3: lv_ownedExceptions_15_0= ruleTypedRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedExceptionsTypedRefCSParserRuleCall_8_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_83);
                    lv_ownedExceptions_15_0=ruleTypedRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedExceptions",
                              		lv_ownedExceptions_15_0,
                              		"org.eclipse.ocl.xtext.base.Base.TypedRefCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:4531:2: (otherlv_16= ',' ( (lv_ownedExceptions_17_0= ruleTypedRefCS ) ) )*
                    loop100:
                    do {
                        int alt100=2;
                        int LA100_0 = input.LA(1);

                        if ( (LA100_0==18) ) {
                            alt100=1;
                        }


                        switch (alt100) {
                    	case 1 :
                    	    // InternalQVTimperative.g:4531:4: otherlv_16= ',' ( (lv_ownedExceptions_17_0= ruleTypedRefCS ) )
                    	    {
                    	    otherlv_16=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_16, grammarAccess.getOperationCSAccess().getCommaKeyword_8_2_0());

                    	    }
                    	    // InternalQVTimperative.g:4535:1: ( (lv_ownedExceptions_17_0= ruleTypedRefCS ) )
                    	    // InternalQVTimperative.g:4536:1: (lv_ownedExceptions_17_0= ruleTypedRefCS )
                    	    {
                    	    // InternalQVTimperative.g:4536:1: (lv_ownedExceptions_17_0= ruleTypedRefCS )
                    	    // InternalQVTimperative.g:4537:3: lv_ownedExceptions_17_0= ruleTypedRefCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedExceptionsTypedRefCSParserRuleCall_8_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_83);
                    	    lv_ownedExceptions_17_0=ruleTypedRefCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedExceptions",
                    	              		lv_ownedExceptions_17_0,
                    	              		"org.eclipse.ocl.xtext.base.Base.TypedRefCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop100;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalQVTimperative.g:4553:6: (otherlv_18= '{' ( ( ( (lv_qualifiers_19_0= 'derived' ) ) | ( (lv_qualifiers_20_0= '!derived' ) ) | ( (lv_qualifiers_21_0= 'ordered' ) ) | ( (lv_qualifiers_22_0= '!ordered' ) ) | ( (lv_qualifiers_23_0= 'unique' ) ) | ( (lv_qualifiers_24_0= '!unique' ) ) ) (otherlv_25= ',' )? )+ otherlv_26= '}' )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==41) ) {
                int LA105_1 = input.LA(2);

                if ( ((LA105_1>=64 && LA105_1<=65)||(LA105_1>=68 && LA105_1<=69)||(LA105_1>=73 && LA105_1<=74)) ) {
                    alt105=1;
                }
            }
            switch (alt105) {
                case 1 :
                    // InternalQVTimperative.g:4553:8: otherlv_18= '{' ( ( ( (lv_qualifiers_19_0= 'derived' ) ) | ( (lv_qualifiers_20_0= '!derived' ) ) | ( (lv_qualifiers_21_0= 'ordered' ) ) | ( (lv_qualifiers_22_0= '!ordered' ) ) | ( (lv_qualifiers_23_0= 'unique' ) ) | ( (lv_qualifiers_24_0= '!unique' ) ) ) (otherlv_25= ',' )? )+ otherlv_26= '}'
                    {
                    otherlv_18=(Token)match(input,41,FollowSets000.FOLLOW_84); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_18, grammarAccess.getOperationCSAccess().getLeftCurlyBracketKeyword_9_0());

                    }
                    // InternalQVTimperative.g:4557:1: ( ( ( (lv_qualifiers_19_0= 'derived' ) ) | ( (lv_qualifiers_20_0= '!derived' ) ) | ( (lv_qualifiers_21_0= 'ordered' ) ) | ( (lv_qualifiers_22_0= '!ordered' ) ) | ( (lv_qualifiers_23_0= 'unique' ) ) | ( (lv_qualifiers_24_0= '!unique' ) ) ) (otherlv_25= ',' )? )+
                    int cnt104=0;
                    loop104:
                    do {
                        int alt104=2;
                        int LA104_0 = input.LA(1);

                        if ( ((LA104_0>=64 && LA104_0<=65)||(LA104_0>=68 && LA104_0<=69)||(LA104_0>=73 && LA104_0<=74)) ) {
                            alt104=1;
                        }


                        switch (alt104) {
                    	case 1 :
                    	    // InternalQVTimperative.g:4557:2: ( ( (lv_qualifiers_19_0= 'derived' ) ) | ( (lv_qualifiers_20_0= '!derived' ) ) | ( (lv_qualifiers_21_0= 'ordered' ) ) | ( (lv_qualifiers_22_0= '!ordered' ) ) | ( (lv_qualifiers_23_0= 'unique' ) ) | ( (lv_qualifiers_24_0= '!unique' ) ) ) (otherlv_25= ',' )?
                    	    {
                    	    // InternalQVTimperative.g:4557:2: ( ( (lv_qualifiers_19_0= 'derived' ) ) | ( (lv_qualifiers_20_0= '!derived' ) ) | ( (lv_qualifiers_21_0= 'ordered' ) ) | ( (lv_qualifiers_22_0= '!ordered' ) ) | ( (lv_qualifiers_23_0= 'unique' ) ) | ( (lv_qualifiers_24_0= '!unique' ) ) )
                    	    int alt102=6;
                    	    switch ( input.LA(1) ) {
                    	    case 64:
                    	        {
                    	        alt102=1;
                    	        }
                    	        break;
                    	    case 65:
                    	        {
                    	        alt102=2;
                    	        }
                    	        break;
                    	    case 68:
                    	        {
                    	        alt102=3;
                    	        }
                    	        break;
                    	    case 69:
                    	        {
                    	        alt102=4;
                    	        }
                    	        break;
                    	    case 73:
                    	        {
                    	        alt102=5;
                    	        }
                    	        break;
                    	    case 74:
                    	        {
                    	        alt102=6;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 102, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt102) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:4557:3: ( (lv_qualifiers_19_0= 'derived' ) )
                    	            {
                    	            // InternalQVTimperative.g:4557:3: ( (lv_qualifiers_19_0= 'derived' ) )
                    	            // InternalQVTimperative.g:4558:1: (lv_qualifiers_19_0= 'derived' )
                    	            {
                    	            // InternalQVTimperative.g:4558:1: (lv_qualifiers_19_0= 'derived' )
                    	            // InternalQVTimperative.g:4559:3: lv_qualifiers_19_0= 'derived'
                    	            {
                    	            lv_qualifiers_19_0=(Token)match(input,64,FollowSets000.FOLLOW_85); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_19_0, grammarAccess.getOperationCSAccess().getQualifiersDerivedKeyword_9_1_0_0_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getOperationCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_19_0, "derived");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalQVTimperative.g:4573:6: ( (lv_qualifiers_20_0= '!derived' ) )
                    	            {
                    	            // InternalQVTimperative.g:4573:6: ( (lv_qualifiers_20_0= '!derived' ) )
                    	            // InternalQVTimperative.g:4574:1: (lv_qualifiers_20_0= '!derived' )
                    	            {
                    	            // InternalQVTimperative.g:4574:1: (lv_qualifiers_20_0= '!derived' )
                    	            // InternalQVTimperative.g:4575:3: lv_qualifiers_20_0= '!derived'
                    	            {
                    	            lv_qualifiers_20_0=(Token)match(input,65,FollowSets000.FOLLOW_85); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_20_0, grammarAccess.getOperationCSAccess().getQualifiersDerivedKeyword_9_1_0_1_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getOperationCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_20_0, "!derived");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 3 :
                    	            // InternalQVTimperative.g:4589:6: ( (lv_qualifiers_21_0= 'ordered' ) )
                    	            {
                    	            // InternalQVTimperative.g:4589:6: ( (lv_qualifiers_21_0= 'ordered' ) )
                    	            // InternalQVTimperative.g:4590:1: (lv_qualifiers_21_0= 'ordered' )
                    	            {
                    	            // InternalQVTimperative.g:4590:1: (lv_qualifiers_21_0= 'ordered' )
                    	            // InternalQVTimperative.g:4591:3: lv_qualifiers_21_0= 'ordered'
                    	            {
                    	            lv_qualifiers_21_0=(Token)match(input,68,FollowSets000.FOLLOW_85); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_21_0, grammarAccess.getOperationCSAccess().getQualifiersOrderedKeyword_9_1_0_2_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getOperationCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_21_0, "ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 4 :
                    	            // InternalQVTimperative.g:4605:6: ( (lv_qualifiers_22_0= '!ordered' ) )
                    	            {
                    	            // InternalQVTimperative.g:4605:6: ( (lv_qualifiers_22_0= '!ordered' ) )
                    	            // InternalQVTimperative.g:4606:1: (lv_qualifiers_22_0= '!ordered' )
                    	            {
                    	            // InternalQVTimperative.g:4606:1: (lv_qualifiers_22_0= '!ordered' )
                    	            // InternalQVTimperative.g:4607:3: lv_qualifiers_22_0= '!ordered'
                    	            {
                    	            lv_qualifiers_22_0=(Token)match(input,69,FollowSets000.FOLLOW_85); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_22_0, grammarAccess.getOperationCSAccess().getQualifiersOrderedKeyword_9_1_0_3_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getOperationCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_22_0, "!ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 5 :
                    	            // InternalQVTimperative.g:4621:6: ( (lv_qualifiers_23_0= 'unique' ) )
                    	            {
                    	            // InternalQVTimperative.g:4621:6: ( (lv_qualifiers_23_0= 'unique' ) )
                    	            // InternalQVTimperative.g:4622:1: (lv_qualifiers_23_0= 'unique' )
                    	            {
                    	            // InternalQVTimperative.g:4622:1: (lv_qualifiers_23_0= 'unique' )
                    	            // InternalQVTimperative.g:4623:3: lv_qualifiers_23_0= 'unique'
                    	            {
                    	            lv_qualifiers_23_0=(Token)match(input,73,FollowSets000.FOLLOW_85); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_23_0, grammarAccess.getOperationCSAccess().getQualifiersUniqueKeyword_9_1_0_4_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getOperationCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_23_0, "unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 6 :
                    	            // InternalQVTimperative.g:4637:6: ( (lv_qualifiers_24_0= '!unique' ) )
                    	            {
                    	            // InternalQVTimperative.g:4637:6: ( (lv_qualifiers_24_0= '!unique' ) )
                    	            // InternalQVTimperative.g:4638:1: (lv_qualifiers_24_0= '!unique' )
                    	            {
                    	            // InternalQVTimperative.g:4638:1: (lv_qualifiers_24_0= '!unique' )
                    	            // InternalQVTimperative.g:4639:3: lv_qualifiers_24_0= '!unique'
                    	            {
                    	            lv_qualifiers_24_0=(Token)match(input,74,FollowSets000.FOLLOW_85); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_24_0, grammarAccess.getOperationCSAccess().getQualifiersUniqueKeyword_9_1_0_5_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getOperationCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_24_0, "!unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalQVTimperative.g:4652:3: (otherlv_25= ',' )?
                    	    int alt103=2;
                    	    int LA103_0 = input.LA(1);

                    	    if ( (LA103_0==18) ) {
                    	        alt103=1;
                    	    }
                    	    switch (alt103) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:4652:5: otherlv_25= ','
                    	            {
                    	            otherlv_25=(Token)match(input,18,FollowSets000.FOLLOW_86); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                  	newLeafNode(otherlv_25, grammarAccess.getOperationCSAccess().getCommaKeyword_9_1_1());

                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt104 >= 1 ) break loop104;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(104, input);
                                throw eee;
                        }
                        cnt104++;
                    } while (true);

                    otherlv_26=(Token)match(input,42,FollowSets000.FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_26, grammarAccess.getOperationCSAccess().getRightCurlyBracketKeyword_9_2());

                    }

                    }
                    break;

            }

            // InternalQVTimperative.g:4660:3: ( (otherlv_27= '{' (otherlv_28= 'body' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' )* otherlv_33= '}' ) | otherlv_34= ';' )
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==41) ) {
                alt109=1;
            }
            else if ( (LA109_0==21) ) {
                alt109=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 109, 0, input);

                throw nvae;
            }
            switch (alt109) {
                case 1 :
                    // InternalQVTimperative.g:4660:4: (otherlv_27= '{' (otherlv_28= 'body' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' )* otherlv_33= '}' )
                    {
                    // InternalQVTimperative.g:4660:4: (otherlv_27= '{' (otherlv_28= 'body' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' )* otherlv_33= '}' )
                    // InternalQVTimperative.g:4660:6: otherlv_27= '{' (otherlv_28= 'body' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' )* otherlv_33= '}'
                    {
                    otherlv_27=(Token)match(input,41,FollowSets000.FOLLOW_87); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_27, grammarAccess.getOperationCSAccess().getLeftCurlyBracketKeyword_10_0_0());

                    }
                    // InternalQVTimperative.g:4664:1: (otherlv_28= 'body' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';' )*
                    loop108:
                    do {
                        int alt108=2;
                        int LA108_0 = input.LA(1);

                        if ( (LA108_0==89) ) {
                            alt108=1;
                        }


                        switch (alt108) {
                    	case 1 :
                    	    // InternalQVTimperative.g:4664:3: otherlv_28= 'body' ( ruleUnrestrictedName )? otherlv_30= ':' ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )? otherlv_32= ';'
                    	    {
                    	    otherlv_28=(Token)match(input,89,FollowSets000.FOLLOW_69); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_28, grammarAccess.getOperationCSAccess().getBodyKeyword_10_0_1_0());

                    	    }
                    	    // InternalQVTimperative.g:4668:1: ( ruleUnrestrictedName )?
                    	    int alt106=2;
                    	    int LA106_0 = input.LA(1);

                    	    if ( ((LA106_0>=RULE_SIMPLE_ID && LA106_0<=RULE_ESCAPED_ID)||LA106_0==17||LA106_0==19||(LA106_0>=22 && LA106_0<=23)||(LA106_0>=25 && LA106_0<=26)||(LA106_0>=28 && LA106_0<=31)||LA106_0==34||(LA106_0>=38 && LA106_0<=39)||(LA106_0>=43 && LA106_0<=49)||(LA106_0>=51 && LA106_0<=52)||(LA106_0>=55 && LA106_0<=57)||(LA106_0>=59 && LA106_0<=64)||LA106_0==66||LA106_0==68||LA106_0==70||LA106_0==73||LA106_0==75||LA106_0==77||(LA106_0>=79 && LA106_0<=83)||(LA106_0>=85 && LA106_0<=90)||LA106_0==92||LA106_0==94||(LA106_0>=96 && LA106_0<=99)) ) {
                    	        alt106=1;
                    	    }
                    	    switch (alt106) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:4669:2: ruleUnrestrictedName
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	  /* */

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	                      newCompositeNode(grammarAccess.getOperationCSAccess().getUnrestrictedNameParserRuleCall_10_0_1_1());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_11);
                    	            ruleUnrestrictedName();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;

                    	    }

                    	    otherlv_30=(Token)match(input,24,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_30, grammarAccess.getOperationCSAccess().getColonKeyword_10_0_1_2());

                    	    }
                    	    // InternalQVTimperative.g:4683:1: ( (lv_ownedBodyExpressions_31_0= ruleSpecificationCS ) )?
                    	    int alt107=2;
                    	    int LA107_0 = input.LA(1);

                    	    if ( ((LA107_0>=RULE_SINGLE_QUOTED_STRING && LA107_0<=RULE_ESCAPED_ID)||LA107_0==17||LA107_0==19||(LA107_0>=22 && LA107_0<=23)||(LA107_0>=25 && LA107_0<=26)||(LA107_0>=28 && LA107_0<=31)||LA107_0==34||(LA107_0>=37 && LA107_0<=39)||(LA107_0>=43 && LA107_0<=49)||(LA107_0>=51 && LA107_0<=53)||(LA107_0>=55 && LA107_0<=57)||(LA107_0>=59 && LA107_0<=64)||LA107_0==66||LA107_0==68||LA107_0==70||LA107_0==73||LA107_0==75||LA107_0==77||(LA107_0>=79 && LA107_0<=83)||(LA107_0>=85 && LA107_0<=90)||LA107_0==92||LA107_0==94||(LA107_0>=96 && LA107_0<=101)||(LA107_0>=116 && LA107_0<=130)||LA107_0==133||(LA107_0>=135 && LA107_0<=138)||LA107_0==144||(LA107_0>=149 && LA107_0<=150)) ) {
                    	        alt107=1;
                    	    }
                    	    switch (alt107) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:4684:1: (lv_ownedBodyExpressions_31_0= ruleSpecificationCS )
                    	            {
                    	            // InternalQVTimperative.g:4684:1: (lv_ownedBodyExpressions_31_0= ruleSpecificationCS )
                    	            // InternalQVTimperative.g:4685:3: lv_ownedBodyExpressions_31_0= ruleSpecificationCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	        newCompositeNode(grammarAccess.getOperationCSAccess().getOwnedBodyExpressionsSpecificationCSParserRuleCall_10_0_1_3_0());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_9);
                    	            lv_ownedBodyExpressions_31_0=ruleSpecificationCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getOperationCSRule());
                    	              	        }
                    	                     		add(
                    	                     			current,
                    	                     			"ownedBodyExpressions",
                    	                      		lv_ownedBodyExpressions_31_0,
                    	                      		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.SpecificationCS");
                    	              	        afterParserOrEnumRuleCall();

                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    otherlv_32=(Token)match(input,21,FollowSets000.FOLLOW_87); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_32, grammarAccess.getOperationCSAccess().getSemicolonKeyword_10_0_1_4());

                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop108;
                        }
                    } while (true);

                    otherlv_33=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_33, grammarAccess.getOperationCSAccess().getRightCurlyBracketKeyword_10_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:4710:7: otherlv_34= ';'
                    {
                    otherlv_34=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_34, grammarAccess.getOperationCSAccess().getSemicolonKeyword_10_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOperationCS"


    // $ANTLR start "entryRuleParameterCS"
    // InternalQVTimperative.g:4722:1: entryRuleParameterCS returns [EObject current=null] : iv_ruleParameterCS= ruleParameterCS EOF ;
    public final EObject entryRuleParameterCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterCS = null;


        try {
            // InternalQVTimperative.g:4723:2: (iv_ruleParameterCS= ruleParameterCS EOF )
            // InternalQVTimperative.g:4724:2: iv_ruleParameterCS= ruleParameterCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleParameterCS=ruleParameterCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameterCS"


    // $ANTLR start "ruleParameterCS"
    // InternalQVTimperative.g:4731:1: ruleParameterCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_3= '{' ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+ otherlv_9= '}' )? (otherlv_10= '{' otherlv_11= '}' )? ) ;
    public final EObject ruleParameterCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_qualifiers_4_0=null;
        Token lv_qualifiers_5_0=null;
        Token lv_qualifiers_6_0=null;
        Token lv_qualifiers_7_0=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedType_2_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:4734:28: ( ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_3= '{' ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+ otherlv_9= '}' )? (otherlv_10= '{' otherlv_11= '}' )? ) )
            // InternalQVTimperative.g:4735:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_3= '{' ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+ otherlv_9= '}' )? (otherlv_10= '{' otherlv_11= '}' )? )
            {
            // InternalQVTimperative.g:4735:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_3= '{' ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+ otherlv_9= '}' )? (otherlv_10= '{' otherlv_11= '}' )? )
            // InternalQVTimperative.g:4735:2: ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_3= '{' ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+ otherlv_9= '}' )? (otherlv_10= '{' otherlv_11= '}' )?
            {
            // InternalQVTimperative.g:4735:2: ( (lv_name_0_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:4736:1: (lv_name_0_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:4736:1: (lv_name_0_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:4737:3: lv_name_0_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getParameterCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_88);
            lv_name_0_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParameterCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_0_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:4753:2: (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) ) )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==24) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // InternalQVTimperative.g:4753:4: otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) )
                    {
                    otherlv_1=(Token)match(input,24,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getParameterCSAccess().getColonKeyword_1_0());

                    }
                    // InternalQVTimperative.g:4757:1: ( (lv_ownedType_2_0= ruleTypedMultiplicityRefCS ) )
                    // InternalQVTimperative.g:4758:1: (lv_ownedType_2_0= ruleTypedMultiplicityRefCS )
                    {
                    // InternalQVTimperative.g:4758:1: (lv_ownedType_2_0= ruleTypedMultiplicityRefCS )
                    // InternalQVTimperative.g:4759:3: lv_ownedType_2_0= ruleTypedMultiplicityRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getParameterCSAccess().getOwnedTypeTypedMultiplicityRefCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_89);
                    lv_ownedType_2_0=ruleTypedMultiplicityRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getParameterCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_2_0,
                              		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.TypedMultiplicityRefCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:4775:4: (otherlv_3= '{' ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+ otherlv_9= '}' )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==41) ) {
                int LA114_1 = input.LA(2);

                if ( ((LA114_1>=68 && LA114_1<=69)||(LA114_1>=73 && LA114_1<=74)) ) {
                    alt114=1;
                }
            }
            switch (alt114) {
                case 1 :
                    // InternalQVTimperative.g:4775:6: otherlv_3= '{' ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+ otherlv_9= '}'
                    {
                    otherlv_3=(Token)match(input,41,FollowSets000.FOLLOW_90); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getParameterCSAccess().getLeftCurlyBracketKeyword_2_0());

                    }
                    // InternalQVTimperative.g:4779:1: ( ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )? )+
                    int cnt113=0;
                    loop113:
                    do {
                        int alt113=2;
                        int LA113_0 = input.LA(1);

                        if ( ((LA113_0>=68 && LA113_0<=69)||(LA113_0>=73 && LA113_0<=74)) ) {
                            alt113=1;
                        }


                        switch (alt113) {
                    	case 1 :
                    	    // InternalQVTimperative.g:4779:2: ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) ) (otherlv_8= ',' )?
                    	    {
                    	    // InternalQVTimperative.g:4779:2: ( ( (lv_qualifiers_4_0= 'ordered' ) ) | ( (lv_qualifiers_5_0= '!ordered' ) ) | ( (lv_qualifiers_6_0= 'unique' ) ) | ( (lv_qualifiers_7_0= '!unique' ) ) )
                    	    int alt111=4;
                    	    switch ( input.LA(1) ) {
                    	    case 68:
                    	        {
                    	        alt111=1;
                    	        }
                    	        break;
                    	    case 69:
                    	        {
                    	        alt111=2;
                    	        }
                    	        break;
                    	    case 73:
                    	        {
                    	        alt111=3;
                    	        }
                    	        break;
                    	    case 74:
                    	        {
                    	        alt111=4;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 111, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt111) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:4779:3: ( (lv_qualifiers_4_0= 'ordered' ) )
                    	            {
                    	            // InternalQVTimperative.g:4779:3: ( (lv_qualifiers_4_0= 'ordered' ) )
                    	            // InternalQVTimperative.g:4780:1: (lv_qualifiers_4_0= 'ordered' )
                    	            {
                    	            // InternalQVTimperative.g:4780:1: (lv_qualifiers_4_0= 'ordered' )
                    	            // InternalQVTimperative.g:4781:3: lv_qualifiers_4_0= 'ordered'
                    	            {
                    	            lv_qualifiers_4_0=(Token)match(input,68,FollowSets000.FOLLOW_91); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_4_0, grammarAccess.getParameterCSAccess().getQualifiersOrderedKeyword_2_1_0_0_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getParameterCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_4_0, "ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalQVTimperative.g:4795:6: ( (lv_qualifiers_5_0= '!ordered' ) )
                    	            {
                    	            // InternalQVTimperative.g:4795:6: ( (lv_qualifiers_5_0= '!ordered' ) )
                    	            // InternalQVTimperative.g:4796:1: (lv_qualifiers_5_0= '!ordered' )
                    	            {
                    	            // InternalQVTimperative.g:4796:1: (lv_qualifiers_5_0= '!ordered' )
                    	            // InternalQVTimperative.g:4797:3: lv_qualifiers_5_0= '!ordered'
                    	            {
                    	            lv_qualifiers_5_0=(Token)match(input,69,FollowSets000.FOLLOW_91); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_5_0, grammarAccess.getParameterCSAccess().getQualifiersOrderedKeyword_2_1_0_1_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getParameterCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_5_0, "!ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 3 :
                    	            // InternalQVTimperative.g:4811:6: ( (lv_qualifiers_6_0= 'unique' ) )
                    	            {
                    	            // InternalQVTimperative.g:4811:6: ( (lv_qualifiers_6_0= 'unique' ) )
                    	            // InternalQVTimperative.g:4812:1: (lv_qualifiers_6_0= 'unique' )
                    	            {
                    	            // InternalQVTimperative.g:4812:1: (lv_qualifiers_6_0= 'unique' )
                    	            // InternalQVTimperative.g:4813:3: lv_qualifiers_6_0= 'unique'
                    	            {
                    	            lv_qualifiers_6_0=(Token)match(input,73,FollowSets000.FOLLOW_91); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_6_0, grammarAccess.getParameterCSAccess().getQualifiersUniqueKeyword_2_1_0_2_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getParameterCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_6_0, "unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 4 :
                    	            // InternalQVTimperative.g:4827:6: ( (lv_qualifiers_7_0= '!unique' ) )
                    	            {
                    	            // InternalQVTimperative.g:4827:6: ( (lv_qualifiers_7_0= '!unique' ) )
                    	            // InternalQVTimperative.g:4828:1: (lv_qualifiers_7_0= '!unique' )
                    	            {
                    	            // InternalQVTimperative.g:4828:1: (lv_qualifiers_7_0= '!unique' )
                    	            // InternalQVTimperative.g:4829:3: lv_qualifiers_7_0= '!unique'
                    	            {
                    	            lv_qualifiers_7_0=(Token)match(input,74,FollowSets000.FOLLOW_91); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_7_0, grammarAccess.getParameterCSAccess().getQualifiersUniqueKeyword_2_1_0_3_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getParameterCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_7_0, "!unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalQVTimperative.g:4842:3: (otherlv_8= ',' )?
                    	    int alt112=2;
                    	    int LA112_0 = input.LA(1);

                    	    if ( (LA112_0==18) ) {
                    	        alt112=1;
                    	    }
                    	    switch (alt112) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:4842:5: otherlv_8= ','
                    	            {
                    	            otherlv_8=(Token)match(input,18,FollowSets000.FOLLOW_92); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                  	newLeafNode(otherlv_8, grammarAccess.getParameterCSAccess().getCommaKeyword_2_1_1());

                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt113 >= 1 ) break loop113;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(113, input);
                                throw eee;
                        }
                        cnt113++;
                    } while (true);

                    otherlv_9=(Token)match(input,42,FollowSets000.FOLLOW_89); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getParameterCSAccess().getRightCurlyBracketKeyword_2_2());

                    }

                    }
                    break;

            }

            // InternalQVTimperative.g:4850:3: (otherlv_10= '{' otherlv_11= '}' )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==41) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    // InternalQVTimperative.g:4850:5: otherlv_10= '{' otherlv_11= '}'
                    {
                    otherlv_10=(Token)match(input,41,FollowSets000.FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getParameterCSAccess().getLeftCurlyBracketKeyword_3_0());

                    }
                    otherlv_11=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_11, grammarAccess.getParameterCSAccess().getRightCurlyBracketKeyword_3_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterCS"


    // $ANTLR start "entryRuleReferenceCS"
    // InternalQVTimperative.g:4866:1: entryRuleReferenceCS returns [EObject current=null] : iv_ruleReferenceCS= ruleReferenceCS EOF ;
    public final EObject entryRuleReferenceCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceCS = null;


        try {
            // InternalQVTimperative.g:4867:2: (iv_ruleReferenceCS= ruleReferenceCS EOF )
            // InternalQVTimperative.g:4868:2: iv_ruleReferenceCS= ruleReferenceCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceCS=ruleReferenceCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceCS"


    // $ANTLR start "ruleReferenceCS"
    // InternalQVTimperative.g:4875:1: ruleReferenceCS returns [EObject current=null] : ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'property' ( (lv_name_5_0= ruleUnrestrictedName ) ) (otherlv_6= '#' ( ( ruleUnrestrictedName ) ) )? (otherlv_8= ':' ( (lv_ownedType_9_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_10= '=' ( (lv_default_11_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_12= '{' ( ( ( (lv_qualifiers_13_0= 'composes' ) ) | ( (lv_qualifiers_14_0= '!composes' ) ) | ( (lv_qualifiers_15_0= 'derived' ) ) | ( (lv_qualifiers_16_0= '!derived' ) ) | ( (lv_qualifiers_17_0= 'ordered' ) ) | ( (lv_qualifiers_18_0= '!ordered' ) ) | ( (lv_qualifiers_19_0= 'readonly' ) ) | ( (lv_qualifiers_20_0= '!readonly' ) ) | ( (lv_qualifiers_21_0= 'resolve' ) ) | ( (lv_qualifiers_22_0= '!resolve' ) ) | ( (lv_qualifiers_23_0= 'transient' ) ) | ( (lv_qualifiers_24_0= '!transient' ) ) | ( (lv_qualifiers_25_0= 'unique' ) ) | ( (lv_qualifiers_26_0= '!unique' ) ) | ( (lv_qualifiers_27_0= 'unsettable' ) ) | ( (lv_qualifiers_28_0= '!unsettable' ) ) | ( (lv_qualifiers_29_0= 'volatile' ) ) | ( (lv_qualifiers_30_0= '!volatile' ) ) ) (otherlv_31= ',' )? )+ otherlv_32= '}' )? ( (otherlv_33= '{' ( (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' ) | (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' ) )* otherlv_44= '}' ) | otherlv_45= ';' ) ) ;
    public final EObject ruleReferenceCS() throws RecognitionException {
        EObject current = null;

        Token lv_qualifiers_0_0=null;
        Token lv_qualifiers_1_0=null;
        Token lv_qualifiers_2_0=null;
        Token lv_qualifiers_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token lv_default_11_0=null;
        Token otherlv_12=null;
        Token lv_qualifiers_13_0=null;
        Token lv_qualifiers_14_0=null;
        Token lv_qualifiers_15_0=null;
        Token lv_qualifiers_16_0=null;
        Token lv_qualifiers_17_0=null;
        Token lv_qualifiers_18_0=null;
        Token lv_qualifiers_19_0=null;
        Token lv_qualifiers_20_0=null;
        Token lv_qualifiers_21_0=null;
        Token lv_qualifiers_22_0=null;
        Token lv_qualifiers_23_0=null;
        Token lv_qualifiers_24_0=null;
        Token lv_qualifiers_25_0=null;
        Token lv_qualifiers_26_0=null;
        Token lv_qualifiers_27_0=null;
        Token lv_qualifiers_28_0=null;
        Token lv_qualifiers_29_0=null;
        Token lv_qualifiers_30_0=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        Token otherlv_36=null;
        Token otherlv_38=null;
        Token otherlv_39=null;
        Token otherlv_41=null;
        Token otherlv_43=null;
        Token otherlv_44=null;
        Token otherlv_45=null;
        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_ownedType_9_0 = null;

        EObject lv_ownedDefaultExpressions_37_0 = null;

        EObject lv_ownedDefaultExpressions_42_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:4878:28: ( ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'property' ( (lv_name_5_0= ruleUnrestrictedName ) ) (otherlv_6= '#' ( ( ruleUnrestrictedName ) ) )? (otherlv_8= ':' ( (lv_ownedType_9_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_10= '=' ( (lv_default_11_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_12= '{' ( ( ( (lv_qualifiers_13_0= 'composes' ) ) | ( (lv_qualifiers_14_0= '!composes' ) ) | ( (lv_qualifiers_15_0= 'derived' ) ) | ( (lv_qualifiers_16_0= '!derived' ) ) | ( (lv_qualifiers_17_0= 'ordered' ) ) | ( (lv_qualifiers_18_0= '!ordered' ) ) | ( (lv_qualifiers_19_0= 'readonly' ) ) | ( (lv_qualifiers_20_0= '!readonly' ) ) | ( (lv_qualifiers_21_0= 'resolve' ) ) | ( (lv_qualifiers_22_0= '!resolve' ) ) | ( (lv_qualifiers_23_0= 'transient' ) ) | ( (lv_qualifiers_24_0= '!transient' ) ) | ( (lv_qualifiers_25_0= 'unique' ) ) | ( (lv_qualifiers_26_0= '!unique' ) ) | ( (lv_qualifiers_27_0= 'unsettable' ) ) | ( (lv_qualifiers_28_0= '!unsettable' ) ) | ( (lv_qualifiers_29_0= 'volatile' ) ) | ( (lv_qualifiers_30_0= '!volatile' ) ) ) (otherlv_31= ',' )? )+ otherlv_32= '}' )? ( (otherlv_33= '{' ( (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' ) | (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' ) )* otherlv_44= '}' ) | otherlv_45= ';' ) ) )
            // InternalQVTimperative.g:4879:1: ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'property' ( (lv_name_5_0= ruleUnrestrictedName ) ) (otherlv_6= '#' ( ( ruleUnrestrictedName ) ) )? (otherlv_8= ':' ( (lv_ownedType_9_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_10= '=' ( (lv_default_11_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_12= '{' ( ( ( (lv_qualifiers_13_0= 'composes' ) ) | ( (lv_qualifiers_14_0= '!composes' ) ) | ( (lv_qualifiers_15_0= 'derived' ) ) | ( (lv_qualifiers_16_0= '!derived' ) ) | ( (lv_qualifiers_17_0= 'ordered' ) ) | ( (lv_qualifiers_18_0= '!ordered' ) ) | ( (lv_qualifiers_19_0= 'readonly' ) ) | ( (lv_qualifiers_20_0= '!readonly' ) ) | ( (lv_qualifiers_21_0= 'resolve' ) ) | ( (lv_qualifiers_22_0= '!resolve' ) ) | ( (lv_qualifiers_23_0= 'transient' ) ) | ( (lv_qualifiers_24_0= '!transient' ) ) | ( (lv_qualifiers_25_0= 'unique' ) ) | ( (lv_qualifiers_26_0= '!unique' ) ) | ( (lv_qualifiers_27_0= 'unsettable' ) ) | ( (lv_qualifiers_28_0= '!unsettable' ) ) | ( (lv_qualifiers_29_0= 'volatile' ) ) | ( (lv_qualifiers_30_0= '!volatile' ) ) ) (otherlv_31= ',' )? )+ otherlv_32= '}' )? ( (otherlv_33= '{' ( (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' ) | (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' ) )* otherlv_44= '}' ) | otherlv_45= ';' ) )
            {
            // InternalQVTimperative.g:4879:1: ( ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'property' ( (lv_name_5_0= ruleUnrestrictedName ) ) (otherlv_6= '#' ( ( ruleUnrestrictedName ) ) )? (otherlv_8= ':' ( (lv_ownedType_9_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_10= '=' ( (lv_default_11_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_12= '{' ( ( ( (lv_qualifiers_13_0= 'composes' ) ) | ( (lv_qualifiers_14_0= '!composes' ) ) | ( (lv_qualifiers_15_0= 'derived' ) ) | ( (lv_qualifiers_16_0= '!derived' ) ) | ( (lv_qualifiers_17_0= 'ordered' ) ) | ( (lv_qualifiers_18_0= '!ordered' ) ) | ( (lv_qualifiers_19_0= 'readonly' ) ) | ( (lv_qualifiers_20_0= '!readonly' ) ) | ( (lv_qualifiers_21_0= 'resolve' ) ) | ( (lv_qualifiers_22_0= '!resolve' ) ) | ( (lv_qualifiers_23_0= 'transient' ) ) | ( (lv_qualifiers_24_0= '!transient' ) ) | ( (lv_qualifiers_25_0= 'unique' ) ) | ( (lv_qualifiers_26_0= '!unique' ) ) | ( (lv_qualifiers_27_0= 'unsettable' ) ) | ( (lv_qualifiers_28_0= '!unsettable' ) ) | ( (lv_qualifiers_29_0= 'volatile' ) ) | ( (lv_qualifiers_30_0= '!volatile' ) ) ) (otherlv_31= ',' )? )+ otherlv_32= '}' )? ( (otherlv_33= '{' ( (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' ) | (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' ) )* otherlv_44= '}' ) | otherlv_45= ';' ) )
            // InternalQVTimperative.g:4879:2: ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )? otherlv_4= 'property' ( (lv_name_5_0= ruleUnrestrictedName ) ) (otherlv_6= '#' ( ( ruleUnrestrictedName ) ) )? (otherlv_8= ':' ( (lv_ownedType_9_0= ruleTypedMultiplicityRefCS ) ) )? (otherlv_10= '=' ( (lv_default_11_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_12= '{' ( ( ( (lv_qualifiers_13_0= 'composes' ) ) | ( (lv_qualifiers_14_0= '!composes' ) ) | ( (lv_qualifiers_15_0= 'derived' ) ) | ( (lv_qualifiers_16_0= '!derived' ) ) | ( (lv_qualifiers_17_0= 'ordered' ) ) | ( (lv_qualifiers_18_0= '!ordered' ) ) | ( (lv_qualifiers_19_0= 'readonly' ) ) | ( (lv_qualifiers_20_0= '!readonly' ) ) | ( (lv_qualifiers_21_0= 'resolve' ) ) | ( (lv_qualifiers_22_0= '!resolve' ) ) | ( (lv_qualifiers_23_0= 'transient' ) ) | ( (lv_qualifiers_24_0= '!transient' ) ) | ( (lv_qualifiers_25_0= 'unique' ) ) | ( (lv_qualifiers_26_0= '!unique' ) ) | ( (lv_qualifiers_27_0= 'unsettable' ) ) | ( (lv_qualifiers_28_0= '!unsettable' ) ) | ( (lv_qualifiers_29_0= 'volatile' ) ) | ( (lv_qualifiers_30_0= '!volatile' ) ) ) (otherlv_31= ',' )? )+ otherlv_32= '}' )? ( (otherlv_33= '{' ( (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' ) | (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' ) )* otherlv_44= '}' ) | otherlv_45= ';' )
            {
            // InternalQVTimperative.g:4879:2: ( ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? ) | ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? ) )?
            int alt118=3;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==61) ) {
                alt118=1;
            }
            else if ( (LA118_0==62) ) {
                alt118=2;
            }
            switch (alt118) {
                case 1 :
                    // InternalQVTimperative.g:4879:3: ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? )
                    {
                    // InternalQVTimperative.g:4879:3: ( ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )? )
                    // InternalQVTimperative.g:4879:4: ( (lv_qualifiers_0_0= 'static' ) ) ( (lv_qualifiers_1_0= 'definition' ) )?
                    {
                    // InternalQVTimperative.g:4879:4: ( (lv_qualifiers_0_0= 'static' ) )
                    // InternalQVTimperative.g:4880:1: (lv_qualifiers_0_0= 'static' )
                    {
                    // InternalQVTimperative.g:4880:1: (lv_qualifiers_0_0= 'static' )
                    // InternalQVTimperative.g:4881:3: lv_qualifiers_0_0= 'static'
                    {
                    lv_qualifiers_0_0=(Token)match(input,61,FollowSets000.FOLLOW_93); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_qualifiers_0_0, grammarAccess.getReferenceCSAccess().getQualifiersStaticKeyword_0_0_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getReferenceCSRule());
                      	        }
                             		addWithLastConsumed(current, "qualifiers", lv_qualifiers_0_0, "static");

                    }

                    }


                    }

                    // InternalQVTimperative.g:4894:2: ( (lv_qualifiers_1_0= 'definition' ) )?
                    int alt116=2;
                    int LA116_0 = input.LA(1);

                    if ( (LA116_0==62) ) {
                        alt116=1;
                    }
                    switch (alt116) {
                        case 1 :
                            // InternalQVTimperative.g:4895:1: (lv_qualifiers_1_0= 'definition' )
                            {
                            // InternalQVTimperative.g:4895:1: (lv_qualifiers_1_0= 'definition' )
                            // InternalQVTimperative.g:4896:3: lv_qualifiers_1_0= 'definition'
                            {
                            lv_qualifiers_1_0=(Token)match(input,62,FollowSets000.FOLLOW_94); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_qualifiers_1_0, grammarAccess.getReferenceCSAccess().getQualifiersDefinitionKeyword_0_0_1_0());

                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                              	        }
                                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_1_0, "definition");

                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:4910:6: ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? )
                    {
                    // InternalQVTimperative.g:4910:6: ( ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )? )
                    // InternalQVTimperative.g:4910:7: ( (lv_qualifiers_2_0= 'definition' ) ) ( (lv_qualifiers_3_0= 'static' ) )?
                    {
                    // InternalQVTimperative.g:4910:7: ( (lv_qualifiers_2_0= 'definition' ) )
                    // InternalQVTimperative.g:4911:1: (lv_qualifiers_2_0= 'definition' )
                    {
                    // InternalQVTimperative.g:4911:1: (lv_qualifiers_2_0= 'definition' )
                    // InternalQVTimperative.g:4912:3: lv_qualifiers_2_0= 'definition'
                    {
                    lv_qualifiers_2_0=(Token)match(input,62,FollowSets000.FOLLOW_95); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_qualifiers_2_0, grammarAccess.getReferenceCSAccess().getQualifiersDefinitionKeyword_0_1_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getReferenceCSRule());
                      	        }
                             		addWithLastConsumed(current, "qualifiers", lv_qualifiers_2_0, "definition");

                    }

                    }


                    }

                    // InternalQVTimperative.g:4925:2: ( (lv_qualifiers_3_0= 'static' ) )?
                    int alt117=2;
                    int LA117_0 = input.LA(1);

                    if ( (LA117_0==61) ) {
                        alt117=1;
                    }
                    switch (alt117) {
                        case 1 :
                            // InternalQVTimperative.g:4926:1: (lv_qualifiers_3_0= 'static' )
                            {
                            // InternalQVTimperative.g:4926:1: (lv_qualifiers_3_0= 'static' )
                            // InternalQVTimperative.g:4927:3: lv_qualifiers_3_0= 'static'
                            {
                            lv_qualifiers_3_0=(Token)match(input,61,FollowSets000.FOLLOW_94); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_qualifiers_3_0, grammarAccess.getReferenceCSAccess().getQualifiersStaticKeyword_0_1_1_0());

                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                              	        }
                                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_3_0, "static");

                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,90,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getReferenceCSAccess().getPropertyKeyword_1());

            }
            // InternalQVTimperative.g:4944:1: ( (lv_name_5_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:4945:1: (lv_name_5_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:4945:1: (lv_name_5_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:4946:3: lv_name_5_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getReferenceCSAccess().getNameUnrestrictedNameParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_96);
            lv_name_5_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getReferenceCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_5_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:4962:2: (otherlv_6= '#' ( ( ruleUnrestrictedName ) ) )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==91) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // InternalQVTimperative.g:4962:4: otherlv_6= '#' ( ( ruleUnrestrictedName ) )
                    {
                    otherlv_6=(Token)match(input,91,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getReferenceCSAccess().getNumberSignKeyword_3_0());

                    }
                    // InternalQVTimperative.g:4966:1: ( ( ruleUnrestrictedName ) )
                    // InternalQVTimperative.g:4967:1: ( ruleUnrestrictedName )
                    {
                    // InternalQVTimperative.g:4967:1: ( ruleUnrestrictedName )
                    // InternalQVTimperative.g:4968:3: ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      		  /* */

                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getReferenceCSRule());
                      	        }

                    }
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getReferenceCSAccess().getReferredOppositePropertyCrossReference_3_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_43);
                    ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:4984:4: (otherlv_8= ':' ( (lv_ownedType_9_0= ruleTypedMultiplicityRefCS ) ) )?
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==24) ) {
                alt120=1;
            }
            switch (alt120) {
                case 1 :
                    // InternalQVTimperative.g:4984:6: otherlv_8= ':' ( (lv_ownedType_9_0= ruleTypedMultiplicityRefCS ) )
                    {
                    otherlv_8=(Token)match(input,24,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getReferenceCSAccess().getColonKeyword_4_0());

                    }
                    // InternalQVTimperative.g:4988:1: ( (lv_ownedType_9_0= ruleTypedMultiplicityRefCS ) )
                    // InternalQVTimperative.g:4989:1: (lv_ownedType_9_0= ruleTypedMultiplicityRefCS )
                    {
                    // InternalQVTimperative.g:4989:1: (lv_ownedType_9_0= ruleTypedMultiplicityRefCS )
                    // InternalQVTimperative.g:4990:3: lv_ownedType_9_0= ruleTypedMultiplicityRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getReferenceCSAccess().getOwnedTypeTypedMultiplicityRefCSParserRuleCall_4_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_44);
                    lv_ownedType_9_0=ruleTypedMultiplicityRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getReferenceCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_9_0,
                              		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.TypedMultiplicityRefCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:5006:4: (otherlv_10= '=' ( (lv_default_11_0= RULE_SINGLE_QUOTED_STRING ) ) )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==50) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // InternalQVTimperative.g:5006:6: otherlv_10= '=' ( (lv_default_11_0= RULE_SINGLE_QUOTED_STRING ) )
                    {
                    otherlv_10=(Token)match(input,50,FollowSets000.FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getReferenceCSAccess().getEqualsSignKeyword_5_0());

                    }
                    // InternalQVTimperative.g:5010:1: ( (lv_default_11_0= RULE_SINGLE_QUOTED_STRING ) )
                    // InternalQVTimperative.g:5011:1: (lv_default_11_0= RULE_SINGLE_QUOTED_STRING )
                    {
                    // InternalQVTimperative.g:5011:1: (lv_default_11_0= RULE_SINGLE_QUOTED_STRING )
                    // InternalQVTimperative.g:5012:3: lv_default_11_0= RULE_SINGLE_QUOTED_STRING
                    {
                    lv_default_11_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_default_11_0, grammarAccess.getReferenceCSAccess().getDefaultSINGLE_QUOTED_STRINGTerminalRuleCall_5_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getReferenceCSRule());
                      	        }
                             		setWithLastConsumed(
                             			current,
                             			"default",
                              		lv_default_11_0,
                              		"org.eclipse.ocl.xtext.base.Base.SINGLE_QUOTED_STRING");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:5028:4: (otherlv_12= '{' ( ( ( (lv_qualifiers_13_0= 'composes' ) ) | ( (lv_qualifiers_14_0= '!composes' ) ) | ( (lv_qualifiers_15_0= 'derived' ) ) | ( (lv_qualifiers_16_0= '!derived' ) ) | ( (lv_qualifiers_17_0= 'ordered' ) ) | ( (lv_qualifiers_18_0= '!ordered' ) ) | ( (lv_qualifiers_19_0= 'readonly' ) ) | ( (lv_qualifiers_20_0= '!readonly' ) ) | ( (lv_qualifiers_21_0= 'resolve' ) ) | ( (lv_qualifiers_22_0= '!resolve' ) ) | ( (lv_qualifiers_23_0= 'transient' ) ) | ( (lv_qualifiers_24_0= '!transient' ) ) | ( (lv_qualifiers_25_0= 'unique' ) ) | ( (lv_qualifiers_26_0= '!unique' ) ) | ( (lv_qualifiers_27_0= 'unsettable' ) ) | ( (lv_qualifiers_28_0= '!unsettable' ) ) | ( (lv_qualifiers_29_0= 'volatile' ) ) | ( (lv_qualifiers_30_0= '!volatile' ) ) ) (otherlv_31= ',' )? )+ otherlv_32= '}' )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==41) ) {
                int LA125_1 = input.LA(2);

                if ( (LA125_1==51||(LA125_1>=64 && LA125_1<=65)||(LA125_1>=68 && LA125_1<=78)||(LA125_1>=92 && LA125_1<=95)) ) {
                    alt125=1;
                }
            }
            switch (alt125) {
                case 1 :
                    // InternalQVTimperative.g:5028:6: otherlv_12= '{' ( ( ( (lv_qualifiers_13_0= 'composes' ) ) | ( (lv_qualifiers_14_0= '!composes' ) ) | ( (lv_qualifiers_15_0= 'derived' ) ) | ( (lv_qualifiers_16_0= '!derived' ) ) | ( (lv_qualifiers_17_0= 'ordered' ) ) | ( (lv_qualifiers_18_0= '!ordered' ) ) | ( (lv_qualifiers_19_0= 'readonly' ) ) | ( (lv_qualifiers_20_0= '!readonly' ) ) | ( (lv_qualifiers_21_0= 'resolve' ) ) | ( (lv_qualifiers_22_0= '!resolve' ) ) | ( (lv_qualifiers_23_0= 'transient' ) ) | ( (lv_qualifiers_24_0= '!transient' ) ) | ( (lv_qualifiers_25_0= 'unique' ) ) | ( (lv_qualifiers_26_0= '!unique' ) ) | ( (lv_qualifiers_27_0= 'unsettable' ) ) | ( (lv_qualifiers_28_0= '!unsettable' ) ) | ( (lv_qualifiers_29_0= 'volatile' ) ) | ( (lv_qualifiers_30_0= '!volatile' ) ) ) (otherlv_31= ',' )? )+ otherlv_32= '}'
                    {
                    otherlv_12=(Token)match(input,41,FollowSets000.FOLLOW_97); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getReferenceCSAccess().getLeftCurlyBracketKeyword_6_0());

                    }
                    // InternalQVTimperative.g:5032:1: ( ( ( (lv_qualifiers_13_0= 'composes' ) ) | ( (lv_qualifiers_14_0= '!composes' ) ) | ( (lv_qualifiers_15_0= 'derived' ) ) | ( (lv_qualifiers_16_0= '!derived' ) ) | ( (lv_qualifiers_17_0= 'ordered' ) ) | ( (lv_qualifiers_18_0= '!ordered' ) ) | ( (lv_qualifiers_19_0= 'readonly' ) ) | ( (lv_qualifiers_20_0= '!readonly' ) ) | ( (lv_qualifiers_21_0= 'resolve' ) ) | ( (lv_qualifiers_22_0= '!resolve' ) ) | ( (lv_qualifiers_23_0= 'transient' ) ) | ( (lv_qualifiers_24_0= '!transient' ) ) | ( (lv_qualifiers_25_0= 'unique' ) ) | ( (lv_qualifiers_26_0= '!unique' ) ) | ( (lv_qualifiers_27_0= 'unsettable' ) ) | ( (lv_qualifiers_28_0= '!unsettable' ) ) | ( (lv_qualifiers_29_0= 'volatile' ) ) | ( (lv_qualifiers_30_0= '!volatile' ) ) ) (otherlv_31= ',' )? )+
                    int cnt124=0;
                    loop124:
                    do {
                        int alt124=2;
                        int LA124_0 = input.LA(1);

                        if ( (LA124_0==51||(LA124_0>=64 && LA124_0<=65)||(LA124_0>=68 && LA124_0<=78)||(LA124_0>=92 && LA124_0<=95)) ) {
                            alt124=1;
                        }


                        switch (alt124) {
                    	case 1 :
                    	    // InternalQVTimperative.g:5032:2: ( ( (lv_qualifiers_13_0= 'composes' ) ) | ( (lv_qualifiers_14_0= '!composes' ) ) | ( (lv_qualifiers_15_0= 'derived' ) ) | ( (lv_qualifiers_16_0= '!derived' ) ) | ( (lv_qualifiers_17_0= 'ordered' ) ) | ( (lv_qualifiers_18_0= '!ordered' ) ) | ( (lv_qualifiers_19_0= 'readonly' ) ) | ( (lv_qualifiers_20_0= '!readonly' ) ) | ( (lv_qualifiers_21_0= 'resolve' ) ) | ( (lv_qualifiers_22_0= '!resolve' ) ) | ( (lv_qualifiers_23_0= 'transient' ) ) | ( (lv_qualifiers_24_0= '!transient' ) ) | ( (lv_qualifiers_25_0= 'unique' ) ) | ( (lv_qualifiers_26_0= '!unique' ) ) | ( (lv_qualifiers_27_0= 'unsettable' ) ) | ( (lv_qualifiers_28_0= '!unsettable' ) ) | ( (lv_qualifiers_29_0= 'volatile' ) ) | ( (lv_qualifiers_30_0= '!volatile' ) ) ) (otherlv_31= ',' )?
                    	    {
                    	    // InternalQVTimperative.g:5032:2: ( ( (lv_qualifiers_13_0= 'composes' ) ) | ( (lv_qualifiers_14_0= '!composes' ) ) | ( (lv_qualifiers_15_0= 'derived' ) ) | ( (lv_qualifiers_16_0= '!derived' ) ) | ( (lv_qualifiers_17_0= 'ordered' ) ) | ( (lv_qualifiers_18_0= '!ordered' ) ) | ( (lv_qualifiers_19_0= 'readonly' ) ) | ( (lv_qualifiers_20_0= '!readonly' ) ) | ( (lv_qualifiers_21_0= 'resolve' ) ) | ( (lv_qualifiers_22_0= '!resolve' ) ) | ( (lv_qualifiers_23_0= 'transient' ) ) | ( (lv_qualifiers_24_0= '!transient' ) ) | ( (lv_qualifiers_25_0= 'unique' ) ) | ( (lv_qualifiers_26_0= '!unique' ) ) | ( (lv_qualifiers_27_0= 'unsettable' ) ) | ( (lv_qualifiers_28_0= '!unsettable' ) ) | ( (lv_qualifiers_29_0= 'volatile' ) ) | ( (lv_qualifiers_30_0= '!volatile' ) ) )
                    	    int alt122=18;
                    	    switch ( input.LA(1) ) {
                    	    case 92:
                    	        {
                    	        alt122=1;
                    	        }
                    	        break;
                    	    case 93:
                    	        {
                    	        alt122=2;
                    	        }
                    	        break;
                    	    case 64:
                    	        {
                    	        alt122=3;
                    	        }
                    	        break;
                    	    case 65:
                    	        {
                    	        alt122=4;
                    	        }
                    	        break;
                    	    case 68:
                    	        {
                    	        alt122=5;
                    	        }
                    	        break;
                    	    case 69:
                    	        {
                    	        alt122=6;
                    	        }
                    	        break;
                    	    case 70:
                    	        {
                    	        alt122=7;
                    	        }
                    	        break;
                    	    case 71:
                    	        {
                    	        alt122=8;
                    	        }
                    	        break;
                    	    case 94:
                    	        {
                    	        alt122=9;
                    	        }
                    	        break;
                    	    case 95:
                    	        {
                    	        alt122=10;
                    	        }
                    	        break;
                    	    case 51:
                    	        {
                    	        alt122=11;
                    	        }
                    	        break;
                    	    case 72:
                    	        {
                    	        alt122=12;
                    	        }
                    	        break;
                    	    case 73:
                    	        {
                    	        alt122=13;
                    	        }
                    	        break;
                    	    case 74:
                    	        {
                    	        alt122=14;
                    	        }
                    	        break;
                    	    case 75:
                    	        {
                    	        alt122=15;
                    	        }
                    	        break;
                    	    case 76:
                    	        {
                    	        alt122=16;
                    	        }
                    	        break;
                    	    case 77:
                    	        {
                    	        alt122=17;
                    	        }
                    	        break;
                    	    case 78:
                    	        {
                    	        alt122=18;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 122, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt122) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:5032:3: ( (lv_qualifiers_13_0= 'composes' ) )
                    	            {
                    	            // InternalQVTimperative.g:5032:3: ( (lv_qualifiers_13_0= 'composes' ) )
                    	            // InternalQVTimperative.g:5033:1: (lv_qualifiers_13_0= 'composes' )
                    	            {
                    	            // InternalQVTimperative.g:5033:1: (lv_qualifiers_13_0= 'composes' )
                    	            // InternalQVTimperative.g:5034:3: lv_qualifiers_13_0= 'composes'
                    	            {
                    	            lv_qualifiers_13_0=(Token)match(input,92,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_13_0, grammarAccess.getReferenceCSAccess().getQualifiersComposesKeyword_6_1_0_0_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_13_0, "composes");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalQVTimperative.g:5048:6: ( (lv_qualifiers_14_0= '!composes' ) )
                    	            {
                    	            // InternalQVTimperative.g:5048:6: ( (lv_qualifiers_14_0= '!composes' ) )
                    	            // InternalQVTimperative.g:5049:1: (lv_qualifiers_14_0= '!composes' )
                    	            {
                    	            // InternalQVTimperative.g:5049:1: (lv_qualifiers_14_0= '!composes' )
                    	            // InternalQVTimperative.g:5050:3: lv_qualifiers_14_0= '!composes'
                    	            {
                    	            lv_qualifiers_14_0=(Token)match(input,93,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_14_0, grammarAccess.getReferenceCSAccess().getQualifiersComposesKeyword_6_1_0_1_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_14_0, "!composes");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 3 :
                    	            // InternalQVTimperative.g:5064:6: ( (lv_qualifiers_15_0= 'derived' ) )
                    	            {
                    	            // InternalQVTimperative.g:5064:6: ( (lv_qualifiers_15_0= 'derived' ) )
                    	            // InternalQVTimperative.g:5065:1: (lv_qualifiers_15_0= 'derived' )
                    	            {
                    	            // InternalQVTimperative.g:5065:1: (lv_qualifiers_15_0= 'derived' )
                    	            // InternalQVTimperative.g:5066:3: lv_qualifiers_15_0= 'derived'
                    	            {
                    	            lv_qualifiers_15_0=(Token)match(input,64,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_15_0, grammarAccess.getReferenceCSAccess().getQualifiersDerivedKeyword_6_1_0_2_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_15_0, "derived");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 4 :
                    	            // InternalQVTimperative.g:5080:6: ( (lv_qualifiers_16_0= '!derived' ) )
                    	            {
                    	            // InternalQVTimperative.g:5080:6: ( (lv_qualifiers_16_0= '!derived' ) )
                    	            // InternalQVTimperative.g:5081:1: (lv_qualifiers_16_0= '!derived' )
                    	            {
                    	            // InternalQVTimperative.g:5081:1: (lv_qualifiers_16_0= '!derived' )
                    	            // InternalQVTimperative.g:5082:3: lv_qualifiers_16_0= '!derived'
                    	            {
                    	            lv_qualifiers_16_0=(Token)match(input,65,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_16_0, grammarAccess.getReferenceCSAccess().getQualifiersDerivedKeyword_6_1_0_3_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_16_0, "!derived");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 5 :
                    	            // InternalQVTimperative.g:5096:6: ( (lv_qualifiers_17_0= 'ordered' ) )
                    	            {
                    	            // InternalQVTimperative.g:5096:6: ( (lv_qualifiers_17_0= 'ordered' ) )
                    	            // InternalQVTimperative.g:5097:1: (lv_qualifiers_17_0= 'ordered' )
                    	            {
                    	            // InternalQVTimperative.g:5097:1: (lv_qualifiers_17_0= 'ordered' )
                    	            // InternalQVTimperative.g:5098:3: lv_qualifiers_17_0= 'ordered'
                    	            {
                    	            lv_qualifiers_17_0=(Token)match(input,68,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_17_0, grammarAccess.getReferenceCSAccess().getQualifiersOrderedKeyword_6_1_0_4_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_17_0, "ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 6 :
                    	            // InternalQVTimperative.g:5112:6: ( (lv_qualifiers_18_0= '!ordered' ) )
                    	            {
                    	            // InternalQVTimperative.g:5112:6: ( (lv_qualifiers_18_0= '!ordered' ) )
                    	            // InternalQVTimperative.g:5113:1: (lv_qualifiers_18_0= '!ordered' )
                    	            {
                    	            // InternalQVTimperative.g:5113:1: (lv_qualifiers_18_0= '!ordered' )
                    	            // InternalQVTimperative.g:5114:3: lv_qualifiers_18_0= '!ordered'
                    	            {
                    	            lv_qualifiers_18_0=(Token)match(input,69,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_18_0, grammarAccess.getReferenceCSAccess().getQualifiersOrderedKeyword_6_1_0_5_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_18_0, "!ordered");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 7 :
                    	            // InternalQVTimperative.g:5128:6: ( (lv_qualifiers_19_0= 'readonly' ) )
                    	            {
                    	            // InternalQVTimperative.g:5128:6: ( (lv_qualifiers_19_0= 'readonly' ) )
                    	            // InternalQVTimperative.g:5129:1: (lv_qualifiers_19_0= 'readonly' )
                    	            {
                    	            // InternalQVTimperative.g:5129:1: (lv_qualifiers_19_0= 'readonly' )
                    	            // InternalQVTimperative.g:5130:3: lv_qualifiers_19_0= 'readonly'
                    	            {
                    	            lv_qualifiers_19_0=(Token)match(input,70,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_19_0, grammarAccess.getReferenceCSAccess().getQualifiersReadonlyKeyword_6_1_0_6_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_19_0, "readonly");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 8 :
                    	            // InternalQVTimperative.g:5144:6: ( (lv_qualifiers_20_0= '!readonly' ) )
                    	            {
                    	            // InternalQVTimperative.g:5144:6: ( (lv_qualifiers_20_0= '!readonly' ) )
                    	            // InternalQVTimperative.g:5145:1: (lv_qualifiers_20_0= '!readonly' )
                    	            {
                    	            // InternalQVTimperative.g:5145:1: (lv_qualifiers_20_0= '!readonly' )
                    	            // InternalQVTimperative.g:5146:3: lv_qualifiers_20_0= '!readonly'
                    	            {
                    	            lv_qualifiers_20_0=(Token)match(input,71,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_20_0, grammarAccess.getReferenceCSAccess().getQualifiersReadonlyKeyword_6_1_0_7_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_20_0, "!readonly");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 9 :
                    	            // InternalQVTimperative.g:5160:6: ( (lv_qualifiers_21_0= 'resolve' ) )
                    	            {
                    	            // InternalQVTimperative.g:5160:6: ( (lv_qualifiers_21_0= 'resolve' ) )
                    	            // InternalQVTimperative.g:5161:1: (lv_qualifiers_21_0= 'resolve' )
                    	            {
                    	            // InternalQVTimperative.g:5161:1: (lv_qualifiers_21_0= 'resolve' )
                    	            // InternalQVTimperative.g:5162:3: lv_qualifiers_21_0= 'resolve'
                    	            {
                    	            lv_qualifiers_21_0=(Token)match(input,94,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_21_0, grammarAccess.getReferenceCSAccess().getQualifiersResolveKeyword_6_1_0_8_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_21_0, "resolve");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 10 :
                    	            // InternalQVTimperative.g:5176:6: ( (lv_qualifiers_22_0= '!resolve' ) )
                    	            {
                    	            // InternalQVTimperative.g:5176:6: ( (lv_qualifiers_22_0= '!resolve' ) )
                    	            // InternalQVTimperative.g:5177:1: (lv_qualifiers_22_0= '!resolve' )
                    	            {
                    	            // InternalQVTimperative.g:5177:1: (lv_qualifiers_22_0= '!resolve' )
                    	            // InternalQVTimperative.g:5178:3: lv_qualifiers_22_0= '!resolve'
                    	            {
                    	            lv_qualifiers_22_0=(Token)match(input,95,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_22_0, grammarAccess.getReferenceCSAccess().getQualifiersResolveKeyword_6_1_0_9_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_22_0, "!resolve");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 11 :
                    	            // InternalQVTimperative.g:5192:6: ( (lv_qualifiers_23_0= 'transient' ) )
                    	            {
                    	            // InternalQVTimperative.g:5192:6: ( (lv_qualifiers_23_0= 'transient' ) )
                    	            // InternalQVTimperative.g:5193:1: (lv_qualifiers_23_0= 'transient' )
                    	            {
                    	            // InternalQVTimperative.g:5193:1: (lv_qualifiers_23_0= 'transient' )
                    	            // InternalQVTimperative.g:5194:3: lv_qualifiers_23_0= 'transient'
                    	            {
                    	            lv_qualifiers_23_0=(Token)match(input,51,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_23_0, grammarAccess.getReferenceCSAccess().getQualifiersTransientKeyword_6_1_0_10_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_23_0, "transient");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 12 :
                    	            // InternalQVTimperative.g:5208:6: ( (lv_qualifiers_24_0= '!transient' ) )
                    	            {
                    	            // InternalQVTimperative.g:5208:6: ( (lv_qualifiers_24_0= '!transient' ) )
                    	            // InternalQVTimperative.g:5209:1: (lv_qualifiers_24_0= '!transient' )
                    	            {
                    	            // InternalQVTimperative.g:5209:1: (lv_qualifiers_24_0= '!transient' )
                    	            // InternalQVTimperative.g:5210:3: lv_qualifiers_24_0= '!transient'
                    	            {
                    	            lv_qualifiers_24_0=(Token)match(input,72,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_24_0, grammarAccess.getReferenceCSAccess().getQualifiersTransientKeyword_6_1_0_11_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_24_0, "!transient");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 13 :
                    	            // InternalQVTimperative.g:5224:6: ( (lv_qualifiers_25_0= 'unique' ) )
                    	            {
                    	            // InternalQVTimperative.g:5224:6: ( (lv_qualifiers_25_0= 'unique' ) )
                    	            // InternalQVTimperative.g:5225:1: (lv_qualifiers_25_0= 'unique' )
                    	            {
                    	            // InternalQVTimperative.g:5225:1: (lv_qualifiers_25_0= 'unique' )
                    	            // InternalQVTimperative.g:5226:3: lv_qualifiers_25_0= 'unique'
                    	            {
                    	            lv_qualifiers_25_0=(Token)match(input,73,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_25_0, grammarAccess.getReferenceCSAccess().getQualifiersUniqueKeyword_6_1_0_12_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_25_0, "unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 14 :
                    	            // InternalQVTimperative.g:5240:6: ( (lv_qualifiers_26_0= '!unique' ) )
                    	            {
                    	            // InternalQVTimperative.g:5240:6: ( (lv_qualifiers_26_0= '!unique' ) )
                    	            // InternalQVTimperative.g:5241:1: (lv_qualifiers_26_0= '!unique' )
                    	            {
                    	            // InternalQVTimperative.g:5241:1: (lv_qualifiers_26_0= '!unique' )
                    	            // InternalQVTimperative.g:5242:3: lv_qualifiers_26_0= '!unique'
                    	            {
                    	            lv_qualifiers_26_0=(Token)match(input,74,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_26_0, grammarAccess.getReferenceCSAccess().getQualifiersUniqueKeyword_6_1_0_13_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_26_0, "!unique");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 15 :
                    	            // InternalQVTimperative.g:5256:6: ( (lv_qualifiers_27_0= 'unsettable' ) )
                    	            {
                    	            // InternalQVTimperative.g:5256:6: ( (lv_qualifiers_27_0= 'unsettable' ) )
                    	            // InternalQVTimperative.g:5257:1: (lv_qualifiers_27_0= 'unsettable' )
                    	            {
                    	            // InternalQVTimperative.g:5257:1: (lv_qualifiers_27_0= 'unsettable' )
                    	            // InternalQVTimperative.g:5258:3: lv_qualifiers_27_0= 'unsettable'
                    	            {
                    	            lv_qualifiers_27_0=(Token)match(input,75,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_27_0, grammarAccess.getReferenceCSAccess().getQualifiersUnsettableKeyword_6_1_0_14_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_27_0, "unsettable");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 16 :
                    	            // InternalQVTimperative.g:5272:6: ( (lv_qualifiers_28_0= '!unsettable' ) )
                    	            {
                    	            // InternalQVTimperative.g:5272:6: ( (lv_qualifiers_28_0= '!unsettable' ) )
                    	            // InternalQVTimperative.g:5273:1: (lv_qualifiers_28_0= '!unsettable' )
                    	            {
                    	            // InternalQVTimperative.g:5273:1: (lv_qualifiers_28_0= '!unsettable' )
                    	            // InternalQVTimperative.g:5274:3: lv_qualifiers_28_0= '!unsettable'
                    	            {
                    	            lv_qualifiers_28_0=(Token)match(input,76,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_28_0, grammarAccess.getReferenceCSAccess().getQualifiersUnsettableKeyword_6_1_0_15_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_28_0, "!unsettable");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 17 :
                    	            // InternalQVTimperative.g:5288:6: ( (lv_qualifiers_29_0= 'volatile' ) )
                    	            {
                    	            // InternalQVTimperative.g:5288:6: ( (lv_qualifiers_29_0= 'volatile' ) )
                    	            // InternalQVTimperative.g:5289:1: (lv_qualifiers_29_0= 'volatile' )
                    	            {
                    	            // InternalQVTimperative.g:5289:1: (lv_qualifiers_29_0= 'volatile' )
                    	            // InternalQVTimperative.g:5290:3: lv_qualifiers_29_0= 'volatile'
                    	            {
                    	            lv_qualifiers_29_0=(Token)match(input,77,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_29_0, grammarAccess.getReferenceCSAccess().getQualifiersVolatileKeyword_6_1_0_16_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_29_0, "volatile");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 18 :
                    	            // InternalQVTimperative.g:5304:6: ( (lv_qualifiers_30_0= '!volatile' ) )
                    	            {
                    	            // InternalQVTimperative.g:5304:6: ( (lv_qualifiers_30_0= '!volatile' ) )
                    	            // InternalQVTimperative.g:5305:1: (lv_qualifiers_30_0= '!volatile' )
                    	            {
                    	            // InternalQVTimperative.g:5305:1: (lv_qualifiers_30_0= '!volatile' )
                    	            // InternalQVTimperative.g:5306:3: lv_qualifiers_30_0= '!volatile'
                    	            {
                    	            lv_qualifiers_30_0=(Token)match(input,78,FollowSets000.FOLLOW_98); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      newLeafNode(lv_qualifiers_30_0, grammarAccess.getReferenceCSAccess().getQualifiersVolatileKeyword_6_1_0_17_0());

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElement(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		addWithLastConsumed(current, "qualifiers", lv_qualifiers_30_0, "!volatile");

                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalQVTimperative.g:5319:3: (otherlv_31= ',' )?
                    	    int alt123=2;
                    	    int LA123_0 = input.LA(1);

                    	    if ( (LA123_0==18) ) {
                    	        alt123=1;
                    	    }
                    	    switch (alt123) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:5319:5: otherlv_31= ','
                    	            {
                    	            otherlv_31=(Token)match(input,18,FollowSets000.FOLLOW_99); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                  	newLeafNode(otherlv_31, grammarAccess.getReferenceCSAccess().getCommaKeyword_6_1_1());

                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt124 >= 1 ) break loop124;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(124, input);
                                throw eee;
                        }
                        cnt124++;
                    } while (true);

                    otherlv_32=(Token)match(input,42,FollowSets000.FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_32, grammarAccess.getReferenceCSAccess().getRightCurlyBracketKeyword_6_2());

                    }

                    }
                    break;

            }

            // InternalQVTimperative.g:5327:3: ( (otherlv_33= '{' ( (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' ) | (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' ) )* otherlv_44= '}' ) | otherlv_45= ';' )
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==41) ) {
                alt131=1;
            }
            else if ( (LA131_0==21) ) {
                alt131=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 131, 0, input);

                throw nvae;
            }
            switch (alt131) {
                case 1 :
                    // InternalQVTimperative.g:5327:4: (otherlv_33= '{' ( (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' ) | (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' ) )* otherlv_44= '}' )
                    {
                    // InternalQVTimperative.g:5327:4: (otherlv_33= '{' ( (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' ) | (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' ) )* otherlv_44= '}' )
                    // InternalQVTimperative.g:5327:6: otherlv_33= '{' ( (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' ) | (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' ) )* otherlv_44= '}'
                    {
                    otherlv_33=(Token)match(input,41,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_33, grammarAccess.getReferenceCSAccess().getLeftCurlyBracketKeyword_7_0_0());

                    }
                    // InternalQVTimperative.g:5331:1: ( (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' ) | (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' ) )*
                    loop130:
                    do {
                        int alt130=3;
                        int LA130_0 = input.LA(1);

                        if ( (LA130_0==79) ) {
                            alt130=1;
                        }
                        else if ( (LA130_0==80) ) {
                            alt130=2;
                        }


                        switch (alt130) {
                    	case 1 :
                    	    // InternalQVTimperative.g:5331:2: (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' )
                    	    {
                    	    // InternalQVTimperative.g:5331:2: (otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';' )
                    	    // InternalQVTimperative.g:5331:4: otherlv_34= 'initial' ( ruleUnrestrictedName )? otherlv_36= ':' ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )? otherlv_38= ';'
                    	    {
                    	    otherlv_34=(Token)match(input,79,FollowSets000.FOLLOW_69); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_34, grammarAccess.getReferenceCSAccess().getInitialKeyword_7_0_1_0_0());

                    	    }
                    	    // InternalQVTimperative.g:5335:1: ( ruleUnrestrictedName )?
                    	    int alt126=2;
                    	    int LA126_0 = input.LA(1);

                    	    if ( ((LA126_0>=RULE_SIMPLE_ID && LA126_0<=RULE_ESCAPED_ID)||LA126_0==17||LA126_0==19||(LA126_0>=22 && LA126_0<=23)||(LA126_0>=25 && LA126_0<=26)||(LA126_0>=28 && LA126_0<=31)||LA126_0==34||(LA126_0>=38 && LA126_0<=39)||(LA126_0>=43 && LA126_0<=49)||(LA126_0>=51 && LA126_0<=52)||(LA126_0>=55 && LA126_0<=57)||(LA126_0>=59 && LA126_0<=64)||LA126_0==66||LA126_0==68||LA126_0==70||LA126_0==73||LA126_0==75||LA126_0==77||(LA126_0>=79 && LA126_0<=83)||(LA126_0>=85 && LA126_0<=90)||LA126_0==92||LA126_0==94||(LA126_0>=96 && LA126_0<=99)) ) {
                    	        alt126=1;
                    	    }
                    	    switch (alt126) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:5336:2: ruleUnrestrictedName
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	  /* */

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	                      newCompositeNode(grammarAccess.getReferenceCSAccess().getUnrestrictedNameParserRuleCall_7_0_1_0_1());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_11);
                    	            ruleUnrestrictedName();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;

                    	    }

                    	    otherlv_36=(Token)match(input,24,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_36, grammarAccess.getReferenceCSAccess().getColonKeyword_7_0_1_0_2());

                    	    }
                    	    // InternalQVTimperative.g:5350:1: ( (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS ) )?
                    	    int alt127=2;
                    	    int LA127_0 = input.LA(1);

                    	    if ( ((LA127_0>=RULE_SINGLE_QUOTED_STRING && LA127_0<=RULE_ESCAPED_ID)||LA127_0==17||LA127_0==19||(LA127_0>=22 && LA127_0<=23)||(LA127_0>=25 && LA127_0<=26)||(LA127_0>=28 && LA127_0<=31)||LA127_0==34||(LA127_0>=37 && LA127_0<=39)||(LA127_0>=43 && LA127_0<=49)||(LA127_0>=51 && LA127_0<=53)||(LA127_0>=55 && LA127_0<=57)||(LA127_0>=59 && LA127_0<=64)||LA127_0==66||LA127_0==68||LA127_0==70||LA127_0==73||LA127_0==75||LA127_0==77||(LA127_0>=79 && LA127_0<=83)||(LA127_0>=85 && LA127_0<=90)||LA127_0==92||LA127_0==94||(LA127_0>=96 && LA127_0<=101)||(LA127_0>=116 && LA127_0<=130)||LA127_0==133||(LA127_0>=135 && LA127_0<=138)||LA127_0==144||(LA127_0>=149 && LA127_0<=150)) ) {
                    	        alt127=1;
                    	    }
                    	    switch (alt127) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:5351:1: (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS )
                    	            {
                    	            // InternalQVTimperative.g:5351:1: (lv_ownedDefaultExpressions_37_0= ruleSpecificationCS )
                    	            // InternalQVTimperative.g:5352:3: lv_ownedDefaultExpressions_37_0= ruleSpecificationCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	        newCompositeNode(grammarAccess.getReferenceCSAccess().getOwnedDefaultExpressionsSpecificationCSParserRuleCall_7_0_1_0_3_0());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_9);
                    	            lv_ownedDefaultExpressions_37_0=ruleSpecificationCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		add(
                    	                     			current,
                    	                     			"ownedDefaultExpressions",
                    	                      		lv_ownedDefaultExpressions_37_0,
                    	                      		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.SpecificationCS");
                    	              	        afterParserOrEnumRuleCall();

                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    otherlv_38=(Token)match(input,21,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_38, grammarAccess.getReferenceCSAccess().getSemicolonKeyword_7_0_1_0_4());

                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQVTimperative.g:5373:6: (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' )
                    	    {
                    	    // InternalQVTimperative.g:5373:6: (otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';' )
                    	    // InternalQVTimperative.g:5373:8: otherlv_39= 'derivation' ( ruleUnrestrictedName )? otherlv_41= ':' ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )? otherlv_43= ';'
                    	    {
                    	    otherlv_39=(Token)match(input,80,FollowSets000.FOLLOW_69); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_39, grammarAccess.getReferenceCSAccess().getDerivationKeyword_7_0_1_1_0());

                    	    }
                    	    // InternalQVTimperative.g:5377:1: ( ruleUnrestrictedName )?
                    	    int alt128=2;
                    	    int LA128_0 = input.LA(1);

                    	    if ( ((LA128_0>=RULE_SIMPLE_ID && LA128_0<=RULE_ESCAPED_ID)||LA128_0==17||LA128_0==19||(LA128_0>=22 && LA128_0<=23)||(LA128_0>=25 && LA128_0<=26)||(LA128_0>=28 && LA128_0<=31)||LA128_0==34||(LA128_0>=38 && LA128_0<=39)||(LA128_0>=43 && LA128_0<=49)||(LA128_0>=51 && LA128_0<=52)||(LA128_0>=55 && LA128_0<=57)||(LA128_0>=59 && LA128_0<=64)||LA128_0==66||LA128_0==68||LA128_0==70||LA128_0==73||LA128_0==75||LA128_0==77||(LA128_0>=79 && LA128_0<=83)||(LA128_0>=85 && LA128_0<=90)||LA128_0==92||LA128_0==94||(LA128_0>=96 && LA128_0<=99)) ) {
                    	        alt128=1;
                    	    }
                    	    switch (alt128) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:5378:2: ruleUnrestrictedName
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	  /* */

                    	            }
                    	            if ( state.backtracking==0 ) {

                    	                      newCompositeNode(grammarAccess.getReferenceCSAccess().getUnrestrictedNameParserRuleCall_7_0_1_1_1());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_11);
                    	            ruleUnrestrictedName();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	                      afterParserOrEnumRuleCall();

                    	            }

                    	            }
                    	            break;

                    	    }

                    	    otherlv_41=(Token)match(input,24,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_41, grammarAccess.getReferenceCSAccess().getColonKeyword_7_0_1_1_2());

                    	    }
                    	    // InternalQVTimperative.g:5392:1: ( (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS ) )?
                    	    int alt129=2;
                    	    int LA129_0 = input.LA(1);

                    	    if ( ((LA129_0>=RULE_SINGLE_QUOTED_STRING && LA129_0<=RULE_ESCAPED_ID)||LA129_0==17||LA129_0==19||(LA129_0>=22 && LA129_0<=23)||(LA129_0>=25 && LA129_0<=26)||(LA129_0>=28 && LA129_0<=31)||LA129_0==34||(LA129_0>=37 && LA129_0<=39)||(LA129_0>=43 && LA129_0<=49)||(LA129_0>=51 && LA129_0<=53)||(LA129_0>=55 && LA129_0<=57)||(LA129_0>=59 && LA129_0<=64)||LA129_0==66||LA129_0==68||LA129_0==70||LA129_0==73||LA129_0==75||LA129_0==77||(LA129_0>=79 && LA129_0<=83)||(LA129_0>=85 && LA129_0<=90)||LA129_0==92||LA129_0==94||(LA129_0>=96 && LA129_0<=101)||(LA129_0>=116 && LA129_0<=130)||LA129_0==133||(LA129_0>=135 && LA129_0<=138)||LA129_0==144||(LA129_0>=149 && LA129_0<=150)) ) {
                    	        alt129=1;
                    	    }
                    	    switch (alt129) {
                    	        case 1 :
                    	            // InternalQVTimperative.g:5393:1: (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS )
                    	            {
                    	            // InternalQVTimperative.g:5393:1: (lv_ownedDefaultExpressions_42_0= ruleSpecificationCS )
                    	            // InternalQVTimperative.g:5394:3: lv_ownedDefaultExpressions_42_0= ruleSpecificationCS
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              	        newCompositeNode(grammarAccess.getReferenceCSAccess().getOwnedDefaultExpressionsSpecificationCSParserRuleCall_7_0_1_1_3_0());

                    	            }
                    	            pushFollow(FollowSets000.FOLLOW_9);
                    	            lv_ownedDefaultExpressions_42_0=ruleSpecificationCS();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getReferenceCSRule());
                    	              	        }
                    	                     		add(
                    	                     			current,
                    	                     			"ownedDefaultExpressions",
                    	                      		lv_ownedDefaultExpressions_42_0,
                    	                      		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.SpecificationCS");
                    	              	        afterParserOrEnumRuleCall();

                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    otherlv_43=(Token)match(input,21,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_43, grammarAccess.getReferenceCSAccess().getSemicolonKeyword_7_0_1_1_4());

                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop130;
                        }
                    } while (true);

                    otherlv_44=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_44, grammarAccess.getReferenceCSAccess().getRightCurlyBracketKeyword_7_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:5419:7: otherlv_45= ';'
                    {
                    otherlv_45=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_45, grammarAccess.getReferenceCSAccess().getSemicolonKeyword_7_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceCS"


    // $ANTLR start "entryRuleSpecificationCS"
    // InternalQVTimperative.g:5431:1: entryRuleSpecificationCS returns [EObject current=null] : iv_ruleSpecificationCS= ruleSpecificationCS EOF ;
    public final EObject entryRuleSpecificationCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSpecificationCS = null;


        try {
            // InternalQVTimperative.g:5432:2: (iv_ruleSpecificationCS= ruleSpecificationCS EOF )
            // InternalQVTimperative.g:5433:2: iv_ruleSpecificationCS= ruleSpecificationCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSpecificationCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSpecificationCS=ruleSpecificationCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSpecificationCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSpecificationCS"


    // $ANTLR start "ruleSpecificationCS"
    // InternalQVTimperative.g:5440:1: ruleSpecificationCS returns [EObject current=null] : ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) | ( (lv_exprString_1_0= RULE_UNQUOTED_STRING ) ) ) ;
    public final EObject ruleSpecificationCS() throws RecognitionException {
        EObject current = null;

        Token lv_exprString_1_0=null;
        EObject lv_ownedExpression_0_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:5443:28: ( ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) | ( (lv_exprString_1_0= RULE_UNQUOTED_STRING ) ) ) )
            // InternalQVTimperative.g:5444:1: ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) | ( (lv_exprString_1_0= RULE_UNQUOTED_STRING ) ) )
            {
            // InternalQVTimperative.g:5444:1: ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) | ( (lv_exprString_1_0= RULE_UNQUOTED_STRING ) ) )
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==RULE_SINGLE_QUOTED_STRING||(LA132_0>=RULE_INT && LA132_0<=RULE_ESCAPED_ID)||LA132_0==17||LA132_0==19||(LA132_0>=22 && LA132_0<=23)||(LA132_0>=25 && LA132_0<=26)||(LA132_0>=28 && LA132_0<=31)||LA132_0==34||(LA132_0>=37 && LA132_0<=39)||(LA132_0>=43 && LA132_0<=49)||(LA132_0>=51 && LA132_0<=53)||(LA132_0>=55 && LA132_0<=57)||(LA132_0>=59 && LA132_0<=64)||LA132_0==66||LA132_0==68||LA132_0==70||LA132_0==73||LA132_0==75||LA132_0==77||(LA132_0>=79 && LA132_0<=83)||(LA132_0>=85 && LA132_0<=90)||LA132_0==92||LA132_0==94||(LA132_0>=96 && LA132_0<=101)||(LA132_0>=116 && LA132_0<=130)||LA132_0==133||(LA132_0>=135 && LA132_0<=138)||LA132_0==144||(LA132_0>=149 && LA132_0<=150)) ) {
                alt132=1;
            }
            else if ( (LA132_0==RULE_UNQUOTED_STRING) ) {
                alt132=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 132, 0, input);

                throw nvae;
            }
            switch (alt132) {
                case 1 :
                    // InternalQVTimperative.g:5444:2: ( (lv_ownedExpression_0_0= ruleExpCS ) )
                    {
                    // InternalQVTimperative.g:5444:2: ( (lv_ownedExpression_0_0= ruleExpCS ) )
                    // InternalQVTimperative.g:5445:1: (lv_ownedExpression_0_0= ruleExpCS )
                    {
                    // InternalQVTimperative.g:5445:1: (lv_ownedExpression_0_0= ruleExpCS )
                    // InternalQVTimperative.g:5446:3: lv_ownedExpression_0_0= ruleExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getSpecificationCSAccess().getOwnedExpressionExpCSParserRuleCall_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedExpression_0_0=ruleExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSpecificationCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedExpression",
                              		lv_ownedExpression_0_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:5463:6: ( (lv_exprString_1_0= RULE_UNQUOTED_STRING ) )
                    {
                    // InternalQVTimperative.g:5463:6: ( (lv_exprString_1_0= RULE_UNQUOTED_STRING ) )
                    // InternalQVTimperative.g:5464:1: (lv_exprString_1_0= RULE_UNQUOTED_STRING )
                    {
                    // InternalQVTimperative.g:5464:1: (lv_exprString_1_0= RULE_UNQUOTED_STRING )
                    // InternalQVTimperative.g:5465:3: lv_exprString_1_0= RULE_UNQUOTED_STRING
                    {
                    lv_exprString_1_0=(Token)match(input,RULE_UNQUOTED_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_exprString_1_0, grammarAccess.getSpecificationCSAccess().getExprStringUNQUOTED_STRINGTerminalRuleCall_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getSpecificationCSRule());
                      	        }
                             		setWithLastConsumed(
                             			current,
                             			"exprString",
                              		lv_exprString_1_0,
                              		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.UNQUOTED_STRING");

                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSpecificationCS"


    // $ANTLR start "entryRuleStructuredClassCS"
    // InternalQVTimperative.g:5489:1: entryRuleStructuredClassCS returns [EObject current=null] : iv_ruleStructuredClassCS= ruleStructuredClassCS EOF ;
    public final EObject entryRuleStructuredClassCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStructuredClassCS = null;


        try {
            // InternalQVTimperative.g:5490:2: (iv_ruleStructuredClassCS= ruleStructuredClassCS EOF )
            // InternalQVTimperative.g:5491:2: iv_ruleStructuredClassCS= ruleStructuredClassCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructuredClassCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStructuredClassCS=ruleStructuredClassCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructuredClassCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStructuredClassCS"


    // $ANTLR start "ruleStructuredClassCS"
    // InternalQVTimperative.g:5498:1: ruleStructuredClassCS returns [EObject current=null] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= 'extends' ( (lv_ownedSuperTypes_5_0= ruleTypedRefCS ) ) (otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) ) )* )? (otherlv_8= ':' ( (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_10= '{' ( (lv_isInterface_11_0= 'interface' ) )? otherlv_12= '}' )? ( (otherlv_13= '{' ( ( (lv_ownedOperations_14_0= ruleOperationCS ) ) | ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) ) )* otherlv_16= '}' ) | otherlv_17= ';' ) ) ;
    public final EObject ruleStructuredClassCS() throws RecognitionException {
        EObject current = null;

        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_instanceClassName_9_0=null;
        Token otherlv_10=null;
        Token lv_isInterface_11_0=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_ownedSignature_3_0 = null;

        EObject lv_ownedSuperTypes_5_0 = null;

        EObject lv_ownedSuperTypes_7_0 = null;

        EObject lv_ownedOperations_14_0 = null;

        EObject lv_ownedProperties_15_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:5501:28: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= 'extends' ( (lv_ownedSuperTypes_5_0= ruleTypedRefCS ) ) (otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) ) )* )? (otherlv_8= ':' ( (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_10= '{' ( (lv_isInterface_11_0= 'interface' ) )? otherlv_12= '}' )? ( (otherlv_13= '{' ( ( (lv_ownedOperations_14_0= ruleOperationCS ) ) | ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) ) )* otherlv_16= '}' ) | otherlv_17= ';' ) ) )
            // InternalQVTimperative.g:5502:1: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= 'extends' ( (lv_ownedSuperTypes_5_0= ruleTypedRefCS ) ) (otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) ) )* )? (otherlv_8= ':' ( (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_10= '{' ( (lv_isInterface_11_0= 'interface' ) )? otherlv_12= '}' )? ( (otherlv_13= '{' ( ( (lv_ownedOperations_14_0= ruleOperationCS ) ) | ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) ) )* otherlv_16= '}' ) | otherlv_17= ';' ) )
            {
            // InternalQVTimperative.g:5502:1: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= 'extends' ( (lv_ownedSuperTypes_5_0= ruleTypedRefCS ) ) (otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) ) )* )? (otherlv_8= ':' ( (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_10= '{' ( (lv_isInterface_11_0= 'interface' ) )? otherlv_12= '}' )? ( (otherlv_13= '{' ( ( (lv_ownedOperations_14_0= ruleOperationCS ) ) | ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) ) )* otherlv_16= '}' ) | otherlv_17= ';' ) )
            // InternalQVTimperative.g:5502:2: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'class' ( (lv_name_2_0= ruleUnrestrictedName ) ) ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )? (otherlv_4= 'extends' ( (lv_ownedSuperTypes_5_0= ruleTypedRefCS ) ) (otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) ) )* )? (otherlv_8= ':' ( (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING ) ) )? (otherlv_10= '{' ( (lv_isInterface_11_0= 'interface' ) )? otherlv_12= '}' )? ( (otherlv_13= '{' ( ( (lv_ownedOperations_14_0= ruleOperationCS ) ) | ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) ) )* otherlv_16= '}' ) | otherlv_17= ';' )
            {
            // InternalQVTimperative.g:5502:2: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt133=2;
            int LA133_0 = input.LA(1);

            if ( (LA133_0==96) ) {
                alt133=1;
            }
            switch (alt133) {
                case 1 :
                    // InternalQVTimperative.g:5503:1: (lv_isAbstract_0_0= 'abstract' )
                    {
                    // InternalQVTimperative.g:5503:1: (lv_isAbstract_0_0= 'abstract' )
                    // InternalQVTimperative.g:5504:3: lv_isAbstract_0_0= 'abstract'
                    {
                    lv_isAbstract_0_0=(Token)match(input,96,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isAbstract_0_0, grammarAccess.getStructuredClassCSAccess().getIsAbstractAbstractKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getStructuredClassCSRule());
                      	        }
                             		setWithLastConsumed(current, "isAbstract", true, "abstract");

                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,97,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getStructuredClassCSAccess().getClassKeyword_1());

            }
            // InternalQVTimperative.g:5521:1: ( (lv_name_2_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:5522:1: (lv_name_2_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:5522:1: (lv_name_2_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:5523:3: lv_name_2_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getStructuredClassCSAccess().getNameUnrestrictedNameParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_101);
            lv_name_2_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getStructuredClassCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_2_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:5539:2: ( (lv_ownedSignature_3_0= ruleTemplateSignatureCS ) )?
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==53) ) {
                alt134=1;
            }
            switch (alt134) {
                case 1 :
                    // InternalQVTimperative.g:5540:1: (lv_ownedSignature_3_0= ruleTemplateSignatureCS )
                    {
                    // InternalQVTimperative.g:5540:1: (lv_ownedSignature_3_0= ruleTemplateSignatureCS )
                    // InternalQVTimperative.g:5541:3: lv_ownedSignature_3_0= ruleTemplateSignatureCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getStructuredClassCSAccess().getOwnedSignatureTemplateSignatureCSParserRuleCall_3_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_102);
                    lv_ownedSignature_3_0=ruleTemplateSignatureCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getStructuredClassCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedSignature",
                              		lv_ownedSignature_3_0,
                              		"org.eclipse.ocl.xtext.base.Base.TemplateSignatureCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:5557:3: (otherlv_4= 'extends' ( (lv_ownedSuperTypes_5_0= ruleTypedRefCS ) ) (otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) ) )* )?
            int alt136=2;
            int LA136_0 = input.LA(1);

            if ( (LA136_0==98) ) {
                alt136=1;
            }
            switch (alt136) {
                case 1 :
                    // InternalQVTimperative.g:5557:5: otherlv_4= 'extends' ( (lv_ownedSuperTypes_5_0= ruleTypedRefCS ) ) (otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) ) )*
                    {
                    otherlv_4=(Token)match(input,98,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getStructuredClassCSAccess().getExtendsKeyword_4_0());

                    }
                    // InternalQVTimperative.g:5561:1: ( (lv_ownedSuperTypes_5_0= ruleTypedRefCS ) )
                    // InternalQVTimperative.g:5562:1: (lv_ownedSuperTypes_5_0= ruleTypedRefCS )
                    {
                    // InternalQVTimperative.g:5562:1: (lv_ownedSuperTypes_5_0= ruleTypedRefCS )
                    // InternalQVTimperative.g:5563:3: lv_ownedSuperTypes_5_0= ruleTypedRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getStructuredClassCSAccess().getOwnedSuperTypesTypedRefCSParserRuleCall_4_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_103);
                    lv_ownedSuperTypes_5_0=ruleTypedRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getStructuredClassCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedSuperTypes",
                              		lv_ownedSuperTypes_5_0,
                              		"org.eclipse.ocl.xtext.base.Base.TypedRefCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:5579:2: (otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) ) )*
                    loop135:
                    do {
                        int alt135=2;
                        int LA135_0 = input.LA(1);

                        if ( (LA135_0==18) ) {
                            alt135=1;
                        }


                        switch (alt135) {
                    	case 1 :
                    	    // InternalQVTimperative.g:5579:4: otherlv_6= ',' ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) )
                    	    {
                    	    otherlv_6=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_6, grammarAccess.getStructuredClassCSAccess().getCommaKeyword_4_2_0());

                    	    }
                    	    // InternalQVTimperative.g:5583:1: ( (lv_ownedSuperTypes_7_0= ruleTypedRefCS ) )
                    	    // InternalQVTimperative.g:5584:1: (lv_ownedSuperTypes_7_0= ruleTypedRefCS )
                    	    {
                    	    // InternalQVTimperative.g:5584:1: (lv_ownedSuperTypes_7_0= ruleTypedRefCS )
                    	    // InternalQVTimperative.g:5585:3: lv_ownedSuperTypes_7_0= ruleTypedRefCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getStructuredClassCSAccess().getOwnedSuperTypesTypedRefCSParserRuleCall_4_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_103);
                    	    lv_ownedSuperTypes_7_0=ruleTypedRefCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getStructuredClassCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedSuperTypes",
                    	              		lv_ownedSuperTypes_7_0,
                    	              		"org.eclipse.ocl.xtext.base.Base.TypedRefCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop135;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalQVTimperative.g:5601:6: (otherlv_8= ':' ( (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING ) ) )?
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==24) ) {
                alt137=1;
            }
            switch (alt137) {
                case 1 :
                    // InternalQVTimperative.g:5601:8: otherlv_8= ':' ( (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING ) )
                    {
                    otherlv_8=(Token)match(input,24,FollowSets000.FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getStructuredClassCSAccess().getColonKeyword_5_0());

                    }
                    // InternalQVTimperative.g:5605:1: ( (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING ) )
                    // InternalQVTimperative.g:5606:1: (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING )
                    {
                    // InternalQVTimperative.g:5606:1: (lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING )
                    // InternalQVTimperative.g:5607:3: lv_instanceClassName_9_0= RULE_SINGLE_QUOTED_STRING
                    {
                    lv_instanceClassName_9_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_instanceClassName_9_0, grammarAccess.getStructuredClassCSAccess().getInstanceClassNameSINGLE_QUOTED_STRINGTerminalRuleCall_5_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getStructuredClassCSRule());
                      	        }
                             		setWithLastConsumed(
                             			current,
                             			"instanceClassName",
                              		lv_instanceClassName_9_0,
                              		"org.eclipse.ocl.xtext.base.Base.SINGLE_QUOTED_STRING");

                    }

                    }


                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:5623:4: (otherlv_10= '{' ( (lv_isInterface_11_0= 'interface' ) )? otherlv_12= '}' )?
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==41) ) {
                int LA139_1 = input.LA(2);

                if ( (LA139_1==99) ) {
                    alt139=1;
                }
                else if ( (LA139_1==42) ) {
                    int LA139_4 = input.LA(3);

                    if ( (LA139_4==21||LA139_4==41) ) {
                        alt139=1;
                    }
                }
            }
            switch (alt139) {
                case 1 :
                    // InternalQVTimperative.g:5623:6: otherlv_10= '{' ( (lv_isInterface_11_0= 'interface' ) )? otherlv_12= '}'
                    {
                    otherlv_10=(Token)match(input,41,FollowSets000.FOLLOW_104); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getStructuredClassCSAccess().getLeftCurlyBracketKeyword_6_0());

                    }
                    // InternalQVTimperative.g:5627:1: ( (lv_isInterface_11_0= 'interface' ) )?
                    int alt138=2;
                    int LA138_0 = input.LA(1);

                    if ( (LA138_0==99) ) {
                        alt138=1;
                    }
                    switch (alt138) {
                        case 1 :
                            // InternalQVTimperative.g:5628:1: (lv_isInterface_11_0= 'interface' )
                            {
                            // InternalQVTimperative.g:5628:1: (lv_isInterface_11_0= 'interface' )
                            // InternalQVTimperative.g:5629:3: lv_isInterface_11_0= 'interface'
                            {
                            lv_isInterface_11_0=(Token)match(input,99,FollowSets000.FOLLOW_52); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_isInterface_11_0, grammarAccess.getStructuredClassCSAccess().getIsInterfaceInterfaceKeyword_6_1_0());

                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getStructuredClassCSRule());
                              	        }
                                     		setWithLastConsumed(current, "isInterface", true, "interface");

                            }

                            }


                            }
                            break;

                    }

                    otherlv_12=(Token)match(input,42,FollowSets000.FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getStructuredClassCSAccess().getRightCurlyBracketKeyword_6_2());

                    }

                    }
                    break;

            }

            // InternalQVTimperative.g:5646:3: ( (otherlv_13= '{' ( ( (lv_ownedOperations_14_0= ruleOperationCS ) ) | ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) ) )* otherlv_16= '}' ) | otherlv_17= ';' )
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==41) ) {
                alt141=1;
            }
            else if ( (LA141_0==21) ) {
                alt141=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 141, 0, input);

                throw nvae;
            }
            switch (alt141) {
                case 1 :
                    // InternalQVTimperative.g:5646:4: (otherlv_13= '{' ( ( (lv_ownedOperations_14_0= ruleOperationCS ) ) | ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) ) )* otherlv_16= '}' )
                    {
                    // InternalQVTimperative.g:5646:4: (otherlv_13= '{' ( ( (lv_ownedOperations_14_0= ruleOperationCS ) ) | ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) ) )* otherlv_16= '}' )
                    // InternalQVTimperative.g:5646:6: otherlv_13= '{' ( ( (lv_ownedOperations_14_0= ruleOperationCS ) ) | ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) ) )* otherlv_16= '}'
                    {
                    otherlv_13=(Token)match(input,41,FollowSets000.FOLLOW_105); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getStructuredClassCSAccess().getLeftCurlyBracketKeyword_7_0_0());

                    }
                    // InternalQVTimperative.g:5650:1: ( ( (lv_ownedOperations_14_0= ruleOperationCS ) ) | ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) ) )*
                    loop140:
                    do {
                        int alt140=3;
                        switch ( input.LA(1) ) {
                        case 61:
                            {
                            switch ( input.LA(2) ) {
                            case 62:
                                {
                                int LA140_6 = input.LA(3);

                                if ( (LA140_6==87) ) {
                                    alt140=1;
                                }
                                else if ( (LA140_6==63||LA140_6==90) ) {
                                    alt140=2;
                                }


                                }
                                break;
                            case 63:
                            case 90:
                                {
                                alt140=2;
                                }
                                break;
                            case 87:
                                {
                                alt140=1;
                                }
                                break;

                            }

                            }
                            break;
                        case 62:
                            {
                            switch ( input.LA(2) ) {
                            case 61:
                                {
                                int LA140_7 = input.LA(3);

                                if ( (LA140_7==63||LA140_7==90) ) {
                                    alt140=2;
                                }
                                else if ( (LA140_7==87) ) {
                                    alt140=1;
                                }


                                }
                                break;
                            case 87:
                                {
                                alt140=1;
                                }
                                break;
                            case 63:
                            case 90:
                                {
                                alt140=2;
                                }
                                break;

                            }

                            }
                            break;
                        case 87:
                            {
                            alt140=1;
                            }
                            break;
                        case 63:
                        case 90:
                            {
                            alt140=2;
                            }
                            break;

                        }

                        switch (alt140) {
                    	case 1 :
                    	    // InternalQVTimperative.g:5650:2: ( (lv_ownedOperations_14_0= ruleOperationCS ) )
                    	    {
                    	    // InternalQVTimperative.g:5650:2: ( (lv_ownedOperations_14_0= ruleOperationCS ) )
                    	    // InternalQVTimperative.g:5651:1: (lv_ownedOperations_14_0= ruleOperationCS )
                    	    {
                    	    // InternalQVTimperative.g:5651:1: (lv_ownedOperations_14_0= ruleOperationCS )
                    	    // InternalQVTimperative.g:5652:3: lv_ownedOperations_14_0= ruleOperationCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getStructuredClassCSAccess().getOwnedOperationsOperationCSParserRuleCall_7_0_1_0_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_105);
                    	    lv_ownedOperations_14_0=ruleOperationCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getStructuredClassCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedOperations",
                    	              		lv_ownedOperations_14_0,
                    	              		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.OperationCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalQVTimperative.g:5669:6: ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) )
                    	    {
                    	    // InternalQVTimperative.g:5669:6: ( (lv_ownedProperties_15_0= ruleStructuralFeatureCS ) )
                    	    // InternalQVTimperative.g:5670:1: (lv_ownedProperties_15_0= ruleStructuralFeatureCS )
                    	    {
                    	    // InternalQVTimperative.g:5670:1: (lv_ownedProperties_15_0= ruleStructuralFeatureCS )
                    	    // InternalQVTimperative.g:5671:3: lv_ownedProperties_15_0= ruleStructuralFeatureCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getStructuredClassCSAccess().getOwnedPropertiesStructuralFeatureCSParserRuleCall_7_0_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_105);
                    	    lv_ownedProperties_15_0=ruleStructuralFeatureCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getStructuredClassCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedProperties",
                    	              		lv_ownedProperties_15_0,
                    	              		"org.eclipse.qvtd.xtext.qvtbase.QVTbase.StructuralFeatureCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop140;
                        }
                    } while (true);

                    otherlv_16=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_16, grammarAccess.getStructuredClassCSAccess().getRightCurlyBracketKeyword_7_0_2());

                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:5692:7: otherlv_17= ';'
                    {
                    otherlv_17=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_17, grammarAccess.getStructuredClassCSAccess().getSemicolonKeyword_7_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructuredClassCS"


    // $ANTLR start "entryRuleTypedMultiplicityRefCS"
    // InternalQVTimperative.g:5704:1: entryRuleTypedMultiplicityRefCS returns [EObject current=null] : iv_ruleTypedMultiplicityRefCS= ruleTypedMultiplicityRefCS EOF ;
    public final EObject entryRuleTypedMultiplicityRefCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypedMultiplicityRefCS = null;


        try {
            // InternalQVTimperative.g:5705:2: (iv_ruleTypedMultiplicityRefCS= ruleTypedMultiplicityRefCS EOF )
            // InternalQVTimperative.g:5706:2: iv_ruleTypedMultiplicityRefCS= ruleTypedMultiplicityRefCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypedMultiplicityRefCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypedMultiplicityRefCS=ruleTypedMultiplicityRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypedMultiplicityRefCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypedMultiplicityRefCS"


    // $ANTLR start "ruleTypedMultiplicityRefCS"
    // InternalQVTimperative.g:5713:1: ruleTypedMultiplicityRefCS returns [EObject current=null] : (this_TypedRefCS_0= ruleTypedRefCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? ) ;
    public final EObject ruleTypedMultiplicityRefCS() throws RecognitionException {
        EObject current = null;

        EObject this_TypedRefCS_0 = null;

        EObject lv_ownedMultiplicity_1_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:5716:28: ( (this_TypedRefCS_0= ruleTypedRefCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? ) )
            // InternalQVTimperative.g:5717:1: (this_TypedRefCS_0= ruleTypedRefCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? )
            {
            // InternalQVTimperative.g:5717:1: (this_TypedRefCS_0= ruleTypedRefCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? )
            // InternalQVTimperative.g:5718:2: this_TypedRefCS_0= ruleTypedRefCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )?
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getTypedMultiplicityRefCSAccess().getTypedRefCSParserRuleCall_0());

            }
            pushFollow(FollowSets000.FOLLOW_106);
            this_TypedRefCS_0=ruleTypedRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_TypedRefCS_0;
                      afterParserOrEnumRuleCall();

            }
            // InternalQVTimperative.g:5729:1: ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )?
            int alt142=2;
            int LA142_0 = input.LA(1);

            if ( (LA142_0==141) ) {
                alt142=1;
            }
            switch (alt142) {
                case 1 :
                    // InternalQVTimperative.g:5730:1: (lv_ownedMultiplicity_1_0= ruleMultiplicityCS )
                    {
                    // InternalQVTimperative.g:5730:1: (lv_ownedMultiplicity_1_0= ruleMultiplicityCS )
                    // InternalQVTimperative.g:5731:3: lv_ownedMultiplicity_1_0= ruleMultiplicityCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTypedMultiplicityRefCSAccess().getOwnedMultiplicityMultiplicityCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedMultiplicity_1_0=ruleMultiplicityCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypedMultiplicityRefCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedMultiplicity",
                              		lv_ownedMultiplicity_1_0,
                              		"org.eclipse.ocl.xtext.base.Base.MultiplicityCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypedMultiplicityRefCS"


    // $ANTLR start "entryRuleStructuralFeatureCS"
    // InternalQVTimperative.g:5755:1: entryRuleStructuralFeatureCS returns [EObject current=null] : iv_ruleStructuralFeatureCS= ruleStructuralFeatureCS EOF ;
    public final EObject entryRuleStructuralFeatureCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStructuralFeatureCS = null;


        try {
            // InternalQVTimperative.g:5756:2: (iv_ruleStructuralFeatureCS= ruleStructuralFeatureCS EOF )
            // InternalQVTimperative.g:5757:2: iv_ruleStructuralFeatureCS= ruleStructuralFeatureCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructuralFeatureCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStructuralFeatureCS=ruleStructuralFeatureCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructuralFeatureCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStructuralFeatureCS"


    // $ANTLR start "ruleStructuralFeatureCS"
    // InternalQVTimperative.g:5764:1: ruleStructuralFeatureCS returns [EObject current=null] : (this_AttributeCS_0= ruleAttributeCS | this_ReferenceCS_1= ruleReferenceCS ) ;
    public final EObject ruleStructuralFeatureCS() throws RecognitionException {
        EObject current = null;

        EObject this_AttributeCS_0 = null;

        EObject this_ReferenceCS_1 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:5767:28: ( (this_AttributeCS_0= ruleAttributeCS | this_ReferenceCS_1= ruleReferenceCS ) )
            // InternalQVTimperative.g:5768:1: (this_AttributeCS_0= ruleAttributeCS | this_ReferenceCS_1= ruleReferenceCS )
            {
            // InternalQVTimperative.g:5768:1: (this_AttributeCS_0= ruleAttributeCS | this_ReferenceCS_1= ruleReferenceCS )
            int alt143=2;
            switch ( input.LA(1) ) {
            case 61:
                {
                switch ( input.LA(2) ) {
                case 62:
                    {
                    int LA143_5 = input.LA(3);

                    if ( (LA143_5==90) ) {
                        alt143=2;
                    }
                    else if ( (LA143_5==63) ) {
                        alt143=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 143, 5, input);

                        throw nvae;
                    }
                    }
                    break;
                case 90:
                    {
                    alt143=2;
                    }
                    break;
                case 63:
                    {
                    alt143=1;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 143, 1, input);

                    throw nvae;
                }

                }
                break;
            case 62:
                {
                switch ( input.LA(2) ) {
                case 61:
                    {
                    int LA143_6 = input.LA(3);

                    if ( (LA143_6==63) ) {
                        alt143=1;
                    }
                    else if ( (LA143_6==90) ) {
                        alt143=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 143, 6, input);

                        throw nvae;
                    }
                    }
                    break;
                case 63:
                    {
                    alt143=1;
                    }
                    break;
                case 90:
                    {
                    alt143=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 143, 2, input);

                    throw nvae;
                }

                }
                break;
            case 63:
                {
                alt143=1;
                }
                break;
            case 90:
                {
                alt143=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 143, 0, input);

                throw nvae;
            }

            switch (alt143) {
                case 1 :
                    // InternalQVTimperative.g:5769:2: this_AttributeCS_0= ruleAttributeCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getStructuralFeatureCSAccess().getAttributeCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AttributeCS_0=ruleAttributeCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AttributeCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:5782:2: this_ReferenceCS_1= ruleReferenceCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getStructuralFeatureCSAccess().getReferenceCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceCS_1=ruleReferenceCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ReferenceCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructuralFeatureCS"


    // $ANTLR start "entryRuleEnumerationLiteralName"
    // InternalQVTimperative.g:5801:1: entryRuleEnumerationLiteralName returns [String current=null] : iv_ruleEnumerationLiteralName= ruleEnumerationLiteralName EOF ;
    public final String entryRuleEnumerationLiteralName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEnumerationLiteralName = null;


        try {
            // InternalQVTimperative.g:5802:2: (iv_ruleEnumerationLiteralName= ruleEnumerationLiteralName EOF )
            // InternalQVTimperative.g:5803:2: iv_ruleEnumerationLiteralName= ruleEnumerationLiteralName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumerationLiteralNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEnumerationLiteralName=ruleEnumerationLiteralName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumerationLiteralName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumerationLiteralName"


    // $ANTLR start "ruleEnumerationLiteralName"
    // InternalQVTimperative.g:5810:1: ruleEnumerationLiteralName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_EssentialOCLUnrestrictedName_0= ruleEssentialOCLUnrestrictedName ;
    public final AntlrDatatypeRuleToken ruleEnumerationLiteralName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_EssentialOCLUnrestrictedName_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:5813:28: (this_EssentialOCLUnrestrictedName_0= ruleEssentialOCLUnrestrictedName )
            // InternalQVTimperative.g:5815:5: this_EssentialOCLUnrestrictedName_0= ruleEssentialOCLUnrestrictedName
            {
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getEnumerationLiteralNameAccess().getEssentialOCLUnrestrictedNameParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_EssentialOCLUnrestrictedName_0=ruleEssentialOCLUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_EssentialOCLUnrestrictedName_0);

            }
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumerationLiteralName"


    // $ANTLR start "entryRuleQVTbaseUnrestrictedName"
    // InternalQVTimperative.g:5833:1: entryRuleQVTbaseUnrestrictedName returns [String current=null] : iv_ruleQVTbaseUnrestrictedName= ruleQVTbaseUnrestrictedName EOF ;
    public final String entryRuleQVTbaseUnrestrictedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQVTbaseUnrestrictedName = null;


        try {
            // InternalQVTimperative.g:5834:2: (iv_ruleQVTbaseUnrestrictedName= ruleQVTbaseUnrestrictedName EOF )
            // InternalQVTimperative.g:5835:2: iv_ruleQVTbaseUnrestrictedName= ruleQVTbaseUnrestrictedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQVTbaseUnrestrictedNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQVTbaseUnrestrictedName=ruleQVTbaseUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQVTbaseUnrestrictedName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQVTbaseUnrestrictedName"


    // $ANTLR start "ruleQVTbaseUnrestrictedName"
    // InternalQVTimperative.g:5842:1: ruleQVTbaseUnrestrictedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'abstract' | kw= 'attribute' | kw= 'body' | kw= 'class' | kw= 'composes' | kw= 'datatype' | kw= 'definition' | kw= 'derived' | kw= 'derivation' | kw= 'enum' | kw= 'extends' | kw= 'id' | kw= 'initial' | kw= 'interface' | kw= 'literal' | kw= 'operation' | kw= 'ordered' | kw= 'primitive' | kw= 'property' | kw= 'readonly' | kw= 'resolve' | kw= 'serializable' | kw= 'static' | kw= 'throws' | kw= 'transient' | kw= 'unique' | kw= 'unsettable' | kw= 'volatile' ) ;
    public final AntlrDatatypeRuleToken ruleQVTbaseUnrestrictedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule();

        try {
            // InternalQVTimperative.g:5845:28: ( (kw= 'abstract' | kw= 'attribute' | kw= 'body' | kw= 'class' | kw= 'composes' | kw= 'datatype' | kw= 'definition' | kw= 'derived' | kw= 'derivation' | kw= 'enum' | kw= 'extends' | kw= 'id' | kw= 'initial' | kw= 'interface' | kw= 'literal' | kw= 'operation' | kw= 'ordered' | kw= 'primitive' | kw= 'property' | kw= 'readonly' | kw= 'resolve' | kw= 'serializable' | kw= 'static' | kw= 'throws' | kw= 'transient' | kw= 'unique' | kw= 'unsettable' | kw= 'volatile' ) )
            // InternalQVTimperative.g:5846:1: (kw= 'abstract' | kw= 'attribute' | kw= 'body' | kw= 'class' | kw= 'composes' | kw= 'datatype' | kw= 'definition' | kw= 'derived' | kw= 'derivation' | kw= 'enum' | kw= 'extends' | kw= 'id' | kw= 'initial' | kw= 'interface' | kw= 'literal' | kw= 'operation' | kw= 'ordered' | kw= 'primitive' | kw= 'property' | kw= 'readonly' | kw= 'resolve' | kw= 'serializable' | kw= 'static' | kw= 'throws' | kw= 'transient' | kw= 'unique' | kw= 'unsettable' | kw= 'volatile' )
            {
            // InternalQVTimperative.g:5846:1: (kw= 'abstract' | kw= 'attribute' | kw= 'body' | kw= 'class' | kw= 'composes' | kw= 'datatype' | kw= 'definition' | kw= 'derived' | kw= 'derivation' | kw= 'enum' | kw= 'extends' | kw= 'id' | kw= 'initial' | kw= 'interface' | kw= 'literal' | kw= 'operation' | kw= 'ordered' | kw= 'primitive' | kw= 'property' | kw= 'readonly' | kw= 'resolve' | kw= 'serializable' | kw= 'static' | kw= 'throws' | kw= 'transient' | kw= 'unique' | kw= 'unsettable' | kw= 'volatile' )
            int alt144=28;
            switch ( input.LA(1) ) {
            case 96:
                {
                alt144=1;
                }
                break;
            case 63:
                {
                alt144=2;
                }
                break;
            case 89:
                {
                alt144=3;
                }
                break;
            case 97:
                {
                alt144=4;
                }
                break;
            case 92:
                {
                alt144=5;
                }
                break;
            case 82:
                {
                alt144=6;
                }
                break;
            case 62:
                {
                alt144=7;
                }
                break;
            case 64:
                {
                alt144=8;
                }
                break;
            case 80:
                {
                alt144=9;
                }
                break;
            case 85:
                {
                alt144=10;
                }
                break;
            case 98:
                {
                alt144=11;
                }
                break;
            case 66:
                {
                alt144=12;
                }
                break;
            case 79:
                {
                alt144=13;
                }
                break;
            case 99:
                {
                alt144=14;
                }
                break;
            case 86:
                {
                alt144=15;
                }
                break;
            case 87:
                {
                alt144=16;
                }
                break;
            case 68:
                {
                alt144=17;
                }
                break;
            case 81:
                {
                alt144=18;
                }
                break;
            case 90:
                {
                alt144=19;
                }
                break;
            case 70:
                {
                alt144=20;
                }
                break;
            case 94:
                {
                alt144=21;
                }
                break;
            case 83:
                {
                alt144=22;
                }
                break;
            case 61:
                {
                alt144=23;
                }
                break;
            case 88:
                {
                alt144=24;
                }
                break;
            case 51:
                {
                alt144=25;
                }
                break;
            case 73:
                {
                alt144=26;
                }
                break;
            case 75:
                {
                alt144=27;
                }
                break;
            case 77:
                {
                alt144=28;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 144, 0, input);

                throw nvae;
            }

            switch (alt144) {
                case 1 :
                    // InternalQVTimperative.g:5847:2: kw= 'abstract'
                    {
                    kw=(Token)match(input,96,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getAbstractKeyword_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:5854:2: kw= 'attribute'
                    {
                    kw=(Token)match(input,63,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getAttributeKeyword_1());

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:5861:2: kw= 'body'
                    {
                    kw=(Token)match(input,89,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getBodyKeyword_2());

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:5868:2: kw= 'class'
                    {
                    kw=(Token)match(input,97,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getClassKeyword_3());

                    }

                    }
                    break;
                case 5 :
                    // InternalQVTimperative.g:5875:2: kw= 'composes'
                    {
                    kw=(Token)match(input,92,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getComposesKeyword_4());

                    }

                    }
                    break;
                case 6 :
                    // InternalQVTimperative.g:5882:2: kw= 'datatype'
                    {
                    kw=(Token)match(input,82,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getDatatypeKeyword_5());

                    }

                    }
                    break;
                case 7 :
                    // InternalQVTimperative.g:5889:2: kw= 'definition'
                    {
                    kw=(Token)match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getDefinitionKeyword_6());

                    }

                    }
                    break;
                case 8 :
                    // InternalQVTimperative.g:5896:2: kw= 'derived'
                    {
                    kw=(Token)match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getDerivedKeyword_7());

                    }

                    }
                    break;
                case 9 :
                    // InternalQVTimperative.g:5903:2: kw= 'derivation'
                    {
                    kw=(Token)match(input,80,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getDerivationKeyword_8());

                    }

                    }
                    break;
                case 10 :
                    // InternalQVTimperative.g:5910:2: kw= 'enum'
                    {
                    kw=(Token)match(input,85,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getEnumKeyword_9());

                    }

                    }
                    break;
                case 11 :
                    // InternalQVTimperative.g:5917:2: kw= 'extends'
                    {
                    kw=(Token)match(input,98,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getExtendsKeyword_10());

                    }

                    }
                    break;
                case 12 :
                    // InternalQVTimperative.g:5924:2: kw= 'id'
                    {
                    kw=(Token)match(input,66,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getIdKeyword_11());

                    }

                    }
                    break;
                case 13 :
                    // InternalQVTimperative.g:5931:2: kw= 'initial'
                    {
                    kw=(Token)match(input,79,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getInitialKeyword_12());

                    }

                    }
                    break;
                case 14 :
                    // InternalQVTimperative.g:5938:2: kw= 'interface'
                    {
                    kw=(Token)match(input,99,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getInterfaceKeyword_13());

                    }

                    }
                    break;
                case 15 :
                    // InternalQVTimperative.g:5945:2: kw= 'literal'
                    {
                    kw=(Token)match(input,86,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getLiteralKeyword_14());

                    }

                    }
                    break;
                case 16 :
                    // InternalQVTimperative.g:5952:2: kw= 'operation'
                    {
                    kw=(Token)match(input,87,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getOperationKeyword_15());

                    }

                    }
                    break;
                case 17 :
                    // InternalQVTimperative.g:5959:2: kw= 'ordered'
                    {
                    kw=(Token)match(input,68,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getOrderedKeyword_16());

                    }

                    }
                    break;
                case 18 :
                    // InternalQVTimperative.g:5966:2: kw= 'primitive'
                    {
                    kw=(Token)match(input,81,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getPrimitiveKeyword_17());

                    }

                    }
                    break;
                case 19 :
                    // InternalQVTimperative.g:5973:2: kw= 'property'
                    {
                    kw=(Token)match(input,90,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getPropertyKeyword_18());

                    }

                    }
                    break;
                case 20 :
                    // InternalQVTimperative.g:5980:2: kw= 'readonly'
                    {
                    kw=(Token)match(input,70,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getReadonlyKeyword_19());

                    }

                    }
                    break;
                case 21 :
                    // InternalQVTimperative.g:5987:2: kw= 'resolve'
                    {
                    kw=(Token)match(input,94,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getResolveKeyword_20());

                    }

                    }
                    break;
                case 22 :
                    // InternalQVTimperative.g:5994:2: kw= 'serializable'
                    {
                    kw=(Token)match(input,83,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getSerializableKeyword_21());

                    }

                    }
                    break;
                case 23 :
                    // InternalQVTimperative.g:6001:2: kw= 'static'
                    {
                    kw=(Token)match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getStaticKeyword_22());

                    }

                    }
                    break;
                case 24 :
                    // InternalQVTimperative.g:6008:2: kw= 'throws'
                    {
                    kw=(Token)match(input,88,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getThrowsKeyword_23());

                    }

                    }
                    break;
                case 25 :
                    // InternalQVTimperative.g:6015:2: kw= 'transient'
                    {
                    kw=(Token)match(input,51,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getTransientKeyword_24());

                    }

                    }
                    break;
                case 26 :
                    // InternalQVTimperative.g:6022:2: kw= 'unique'
                    {
                    kw=(Token)match(input,73,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getUniqueKeyword_25());

                    }

                    }
                    break;
                case 27 :
                    // InternalQVTimperative.g:6029:2: kw= 'unsettable'
                    {
                    kw=(Token)match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getUnsettableKeyword_26());

                    }

                    }
                    break;
                case 28 :
                    // InternalQVTimperative.g:6036:2: kw= 'volatile'
                    {
                    kw=(Token)match(input,77,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQVTbaseUnrestrictedNameAccess().getVolatileKeyword_27());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQVTbaseUnrestrictedName"


    // $ANTLR start "entryRuleSIGNED"
    // InternalQVTimperative.g:6049:1: entryRuleSIGNED returns [String current=null] : iv_ruleSIGNED= ruleSIGNED EOF ;
    public final String entryRuleSIGNED() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleSIGNED = null;


        try {
            // InternalQVTimperative.g:6050:2: (iv_ruleSIGNED= ruleSIGNED EOF )
            // InternalQVTimperative.g:6051:2: iv_ruleSIGNED= ruleSIGNED EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSIGNEDRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSIGNED=ruleSIGNED();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSIGNED.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSIGNED"


    // $ANTLR start "ruleSIGNED"
    // InternalQVTimperative.g:6058:1: ruleSIGNED returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '-' )? this_INT_1= RULE_INT ) ;
    public final AntlrDatatypeRuleToken ruleSIGNED() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_1=null;

         enterRule();

        try {
            // InternalQVTimperative.g:6061:28: ( ( (kw= '-' )? this_INT_1= RULE_INT ) )
            // InternalQVTimperative.g:6062:1: ( (kw= '-' )? this_INT_1= RULE_INT )
            {
            // InternalQVTimperative.g:6062:1: ( (kw= '-' )? this_INT_1= RULE_INT )
            // InternalQVTimperative.g:6062:2: (kw= '-' )? this_INT_1= RULE_INT
            {
            // InternalQVTimperative.g:6062:2: (kw= '-' )?
            int alt145=2;
            int LA145_0 = input.LA(1);

            if ( (LA145_0==100) ) {
                alt145=1;
            }
            switch (alt145) {
                case 1 :
                    // InternalQVTimperative.g:6063:2: kw= '-'
                    {
                    kw=(Token)match(input,100,FollowSets000.FOLLOW_107); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getSIGNEDAccess().getHyphenMinusKeyword_0());

                    }

                    }
                    break;

            }

            this_INT_1=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_INT_1);

            }
            if ( state.backtracking==0 ) {

                  newLeafNode(this_INT_1, grammarAccess.getSIGNEDAccess().getINTTerminalRuleCall_1());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSIGNED"


    // $ANTLR start "entryRuleEssentialOCLUnaryOperatorName"
    // InternalQVTimperative.g:6087:1: entryRuleEssentialOCLUnaryOperatorName returns [String current=null] : iv_ruleEssentialOCLUnaryOperatorName= ruleEssentialOCLUnaryOperatorName EOF ;
    public final String entryRuleEssentialOCLUnaryOperatorName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEssentialOCLUnaryOperatorName = null;


        try {
            // InternalQVTimperative.g:6088:2: (iv_ruleEssentialOCLUnaryOperatorName= ruleEssentialOCLUnaryOperatorName EOF )
            // InternalQVTimperative.g:6089:2: iv_ruleEssentialOCLUnaryOperatorName= ruleEssentialOCLUnaryOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEssentialOCLUnaryOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEssentialOCLUnaryOperatorName=ruleEssentialOCLUnaryOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEssentialOCLUnaryOperatorName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEssentialOCLUnaryOperatorName"


    // $ANTLR start "ruleEssentialOCLUnaryOperatorName"
    // InternalQVTimperative.g:6096:1: ruleEssentialOCLUnaryOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '-' | kw= 'not' ) ;
    public final AntlrDatatypeRuleToken ruleEssentialOCLUnaryOperatorName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule();

        try {
            // InternalQVTimperative.g:6099:28: ( (kw= '-' | kw= 'not' ) )
            // InternalQVTimperative.g:6100:1: (kw= '-' | kw= 'not' )
            {
            // InternalQVTimperative.g:6100:1: (kw= '-' | kw= 'not' )
            int alt146=2;
            int LA146_0 = input.LA(1);

            if ( (LA146_0==100) ) {
                alt146=1;
            }
            else if ( (LA146_0==101) ) {
                alt146=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 146, 0, input);

                throw nvae;
            }
            switch (alt146) {
                case 1 :
                    // InternalQVTimperative.g:6101:2: kw= '-'
                    {
                    kw=(Token)match(input,100,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLUnaryOperatorNameAccess().getHyphenMinusKeyword_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:6108:2: kw= 'not'
                    {
                    kw=(Token)match(input,101,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLUnaryOperatorNameAccess().getNotKeyword_1());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEssentialOCLUnaryOperatorName"


    // $ANTLR start "entryRuleEssentialOCLInfixOperatorName"
    // InternalQVTimperative.g:6121:1: entryRuleEssentialOCLInfixOperatorName returns [String current=null] : iv_ruleEssentialOCLInfixOperatorName= ruleEssentialOCLInfixOperatorName EOF ;
    public final String entryRuleEssentialOCLInfixOperatorName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEssentialOCLInfixOperatorName = null;


        try {
            // InternalQVTimperative.g:6122:2: (iv_ruleEssentialOCLInfixOperatorName= ruleEssentialOCLInfixOperatorName EOF )
            // InternalQVTimperative.g:6123:2: iv_ruleEssentialOCLInfixOperatorName= ruleEssentialOCLInfixOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEssentialOCLInfixOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEssentialOCLInfixOperatorName=ruleEssentialOCLInfixOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEssentialOCLInfixOperatorName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEssentialOCLInfixOperatorName"


    // $ANTLR start "ruleEssentialOCLInfixOperatorName"
    // InternalQVTimperative.g:6130:1: ruleEssentialOCLInfixOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '*' | kw= '/' | kw= '+' | kw= '-' | kw= '>' | kw= '<' | kw= '>=' | kw= '<=' | kw= '=' | kw= '<>' | kw= 'and' | kw= 'or' | kw= 'xor' | kw= 'implies' ) ;
    public final AntlrDatatypeRuleToken ruleEssentialOCLInfixOperatorName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule();

        try {
            // InternalQVTimperative.g:6133:28: ( (kw= '*' | kw= '/' | kw= '+' | kw= '-' | kw= '>' | kw= '<' | kw= '>=' | kw= '<=' | kw= '=' | kw= '<>' | kw= 'and' | kw= 'or' | kw= 'xor' | kw= 'implies' ) )
            // InternalQVTimperative.g:6134:1: (kw= '*' | kw= '/' | kw= '+' | kw= '-' | kw= '>' | kw= '<' | kw= '>=' | kw= '<=' | kw= '=' | kw= '<>' | kw= 'and' | kw= 'or' | kw= 'xor' | kw= 'implies' )
            {
            // InternalQVTimperative.g:6134:1: (kw= '*' | kw= '/' | kw= '+' | kw= '-' | kw= '>' | kw= '<' | kw= '>=' | kw= '<=' | kw= '=' | kw= '<>' | kw= 'and' | kw= 'or' | kw= 'xor' | kw= 'implies' )
            int alt147=14;
            switch ( input.LA(1) ) {
            case 37:
                {
                alt147=1;
                }
                break;
            case 102:
                {
                alt147=2;
                }
                break;
            case 103:
                {
                alt147=3;
                }
                break;
            case 100:
                {
                alt147=4;
                }
                break;
            case 104:
                {
                alt147=5;
                }
                break;
            case 105:
                {
                alt147=6;
                }
                break;
            case 106:
                {
                alt147=7;
                }
                break;
            case 107:
                {
                alt147=8;
                }
                break;
            case 50:
                {
                alt147=9;
                }
                break;
            case 108:
                {
                alt147=10;
                }
                break;
            case 109:
                {
                alt147=11;
                }
                break;
            case 110:
                {
                alt147=12;
                }
                break;
            case 111:
                {
                alt147=13;
                }
                break;
            case 112:
                {
                alt147=14;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 147, 0, input);

                throw nvae;
            }

            switch (alt147) {
                case 1 :
                    // InternalQVTimperative.g:6135:2: kw= '*'
                    {
                    kw=(Token)match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getAsteriskKeyword_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:6142:2: kw= '/'
                    {
                    kw=(Token)match(input,102,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getSolidusKeyword_1());

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:6149:2: kw= '+'
                    {
                    kw=(Token)match(input,103,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getPlusSignKeyword_2());

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:6156:2: kw= '-'
                    {
                    kw=(Token)match(input,100,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getHyphenMinusKeyword_3());

                    }

                    }
                    break;
                case 5 :
                    // InternalQVTimperative.g:6163:2: kw= '>'
                    {
                    kw=(Token)match(input,104,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getGreaterThanSignKeyword_4());

                    }

                    }
                    break;
                case 6 :
                    // InternalQVTimperative.g:6170:2: kw= '<'
                    {
                    kw=(Token)match(input,105,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getLessThanSignKeyword_5());

                    }

                    }
                    break;
                case 7 :
                    // InternalQVTimperative.g:6177:2: kw= '>='
                    {
                    kw=(Token)match(input,106,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getGreaterThanSignEqualsSignKeyword_6());

                    }

                    }
                    break;
                case 8 :
                    // InternalQVTimperative.g:6184:2: kw= '<='
                    {
                    kw=(Token)match(input,107,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getLessThanSignEqualsSignKeyword_7());

                    }

                    }
                    break;
                case 9 :
                    // InternalQVTimperative.g:6191:2: kw= '='
                    {
                    kw=(Token)match(input,50,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getEqualsSignKeyword_8());

                    }

                    }
                    break;
                case 10 :
                    // InternalQVTimperative.g:6198:2: kw= '<>'
                    {
                    kw=(Token)match(input,108,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getLessThanSignGreaterThanSignKeyword_9());

                    }

                    }
                    break;
                case 11 :
                    // InternalQVTimperative.g:6205:2: kw= 'and'
                    {
                    kw=(Token)match(input,109,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getAndKeyword_10());

                    }

                    }
                    break;
                case 12 :
                    // InternalQVTimperative.g:6212:2: kw= 'or'
                    {
                    kw=(Token)match(input,110,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getOrKeyword_11());

                    }

                    }
                    break;
                case 13 :
                    // InternalQVTimperative.g:6219:2: kw= 'xor'
                    {
                    kw=(Token)match(input,111,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getXorKeyword_12());

                    }

                    }
                    break;
                case 14 :
                    // InternalQVTimperative.g:6226:2: kw= 'implies'
                    {
                    kw=(Token)match(input,112,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLInfixOperatorNameAccess().getImpliesKeyword_13());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEssentialOCLInfixOperatorName"


    // $ANTLR start "entryRuleEssentialOCLNavigationOperatorName"
    // InternalQVTimperative.g:6239:1: entryRuleEssentialOCLNavigationOperatorName returns [String current=null] : iv_ruleEssentialOCLNavigationOperatorName= ruleEssentialOCLNavigationOperatorName EOF ;
    public final String entryRuleEssentialOCLNavigationOperatorName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEssentialOCLNavigationOperatorName = null;


        try {
            // InternalQVTimperative.g:6240:2: (iv_ruleEssentialOCLNavigationOperatorName= ruleEssentialOCLNavigationOperatorName EOF )
            // InternalQVTimperative.g:6241:2: iv_ruleEssentialOCLNavigationOperatorName= ruleEssentialOCLNavigationOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEssentialOCLNavigationOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEssentialOCLNavigationOperatorName=ruleEssentialOCLNavigationOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEssentialOCLNavigationOperatorName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEssentialOCLNavigationOperatorName"


    // $ANTLR start "ruleEssentialOCLNavigationOperatorName"
    // InternalQVTimperative.g:6248:1: ruleEssentialOCLNavigationOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '.' | kw= '->' | kw= '?.' | kw= '?->' ) ;
    public final AntlrDatatypeRuleToken ruleEssentialOCLNavigationOperatorName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule();

        try {
            // InternalQVTimperative.g:6251:28: ( (kw= '.' | kw= '->' | kw= '?.' | kw= '?->' ) )
            // InternalQVTimperative.g:6252:1: (kw= '.' | kw= '->' | kw= '?.' | kw= '?->' )
            {
            // InternalQVTimperative.g:6252:1: (kw= '.' | kw= '->' | kw= '?.' | kw= '?->' )
            int alt148=4;
            switch ( input.LA(1) ) {
            case 58:
                {
                alt148=1;
                }
                break;
            case 113:
                {
                alt148=2;
                }
                break;
            case 114:
                {
                alt148=3;
                }
                break;
            case 115:
                {
                alt148=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 148, 0, input);

                throw nvae;
            }

            switch (alt148) {
                case 1 :
                    // InternalQVTimperative.g:6253:2: kw= '.'
                    {
                    kw=(Token)match(input,58,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getFullStopKeyword_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:6260:2: kw= '->'
                    {
                    kw=(Token)match(input,113,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getHyphenMinusGreaterThanSignKeyword_1());

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:6267:2: kw= '?.'
                    {
                    kw=(Token)match(input,114,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getQuestionMarkFullStopKeyword_2());

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:6274:2: kw= '?->'
                    {
                    kw=(Token)match(input,115,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLNavigationOperatorNameAccess().getQuestionMarkHyphenMinusGreaterThanSignKeyword_3());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEssentialOCLNavigationOperatorName"


    // $ANTLR start "entryRuleBinaryOperatorName"
    // InternalQVTimperative.g:6287:1: entryRuleBinaryOperatorName returns [String current=null] : iv_ruleBinaryOperatorName= ruleBinaryOperatorName EOF ;
    public final String entryRuleBinaryOperatorName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBinaryOperatorName = null;


        try {
            // InternalQVTimperative.g:6288:2: (iv_ruleBinaryOperatorName= ruleBinaryOperatorName EOF )
            // InternalQVTimperative.g:6289:2: iv_ruleBinaryOperatorName= ruleBinaryOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBinaryOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBinaryOperatorName=ruleBinaryOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBinaryOperatorName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBinaryOperatorName"


    // $ANTLR start "ruleBinaryOperatorName"
    // InternalQVTimperative.g:6296:1: ruleBinaryOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_InfixOperatorName_0= ruleInfixOperatorName | this_NavigationOperatorName_1= ruleNavigationOperatorName ) ;
    public final AntlrDatatypeRuleToken ruleBinaryOperatorName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_InfixOperatorName_0 = null;

        AntlrDatatypeRuleToken this_NavigationOperatorName_1 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:6299:28: ( (this_InfixOperatorName_0= ruleInfixOperatorName | this_NavigationOperatorName_1= ruleNavigationOperatorName ) )
            // InternalQVTimperative.g:6300:1: (this_InfixOperatorName_0= ruleInfixOperatorName | this_NavigationOperatorName_1= ruleNavigationOperatorName )
            {
            // InternalQVTimperative.g:6300:1: (this_InfixOperatorName_0= ruleInfixOperatorName | this_NavigationOperatorName_1= ruleNavigationOperatorName )
            int alt149=2;
            int LA149_0 = input.LA(1);

            if ( (LA149_0==37||LA149_0==50||LA149_0==100||(LA149_0>=102 && LA149_0<=112)) ) {
                alt149=1;
            }
            else if ( (LA149_0==58||(LA149_0>=113 && LA149_0<=115)) ) {
                alt149=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 149, 0, input);

                throw nvae;
            }
            switch (alt149) {
                case 1 :
                    // InternalQVTimperative.g:6301:5: this_InfixOperatorName_0= ruleInfixOperatorName
                    {
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getBinaryOperatorNameAccess().getInfixOperatorNameParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_InfixOperatorName_0=ruleInfixOperatorName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_InfixOperatorName_0);

                    }
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:6313:5: this_NavigationOperatorName_1= ruleNavigationOperatorName
                    {
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getBinaryOperatorNameAccess().getNavigationOperatorNameParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NavigationOperatorName_1=ruleNavigationOperatorName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_NavigationOperatorName_1);

                    }
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBinaryOperatorName"


    // $ANTLR start "entryRuleInfixOperatorName"
    // InternalQVTimperative.g:6331:1: entryRuleInfixOperatorName returns [String current=null] : iv_ruleInfixOperatorName= ruleInfixOperatorName EOF ;
    public final String entryRuleInfixOperatorName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleInfixOperatorName = null;


        try {
            // InternalQVTimperative.g:6332:2: (iv_ruleInfixOperatorName= ruleInfixOperatorName EOF )
            // InternalQVTimperative.g:6333:2: iv_ruleInfixOperatorName= ruleInfixOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInfixOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleInfixOperatorName=ruleInfixOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInfixOperatorName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInfixOperatorName"


    // $ANTLR start "ruleInfixOperatorName"
    // InternalQVTimperative.g:6340:1: ruleInfixOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_EssentialOCLInfixOperatorName_0= ruleEssentialOCLInfixOperatorName ;
    public final AntlrDatatypeRuleToken ruleInfixOperatorName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_EssentialOCLInfixOperatorName_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:6343:28: (this_EssentialOCLInfixOperatorName_0= ruleEssentialOCLInfixOperatorName )
            // InternalQVTimperative.g:6345:5: this_EssentialOCLInfixOperatorName_0= ruleEssentialOCLInfixOperatorName
            {
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getInfixOperatorNameAccess().getEssentialOCLInfixOperatorNameParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_EssentialOCLInfixOperatorName_0=ruleEssentialOCLInfixOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_EssentialOCLInfixOperatorName_0);

            }
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInfixOperatorName"


    // $ANTLR start "entryRuleNavigationOperatorName"
    // InternalQVTimperative.g:6363:1: entryRuleNavigationOperatorName returns [String current=null] : iv_ruleNavigationOperatorName= ruleNavigationOperatorName EOF ;
    public final String entryRuleNavigationOperatorName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNavigationOperatorName = null;


        try {
            // InternalQVTimperative.g:6364:2: (iv_ruleNavigationOperatorName= ruleNavigationOperatorName EOF )
            // InternalQVTimperative.g:6365:2: iv_ruleNavigationOperatorName= ruleNavigationOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNavigationOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNavigationOperatorName=ruleNavigationOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNavigationOperatorName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNavigationOperatorName"


    // $ANTLR start "ruleNavigationOperatorName"
    // InternalQVTimperative.g:6372:1: ruleNavigationOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_EssentialOCLNavigationOperatorName_0= ruleEssentialOCLNavigationOperatorName ;
    public final AntlrDatatypeRuleToken ruleNavigationOperatorName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_EssentialOCLNavigationOperatorName_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:6375:28: (this_EssentialOCLNavigationOperatorName_0= ruleEssentialOCLNavigationOperatorName )
            // InternalQVTimperative.g:6377:5: this_EssentialOCLNavigationOperatorName_0= ruleEssentialOCLNavigationOperatorName
            {
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getNavigationOperatorNameAccess().getEssentialOCLNavigationOperatorNameParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_EssentialOCLNavigationOperatorName_0=ruleEssentialOCLNavigationOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_EssentialOCLNavigationOperatorName_0);

            }
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNavigationOperatorName"


    // $ANTLR start "entryRuleUnaryOperatorName"
    // InternalQVTimperative.g:6395:1: entryRuleUnaryOperatorName returns [String current=null] : iv_ruleUnaryOperatorName= ruleUnaryOperatorName EOF ;
    public final String entryRuleUnaryOperatorName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUnaryOperatorName = null;


        try {
            // InternalQVTimperative.g:6396:2: (iv_ruleUnaryOperatorName= ruleUnaryOperatorName EOF )
            // InternalQVTimperative.g:6397:2: iv_ruleUnaryOperatorName= ruleUnaryOperatorName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryOperatorNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleUnaryOperatorName=ruleUnaryOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnaryOperatorName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnaryOperatorName"


    // $ANTLR start "ruleUnaryOperatorName"
    // InternalQVTimperative.g:6404:1: ruleUnaryOperatorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_EssentialOCLUnaryOperatorName_0= ruleEssentialOCLUnaryOperatorName ;
    public final AntlrDatatypeRuleToken ruleUnaryOperatorName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_EssentialOCLUnaryOperatorName_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:6407:28: (this_EssentialOCLUnaryOperatorName_0= ruleEssentialOCLUnaryOperatorName )
            // InternalQVTimperative.g:6409:5: this_EssentialOCLUnaryOperatorName_0= ruleEssentialOCLUnaryOperatorName
            {
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getUnaryOperatorNameAccess().getEssentialOCLUnaryOperatorNameParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_EssentialOCLUnaryOperatorName_0=ruleEssentialOCLUnaryOperatorName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_EssentialOCLUnaryOperatorName_0);

            }
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnaryOperatorName"


    // $ANTLR start "entryRuleEssentialOCLUnrestrictedName"
    // InternalQVTimperative.g:6427:1: entryRuleEssentialOCLUnrestrictedName returns [String current=null] : iv_ruleEssentialOCLUnrestrictedName= ruleEssentialOCLUnrestrictedName EOF ;
    public final String entryRuleEssentialOCLUnrestrictedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEssentialOCLUnrestrictedName = null;


        try {
            // InternalQVTimperative.g:6428:2: (iv_ruleEssentialOCLUnrestrictedName= ruleEssentialOCLUnrestrictedName EOF )
            // InternalQVTimperative.g:6429:2: iv_ruleEssentialOCLUnrestrictedName= ruleEssentialOCLUnrestrictedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEssentialOCLUnrestrictedNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEssentialOCLUnrestrictedName=ruleEssentialOCLUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEssentialOCLUnrestrictedName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEssentialOCLUnrestrictedName"


    // $ANTLR start "ruleEssentialOCLUnrestrictedName"
    // InternalQVTimperative.g:6436:1: ruleEssentialOCLUnrestrictedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_Identifier_0= ruleIdentifier ;
    public final AntlrDatatypeRuleToken ruleEssentialOCLUnrestrictedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_Identifier_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:6439:28: (this_Identifier_0= ruleIdentifier )
            // InternalQVTimperative.g:6441:5: this_Identifier_0= ruleIdentifier
            {
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getEssentialOCLUnrestrictedNameAccess().getIdentifierParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_Identifier_0=ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_Identifier_0);

            }
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEssentialOCLUnrestrictedName"


    // $ANTLR start "entryRuleEssentialOCLUnreservedName"
    // InternalQVTimperative.g:6459:1: entryRuleEssentialOCLUnreservedName returns [String current=null] : iv_ruleEssentialOCLUnreservedName= ruleEssentialOCLUnreservedName EOF ;
    public final String entryRuleEssentialOCLUnreservedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEssentialOCLUnreservedName = null;


        try {
            // InternalQVTimperative.g:6460:2: (iv_ruleEssentialOCLUnreservedName= ruleEssentialOCLUnreservedName EOF )
            // InternalQVTimperative.g:6461:2: iv_ruleEssentialOCLUnreservedName= ruleEssentialOCLUnreservedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEssentialOCLUnreservedNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEssentialOCLUnreservedName=ruleEssentialOCLUnreservedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEssentialOCLUnreservedName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEssentialOCLUnreservedName"


    // $ANTLR start "ruleEssentialOCLUnreservedName"
    // InternalQVTimperative.g:6468:1: ruleEssentialOCLUnreservedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_UnrestrictedName_0= ruleUnrestrictedName | this_CollectionTypeIdentifier_1= ruleCollectionTypeIdentifier | this_PrimitiveTypeIdentifier_2= rulePrimitiveTypeIdentifier | kw= 'Map' | kw= 'Tuple' ) ;
    public final AntlrDatatypeRuleToken ruleEssentialOCLUnreservedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_UnrestrictedName_0 = null;

        AntlrDatatypeRuleToken this_CollectionTypeIdentifier_1 = null;

        AntlrDatatypeRuleToken this_PrimitiveTypeIdentifier_2 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:6471:28: ( (this_UnrestrictedName_0= ruleUnrestrictedName | this_CollectionTypeIdentifier_1= ruleCollectionTypeIdentifier | this_PrimitiveTypeIdentifier_2= rulePrimitiveTypeIdentifier | kw= 'Map' | kw= 'Tuple' ) )
            // InternalQVTimperative.g:6472:1: (this_UnrestrictedName_0= ruleUnrestrictedName | this_CollectionTypeIdentifier_1= ruleCollectionTypeIdentifier | this_PrimitiveTypeIdentifier_2= rulePrimitiveTypeIdentifier | kw= 'Map' | kw= 'Tuple' )
            {
            // InternalQVTimperative.g:6472:1: (this_UnrestrictedName_0= ruleUnrestrictedName | this_CollectionTypeIdentifier_1= ruleCollectionTypeIdentifier | this_PrimitiveTypeIdentifier_2= rulePrimitiveTypeIdentifier | kw= 'Map' | kw= 'Tuple' )
            int alt150=5;
            switch ( input.LA(1) ) {
            case RULE_SIMPLE_ID:
            case RULE_ESCAPED_ID:
            case 17:
            case 19:
            case 22:
            case 23:
            case 25:
            case 26:
            case 28:
            case 29:
            case 30:
            case 31:
            case 34:
            case 38:
            case 39:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
            case 51:
            case 52:
            case 55:
            case 56:
            case 57:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 66:
            case 68:
            case 70:
            case 73:
            case 75:
            case 77:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 92:
            case 94:
            case 96:
            case 97:
            case 98:
            case 99:
                {
                alt150=1;
                }
                break;
            case 126:
            case 127:
            case 128:
            case 129:
            case 130:
                {
                alt150=2;
                }
                break;
            case 118:
            case 119:
            case 120:
            case 121:
            case 122:
            case 123:
            case 124:
            case 125:
                {
                alt150=3;
                }
                break;
            case 116:
                {
                alt150=4;
                }
                break;
            case 117:
                {
                alt150=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 150, 0, input);

                throw nvae;
            }

            switch (alt150) {
                case 1 :
                    // InternalQVTimperative.g:6473:5: this_UnrestrictedName_0= ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getEssentialOCLUnreservedNameAccess().getUnrestrictedNameParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_UnrestrictedName_0=ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_UnrestrictedName_0);

                    }
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:6485:5: this_CollectionTypeIdentifier_1= ruleCollectionTypeIdentifier
                    {
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getEssentialOCLUnreservedNameAccess().getCollectionTypeIdentifierParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CollectionTypeIdentifier_1=ruleCollectionTypeIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_CollectionTypeIdentifier_1);

                    }
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:6497:5: this_PrimitiveTypeIdentifier_2= rulePrimitiveTypeIdentifier
                    {
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getEssentialOCLUnreservedNameAccess().getPrimitiveTypeIdentifierParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrimitiveTypeIdentifier_2=rulePrimitiveTypeIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_PrimitiveTypeIdentifier_2);

                    }
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:6509:2: kw= 'Map'
                    {
                    kw=(Token)match(input,116,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLUnreservedNameAccess().getMapKeyword_3());

                    }

                    }
                    break;
                case 5 :
                    // InternalQVTimperative.g:6516:2: kw= 'Tuple'
                    {
                    kw=(Token)match(input,117,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getEssentialOCLUnreservedNameAccess().getTupleKeyword_4());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEssentialOCLUnreservedName"


    // $ANTLR start "entryRuleUnreservedName"
    // InternalQVTimperative.g:6529:1: entryRuleUnreservedName returns [String current=null] : iv_ruleUnreservedName= ruleUnreservedName EOF ;
    public final String entryRuleUnreservedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUnreservedName = null;


        try {
            // InternalQVTimperative.g:6530:2: (iv_ruleUnreservedName= ruleUnreservedName EOF )
            // InternalQVTimperative.g:6531:2: iv_ruleUnreservedName= ruleUnreservedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnreservedNameRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleUnreservedName=ruleUnreservedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnreservedName.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnreservedName"


    // $ANTLR start "ruleUnreservedName"
    // InternalQVTimperative.g:6538:1: ruleUnreservedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_EssentialOCLUnreservedName_0= ruleEssentialOCLUnreservedName ;
    public final AntlrDatatypeRuleToken ruleUnreservedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_EssentialOCLUnreservedName_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:6541:28: (this_EssentialOCLUnreservedName_0= ruleEssentialOCLUnreservedName )
            // InternalQVTimperative.g:6543:5: this_EssentialOCLUnreservedName_0= ruleEssentialOCLUnreservedName
            {
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getUnreservedNameAccess().getEssentialOCLUnreservedNameParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_EssentialOCLUnreservedName_0=ruleEssentialOCLUnreservedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_EssentialOCLUnreservedName_0);

            }
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnreservedName"


    // $ANTLR start "entryRuleURIPathNameCS"
    // InternalQVTimperative.g:6561:1: entryRuleURIPathNameCS returns [EObject current=null] : iv_ruleURIPathNameCS= ruleURIPathNameCS EOF ;
    public final EObject entryRuleURIPathNameCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleURIPathNameCS = null;


        try {
            // InternalQVTimperative.g:6562:2: (iv_ruleURIPathNameCS= ruleURIPathNameCS EOF )
            // InternalQVTimperative.g:6563:2: iv_ruleURIPathNameCS= ruleURIPathNameCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getURIPathNameCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleURIPathNameCS=ruleURIPathNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleURIPathNameCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleURIPathNameCS"


    // $ANTLR start "ruleURIPathNameCS"
    // InternalQVTimperative.g:6570:1: ruleURIPathNameCS returns [EObject current=null] : ( ( (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* ) ;
    public final EObject ruleURIPathNameCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedPathElements_0_0 = null;

        EObject lv_ownedPathElements_2_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:6573:28: ( ( ( (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* ) )
            // InternalQVTimperative.g:6574:1: ( ( (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* )
            {
            // InternalQVTimperative.g:6574:1: ( ( (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* )
            // InternalQVTimperative.g:6574:2: ( (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )*
            {
            // InternalQVTimperative.g:6574:2: ( (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS ) )
            // InternalQVTimperative.g:6575:1: (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS )
            {
            // InternalQVTimperative.g:6575:1: (lv_ownedPathElements_0_0= ruleURIFirstPathElementCS )
            // InternalQVTimperative.g:6576:3: lv_ownedPathElements_0_0= ruleURIFirstPathElementCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getURIPathNameCSAccess().getOwnedPathElementsURIFirstPathElementCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_108);
            lv_ownedPathElements_0_0=ruleURIFirstPathElementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getURIPathNameCSRule());
              	        }
                     		add(
                     			current,
                     			"ownedPathElements",
                      		lv_ownedPathElements_0_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.URIFirstPathElementCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:6592:2: (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )*
            loop151:
            do {
                int alt151=2;
                int LA151_0 = input.LA(1);

                if ( (LA151_0==36) ) {
                    int LA151_1 = input.LA(2);

                    if ( ((LA151_1>=RULE_SIMPLE_ID && LA151_1<=RULE_ESCAPED_ID)||LA151_1==17||LA151_1==19||(LA151_1>=22 && LA151_1<=23)||(LA151_1>=25 && LA151_1<=26)||(LA151_1>=28 && LA151_1<=31)||LA151_1==34||(LA151_1>=38 && LA151_1<=39)||(LA151_1>=43 && LA151_1<=49)||(LA151_1>=51 && LA151_1<=52)||(LA151_1>=55 && LA151_1<=57)||(LA151_1>=59 && LA151_1<=64)||LA151_1==66||LA151_1==68||LA151_1==70||LA151_1==73||LA151_1==75||LA151_1==77||(LA151_1>=79 && LA151_1<=83)||(LA151_1>=85 && LA151_1<=90)||LA151_1==92||LA151_1==94||(LA151_1>=96 && LA151_1<=99)||(LA151_1>=116 && LA151_1<=130)) ) {
                        alt151=1;
                    }


                }


                switch (alt151) {
            	case 1 :
            	    // InternalQVTimperative.g:6592:4: otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) )
            	    {
            	    otherlv_1=(Token)match(input,36,FollowSets000.FOLLOW_12); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getURIPathNameCSAccess().getColonColonKeyword_1_0());

            	    }
            	    // InternalQVTimperative.g:6596:1: ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) )
            	    // InternalQVTimperative.g:6597:1: (lv_ownedPathElements_2_0= ruleNextPathElementCS )
            	    {
            	    // InternalQVTimperative.g:6597:1: (lv_ownedPathElements_2_0= ruleNextPathElementCS )
            	    // InternalQVTimperative.g:6598:3: lv_ownedPathElements_2_0= ruleNextPathElementCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getURIPathNameCSAccess().getOwnedPathElementsNextPathElementCSParserRuleCall_1_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_108);
            	    lv_ownedPathElements_2_0=ruleNextPathElementCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getURIPathNameCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedPathElements",
            	              		lv_ownedPathElements_2_0,
            	              		"org.eclipse.ocl.xtext.base.Base.NextPathElementCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop151;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleURIPathNameCS"


    // $ANTLR start "entryRuleURIFirstPathElementCS"
    // InternalQVTimperative.g:6622:1: entryRuleURIFirstPathElementCS returns [EObject current=null] : iv_ruleURIFirstPathElementCS= ruleURIFirstPathElementCS EOF ;
    public final EObject entryRuleURIFirstPathElementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleURIFirstPathElementCS = null;


        try {
            // InternalQVTimperative.g:6623:2: (iv_ruleURIFirstPathElementCS= ruleURIFirstPathElementCS EOF )
            // InternalQVTimperative.g:6624:2: iv_ruleURIFirstPathElementCS= ruleURIFirstPathElementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getURIFirstPathElementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleURIFirstPathElementCS=ruleURIFirstPathElementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleURIFirstPathElementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleURIFirstPathElementCS"


    // $ANTLR start "ruleURIFirstPathElementCS"
    // InternalQVTimperative.g:6631:1: ruleURIFirstPathElementCS returns [EObject current=null] : ( ( ( ruleUnrestrictedName ) ) | ( () ( ( ruleURI ) ) ) ) ;
    public final EObject ruleURIFirstPathElementCS() throws RecognitionException {
        EObject current = null;

         enterRule();

        try {
            // InternalQVTimperative.g:6634:28: ( ( ( ( ruleUnrestrictedName ) ) | ( () ( ( ruleURI ) ) ) ) )
            // InternalQVTimperative.g:6635:1: ( ( ( ruleUnrestrictedName ) ) | ( () ( ( ruleURI ) ) ) )
            {
            // InternalQVTimperative.g:6635:1: ( ( ( ruleUnrestrictedName ) ) | ( () ( ( ruleURI ) ) ) )
            int alt152=2;
            int LA152_0 = input.LA(1);

            if ( ((LA152_0>=RULE_SIMPLE_ID && LA152_0<=RULE_ESCAPED_ID)||LA152_0==17||LA152_0==19||(LA152_0>=22 && LA152_0<=23)||(LA152_0>=25 && LA152_0<=26)||(LA152_0>=28 && LA152_0<=31)||LA152_0==34||(LA152_0>=38 && LA152_0<=39)||(LA152_0>=43 && LA152_0<=49)||(LA152_0>=51 && LA152_0<=52)||(LA152_0>=55 && LA152_0<=57)||(LA152_0>=59 && LA152_0<=64)||LA152_0==66||LA152_0==68||LA152_0==70||LA152_0==73||LA152_0==75||LA152_0==77||(LA152_0>=79 && LA152_0<=83)||(LA152_0>=85 && LA152_0<=90)||LA152_0==92||LA152_0==94||(LA152_0>=96 && LA152_0<=99)) ) {
                alt152=1;
            }
            else if ( (LA152_0==RULE_SINGLE_QUOTED_STRING) ) {
                alt152=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 152, 0, input);

                throw nvae;
            }
            switch (alt152) {
                case 1 :
                    // InternalQVTimperative.g:6635:2: ( ( ruleUnrestrictedName ) )
                    {
                    // InternalQVTimperative.g:6635:2: ( ( ruleUnrestrictedName ) )
                    // InternalQVTimperative.g:6636:1: ( ruleUnrestrictedName )
                    {
                    // InternalQVTimperative.g:6636:1: ( ruleUnrestrictedName )
                    // InternalQVTimperative.g:6637:3: ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      		  /* */

                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getURIFirstPathElementCSRule());
                      	        }

                    }
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getURIFirstPathElementCSAccess().getReferredElementNamedElementCrossReference_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:6654:6: ( () ( ( ruleURI ) ) )
                    {
                    // InternalQVTimperative.g:6654:6: ( () ( ( ruleURI ) ) )
                    // InternalQVTimperative.g:6654:7: () ( ( ruleURI ) )
                    {
                    // InternalQVTimperative.g:6654:7: ()
                    // InternalQVTimperative.g:6655:2:
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getURIFirstPathElementCSAccess().getPathElementWithURICSAction_1_0(),
                                  current);

                    }

                    }

                    // InternalQVTimperative.g:6663:2: ( ( ruleURI ) )
                    // InternalQVTimperative.g:6664:1: ( ruleURI )
                    {
                    // InternalQVTimperative.g:6664:1: ( ruleURI )
                    // InternalQVTimperative.g:6665:3: ruleURI
                    {
                    if ( state.backtracking==0 ) {

                      		  /* */

                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getURIFirstPathElementCSRule());
                      	        }

                    }
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getURIFirstPathElementCSAccess().getReferredElementNamespaceCrossReference_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleURI();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleURIFirstPathElementCS"


    // $ANTLR start "entryRulePrimitiveTypeIdentifier"
    // InternalQVTimperative.g:6689:1: entryRulePrimitiveTypeIdentifier returns [String current=null] : iv_rulePrimitiveTypeIdentifier= rulePrimitiveTypeIdentifier EOF ;
    public final String entryRulePrimitiveTypeIdentifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePrimitiveTypeIdentifier = null;


        try {
            // InternalQVTimperative.g:6690:2: (iv_rulePrimitiveTypeIdentifier= rulePrimitiveTypeIdentifier EOF )
            // InternalQVTimperative.g:6691:2: iv_rulePrimitiveTypeIdentifier= rulePrimitiveTypeIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimitiveTypeIdentifierRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrimitiveTypeIdentifier=rulePrimitiveTypeIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimitiveTypeIdentifier.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimitiveTypeIdentifier"


    // $ANTLR start "rulePrimitiveTypeIdentifier"
    // InternalQVTimperative.g:6698:1: rulePrimitiveTypeIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'Boolean' | kw= 'Integer' | kw= 'Real' | kw= 'String' | kw= 'UnlimitedNatural' | kw= 'OclAny' | kw= 'OclInvalid' | kw= 'OclVoid' ) ;
    public final AntlrDatatypeRuleToken rulePrimitiveTypeIdentifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule();

        try {
            // InternalQVTimperative.g:6701:28: ( (kw= 'Boolean' | kw= 'Integer' | kw= 'Real' | kw= 'String' | kw= 'UnlimitedNatural' | kw= 'OclAny' | kw= 'OclInvalid' | kw= 'OclVoid' ) )
            // InternalQVTimperative.g:6702:1: (kw= 'Boolean' | kw= 'Integer' | kw= 'Real' | kw= 'String' | kw= 'UnlimitedNatural' | kw= 'OclAny' | kw= 'OclInvalid' | kw= 'OclVoid' )
            {
            // InternalQVTimperative.g:6702:1: (kw= 'Boolean' | kw= 'Integer' | kw= 'Real' | kw= 'String' | kw= 'UnlimitedNatural' | kw= 'OclAny' | kw= 'OclInvalid' | kw= 'OclVoid' )
            int alt153=8;
            switch ( input.LA(1) ) {
            case 118:
                {
                alt153=1;
                }
                break;
            case 119:
                {
                alt153=2;
                }
                break;
            case 120:
                {
                alt153=3;
                }
                break;
            case 121:
                {
                alt153=4;
                }
                break;
            case 122:
                {
                alt153=5;
                }
                break;
            case 123:
                {
                alt153=6;
                }
                break;
            case 124:
                {
                alt153=7;
                }
                break;
            case 125:
                {
                alt153=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 153, 0, input);

                throw nvae;
            }

            switch (alt153) {
                case 1 :
                    // InternalQVTimperative.g:6703:2: kw= 'Boolean'
                    {
                    kw=(Token)match(input,118,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getBooleanKeyword_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:6710:2: kw= 'Integer'
                    {
                    kw=(Token)match(input,119,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getIntegerKeyword_1());

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:6717:2: kw= 'Real'
                    {
                    kw=(Token)match(input,120,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getRealKeyword_2());

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:6724:2: kw= 'String'
                    {
                    kw=(Token)match(input,121,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getStringKeyword_3());

                    }

                    }
                    break;
                case 5 :
                    // InternalQVTimperative.g:6731:2: kw= 'UnlimitedNatural'
                    {
                    kw=(Token)match(input,122,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getUnlimitedNaturalKeyword_4());

                    }

                    }
                    break;
                case 6 :
                    // InternalQVTimperative.g:6738:2: kw= 'OclAny'
                    {
                    kw=(Token)match(input,123,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getOclAnyKeyword_5());

                    }

                    }
                    break;
                case 7 :
                    // InternalQVTimperative.g:6745:2: kw= 'OclInvalid'
                    {
                    kw=(Token)match(input,124,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getOclInvalidKeyword_6());

                    }

                    }
                    break;
                case 8 :
                    // InternalQVTimperative.g:6752:2: kw= 'OclVoid'
                    {
                    kw=(Token)match(input,125,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getPrimitiveTypeIdentifierAccess().getOclVoidKeyword_7());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimitiveTypeIdentifier"


    // $ANTLR start "entryRulePrimitiveTypeCS"
    // InternalQVTimperative.g:6765:1: entryRulePrimitiveTypeCS returns [EObject current=null] : iv_rulePrimitiveTypeCS= rulePrimitiveTypeCS EOF ;
    public final EObject entryRulePrimitiveTypeCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimitiveTypeCS = null;


        try {
            // InternalQVTimperative.g:6766:2: (iv_rulePrimitiveTypeCS= rulePrimitiveTypeCS EOF )
            // InternalQVTimperative.g:6767:2: iv_rulePrimitiveTypeCS= rulePrimitiveTypeCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimitiveTypeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrimitiveTypeCS=rulePrimitiveTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimitiveTypeCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimitiveTypeCS"


    // $ANTLR start "rulePrimitiveTypeCS"
    // InternalQVTimperative.g:6774:1: rulePrimitiveTypeCS returns [EObject current=null] : ( (lv_name_0_0= rulePrimitiveTypeIdentifier ) ) ;
    public final EObject rulePrimitiveTypeCS() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:6777:28: ( ( (lv_name_0_0= rulePrimitiveTypeIdentifier ) ) )
            // InternalQVTimperative.g:6778:1: ( (lv_name_0_0= rulePrimitiveTypeIdentifier ) )
            {
            // InternalQVTimperative.g:6778:1: ( (lv_name_0_0= rulePrimitiveTypeIdentifier ) )
            // InternalQVTimperative.g:6779:1: (lv_name_0_0= rulePrimitiveTypeIdentifier )
            {
            // InternalQVTimperative.g:6779:1: (lv_name_0_0= rulePrimitiveTypeIdentifier )
            // InternalQVTimperative.g:6780:3: lv_name_0_0= rulePrimitiveTypeIdentifier
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getPrimitiveTypeCSAccess().getNamePrimitiveTypeIdentifierParserRuleCall_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_0_0=rulePrimitiveTypeIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPrimitiveTypeCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_0_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PrimitiveTypeIdentifier");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimitiveTypeCS"


    // $ANTLR start "entryRuleCollectionTypeIdentifier"
    // InternalQVTimperative.g:6804:1: entryRuleCollectionTypeIdentifier returns [String current=null] : iv_ruleCollectionTypeIdentifier= ruleCollectionTypeIdentifier EOF ;
    public final String entryRuleCollectionTypeIdentifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleCollectionTypeIdentifier = null;


        try {
            // InternalQVTimperative.g:6805:2: (iv_ruleCollectionTypeIdentifier= ruleCollectionTypeIdentifier EOF )
            // InternalQVTimperative.g:6806:2: iv_ruleCollectionTypeIdentifier= ruleCollectionTypeIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCollectionTypeIdentifierRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCollectionTypeIdentifier=ruleCollectionTypeIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCollectionTypeIdentifier.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCollectionTypeIdentifier"


    // $ANTLR start "ruleCollectionTypeIdentifier"
    // InternalQVTimperative.g:6813:1: ruleCollectionTypeIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'Set' | kw= 'Bag' | kw= 'Sequence' | kw= 'Collection' | kw= 'OrderedSet' ) ;
    public final AntlrDatatypeRuleToken ruleCollectionTypeIdentifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule();

        try {
            // InternalQVTimperative.g:6816:28: ( (kw= 'Set' | kw= 'Bag' | kw= 'Sequence' | kw= 'Collection' | kw= 'OrderedSet' ) )
            // InternalQVTimperative.g:6817:1: (kw= 'Set' | kw= 'Bag' | kw= 'Sequence' | kw= 'Collection' | kw= 'OrderedSet' )
            {
            // InternalQVTimperative.g:6817:1: (kw= 'Set' | kw= 'Bag' | kw= 'Sequence' | kw= 'Collection' | kw= 'OrderedSet' )
            int alt154=5;
            switch ( input.LA(1) ) {
            case 126:
                {
                alt154=1;
                }
                break;
            case 127:
                {
                alt154=2;
                }
                break;
            case 128:
                {
                alt154=3;
                }
                break;
            case 129:
                {
                alt154=4;
                }
                break;
            case 130:
                {
                alt154=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 154, 0, input);

                throw nvae;
            }

            switch (alt154) {
                case 1 :
                    // InternalQVTimperative.g:6818:2: kw= 'Set'
                    {
                    kw=(Token)match(input,126,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCollectionTypeIdentifierAccess().getSetKeyword_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:6825:2: kw= 'Bag'
                    {
                    kw=(Token)match(input,127,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCollectionTypeIdentifierAccess().getBagKeyword_1());

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:6832:2: kw= 'Sequence'
                    {
                    kw=(Token)match(input,128,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCollectionTypeIdentifierAccess().getSequenceKeyword_2());

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:6839:2: kw= 'Collection'
                    {
                    kw=(Token)match(input,129,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCollectionTypeIdentifierAccess().getCollectionKeyword_3());

                    }

                    }
                    break;
                case 5 :
                    // InternalQVTimperative.g:6846:2: kw= 'OrderedSet'
                    {
                    kw=(Token)match(input,130,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getCollectionTypeIdentifierAccess().getOrderedSetKeyword_4());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCollectionTypeIdentifier"


    // $ANTLR start "entryRuleCollectionTypeCS"
    // InternalQVTimperative.g:6859:1: entryRuleCollectionTypeCS returns [EObject current=null] : iv_ruleCollectionTypeCS= ruleCollectionTypeCS EOF ;
    public final EObject entryRuleCollectionTypeCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCollectionTypeCS = null;


        try {
            // InternalQVTimperative.g:6860:2: (iv_ruleCollectionTypeCS= ruleCollectionTypeCS EOF )
            // InternalQVTimperative.g:6861:2: iv_ruleCollectionTypeCS= ruleCollectionTypeCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCollectionTypeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCollectionTypeCS=ruleCollectionTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCollectionTypeCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCollectionTypeCS"


    // $ANTLR start "ruleCollectionTypeCS"
    // InternalQVTimperative.g:6868:1: ruleCollectionTypeCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleCollectionTypeIdentifier ) ) (otherlv_1= '(' ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) ) ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )? otherlv_4= ')' )? ) ;
    public final EObject ruleCollectionTypeCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedType_2_0 = null;

        EObject lv_ownedCollectionMultiplicity_3_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:6871:28: ( ( ( (lv_name_0_0= ruleCollectionTypeIdentifier ) ) (otherlv_1= '(' ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) ) ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )? otherlv_4= ')' )? ) )
            // InternalQVTimperative.g:6872:1: ( ( (lv_name_0_0= ruleCollectionTypeIdentifier ) ) (otherlv_1= '(' ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) ) ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )? otherlv_4= ')' )? )
            {
            // InternalQVTimperative.g:6872:1: ( ( (lv_name_0_0= ruleCollectionTypeIdentifier ) ) (otherlv_1= '(' ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) ) ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )? otherlv_4= ')' )? )
            // InternalQVTimperative.g:6872:2: ( (lv_name_0_0= ruleCollectionTypeIdentifier ) ) (otherlv_1= '(' ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) ) ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )? otherlv_4= ')' )?
            {
            // InternalQVTimperative.g:6872:2: ( (lv_name_0_0= ruleCollectionTypeIdentifier ) )
            // InternalQVTimperative.g:6873:1: (lv_name_0_0= ruleCollectionTypeIdentifier )
            {
            // InternalQVTimperative.g:6873:1: (lv_name_0_0= ruleCollectionTypeIdentifier )
            // InternalQVTimperative.g:6874:3: lv_name_0_0= ruleCollectionTypeIdentifier
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getCollectionTypeCSAccess().getNameCollectionTypeIdentifierParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_109);
            lv_name_0_0=ruleCollectionTypeIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCollectionTypeCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_0_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CollectionTypeIdentifier");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:6890:2: (otherlv_1= '(' ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) ) ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )? otherlv_4= ')' )?
            int alt156=2;
            int LA156_0 = input.LA(1);

            if ( (LA156_0==53) ) {
                alt156=1;
            }
            switch (alt156) {
                case 1 :
                    // InternalQVTimperative.g:6890:4: otherlv_1= '(' ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) ) ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )? otherlv_4= ')'
                    {
                    otherlv_1=(Token)match(input,53,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getCollectionTypeCSAccess().getLeftParenthesisKeyword_1_0());

                    }
                    // InternalQVTimperative.g:6894:1: ( (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS ) )
                    // InternalQVTimperative.g:6895:1: (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS )
                    {
                    // InternalQVTimperative.g:6895:1: (lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS )
                    // InternalQVTimperative.g:6896:3: lv_ownedType_2_0= ruleTypeExpWithoutMultiplicityCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getCollectionTypeCSAccess().getOwnedTypeTypeExpWithoutMultiplicityCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_110);
                    lv_ownedType_2_0=ruleTypeExpWithoutMultiplicityCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCollectionTypeCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpWithoutMultiplicityCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:6912:2: ( (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS ) )?
                    int alt155=2;
                    int LA155_0 = input.LA(1);

                    if ( (LA155_0==141) ) {
                        alt155=1;
                    }
                    switch (alt155) {
                        case 1 :
                            // InternalQVTimperative.g:6913:1: (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS )
                            {
                            // InternalQVTimperative.g:6913:1: (lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS )
                            // InternalQVTimperative.g:6914:3: lv_ownedCollectionMultiplicity_3_0= ruleMultiplicityCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getCollectionTypeCSAccess().getOwnedCollectionMultiplicityMultiplicityCSParserRuleCall_1_2_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_111);
                            lv_ownedCollectionMultiplicity_3_0=ruleMultiplicityCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getCollectionTypeCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedCollectionMultiplicity",
                                      		lv_ownedCollectionMultiplicity_3_0,
                                      		"org.eclipse.ocl.xtext.base.Base.MultiplicityCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getCollectionTypeCSAccess().getRightParenthesisKeyword_1_3());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCollectionTypeCS"


    // $ANTLR start "entryRuleMapTypeCS"
    // InternalQVTimperative.g:6942:1: entryRuleMapTypeCS returns [EObject current=null] : iv_ruleMapTypeCS= ruleMapTypeCS EOF ;
    public final EObject entryRuleMapTypeCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapTypeCS = null;


        try {
            // InternalQVTimperative.g:6943:2: (iv_ruleMapTypeCS= ruleMapTypeCS EOF )
            // InternalQVTimperative.g:6944:2: iv_ruleMapTypeCS= ruleMapTypeCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapTypeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMapTypeCS=ruleMapTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapTypeCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapTypeCS"


    // $ANTLR start "ruleMapTypeCS"
    // InternalQVTimperative.g:6951:1: ruleMapTypeCS returns [EObject current=null] : ( ( (lv_name_0_0= 'Map' ) ) (otherlv_1= '(' ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) ) otherlv_3= ',' ( (lv_ownedValueType_4_0= ruleTypeExpCS ) ) otherlv_5= ')' )? ) ;
    public final EObject ruleMapTypeCS() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_ownedKeyType_2_0 = null;

        EObject lv_ownedValueType_4_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:6954:28: ( ( ( (lv_name_0_0= 'Map' ) ) (otherlv_1= '(' ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) ) otherlv_3= ',' ( (lv_ownedValueType_4_0= ruleTypeExpCS ) ) otherlv_5= ')' )? ) )
            // InternalQVTimperative.g:6955:1: ( ( (lv_name_0_0= 'Map' ) ) (otherlv_1= '(' ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) ) otherlv_3= ',' ( (lv_ownedValueType_4_0= ruleTypeExpCS ) ) otherlv_5= ')' )? )
            {
            // InternalQVTimperative.g:6955:1: ( ( (lv_name_0_0= 'Map' ) ) (otherlv_1= '(' ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) ) otherlv_3= ',' ( (lv_ownedValueType_4_0= ruleTypeExpCS ) ) otherlv_5= ')' )? )
            // InternalQVTimperative.g:6955:2: ( (lv_name_0_0= 'Map' ) ) (otherlv_1= '(' ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) ) otherlv_3= ',' ( (lv_ownedValueType_4_0= ruleTypeExpCS ) ) otherlv_5= ')' )?
            {
            // InternalQVTimperative.g:6955:2: ( (lv_name_0_0= 'Map' ) )
            // InternalQVTimperative.g:6956:1: (lv_name_0_0= 'Map' )
            {
            // InternalQVTimperative.g:6956:1: (lv_name_0_0= 'Map' )
            // InternalQVTimperative.g:6957:3: lv_name_0_0= 'Map'
            {
            lv_name_0_0=(Token)match(input,116,FollowSets000.FOLLOW_109); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_name_0_0, grammarAccess.getMapTypeCSAccess().getNameMapKeyword_0_0());

            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getMapTypeCSRule());
              	        }
                     		setWithLastConsumed(current, "name", lv_name_0_0, "Map");

            }

            }


            }

            // InternalQVTimperative.g:6970:2: (otherlv_1= '(' ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) ) otherlv_3= ',' ( (lv_ownedValueType_4_0= ruleTypeExpCS ) ) otherlv_5= ')' )?
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( (LA157_0==53) ) {
                alt157=1;
            }
            switch (alt157) {
                case 1 :
                    // InternalQVTimperative.g:6970:4: otherlv_1= '(' ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) ) otherlv_3= ',' ( (lv_ownedValueType_4_0= ruleTypeExpCS ) ) otherlv_5= ')'
                    {
                    otherlv_1=(Token)match(input,53,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getMapTypeCSAccess().getLeftParenthesisKeyword_1_0());

                    }
                    // InternalQVTimperative.g:6974:1: ( (lv_ownedKeyType_2_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:6975:1: (lv_ownedKeyType_2_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:6975:1: (lv_ownedKeyType_2_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:6976:3: lv_ownedKeyType_2_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getMapTypeCSAccess().getOwnedKeyTypeTypeExpCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_112);
                    lv_ownedKeyType_2_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMapTypeCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedKeyType",
                              		lv_ownedKeyType_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getMapTypeCSAccess().getCommaKeyword_1_2());

                    }
                    // InternalQVTimperative.g:6996:1: ( (lv_ownedValueType_4_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:6997:1: (lv_ownedValueType_4_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:6997:1: (lv_ownedValueType_4_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:6998:3: lv_ownedValueType_4_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getMapTypeCSAccess().getOwnedValueTypeTypeExpCSParserRuleCall_1_3_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_111);
                    lv_ownedValueType_4_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMapTypeCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedValueType",
                              		lv_ownedValueType_4_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    otherlv_5=(Token)match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getMapTypeCSAccess().getRightParenthesisKeyword_1_4());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapTypeCS"


    // $ANTLR start "entryRuleTupleTypeCS"
    // InternalQVTimperative.g:7026:1: entryRuleTupleTypeCS returns [EObject current=null] : iv_ruleTupleTypeCS= ruleTupleTypeCS EOF ;
    public final EObject entryRuleTupleTypeCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTupleTypeCS = null;


        try {
            // InternalQVTimperative.g:7027:2: (iv_ruleTupleTypeCS= ruleTupleTypeCS EOF )
            // InternalQVTimperative.g:7028:2: iv_ruleTupleTypeCS= ruleTupleTypeCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTupleTypeCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTupleTypeCS=ruleTupleTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTupleTypeCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTupleTypeCS"


    // $ANTLR start "ruleTupleTypeCS"
    // InternalQVTimperative.g:7035:1: ruleTupleTypeCS returns [EObject current=null] : ( ( (lv_name_0_0= 'Tuple' ) ) (otherlv_1= '(' ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )? otherlv_5= ')' )? ) ;
    public final EObject ruleTupleTypeCS() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_ownedParts_2_0 = null;

        EObject lv_ownedParts_4_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:7038:28: ( ( ( (lv_name_0_0= 'Tuple' ) ) (otherlv_1= '(' ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )? otherlv_5= ')' )? ) )
            // InternalQVTimperative.g:7039:1: ( ( (lv_name_0_0= 'Tuple' ) ) (otherlv_1= '(' ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )? otherlv_5= ')' )? )
            {
            // InternalQVTimperative.g:7039:1: ( ( (lv_name_0_0= 'Tuple' ) ) (otherlv_1= '(' ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )? otherlv_5= ')' )? )
            // InternalQVTimperative.g:7039:2: ( (lv_name_0_0= 'Tuple' ) ) (otherlv_1= '(' ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )? otherlv_5= ')' )?
            {
            // InternalQVTimperative.g:7039:2: ( (lv_name_0_0= 'Tuple' ) )
            // InternalQVTimperative.g:7040:1: (lv_name_0_0= 'Tuple' )
            {
            // InternalQVTimperative.g:7040:1: (lv_name_0_0= 'Tuple' )
            // InternalQVTimperative.g:7041:3: lv_name_0_0= 'Tuple'
            {
            lv_name_0_0=(Token)match(input,117,FollowSets000.FOLLOW_109); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_name_0_0, grammarAccess.getTupleTypeCSAccess().getNameTupleKeyword_0_0());

            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getTupleTypeCSRule());
              	        }
                     		setWithLastConsumed(current, "name", lv_name_0_0, "Tuple");

            }

            }


            }

            // InternalQVTimperative.g:7054:2: (otherlv_1= '(' ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )? otherlv_5= ')' )?
            int alt160=2;
            int LA160_0 = input.LA(1);

            if ( (LA160_0==53) ) {
                alt160=1;
            }
            switch (alt160) {
                case 1 :
                    // InternalQVTimperative.g:7054:4: otherlv_1= '(' ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )? otherlv_5= ')'
                    {
                    otherlv_1=(Token)match(input,53,FollowSets000.FOLLOW_49); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getTupleTypeCSAccess().getLeftParenthesisKeyword_1_0());

                    }
                    // InternalQVTimperative.g:7058:1: ( ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )* )?
                    int alt159=2;
                    int LA159_0 = input.LA(1);

                    if ( ((LA159_0>=RULE_SIMPLE_ID && LA159_0<=RULE_ESCAPED_ID)||LA159_0==17||LA159_0==19||(LA159_0>=22 && LA159_0<=23)||(LA159_0>=25 && LA159_0<=26)||(LA159_0>=28 && LA159_0<=31)||LA159_0==34||(LA159_0>=38 && LA159_0<=39)||(LA159_0>=43 && LA159_0<=49)||(LA159_0>=51 && LA159_0<=52)||(LA159_0>=55 && LA159_0<=57)||(LA159_0>=59 && LA159_0<=64)||LA159_0==66||LA159_0==68||LA159_0==70||LA159_0==73||LA159_0==75||LA159_0==77||(LA159_0>=79 && LA159_0<=83)||(LA159_0>=85 && LA159_0<=90)||LA159_0==92||LA159_0==94||(LA159_0>=96 && LA159_0<=99)) ) {
                        alt159=1;
                    }
                    switch (alt159) {
                        case 1 :
                            // InternalQVTimperative.g:7058:2: ( (lv_ownedParts_2_0= ruleTuplePartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )*
                            {
                            // InternalQVTimperative.g:7058:2: ( (lv_ownedParts_2_0= ruleTuplePartCS ) )
                            // InternalQVTimperative.g:7059:1: (lv_ownedParts_2_0= ruleTuplePartCS )
                            {
                            // InternalQVTimperative.g:7059:1: (lv_ownedParts_2_0= ruleTuplePartCS )
                            // InternalQVTimperative.g:7060:3: lv_ownedParts_2_0= ruleTuplePartCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getTupleTypeCSAccess().getOwnedPartsTuplePartCSParserRuleCall_1_1_0_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_50);
                            lv_ownedParts_2_0=ruleTuplePartCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTupleTypeCSRule());
                              	        }
                                     		add(
                                     			current,
                                     			"ownedParts",
                                      		lv_ownedParts_2_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TuplePartCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }

                            // InternalQVTimperative.g:7076:2: (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) ) )*
                            loop158:
                            do {
                                int alt158=2;
                                int LA158_0 = input.LA(1);

                                if ( (LA158_0==18) ) {
                                    alt158=1;
                                }


                                switch (alt158) {
                            	case 1 :
                            	    // InternalQVTimperative.g:7076:4: otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTuplePartCS ) )
                            	    {
                            	    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_3, grammarAccess.getTupleTypeCSAccess().getCommaKeyword_1_1_1_0());

                            	    }
                            	    // InternalQVTimperative.g:7080:1: ( (lv_ownedParts_4_0= ruleTuplePartCS ) )
                            	    // InternalQVTimperative.g:7081:1: (lv_ownedParts_4_0= ruleTuplePartCS )
                            	    {
                            	    // InternalQVTimperative.g:7081:1: (lv_ownedParts_4_0= ruleTuplePartCS )
                            	    // InternalQVTimperative.g:7082:3: lv_ownedParts_4_0= ruleTuplePartCS
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      	        newCompositeNode(grammarAccess.getTupleTypeCSAccess().getOwnedPartsTuplePartCSParserRuleCall_1_1_1_1_0());

                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_50);
                            	    lv_ownedParts_4_0=ruleTuplePartCS();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getTupleTypeCSRule());
                            	      	        }
                            	             		add(
                            	             			current,
                            	             			"ownedParts",
                            	              		lv_ownedParts_4_0,
                            	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TuplePartCS");
                            	      	        afterParserOrEnumRuleCall();

                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop158;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_5=(Token)match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getTupleTypeCSAccess().getRightParenthesisKeyword_1_2());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTupleTypeCS"


    // $ANTLR start "entryRuleTuplePartCS"
    // InternalQVTimperative.g:7110:1: entryRuleTuplePartCS returns [EObject current=null] : iv_ruleTuplePartCS= ruleTuplePartCS EOF ;
    public final EObject entryRuleTuplePartCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTuplePartCS = null;


        try {
            // InternalQVTimperative.g:7111:2: (iv_ruleTuplePartCS= ruleTuplePartCS EOF )
            // InternalQVTimperative.g:7112:2: iv_ruleTuplePartCS= ruleTuplePartCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTuplePartCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTuplePartCS=ruleTuplePartCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTuplePartCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTuplePartCS"


    // $ANTLR start "ruleTuplePartCS"
    // InternalQVTimperative.g:7119:1: ruleTuplePartCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) ) ;
    public final EObject ruleTuplePartCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedType_2_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:7122:28: ( ( ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) ) )
            // InternalQVTimperative.g:7123:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )
            {
            // InternalQVTimperative.g:7123:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )
            // InternalQVTimperative.g:7123:2: ( (lv_name_0_0= ruleUnrestrictedName ) ) otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) )
            {
            // InternalQVTimperative.g:7123:2: ( (lv_name_0_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:7124:1: (lv_name_0_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:7124:1: (lv_name_0_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:7125:3: lv_name_0_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTuplePartCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_11);
            lv_name_0_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTuplePartCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_0_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_1=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getTuplePartCSAccess().getColonKeyword_1());

            }
            // InternalQVTimperative.g:7145:1: ( (lv_ownedType_2_0= ruleTypeExpCS ) )
            // InternalQVTimperative.g:7146:1: (lv_ownedType_2_0= ruleTypeExpCS )
            {
            // InternalQVTimperative.g:7146:1: (lv_ownedType_2_0= ruleTypeExpCS )
            // InternalQVTimperative.g:7147:3: lv_ownedType_2_0= ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTuplePartCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedType_2_0=ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTuplePartCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedType",
                      		lv_ownedType_2_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTuplePartCS"


    // $ANTLR start "entryRuleCollectionLiteralExpCS"
    // InternalQVTimperative.g:7171:1: entryRuleCollectionLiteralExpCS returns [EObject current=null] : iv_ruleCollectionLiteralExpCS= ruleCollectionLiteralExpCS EOF ;
    public final EObject entryRuleCollectionLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCollectionLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:7172:2: (iv_ruleCollectionLiteralExpCS= ruleCollectionLiteralExpCS EOF )
            // InternalQVTimperative.g:7173:2: iv_ruleCollectionLiteralExpCS= ruleCollectionLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCollectionLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCollectionLiteralExpCS=ruleCollectionLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCollectionLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCollectionLiteralExpCS"


    // $ANTLR start "ruleCollectionLiteralExpCS"
    // InternalQVTimperative.g:7180:1: ruleCollectionLiteralExpCS returns [EObject current=null] : ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleCollectionLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_ownedType_0_0 = null;

        EObject lv_ownedParts_2_0 = null;

        EObject lv_ownedParts_4_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:7183:28: ( ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )* )? otherlv_5= '}' ) )
            // InternalQVTimperative.g:7184:1: ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )* )? otherlv_5= '}' )
            {
            // InternalQVTimperative.g:7184:1: ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )* )? otherlv_5= '}' )
            // InternalQVTimperative.g:7184:2: ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )* )? otherlv_5= '}'
            {
            // InternalQVTimperative.g:7184:2: ( (lv_ownedType_0_0= ruleCollectionTypeCS ) )
            // InternalQVTimperative.g:7185:1: (lv_ownedType_0_0= ruleCollectionTypeCS )
            {
            // InternalQVTimperative.g:7185:1: (lv_ownedType_0_0= ruleCollectionTypeCS )
            // InternalQVTimperative.g:7186:3: lv_ownedType_0_0= ruleCollectionTypeCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedTypeCollectionTypeCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_31);
            lv_ownedType_0_0=ruleCollectionTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCollectionLiteralExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedType",
                      		lv_ownedType_0_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CollectionTypeCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_113); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getCollectionLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());

            }
            // InternalQVTimperative.g:7206:1: ( ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )* )?
            int alt162=2;
            int LA162_0 = input.LA(1);

            if ( (LA162_0==RULE_SINGLE_QUOTED_STRING||(LA162_0>=RULE_INT && LA162_0<=RULE_ESCAPED_ID)||LA162_0==17||LA162_0==19||(LA162_0>=22 && LA162_0<=26)||(LA162_0>=28 && LA162_0<=31)||LA162_0==34||(LA162_0>=37 && LA162_0<=39)||(LA162_0>=43 && LA162_0<=49)||(LA162_0>=51 && LA162_0<=53)||(LA162_0>=55 && LA162_0<=57)||(LA162_0>=59 && LA162_0<=64)||LA162_0==66||LA162_0==68||LA162_0==70||LA162_0==73||LA162_0==75||LA162_0==77||(LA162_0>=79 && LA162_0<=83)||(LA162_0>=85 && LA162_0<=90)||LA162_0==92||LA162_0==94||(LA162_0>=96 && LA162_0<=101)||(LA162_0>=116 && LA162_0<=130)||LA162_0==133||(LA162_0>=135 && LA162_0<=138)||LA162_0==144||(LA162_0>=149 && LA162_0<=150)) ) {
                alt162=1;
            }
            switch (alt162) {
                case 1 :
                    // InternalQVTimperative.g:7206:2: ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )*
                    {
                    // InternalQVTimperative.g:7206:2: ( (lv_ownedParts_2_0= ruleCollectionLiteralPartCS ) )
                    // InternalQVTimperative.g:7207:1: (lv_ownedParts_2_0= ruleCollectionLiteralPartCS )
                    {
                    // InternalQVTimperative.g:7207:1: (lv_ownedParts_2_0= ruleCollectionLiteralPartCS )
                    // InternalQVTimperative.g:7208:3: lv_ownedParts_2_0= ruleCollectionLiteralPartCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedPartsCollectionLiteralPartCSParserRuleCall_2_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_114);
                    lv_ownedParts_2_0=ruleCollectionLiteralPartCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCollectionLiteralExpCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedParts",
                              		lv_ownedParts_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CollectionLiteralPartCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:7224:2: (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) ) )*
                    loop161:
                    do {
                        int alt161=2;
                        int LA161_0 = input.LA(1);

                        if ( (LA161_0==18) ) {
                            alt161=1;
                        }


                        switch (alt161) {
                    	case 1 :
                    	    // InternalQVTimperative.g:7224:4: otherlv_3= ',' ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) )
                    	    {
                    	    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_115); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getCollectionLiteralExpCSAccess().getCommaKeyword_2_1_0());

                    	    }
                    	    // InternalQVTimperative.g:7228:1: ( (lv_ownedParts_4_0= ruleCollectionLiteralPartCS ) )
                    	    // InternalQVTimperative.g:7229:1: (lv_ownedParts_4_0= ruleCollectionLiteralPartCS )
                    	    {
                    	    // InternalQVTimperative.g:7229:1: (lv_ownedParts_4_0= ruleCollectionLiteralPartCS )
                    	    // InternalQVTimperative.g:7230:3: lv_ownedParts_4_0= ruleCollectionLiteralPartCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedPartsCollectionLiteralPartCSParserRuleCall_2_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_114);
                    	    lv_ownedParts_4_0=ruleCollectionLiteralPartCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getCollectionLiteralExpCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedParts",
                    	              		lv_ownedParts_4_0,
                    	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CollectionLiteralPartCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop161;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getCollectionLiteralExpCSAccess().getRightCurlyBracketKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCollectionLiteralExpCS"


    // $ANTLR start "entryRuleCollectionLiteralPartCS"
    // InternalQVTimperative.g:7258:1: entryRuleCollectionLiteralPartCS returns [EObject current=null] : iv_ruleCollectionLiteralPartCS= ruleCollectionLiteralPartCS EOF ;
    public final EObject entryRuleCollectionLiteralPartCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCollectionLiteralPartCS = null;


        try {
            // InternalQVTimperative.g:7259:2: (iv_ruleCollectionLiteralPartCS= ruleCollectionLiteralPartCS EOF )
            // InternalQVTimperative.g:7260:2: iv_ruleCollectionLiteralPartCS= ruleCollectionLiteralPartCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCollectionLiteralPartCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCollectionLiteralPartCS=ruleCollectionLiteralPartCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCollectionLiteralPartCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCollectionLiteralPartCS"


    // $ANTLR start "ruleCollectionLiteralPartCS"
    // InternalQVTimperative.g:7267:1: ruleCollectionLiteralPartCS returns [EObject current=null] : ( ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )? ) | ( (lv_ownedExpression_3_0= rulePatternExpCS ) ) ) ;
    public final EObject ruleCollectionLiteralPartCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedExpression_0_0 = null;

        EObject lv_ownedLastExpression_2_0 = null;

        EObject lv_ownedExpression_3_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:7270:28: ( ( ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )? ) | ( (lv_ownedExpression_3_0= rulePatternExpCS ) ) ) )
            // InternalQVTimperative.g:7271:1: ( ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )? ) | ( (lv_ownedExpression_3_0= rulePatternExpCS ) ) )
            {
            // InternalQVTimperative.g:7271:1: ( ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )? ) | ( (lv_ownedExpression_3_0= rulePatternExpCS ) ) )
            int alt164=2;
            alt164 = dfa164.predict(input);
            switch (alt164) {
                case 1 :
                    // InternalQVTimperative.g:7271:2: ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )? )
                    {
                    // InternalQVTimperative.g:7271:2: ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )? )
                    // InternalQVTimperative.g:7271:3: ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )?
                    {
                    // InternalQVTimperative.g:7271:3: ( (lv_ownedExpression_0_0= ruleExpCS ) )
                    // InternalQVTimperative.g:7272:1: (lv_ownedExpression_0_0= ruleExpCS )
                    {
                    // InternalQVTimperative.g:7272:1: (lv_ownedExpression_0_0= ruleExpCS )
                    // InternalQVTimperative.g:7273:3: lv_ownedExpression_0_0= ruleExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedExpressionExpCSParserRuleCall_0_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_116);
                    lv_ownedExpression_0_0=ruleExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCollectionLiteralPartCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedExpression",
                              		lv_ownedExpression_0_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:7289:2: (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )?
                    int alt163=2;
                    int LA163_0 = input.LA(1);

                    if ( (LA163_0==131) ) {
                        alt163=1;
                    }
                    switch (alt163) {
                        case 1 :
                            // InternalQVTimperative.g:7289:4: otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) )
                            {
                            otherlv_1=(Token)match(input,131,FollowSets000.FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_1, grammarAccess.getCollectionLiteralPartCSAccess().getFullStopFullStopKeyword_0_1_0());

                            }
                            // InternalQVTimperative.g:7293:1: ( (lv_ownedLastExpression_2_0= ruleExpCS ) )
                            // InternalQVTimperative.g:7294:1: (lv_ownedLastExpression_2_0= ruleExpCS )
                            {
                            // InternalQVTimperative.g:7294:1: (lv_ownedLastExpression_2_0= ruleExpCS )
                            // InternalQVTimperative.g:7295:3: lv_ownedLastExpression_2_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedLastExpressionExpCSParserRuleCall_0_1_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedLastExpression_2_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getCollectionLiteralPartCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedLastExpression",
                                      		lv_ownedLastExpression_2_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:7312:6: ( (lv_ownedExpression_3_0= rulePatternExpCS ) )
                    {
                    // InternalQVTimperative.g:7312:6: ( (lv_ownedExpression_3_0= rulePatternExpCS ) )
                    // InternalQVTimperative.g:7313:1: (lv_ownedExpression_3_0= rulePatternExpCS )
                    {
                    // InternalQVTimperative.g:7313:1: (lv_ownedExpression_3_0= rulePatternExpCS )
                    // InternalQVTimperative.g:7314:3: lv_ownedExpression_3_0= rulePatternExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getCollectionLiteralPartCSAccess().getOwnedExpressionPatternExpCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedExpression_3_0=rulePatternExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCollectionLiteralPartCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedExpression",
                              		lv_ownedExpression_3_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PatternExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCollectionLiteralPartCS"


    // $ANTLR start "entryRuleCollectionPatternCS"
    // InternalQVTimperative.g:7338:1: entryRuleCollectionPatternCS returns [EObject current=null] : iv_ruleCollectionPatternCS= ruleCollectionPatternCS EOF ;
    public final EObject entryRuleCollectionPatternCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCollectionPatternCS = null;


        try {
            // InternalQVTimperative.g:7339:2: (iv_ruleCollectionPatternCS= ruleCollectionPatternCS EOF )
            // InternalQVTimperative.g:7340:2: iv_ruleCollectionPatternCS= ruleCollectionPatternCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCollectionPatternCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCollectionPatternCS=ruleCollectionPatternCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCollectionPatternCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCollectionPatternCS"


    // $ANTLR start "ruleCollectionPatternCS"
    // InternalQVTimperative.g:7347:1: ruleCollectionPatternCS returns [EObject current=null] : ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= rulePatternExpCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )* (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) ) )? otherlv_7= '}' ) ;
    public final EObject ruleCollectionPatternCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_ownedType_0_0 = null;

        EObject lv_ownedParts_2_0 = null;

        EObject lv_ownedParts_4_0 = null;

        AntlrDatatypeRuleToken lv_restVariableName_6_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:7350:28: ( ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= rulePatternExpCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )* (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) ) )? otherlv_7= '}' ) )
            // InternalQVTimperative.g:7351:1: ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= rulePatternExpCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )* (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) ) )? otherlv_7= '}' )
            {
            // InternalQVTimperative.g:7351:1: ( ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= rulePatternExpCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )* (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) ) )? otherlv_7= '}' )
            // InternalQVTimperative.g:7351:2: ( (lv_ownedType_0_0= ruleCollectionTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= rulePatternExpCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )* (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) ) )? otherlv_7= '}'
            {
            // InternalQVTimperative.g:7351:2: ( (lv_ownedType_0_0= ruleCollectionTypeCS ) )
            // InternalQVTimperative.g:7352:1: (lv_ownedType_0_0= ruleCollectionTypeCS )
            {
            // InternalQVTimperative.g:7352:1: (lv_ownedType_0_0= ruleCollectionTypeCS )
            // InternalQVTimperative.g:7353:3: lv_ownedType_0_0= ruleCollectionTypeCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getCollectionPatternCSAccess().getOwnedTypeCollectionTypeCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_31);
            lv_ownedType_0_0=ruleCollectionTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCollectionPatternCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedType",
                      		lv_ownedType_0_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CollectionTypeCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_113); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getCollectionPatternCSAccess().getLeftCurlyBracketKeyword_1());

            }
            // InternalQVTimperative.g:7373:1: ( ( (lv_ownedParts_2_0= rulePatternExpCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )* (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) ) )?
            int alt166=2;
            int LA166_0 = input.LA(1);

            if ( ((LA166_0>=RULE_SIMPLE_ID && LA166_0<=RULE_ESCAPED_ID)||LA166_0==17||LA166_0==19||(LA166_0>=22 && LA166_0<=26)||(LA166_0>=28 && LA166_0<=31)||LA166_0==34||(LA166_0>=38 && LA166_0<=39)||(LA166_0>=43 && LA166_0<=49)||(LA166_0>=51 && LA166_0<=52)||(LA166_0>=55 && LA166_0<=57)||(LA166_0>=59 && LA166_0<=64)||LA166_0==66||LA166_0==68||LA166_0==70||LA166_0==73||LA166_0==75||LA166_0==77||(LA166_0>=79 && LA166_0<=83)||(LA166_0>=85 && LA166_0<=90)||LA166_0==92||LA166_0==94||(LA166_0>=96 && LA166_0<=99)) ) {
                alt166=1;
            }
            switch (alt166) {
                case 1 :
                    // InternalQVTimperative.g:7373:2: ( (lv_ownedParts_2_0= rulePatternExpCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )* (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) )
                    {
                    // InternalQVTimperative.g:7373:2: ( (lv_ownedParts_2_0= rulePatternExpCS ) )
                    // InternalQVTimperative.g:7374:1: (lv_ownedParts_2_0= rulePatternExpCS )
                    {
                    // InternalQVTimperative.g:7374:1: (lv_ownedParts_2_0= rulePatternExpCS )
                    // InternalQVTimperative.g:7375:3: lv_ownedParts_2_0= rulePatternExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getCollectionPatternCSAccess().getOwnedPartsPatternExpCSParserRuleCall_2_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_117);
                    lv_ownedParts_2_0=rulePatternExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCollectionPatternCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedParts",
                              		lv_ownedParts_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PatternExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:7391:2: (otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) ) )*
                    loop165:
                    do {
                        int alt165=2;
                        int LA165_0 = input.LA(1);

                        if ( (LA165_0==18) ) {
                            alt165=1;
                        }


                        switch (alt165) {
                    	case 1 :
                    	    // InternalQVTimperative.g:7391:4: otherlv_3= ',' ( (lv_ownedParts_4_0= rulePatternExpCS ) )
                    	    {
                    	    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_115); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getCollectionPatternCSAccess().getCommaKeyword_2_1_0());

                    	    }
                    	    // InternalQVTimperative.g:7395:1: ( (lv_ownedParts_4_0= rulePatternExpCS ) )
                    	    // InternalQVTimperative.g:7396:1: (lv_ownedParts_4_0= rulePatternExpCS )
                    	    {
                    	    // InternalQVTimperative.g:7396:1: (lv_ownedParts_4_0= rulePatternExpCS )
                    	    // InternalQVTimperative.g:7397:3: lv_ownedParts_4_0= rulePatternExpCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getCollectionPatternCSAccess().getOwnedPartsPatternExpCSParserRuleCall_2_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_117);
                    	    lv_ownedParts_4_0=rulePatternExpCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getCollectionPatternCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedParts",
                    	              		lv_ownedParts_4_0,
                    	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PatternExpCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop165;
                        }
                    } while (true);

                    // InternalQVTimperative.g:7413:4: (otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) ) )
                    // InternalQVTimperative.g:7413:6: otherlv_5= '++' ( (lv_restVariableName_6_0= ruleIdentifier ) )
                    {
                    otherlv_5=(Token)match(input,132,FollowSets000.FOLLOW_118); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getCollectionPatternCSAccess().getPlusSignPlusSignKeyword_2_2_0());

                    }
                    // InternalQVTimperative.g:7417:1: ( (lv_restVariableName_6_0= ruleIdentifier ) )
                    // InternalQVTimperative.g:7418:1: (lv_restVariableName_6_0= ruleIdentifier )
                    {
                    // InternalQVTimperative.g:7418:1: (lv_restVariableName_6_0= ruleIdentifier )
                    // InternalQVTimperative.g:7419:3: lv_restVariableName_6_0= ruleIdentifier
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getCollectionPatternCSAccess().getRestVariableNameIdentifierParserRuleCall_2_2_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_52);
                    lv_restVariableName_6_0=ruleIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCollectionPatternCSRule());
                      	        }
                             		set(
                             			current,
                             			"restVariableName",
                              		lv_restVariableName_6_0,
                              		"org.eclipse.ocl.xtext.base.Base.Identifier");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getCollectionPatternCSAccess().getRightCurlyBracketKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCollectionPatternCS"


    // $ANTLR start "entryRuleShadowPartCS"
    // InternalQVTimperative.g:7447:1: entryRuleShadowPartCS returns [EObject current=null] : iv_ruleShadowPartCS= ruleShadowPartCS EOF ;
    public final EObject entryRuleShadowPartCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShadowPartCS = null;


        try {
            // InternalQVTimperative.g:7448:2: (iv_ruleShadowPartCS= ruleShadowPartCS EOF )
            // InternalQVTimperative.g:7449:2: iv_ruleShadowPartCS= ruleShadowPartCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShadowPartCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleShadowPartCS=ruleShadowPartCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShadowPartCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShadowPartCS"


    // $ANTLR start "ruleShadowPartCS"
    // InternalQVTimperative.g:7456:1: ruleShadowPartCS returns [EObject current=null] : ( ( ( ( ruleUnrestrictedName ) ) otherlv_1= '=' ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) ) ) | ( (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS ) ) ) ;
    public final EObject ruleShadowPartCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedInitExpression_2_1 = null;

        EObject lv_ownedInitExpression_2_2 = null;

        EObject lv_ownedInitExpression_3_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:7459:28: ( ( ( ( ( ruleUnrestrictedName ) ) otherlv_1= '=' ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) ) ) | ( (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS ) ) ) )
            // InternalQVTimperative.g:7460:1: ( ( ( ( ruleUnrestrictedName ) ) otherlv_1= '=' ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) ) ) | ( (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS ) ) )
            {
            // InternalQVTimperative.g:7460:1: ( ( ( ( ruleUnrestrictedName ) ) otherlv_1= '=' ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) ) ) | ( (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS ) ) )
            int alt168=2;
            int LA168_0 = input.LA(1);

            if ( ((LA168_0>=RULE_SIMPLE_ID && LA168_0<=RULE_ESCAPED_ID)||LA168_0==17||LA168_0==19||(LA168_0>=22 && LA168_0<=23)||(LA168_0>=25 && LA168_0<=26)||(LA168_0>=28 && LA168_0<=31)||LA168_0==34||(LA168_0>=38 && LA168_0<=39)||(LA168_0>=43 && LA168_0<=49)||(LA168_0>=51 && LA168_0<=52)||(LA168_0>=55 && LA168_0<=57)||(LA168_0>=59 && LA168_0<=64)||LA168_0==66||LA168_0==68||LA168_0==70||LA168_0==73||LA168_0==75||LA168_0==77||(LA168_0>=79 && LA168_0<=83)||(LA168_0>=85 && LA168_0<=90)||LA168_0==92||LA168_0==94||(LA168_0>=96 && LA168_0<=99)) ) {
                alt168=1;
            }
            else if ( (LA168_0==RULE_SINGLE_QUOTED_STRING) ) {
                alt168=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 168, 0, input);

                throw nvae;
            }
            switch (alt168) {
                case 1 :
                    // InternalQVTimperative.g:7460:2: ( ( ( ruleUnrestrictedName ) ) otherlv_1= '=' ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) ) )
                    {
                    // InternalQVTimperative.g:7460:2: ( ( ( ruleUnrestrictedName ) ) otherlv_1= '=' ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) ) )
                    // InternalQVTimperative.g:7460:3: ( ( ruleUnrestrictedName ) ) otherlv_1= '=' ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) )
                    {
                    // InternalQVTimperative.g:7460:3: ( ( ruleUnrestrictedName ) )
                    // InternalQVTimperative.g:7461:1: ( ruleUnrestrictedName )
                    {
                    // InternalQVTimperative.g:7461:1: ( ruleUnrestrictedName )
                    // InternalQVTimperative.g:7462:3: ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      		  /* */

                    }
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getShadowPartCSRule());
                      	        }

                    }
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getShadowPartCSAccess().getReferredPropertyPropertyCrossReference_0_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_119);
                    ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    otherlv_1=(Token)match(input,50,FollowSets000.FOLLOW_115); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getShadowPartCSAccess().getEqualsSignKeyword_0_1());

                    }
                    // InternalQVTimperative.g:7482:1: ( ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) ) )
                    // InternalQVTimperative.g:7483:1: ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) )
                    {
                    // InternalQVTimperative.g:7483:1: ( (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS ) )
                    // InternalQVTimperative.g:7484:1: (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS )
                    {
                    // InternalQVTimperative.g:7484:1: (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS )
                    int alt167=2;
                    alt167 = dfa167.predict(input);
                    switch (alt167) {
                        case 1 :
                            // InternalQVTimperative.g:7485:3: lv_ownedInitExpression_2_1= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getShadowPartCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_2_0_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedInitExpression_2_1=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getShadowPartCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedInitExpression",
                                      		lv_ownedInitExpression_2_1,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }
                            break;
                        case 2 :
                            // InternalQVTimperative.g:7500:8: lv_ownedInitExpression_2_2= rulePatternExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getShadowPartCSAccess().getOwnedInitExpressionPatternExpCSParserRuleCall_0_2_0_1());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedInitExpression_2_2=rulePatternExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getShadowPartCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedInitExpression",
                                      		lv_ownedInitExpression_2_2,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PatternExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:7519:6: ( (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS ) )
                    {
                    // InternalQVTimperative.g:7519:6: ( (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS ) )
                    // InternalQVTimperative.g:7520:1: (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS )
                    {
                    // InternalQVTimperative.g:7520:1: (lv_ownedInitExpression_3_0= ruleStringLiteralExpCS )
                    // InternalQVTimperative.g:7521:3: lv_ownedInitExpression_3_0= ruleStringLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getShadowPartCSAccess().getOwnedInitExpressionStringLiteralExpCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedInitExpression_3_0=ruleStringLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getShadowPartCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedInitExpression",
                              		lv_ownedInitExpression_3_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.StringLiteralExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShadowPartCS"


    // $ANTLR start "entryRulePatternExpCS"
    // InternalQVTimperative.g:7545:1: entryRulePatternExpCS returns [EObject current=null] : iv_rulePatternExpCS= rulePatternExpCS EOF ;
    public final EObject entryRulePatternExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePatternExpCS = null;


        try {
            // InternalQVTimperative.g:7546:2: (iv_rulePatternExpCS= rulePatternExpCS EOF )
            // InternalQVTimperative.g:7547:2: iv_rulePatternExpCS= rulePatternExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPatternExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePatternExpCS=rulePatternExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePatternExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePatternExpCS"


    // $ANTLR start "rulePatternExpCS"
    // InternalQVTimperative.g:7554:1: rulePatternExpCS returns [EObject current=null] : ( ( (lv_patternVariableName_0_0= ruleUnrestrictedName ) )? otherlv_1= ':' ( (lv_ownedPatternType_2_0= ruleTypeExpCS ) ) ) ;
    public final EObject rulePatternExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_patternVariableName_0_0 = null;

        EObject lv_ownedPatternType_2_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:7557:28: ( ( ( (lv_patternVariableName_0_0= ruleUnrestrictedName ) )? otherlv_1= ':' ( (lv_ownedPatternType_2_0= ruleTypeExpCS ) ) ) )
            // InternalQVTimperative.g:7558:1: ( ( (lv_patternVariableName_0_0= ruleUnrestrictedName ) )? otherlv_1= ':' ( (lv_ownedPatternType_2_0= ruleTypeExpCS ) ) )
            {
            // InternalQVTimperative.g:7558:1: ( ( (lv_patternVariableName_0_0= ruleUnrestrictedName ) )? otherlv_1= ':' ( (lv_ownedPatternType_2_0= ruleTypeExpCS ) ) )
            // InternalQVTimperative.g:7558:2: ( (lv_patternVariableName_0_0= ruleUnrestrictedName ) )? otherlv_1= ':' ( (lv_ownedPatternType_2_0= ruleTypeExpCS ) )
            {
            // InternalQVTimperative.g:7558:2: ( (lv_patternVariableName_0_0= ruleUnrestrictedName ) )?
            int alt169=2;
            int LA169_0 = input.LA(1);

            if ( ((LA169_0>=RULE_SIMPLE_ID && LA169_0<=RULE_ESCAPED_ID)||LA169_0==17||LA169_0==19||(LA169_0>=22 && LA169_0<=23)||(LA169_0>=25 && LA169_0<=26)||(LA169_0>=28 && LA169_0<=31)||LA169_0==34||(LA169_0>=38 && LA169_0<=39)||(LA169_0>=43 && LA169_0<=49)||(LA169_0>=51 && LA169_0<=52)||(LA169_0>=55 && LA169_0<=57)||(LA169_0>=59 && LA169_0<=64)||LA169_0==66||LA169_0==68||LA169_0==70||LA169_0==73||LA169_0==75||LA169_0==77||(LA169_0>=79 && LA169_0<=83)||(LA169_0>=85 && LA169_0<=90)||LA169_0==92||LA169_0==94||(LA169_0>=96 && LA169_0<=99)) ) {
                alt169=1;
            }
            switch (alt169) {
                case 1 :
                    // InternalQVTimperative.g:7559:1: (lv_patternVariableName_0_0= ruleUnrestrictedName )
                    {
                    // InternalQVTimperative.g:7559:1: (lv_patternVariableName_0_0= ruleUnrestrictedName )
                    // InternalQVTimperative.g:7560:3: lv_patternVariableName_0_0= ruleUnrestrictedName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getPatternExpCSAccess().getPatternVariableNameUnrestrictedNameParserRuleCall_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_patternVariableName_0_0=ruleUnrestrictedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPatternExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"patternVariableName",
                              		lv_patternVariableName_0_0,
                              		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPatternExpCSAccess().getColonKeyword_1());

            }
            // InternalQVTimperative.g:7580:1: ( (lv_ownedPatternType_2_0= ruleTypeExpCS ) )
            // InternalQVTimperative.g:7581:1: (lv_ownedPatternType_2_0= ruleTypeExpCS )
            {
            // InternalQVTimperative.g:7581:1: (lv_ownedPatternType_2_0= ruleTypeExpCS )
            // InternalQVTimperative.g:7582:3: lv_ownedPatternType_2_0= ruleTypeExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getPatternExpCSAccess().getOwnedPatternTypeTypeExpCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedPatternType_2_0=ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPatternExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedPatternType",
                      		lv_ownedPatternType_2_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePatternExpCS"


    // $ANTLR start "entryRuleLambdaLiteralExpCS"
    // InternalQVTimperative.g:7606:1: entryRuleLambdaLiteralExpCS returns [EObject current=null] : iv_ruleLambdaLiteralExpCS= ruleLambdaLiteralExpCS EOF ;
    public final EObject entryRuleLambdaLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLambdaLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:7607:2: (iv_ruleLambdaLiteralExpCS= ruleLambdaLiteralExpCS EOF )
            // InternalQVTimperative.g:7608:2: iv_ruleLambdaLiteralExpCS= ruleLambdaLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLambdaLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLambdaLiteralExpCS=ruleLambdaLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLambdaLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLambdaLiteralExpCS"


    // $ANTLR start "ruleLambdaLiteralExpCS"
    // InternalQVTimperative.g:7615:1: ruleLambdaLiteralExpCS returns [EObject current=null] : (otherlv_0= 'Lambda' otherlv_1= '{' ( (lv_ownedExpressionCS_2_0= ruleExpCS ) ) otherlv_3= '}' ) ;
    public final EObject ruleLambdaLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_ownedExpressionCS_2_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:7618:28: ( (otherlv_0= 'Lambda' otherlv_1= '{' ( (lv_ownedExpressionCS_2_0= ruleExpCS ) ) otherlv_3= '}' ) )
            // InternalQVTimperative.g:7619:1: (otherlv_0= 'Lambda' otherlv_1= '{' ( (lv_ownedExpressionCS_2_0= ruleExpCS ) ) otherlv_3= '}' )
            {
            // InternalQVTimperative.g:7619:1: (otherlv_0= 'Lambda' otherlv_1= '{' ( (lv_ownedExpressionCS_2_0= ruleExpCS ) ) otherlv_3= '}' )
            // InternalQVTimperative.g:7619:3: otherlv_0= 'Lambda' otherlv_1= '{' ( (lv_ownedExpressionCS_2_0= ruleExpCS ) ) otherlv_3= '}'
            {
            otherlv_0=(Token)match(input,133,FollowSets000.FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getLambdaLiteralExpCSAccess().getLambdaKeyword_0());

            }
            otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getLambdaLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());

            }
            // InternalQVTimperative.g:7627:1: ( (lv_ownedExpressionCS_2_0= ruleExpCS ) )
            // InternalQVTimperative.g:7628:1: (lv_ownedExpressionCS_2_0= ruleExpCS )
            {
            // InternalQVTimperative.g:7628:1: (lv_ownedExpressionCS_2_0= ruleExpCS )
            // InternalQVTimperative.g:7629:3: lv_ownedExpressionCS_2_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getLambdaLiteralExpCSAccess().getOwnedExpressionCSExpCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_52);
            lv_ownedExpressionCS_2_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLambdaLiteralExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedExpressionCS",
                      		lv_ownedExpressionCS_2_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_3=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getLambdaLiteralExpCSAccess().getRightCurlyBracketKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLambdaLiteralExpCS"


    // $ANTLR start "entryRuleMapLiteralExpCS"
    // InternalQVTimperative.g:7657:1: entryRuleMapLiteralExpCS returns [EObject current=null] : iv_ruleMapLiteralExpCS= ruleMapLiteralExpCS EOF ;
    public final EObject entryRuleMapLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:7658:2: (iv_ruleMapLiteralExpCS= ruleMapLiteralExpCS EOF )
            // InternalQVTimperative.g:7659:2: iv_ruleMapLiteralExpCS= ruleMapLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMapLiteralExpCS=ruleMapLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapLiteralExpCS"


    // $ANTLR start "ruleMapLiteralExpCS"
    // InternalQVTimperative.g:7666:1: ruleMapLiteralExpCS returns [EObject current=null] : ( ( (lv_ownedType_0_0= ruleMapTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleMapLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_ownedType_0_0 = null;

        EObject lv_ownedParts_2_0 = null;

        EObject lv_ownedParts_4_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:7669:28: ( ( ( (lv_ownedType_0_0= ruleMapTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )* )? otherlv_5= '}' ) )
            // InternalQVTimperative.g:7670:1: ( ( (lv_ownedType_0_0= ruleMapTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )* )? otherlv_5= '}' )
            {
            // InternalQVTimperative.g:7670:1: ( ( (lv_ownedType_0_0= ruleMapTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )* )? otherlv_5= '}' )
            // InternalQVTimperative.g:7670:2: ( (lv_ownedType_0_0= ruleMapTypeCS ) ) otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )* )? otherlv_5= '}'
            {
            // InternalQVTimperative.g:7670:2: ( (lv_ownedType_0_0= ruleMapTypeCS ) )
            // InternalQVTimperative.g:7671:1: (lv_ownedType_0_0= ruleMapTypeCS )
            {
            // InternalQVTimperative.g:7671:1: (lv_ownedType_0_0= ruleMapTypeCS )
            // InternalQVTimperative.g:7672:3: lv_ownedType_0_0= ruleMapTypeCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getMapLiteralExpCSAccess().getOwnedTypeMapTypeCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_31);
            lv_ownedType_0_0=ruleMapTypeCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMapLiteralExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedType",
                      		lv_ownedType_0_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.MapTypeCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_120); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getMapLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());

            }
            // InternalQVTimperative.g:7692:1: ( ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )* )?
            int alt171=2;
            int LA171_0 = input.LA(1);

            if ( (LA171_0==RULE_SINGLE_QUOTED_STRING||(LA171_0>=RULE_INT && LA171_0<=RULE_ESCAPED_ID)||LA171_0==17||LA171_0==19||(LA171_0>=22 && LA171_0<=23)||(LA171_0>=25 && LA171_0<=26)||(LA171_0>=28 && LA171_0<=31)||LA171_0==34||(LA171_0>=37 && LA171_0<=39)||(LA171_0>=43 && LA171_0<=49)||(LA171_0>=51 && LA171_0<=53)||(LA171_0>=55 && LA171_0<=57)||(LA171_0>=59 && LA171_0<=64)||LA171_0==66||LA171_0==68||LA171_0==70||LA171_0==73||LA171_0==75||LA171_0==77||(LA171_0>=79 && LA171_0<=83)||(LA171_0>=85 && LA171_0<=90)||LA171_0==92||LA171_0==94||(LA171_0>=96 && LA171_0<=101)||(LA171_0>=116 && LA171_0<=130)||LA171_0==133||(LA171_0>=135 && LA171_0<=138)||LA171_0==144||(LA171_0>=149 && LA171_0<=150)) ) {
                alt171=1;
            }
            switch (alt171) {
                case 1 :
                    // InternalQVTimperative.g:7692:2: ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )*
                    {
                    // InternalQVTimperative.g:7692:2: ( (lv_ownedParts_2_0= ruleMapLiteralPartCS ) )
                    // InternalQVTimperative.g:7693:1: (lv_ownedParts_2_0= ruleMapLiteralPartCS )
                    {
                    // InternalQVTimperative.g:7693:1: (lv_ownedParts_2_0= ruleMapLiteralPartCS )
                    // InternalQVTimperative.g:7694:3: lv_ownedParts_2_0= ruleMapLiteralPartCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getMapLiteralExpCSAccess().getOwnedPartsMapLiteralPartCSParserRuleCall_2_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_114);
                    lv_ownedParts_2_0=ruleMapLiteralPartCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMapLiteralExpCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedParts",
                              		lv_ownedParts_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.MapLiteralPartCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:7710:2: (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) ) )*
                    loop170:
                    do {
                        int alt170=2;
                        int LA170_0 = input.LA(1);

                        if ( (LA170_0==18) ) {
                            alt170=1;
                        }


                        switch (alt170) {
                    	case 1 :
                    	    // InternalQVTimperative.g:7710:4: otherlv_3= ',' ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) )
                    	    {
                    	    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getMapLiteralExpCSAccess().getCommaKeyword_2_1_0());

                    	    }
                    	    // InternalQVTimperative.g:7714:1: ( (lv_ownedParts_4_0= ruleMapLiteralPartCS ) )
                    	    // InternalQVTimperative.g:7715:1: (lv_ownedParts_4_0= ruleMapLiteralPartCS )
                    	    {
                    	    // InternalQVTimperative.g:7715:1: (lv_ownedParts_4_0= ruleMapLiteralPartCS )
                    	    // InternalQVTimperative.g:7716:3: lv_ownedParts_4_0= ruleMapLiteralPartCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getMapLiteralExpCSAccess().getOwnedPartsMapLiteralPartCSParserRuleCall_2_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_114);
                    	    lv_ownedParts_4_0=ruleMapLiteralPartCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMapLiteralExpCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedParts",
                    	              		lv_ownedParts_4_0,
                    	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.MapLiteralPartCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop170;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getMapLiteralExpCSAccess().getRightCurlyBracketKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapLiteralExpCS"


    // $ANTLR start "entryRuleMapLiteralPartCS"
    // InternalQVTimperative.g:7744:1: entryRuleMapLiteralPartCS returns [EObject current=null] : iv_ruleMapLiteralPartCS= ruleMapLiteralPartCS EOF ;
    public final EObject entryRuleMapLiteralPartCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapLiteralPartCS = null;


        try {
            // InternalQVTimperative.g:7745:2: (iv_ruleMapLiteralPartCS= ruleMapLiteralPartCS EOF )
            // InternalQVTimperative.g:7746:2: iv_ruleMapLiteralPartCS= ruleMapLiteralPartCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapLiteralPartCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMapLiteralPartCS=ruleMapLiteralPartCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapLiteralPartCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapLiteralPartCS"


    // $ANTLR start "ruleMapLiteralPartCS"
    // InternalQVTimperative.g:7753:1: ruleMapLiteralPartCS returns [EObject current=null] : ( ( (lv_ownedKey_0_0= ruleExpCS ) ) otherlv_1= '<-' ( (lv_ownedValue_2_0= ruleExpCS ) ) ) ;
    public final EObject ruleMapLiteralPartCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedKey_0_0 = null;

        EObject lv_ownedValue_2_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:7756:28: ( ( ( (lv_ownedKey_0_0= ruleExpCS ) ) otherlv_1= '<-' ( (lv_ownedValue_2_0= ruleExpCS ) ) ) )
            // InternalQVTimperative.g:7757:1: ( ( (lv_ownedKey_0_0= ruleExpCS ) ) otherlv_1= '<-' ( (lv_ownedValue_2_0= ruleExpCS ) ) )
            {
            // InternalQVTimperative.g:7757:1: ( ( (lv_ownedKey_0_0= ruleExpCS ) ) otherlv_1= '<-' ( (lv_ownedValue_2_0= ruleExpCS ) ) )
            // InternalQVTimperative.g:7757:2: ( (lv_ownedKey_0_0= ruleExpCS ) ) otherlv_1= '<-' ( (lv_ownedValue_2_0= ruleExpCS ) )
            {
            // InternalQVTimperative.g:7757:2: ( (lv_ownedKey_0_0= ruleExpCS ) )
            // InternalQVTimperative.g:7758:1: (lv_ownedKey_0_0= ruleExpCS )
            {
            // InternalQVTimperative.g:7758:1: (lv_ownedKey_0_0= ruleExpCS )
            // InternalQVTimperative.g:7759:3: lv_ownedKey_0_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getMapLiteralPartCSAccess().getOwnedKeyExpCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_121);
            lv_ownedKey_0_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMapLiteralPartCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedKey",
                      		lv_ownedKey_0_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_1=(Token)match(input,134,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getMapLiteralPartCSAccess().getLessThanSignHyphenMinusKeyword_1());

            }
            // InternalQVTimperative.g:7779:1: ( (lv_ownedValue_2_0= ruleExpCS ) )
            // InternalQVTimperative.g:7780:1: (lv_ownedValue_2_0= ruleExpCS )
            {
            // InternalQVTimperative.g:7780:1: (lv_ownedValue_2_0= ruleExpCS )
            // InternalQVTimperative.g:7781:3: lv_ownedValue_2_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getMapLiteralPartCSAccess().getOwnedValueExpCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedValue_2_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMapLiteralPartCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedValue",
                      		lv_ownedValue_2_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapLiteralPartCS"


    // $ANTLR start "entryRulePrimitiveLiteralExpCS"
    // InternalQVTimperative.g:7805:1: entryRulePrimitiveLiteralExpCS returns [EObject current=null] : iv_rulePrimitiveLiteralExpCS= rulePrimitiveLiteralExpCS EOF ;
    public final EObject entryRulePrimitiveLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimitiveLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:7806:2: (iv_rulePrimitiveLiteralExpCS= rulePrimitiveLiteralExpCS EOF )
            // InternalQVTimperative.g:7807:2: iv_rulePrimitiveLiteralExpCS= rulePrimitiveLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrimitiveLiteralExpCS=rulePrimitiveLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimitiveLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimitiveLiteralExpCS"


    // $ANTLR start "rulePrimitiveLiteralExpCS"
    // InternalQVTimperative.g:7814:1: rulePrimitiveLiteralExpCS returns [EObject current=null] : (this_NumberLiteralExpCS_0= ruleNumberLiteralExpCS | this_StringLiteralExpCS_1= ruleStringLiteralExpCS | this_BooleanLiteralExpCS_2= ruleBooleanLiteralExpCS | this_UnlimitedNaturalLiteralExpCS_3= ruleUnlimitedNaturalLiteralExpCS | this_InvalidLiteralExpCS_4= ruleInvalidLiteralExpCS | this_NullLiteralExpCS_5= ruleNullLiteralExpCS ) ;
    public final EObject rulePrimitiveLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject this_NumberLiteralExpCS_0 = null;

        EObject this_StringLiteralExpCS_1 = null;

        EObject this_BooleanLiteralExpCS_2 = null;

        EObject this_UnlimitedNaturalLiteralExpCS_3 = null;

        EObject this_InvalidLiteralExpCS_4 = null;

        EObject this_NullLiteralExpCS_5 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:7817:28: ( (this_NumberLiteralExpCS_0= ruleNumberLiteralExpCS | this_StringLiteralExpCS_1= ruleStringLiteralExpCS | this_BooleanLiteralExpCS_2= ruleBooleanLiteralExpCS | this_UnlimitedNaturalLiteralExpCS_3= ruleUnlimitedNaturalLiteralExpCS | this_InvalidLiteralExpCS_4= ruleInvalidLiteralExpCS | this_NullLiteralExpCS_5= ruleNullLiteralExpCS ) )
            // InternalQVTimperative.g:7818:1: (this_NumberLiteralExpCS_0= ruleNumberLiteralExpCS | this_StringLiteralExpCS_1= ruleStringLiteralExpCS | this_BooleanLiteralExpCS_2= ruleBooleanLiteralExpCS | this_UnlimitedNaturalLiteralExpCS_3= ruleUnlimitedNaturalLiteralExpCS | this_InvalidLiteralExpCS_4= ruleInvalidLiteralExpCS | this_NullLiteralExpCS_5= ruleNullLiteralExpCS )
            {
            // InternalQVTimperative.g:7818:1: (this_NumberLiteralExpCS_0= ruleNumberLiteralExpCS | this_StringLiteralExpCS_1= ruleStringLiteralExpCS | this_BooleanLiteralExpCS_2= ruleBooleanLiteralExpCS | this_UnlimitedNaturalLiteralExpCS_3= ruleUnlimitedNaturalLiteralExpCS | this_InvalidLiteralExpCS_4= ruleInvalidLiteralExpCS | this_NullLiteralExpCS_5= ruleNullLiteralExpCS )
            int alt172=6;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt172=1;
                }
                break;
            case RULE_SINGLE_QUOTED_STRING:
                {
                alt172=2;
                }
                break;
            case 135:
            case 136:
                {
                alt172=3;
                }
                break;
            case 37:
                {
                alt172=4;
                }
                break;
            case 137:
                {
                alt172=5;
                }
                break;
            case 138:
                {
                alt172=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 172, 0, input);

                throw nvae;
            }

            switch (alt172) {
                case 1 :
                    // InternalQVTimperative.g:7819:2: this_NumberLiteralExpCS_0= ruleNumberLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getNumberLiteralExpCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NumberLiteralExpCS_0=ruleNumberLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NumberLiteralExpCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:7832:2: this_StringLiteralExpCS_1= ruleStringLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getStringLiteralExpCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StringLiteralExpCS_1=ruleStringLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_StringLiteralExpCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:7845:2: this_BooleanLiteralExpCS_2= ruleBooleanLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getBooleanLiteralExpCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BooleanLiteralExpCS_2=ruleBooleanLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BooleanLiteralExpCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:7858:2: this_UnlimitedNaturalLiteralExpCS_3= ruleUnlimitedNaturalLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getUnlimitedNaturalLiteralExpCSParserRuleCall_3());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_UnlimitedNaturalLiteralExpCS_3=ruleUnlimitedNaturalLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_UnlimitedNaturalLiteralExpCS_3;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 5 :
                    // InternalQVTimperative.g:7871:2: this_InvalidLiteralExpCS_4= ruleInvalidLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getInvalidLiteralExpCSParserRuleCall_4());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_InvalidLiteralExpCS_4=ruleInvalidLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_InvalidLiteralExpCS_4;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 6 :
                    // InternalQVTimperative.g:7884:2: this_NullLiteralExpCS_5= ruleNullLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimitiveLiteralExpCSAccess().getNullLiteralExpCSParserRuleCall_5());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NullLiteralExpCS_5=ruleNullLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NullLiteralExpCS_5;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimitiveLiteralExpCS"


    // $ANTLR start "entryRuleTupleLiteralExpCS"
    // InternalQVTimperative.g:7903:1: entryRuleTupleLiteralExpCS returns [EObject current=null] : iv_ruleTupleLiteralExpCS= ruleTupleLiteralExpCS EOF ;
    public final EObject entryRuleTupleLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTupleLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:7904:2: (iv_ruleTupleLiteralExpCS= ruleTupleLiteralExpCS EOF )
            // InternalQVTimperative.g:7905:2: iv_ruleTupleLiteralExpCS= ruleTupleLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTupleLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTupleLiteralExpCS=ruleTupleLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTupleLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTupleLiteralExpCS"


    // $ANTLR start "ruleTupleLiteralExpCS"
    // InternalQVTimperative.g:7912:1: ruleTupleLiteralExpCS returns [EObject current=null] : (otherlv_0= 'Tuple' otherlv_1= '{' ( (lv_ownedParts_2_0= ruleTupleLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) ) )* otherlv_5= '}' ) ;
    public final EObject ruleTupleLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_ownedParts_2_0 = null;

        EObject lv_ownedParts_4_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:7915:28: ( (otherlv_0= 'Tuple' otherlv_1= '{' ( (lv_ownedParts_2_0= ruleTupleLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) ) )* otherlv_5= '}' ) )
            // InternalQVTimperative.g:7916:1: (otherlv_0= 'Tuple' otherlv_1= '{' ( (lv_ownedParts_2_0= ruleTupleLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) ) )* otherlv_5= '}' )
            {
            // InternalQVTimperative.g:7916:1: (otherlv_0= 'Tuple' otherlv_1= '{' ( (lv_ownedParts_2_0= ruleTupleLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) ) )* otherlv_5= '}' )
            // InternalQVTimperative.g:7916:3: otherlv_0= 'Tuple' otherlv_1= '{' ( (lv_ownedParts_2_0= ruleTupleLiteralPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) ) )* otherlv_5= '}'
            {
            otherlv_0=(Token)match(input,117,FollowSets000.FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTupleLiteralExpCSAccess().getTupleKeyword_0());

            }
            otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getTupleLiteralExpCSAccess().getLeftCurlyBracketKeyword_1());

            }
            // InternalQVTimperative.g:7924:1: ( (lv_ownedParts_2_0= ruleTupleLiteralPartCS ) )
            // InternalQVTimperative.g:7925:1: (lv_ownedParts_2_0= ruleTupleLiteralPartCS )
            {
            // InternalQVTimperative.g:7925:1: (lv_ownedParts_2_0= ruleTupleLiteralPartCS )
            // InternalQVTimperative.g:7926:3: lv_ownedParts_2_0= ruleTupleLiteralPartCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsTupleLiteralPartCSParserRuleCall_2_0());

            }
            pushFollow(FollowSets000.FOLLOW_114);
            lv_ownedParts_2_0=ruleTupleLiteralPartCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTupleLiteralExpCSRule());
              	        }
                     		add(
                     			current,
                     			"ownedParts",
                      		lv_ownedParts_2_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TupleLiteralPartCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:7942:2: (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) ) )*
            loop173:
            do {
                int alt173=2;
                int LA173_0 = input.LA(1);

                if ( (LA173_0==18) ) {
                    alt173=1;
                }


                switch (alt173) {
            	case 1 :
            	    // InternalQVTimperative.g:7942:4: otherlv_3= ',' ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) )
            	    {
            	    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getTupleLiteralExpCSAccess().getCommaKeyword_3_0());

            	    }
            	    // InternalQVTimperative.g:7946:1: ( (lv_ownedParts_4_0= ruleTupleLiteralPartCS ) )
            	    // InternalQVTimperative.g:7947:1: (lv_ownedParts_4_0= ruleTupleLiteralPartCS )
            	    {
            	    // InternalQVTimperative.g:7947:1: (lv_ownedParts_4_0= ruleTupleLiteralPartCS )
            	    // InternalQVTimperative.g:7948:3: lv_ownedParts_4_0= ruleTupleLiteralPartCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsTupleLiteralPartCSParserRuleCall_3_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_114);
            	    lv_ownedParts_4_0=ruleTupleLiteralPartCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTupleLiteralExpCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedParts",
            	              		lv_ownedParts_4_0,
            	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TupleLiteralPartCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop173;
                }
            } while (true);

            otherlv_5=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getTupleLiteralExpCSAccess().getRightCurlyBracketKeyword_4());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTupleLiteralExpCS"


    // $ANTLR start "entryRuleTupleLiteralPartCS"
    // InternalQVTimperative.g:7976:1: entryRuleTupleLiteralPartCS returns [EObject current=null] : iv_ruleTupleLiteralPartCS= ruleTupleLiteralPartCS EOF ;
    public final EObject entryRuleTupleLiteralPartCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTupleLiteralPartCS = null;


        try {
            // InternalQVTimperative.g:7977:2: (iv_ruleTupleLiteralPartCS= ruleTupleLiteralPartCS EOF )
            // InternalQVTimperative.g:7978:2: iv_ruleTupleLiteralPartCS= ruleTupleLiteralPartCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTupleLiteralPartCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTupleLiteralPartCS=ruleTupleLiteralPartCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTupleLiteralPartCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTupleLiteralPartCS"


    // $ANTLR start "ruleTupleLiteralPartCS"
    // InternalQVTimperative.g:7985:1: ruleTupleLiteralPartCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) ) ;
    public final EObject ruleTupleLiteralPartCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedType_2_0 = null;

        EObject lv_ownedInitExpression_4_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:7988:28: ( ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) ) )
            // InternalQVTimperative.g:7989:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )
            {
            // InternalQVTimperative.g:7989:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )
            // InternalQVTimperative.g:7989:2: ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )? otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) )
            {
            // InternalQVTimperative.g:7989:2: ( (lv_name_0_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:7990:1: (lv_name_0_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:7990:1: (lv_name_0_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:7991:3: lv_name_0_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTupleLiteralPartCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_122);
            lv_name_0_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTupleLiteralPartCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_0_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:8007:2: (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) )?
            int alt174=2;
            int LA174_0 = input.LA(1);

            if ( (LA174_0==24) ) {
                alt174=1;
            }
            switch (alt174) {
                case 1 :
                    // InternalQVTimperative.g:8007:4: otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) )
                    {
                    otherlv_1=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getTupleLiteralPartCSAccess().getColonKeyword_1_0());

                    }
                    // InternalQVTimperative.g:8011:1: ( (lv_ownedType_2_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:8012:1: (lv_ownedType_2_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:8012:1: (lv_ownedType_2_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:8013:3: lv_ownedType_2_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTupleLiteralPartCSAccess().getOwnedTypeTypeExpCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_119);
                    lv_ownedType_2_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTupleLiteralPartCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,50,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getTupleLiteralPartCSAccess().getEqualsSignKeyword_2());

            }
            // InternalQVTimperative.g:8033:1: ( (lv_ownedInitExpression_4_0= ruleExpCS ) )
            // InternalQVTimperative.g:8034:1: (lv_ownedInitExpression_4_0= ruleExpCS )
            {
            // InternalQVTimperative.g:8034:1: (lv_ownedInitExpression_4_0= ruleExpCS )
            // InternalQVTimperative.g:8035:3: lv_ownedInitExpression_4_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTupleLiteralPartCSAccess().getOwnedInitExpressionExpCSParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedInitExpression_4_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTupleLiteralPartCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedInitExpression",
                      		lv_ownedInitExpression_4_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTupleLiteralPartCS"


    // $ANTLR start "entryRuleNumberLiteralExpCS"
    // InternalQVTimperative.g:8059:1: entryRuleNumberLiteralExpCS returns [EObject current=null] : iv_ruleNumberLiteralExpCS= ruleNumberLiteralExpCS EOF ;
    public final EObject entryRuleNumberLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNumberLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:8060:2: (iv_ruleNumberLiteralExpCS= ruleNumberLiteralExpCS EOF )
            // InternalQVTimperative.g:8061:2: iv_ruleNumberLiteralExpCS= ruleNumberLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNumberLiteralExpCS=ruleNumberLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumberLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNumberLiteralExpCS"


    // $ANTLR start "ruleNumberLiteralExpCS"
    // InternalQVTimperative.g:8068:1: ruleNumberLiteralExpCS returns [EObject current=null] : ( (lv_symbol_0_0= ruleNUMBER_LITERAL ) ) ;
    public final EObject ruleNumberLiteralExpCS() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_symbol_0_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:8071:28: ( ( (lv_symbol_0_0= ruleNUMBER_LITERAL ) ) )
            // InternalQVTimperative.g:8072:1: ( (lv_symbol_0_0= ruleNUMBER_LITERAL ) )
            {
            // InternalQVTimperative.g:8072:1: ( (lv_symbol_0_0= ruleNUMBER_LITERAL ) )
            // InternalQVTimperative.g:8073:1: (lv_symbol_0_0= ruleNUMBER_LITERAL )
            {
            // InternalQVTimperative.g:8073:1: (lv_symbol_0_0= ruleNUMBER_LITERAL )
            // InternalQVTimperative.g:8074:3: lv_symbol_0_0= ruleNUMBER_LITERAL
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getNumberLiteralExpCSAccess().getSymbolNUMBER_LITERALParserRuleCall_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_symbol_0_0=ruleNUMBER_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNumberLiteralExpCSRule());
              	        }
                     		set(
                     			current,
                     			"symbol",
                      		lv_symbol_0_0,
                      		"org.eclipse.ocl.xtext.base.Base.NUMBER_LITERAL");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNumberLiteralExpCS"


    // $ANTLR start "entryRuleStringLiteralExpCS"
    // InternalQVTimperative.g:8098:1: entryRuleStringLiteralExpCS returns [EObject current=null] : iv_ruleStringLiteralExpCS= ruleStringLiteralExpCS EOF ;
    public final EObject entryRuleStringLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:8099:2: (iv_ruleStringLiteralExpCS= ruleStringLiteralExpCS EOF )
            // InternalQVTimperative.g:8100:2: iv_ruleStringLiteralExpCS= ruleStringLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStringLiteralExpCS=ruleStringLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringLiteralExpCS"


    // $ANTLR start "ruleStringLiteralExpCS"
    // InternalQVTimperative.g:8107:1: ruleStringLiteralExpCS returns [EObject current=null] : ( (lv_segments_0_0= ruleStringLiteral ) )+ ;
    public final EObject ruleStringLiteralExpCS() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_segments_0_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:8110:28: ( ( (lv_segments_0_0= ruleStringLiteral ) )+ )
            // InternalQVTimperative.g:8111:1: ( (lv_segments_0_0= ruleStringLiteral ) )+
            {
            // InternalQVTimperative.g:8111:1: ( (lv_segments_0_0= ruleStringLiteral ) )+
            int cnt175=0;
            loop175:
            do {
                int alt175=2;
                int LA175_0 = input.LA(1);

                if ( (LA175_0==RULE_SINGLE_QUOTED_STRING) ) {
                    alt175=1;
                }


                switch (alt175) {
            	case 1 :
            	    // InternalQVTimperative.g:8112:1: (lv_segments_0_0= ruleStringLiteral )
            	    {
            	    // InternalQVTimperative.g:8112:1: (lv_segments_0_0= ruleStringLiteral )
            	    // InternalQVTimperative.g:8113:3: lv_segments_0_0= ruleStringLiteral
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getStringLiteralExpCSAccess().getSegmentsStringLiteralParserRuleCall_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_123);
            	    lv_segments_0_0=ruleStringLiteral();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getStringLiteralExpCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"segments",
            	              		lv_segments_0_0,
            	              		"org.eclipse.ocl.xtext.base.Base.StringLiteral");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt175 >= 1 ) break loop175;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(175, input);
                        throw eee;
                }
                cnt175++;
            } while (true);


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringLiteralExpCS"


    // $ANTLR start "entryRuleBooleanLiteralExpCS"
    // InternalQVTimperative.g:8137:1: entryRuleBooleanLiteralExpCS returns [EObject current=null] : iv_ruleBooleanLiteralExpCS= ruleBooleanLiteralExpCS EOF ;
    public final EObject entryRuleBooleanLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBooleanLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:8138:2: (iv_ruleBooleanLiteralExpCS= ruleBooleanLiteralExpCS EOF )
            // InternalQVTimperative.g:8139:2: iv_ruleBooleanLiteralExpCS= ruleBooleanLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBooleanLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBooleanLiteralExpCS=ruleBooleanLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBooleanLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBooleanLiteralExpCS"


    // $ANTLR start "ruleBooleanLiteralExpCS"
    // InternalQVTimperative.g:8146:1: ruleBooleanLiteralExpCS returns [EObject current=null] : ( ( (lv_symbol_0_0= 'true' ) ) | ( (lv_symbol_1_0= 'false' ) ) ) ;
    public final EObject ruleBooleanLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token lv_symbol_0_0=null;
        Token lv_symbol_1_0=null;

         enterRule();

        try {
            // InternalQVTimperative.g:8149:28: ( ( ( (lv_symbol_0_0= 'true' ) ) | ( (lv_symbol_1_0= 'false' ) ) ) )
            // InternalQVTimperative.g:8150:1: ( ( (lv_symbol_0_0= 'true' ) ) | ( (lv_symbol_1_0= 'false' ) ) )
            {
            // InternalQVTimperative.g:8150:1: ( ( (lv_symbol_0_0= 'true' ) ) | ( (lv_symbol_1_0= 'false' ) ) )
            int alt176=2;
            int LA176_0 = input.LA(1);

            if ( (LA176_0==135) ) {
                alt176=1;
            }
            else if ( (LA176_0==136) ) {
                alt176=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 176, 0, input);

                throw nvae;
            }
            switch (alt176) {
                case 1 :
                    // InternalQVTimperative.g:8150:2: ( (lv_symbol_0_0= 'true' ) )
                    {
                    // InternalQVTimperative.g:8150:2: ( (lv_symbol_0_0= 'true' ) )
                    // InternalQVTimperative.g:8151:1: (lv_symbol_0_0= 'true' )
                    {
                    // InternalQVTimperative.g:8151:1: (lv_symbol_0_0= 'true' )
                    // InternalQVTimperative.g:8152:3: lv_symbol_0_0= 'true'
                    {
                    lv_symbol_0_0=(Token)match(input,135,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_symbol_0_0, grammarAccess.getBooleanLiteralExpCSAccess().getSymbolTrueKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getBooleanLiteralExpCSRule());
                      	        }
                             		setWithLastConsumed(current, "symbol", lv_symbol_0_0, "true");

                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:8166:6: ( (lv_symbol_1_0= 'false' ) )
                    {
                    // InternalQVTimperative.g:8166:6: ( (lv_symbol_1_0= 'false' ) )
                    // InternalQVTimperative.g:8167:1: (lv_symbol_1_0= 'false' )
                    {
                    // InternalQVTimperative.g:8167:1: (lv_symbol_1_0= 'false' )
                    // InternalQVTimperative.g:8168:3: lv_symbol_1_0= 'false'
                    {
                    lv_symbol_1_0=(Token)match(input,136,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_symbol_1_0, grammarAccess.getBooleanLiteralExpCSAccess().getSymbolFalseKeyword_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getBooleanLiteralExpCSRule());
                      	        }
                             		setWithLastConsumed(current, "symbol", lv_symbol_1_0, "false");

                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBooleanLiteralExpCS"


    // $ANTLR start "entryRuleUnlimitedNaturalLiteralExpCS"
    // InternalQVTimperative.g:8189:1: entryRuleUnlimitedNaturalLiteralExpCS returns [EObject current=null] : iv_ruleUnlimitedNaturalLiteralExpCS= ruleUnlimitedNaturalLiteralExpCS EOF ;
    public final EObject entryRuleUnlimitedNaturalLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnlimitedNaturalLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:8190:2: (iv_ruleUnlimitedNaturalLiteralExpCS= ruleUnlimitedNaturalLiteralExpCS EOF )
            // InternalQVTimperative.g:8191:2: iv_ruleUnlimitedNaturalLiteralExpCS= ruleUnlimitedNaturalLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnlimitedNaturalLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleUnlimitedNaturalLiteralExpCS=ruleUnlimitedNaturalLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnlimitedNaturalLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnlimitedNaturalLiteralExpCS"


    // $ANTLR start "ruleUnlimitedNaturalLiteralExpCS"
    // InternalQVTimperative.g:8198:1: ruleUnlimitedNaturalLiteralExpCS returns [EObject current=null] : ( () otherlv_1= '*' ) ;
    public final EObject ruleUnlimitedNaturalLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule();

        try {
            // InternalQVTimperative.g:8201:28: ( ( () otherlv_1= '*' ) )
            // InternalQVTimperative.g:8202:1: ( () otherlv_1= '*' )
            {
            // InternalQVTimperative.g:8202:1: ( () otherlv_1= '*' )
            // InternalQVTimperative.g:8202:2: () otherlv_1= '*'
            {
            // InternalQVTimperative.g:8202:2: ()
            // InternalQVTimperative.g:8203:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getUnlimitedNaturalLiteralExpCSAccess().getUnlimitedNaturalLiteralExpCSAction_0(),
                          current);

            }

            }

            otherlv_1=(Token)match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getUnlimitedNaturalLiteralExpCSAccess().getAsteriskKeyword_1());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnlimitedNaturalLiteralExpCS"


    // $ANTLR start "entryRuleInvalidLiteralExpCS"
    // InternalQVTimperative.g:8223:1: entryRuleInvalidLiteralExpCS returns [EObject current=null] : iv_ruleInvalidLiteralExpCS= ruleInvalidLiteralExpCS EOF ;
    public final EObject entryRuleInvalidLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInvalidLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:8224:2: (iv_ruleInvalidLiteralExpCS= ruleInvalidLiteralExpCS EOF )
            // InternalQVTimperative.g:8225:2: iv_ruleInvalidLiteralExpCS= ruleInvalidLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInvalidLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleInvalidLiteralExpCS=ruleInvalidLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInvalidLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInvalidLiteralExpCS"


    // $ANTLR start "ruleInvalidLiteralExpCS"
    // InternalQVTimperative.g:8232:1: ruleInvalidLiteralExpCS returns [EObject current=null] : ( () otherlv_1= 'invalid' ) ;
    public final EObject ruleInvalidLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule();

        try {
            // InternalQVTimperative.g:8235:28: ( ( () otherlv_1= 'invalid' ) )
            // InternalQVTimperative.g:8236:1: ( () otherlv_1= 'invalid' )
            {
            // InternalQVTimperative.g:8236:1: ( () otherlv_1= 'invalid' )
            // InternalQVTimperative.g:8236:2: () otherlv_1= 'invalid'
            {
            // InternalQVTimperative.g:8236:2: ()
            // InternalQVTimperative.g:8237:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getInvalidLiteralExpCSAccess().getInvalidLiteralExpCSAction_0(),
                          current);

            }

            }

            otherlv_1=(Token)match(input,137,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getInvalidLiteralExpCSAccess().getInvalidKeyword_1());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInvalidLiteralExpCS"


    // $ANTLR start "entryRuleNullLiteralExpCS"
    // InternalQVTimperative.g:8257:1: entryRuleNullLiteralExpCS returns [EObject current=null] : iv_ruleNullLiteralExpCS= ruleNullLiteralExpCS EOF ;
    public final EObject entryRuleNullLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNullLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:8258:2: (iv_ruleNullLiteralExpCS= ruleNullLiteralExpCS EOF )
            // InternalQVTimperative.g:8259:2: iv_ruleNullLiteralExpCS= ruleNullLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNullLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNullLiteralExpCS=ruleNullLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNullLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNullLiteralExpCS"


    // $ANTLR start "ruleNullLiteralExpCS"
    // InternalQVTimperative.g:8266:1: ruleNullLiteralExpCS returns [EObject current=null] : ( () otherlv_1= 'null' ) ;
    public final EObject ruleNullLiteralExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule();

        try {
            // InternalQVTimperative.g:8269:28: ( ( () otherlv_1= 'null' ) )
            // InternalQVTimperative.g:8270:1: ( () otherlv_1= 'null' )
            {
            // InternalQVTimperative.g:8270:1: ( () otherlv_1= 'null' )
            // InternalQVTimperative.g:8270:2: () otherlv_1= 'null'
            {
            // InternalQVTimperative.g:8270:2: ()
            // InternalQVTimperative.g:8271:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getNullLiteralExpCSAccess().getNullLiteralExpCSAction_0(),
                          current);

            }

            }

            otherlv_1=(Token)match(input,138,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getNullLiteralExpCSAccess().getNullKeyword_1());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNullLiteralExpCS"


    // $ANTLR start "entryRuleTypeLiteralCS"
    // InternalQVTimperative.g:8291:1: entryRuleTypeLiteralCS returns [EObject current=null] : iv_ruleTypeLiteralCS= ruleTypeLiteralCS EOF ;
    public final EObject entryRuleTypeLiteralCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeLiteralCS = null;


        try {
            // InternalQVTimperative.g:8292:2: (iv_ruleTypeLiteralCS= ruleTypeLiteralCS EOF )
            // InternalQVTimperative.g:8293:2: iv_ruleTypeLiteralCS= ruleTypeLiteralCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeLiteralCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeLiteralCS=ruleTypeLiteralCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeLiteralCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeLiteralCS"


    // $ANTLR start "ruleTypeLiteralCS"
    // InternalQVTimperative.g:8300:1: ruleTypeLiteralCS returns [EObject current=null] : (this_PrimitiveTypeCS_0= rulePrimitiveTypeCS | this_CollectionTypeCS_1= ruleCollectionTypeCS | this_MapTypeCS_2= ruleMapTypeCS | this_TupleTypeCS_3= ruleTupleTypeCS ) ;
    public final EObject ruleTypeLiteralCS() throws RecognitionException {
        EObject current = null;

        EObject this_PrimitiveTypeCS_0 = null;

        EObject this_CollectionTypeCS_1 = null;

        EObject this_MapTypeCS_2 = null;

        EObject this_TupleTypeCS_3 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:8303:28: ( (this_PrimitiveTypeCS_0= rulePrimitiveTypeCS | this_CollectionTypeCS_1= ruleCollectionTypeCS | this_MapTypeCS_2= ruleMapTypeCS | this_TupleTypeCS_3= ruleTupleTypeCS ) )
            // InternalQVTimperative.g:8304:1: (this_PrimitiveTypeCS_0= rulePrimitiveTypeCS | this_CollectionTypeCS_1= ruleCollectionTypeCS | this_MapTypeCS_2= ruleMapTypeCS | this_TupleTypeCS_3= ruleTupleTypeCS )
            {
            // InternalQVTimperative.g:8304:1: (this_PrimitiveTypeCS_0= rulePrimitiveTypeCS | this_CollectionTypeCS_1= ruleCollectionTypeCS | this_MapTypeCS_2= ruleMapTypeCS | this_TupleTypeCS_3= ruleTupleTypeCS )
            int alt177=4;
            switch ( input.LA(1) ) {
            case 118:
            case 119:
            case 120:
            case 121:
            case 122:
            case 123:
            case 124:
            case 125:
                {
                alt177=1;
                }
                break;
            case 126:
            case 127:
            case 128:
            case 129:
            case 130:
                {
                alt177=2;
                }
                break;
            case 116:
                {
                alt177=3;
                }
                break;
            case 117:
                {
                alt177=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 177, 0, input);

                throw nvae;
            }

            switch (alt177) {
                case 1 :
                    // InternalQVTimperative.g:8305:2: this_PrimitiveTypeCS_0= rulePrimitiveTypeCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeLiteralCSAccess().getPrimitiveTypeCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrimitiveTypeCS_0=rulePrimitiveTypeCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PrimitiveTypeCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:8318:2: this_CollectionTypeCS_1= ruleCollectionTypeCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeLiteralCSAccess().getCollectionTypeCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CollectionTypeCS_1=ruleCollectionTypeCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_CollectionTypeCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:8331:2: this_MapTypeCS_2= ruleMapTypeCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeLiteralCSAccess().getMapTypeCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_MapTypeCS_2=ruleMapTypeCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MapTypeCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:8344:2: this_TupleTypeCS_3= ruleTupleTypeCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeLiteralCSAccess().getTupleTypeCSParserRuleCall_3());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TupleTypeCS_3=ruleTupleTypeCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TupleTypeCS_3;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeLiteralCS"


    // $ANTLR start "entryRuleTypeLiteralWithMultiplicityCS"
    // InternalQVTimperative.g:8363:1: entryRuleTypeLiteralWithMultiplicityCS returns [EObject current=null] : iv_ruleTypeLiteralWithMultiplicityCS= ruleTypeLiteralWithMultiplicityCS EOF ;
    public final EObject entryRuleTypeLiteralWithMultiplicityCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeLiteralWithMultiplicityCS = null;


        try {
            // InternalQVTimperative.g:8364:2: (iv_ruleTypeLiteralWithMultiplicityCS= ruleTypeLiteralWithMultiplicityCS EOF )
            // InternalQVTimperative.g:8365:2: iv_ruleTypeLiteralWithMultiplicityCS= ruleTypeLiteralWithMultiplicityCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeLiteralWithMultiplicityCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeLiteralWithMultiplicityCS=ruleTypeLiteralWithMultiplicityCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeLiteralWithMultiplicityCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeLiteralWithMultiplicityCS"


    // $ANTLR start "ruleTypeLiteralWithMultiplicityCS"
    // InternalQVTimperative.g:8372:1: ruleTypeLiteralWithMultiplicityCS returns [EObject current=null] : (this_TypeLiteralCS_0= ruleTypeLiteralCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? ) ;
    public final EObject ruleTypeLiteralWithMultiplicityCS() throws RecognitionException {
        EObject current = null;

        EObject this_TypeLiteralCS_0 = null;

        EObject lv_ownedMultiplicity_1_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:8375:28: ( (this_TypeLiteralCS_0= ruleTypeLiteralCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? ) )
            // InternalQVTimperative.g:8376:1: (this_TypeLiteralCS_0= ruleTypeLiteralCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? )
            {
            // InternalQVTimperative.g:8376:1: (this_TypeLiteralCS_0= ruleTypeLiteralCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? )
            // InternalQVTimperative.g:8377:2: this_TypeLiteralCS_0= ruleTypeLiteralCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )?
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getTypeLiteralWithMultiplicityCSAccess().getTypeLiteralCSParserRuleCall_0());

            }
            pushFollow(FollowSets000.FOLLOW_106);
            this_TypeLiteralCS_0=ruleTypeLiteralCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_TypeLiteralCS_0;
                      afterParserOrEnumRuleCall();

            }
            // InternalQVTimperative.g:8388:1: ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )?
            int alt178=2;
            int LA178_0 = input.LA(1);

            if ( (LA178_0==141) ) {
                alt178=1;
            }
            switch (alt178) {
                case 1 :
                    // InternalQVTimperative.g:8389:1: (lv_ownedMultiplicity_1_0= ruleMultiplicityCS )
                    {
                    // InternalQVTimperative.g:8389:1: (lv_ownedMultiplicity_1_0= ruleMultiplicityCS )
                    // InternalQVTimperative.g:8390:3: lv_ownedMultiplicity_1_0= ruleMultiplicityCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTypeLiteralWithMultiplicityCSAccess().getOwnedMultiplicityMultiplicityCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedMultiplicity_1_0=ruleMultiplicityCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypeLiteralWithMultiplicityCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedMultiplicity",
                              		lv_ownedMultiplicity_1_0,
                              		"org.eclipse.ocl.xtext.base.Base.MultiplicityCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeLiteralWithMultiplicityCS"


    // $ANTLR start "entryRuleTypeLiteralExpCS"
    // InternalQVTimperative.g:8414:1: entryRuleTypeLiteralExpCS returns [EObject current=null] : iv_ruleTypeLiteralExpCS= ruleTypeLiteralExpCS EOF ;
    public final EObject entryRuleTypeLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeLiteralExpCS = null;


        try {
            // InternalQVTimperative.g:8415:2: (iv_ruleTypeLiteralExpCS= ruleTypeLiteralExpCS EOF )
            // InternalQVTimperative.g:8416:2: iv_ruleTypeLiteralExpCS= ruleTypeLiteralExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeLiteralExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeLiteralExpCS=ruleTypeLiteralExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeLiteralExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeLiteralExpCS"


    // $ANTLR start "ruleTypeLiteralExpCS"
    // InternalQVTimperative.g:8423:1: ruleTypeLiteralExpCS returns [EObject current=null] : ( (lv_ownedType_0_0= ruleTypeLiteralWithMultiplicityCS ) ) ;
    public final EObject ruleTypeLiteralExpCS() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedType_0_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:8426:28: ( ( (lv_ownedType_0_0= ruleTypeLiteralWithMultiplicityCS ) ) )
            // InternalQVTimperative.g:8427:1: ( (lv_ownedType_0_0= ruleTypeLiteralWithMultiplicityCS ) )
            {
            // InternalQVTimperative.g:8427:1: ( (lv_ownedType_0_0= ruleTypeLiteralWithMultiplicityCS ) )
            // InternalQVTimperative.g:8428:1: (lv_ownedType_0_0= ruleTypeLiteralWithMultiplicityCS )
            {
            // InternalQVTimperative.g:8428:1: (lv_ownedType_0_0= ruleTypeLiteralWithMultiplicityCS )
            // InternalQVTimperative.g:8429:3: lv_ownedType_0_0= ruleTypeLiteralWithMultiplicityCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTypeLiteralExpCSAccess().getOwnedTypeTypeLiteralWithMultiplicityCSParserRuleCall_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedType_0_0=ruleTypeLiteralWithMultiplicityCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypeLiteralExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedType",
                      		lv_ownedType_0_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeLiteralWithMultiplicityCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeLiteralExpCS"


    // $ANTLR start "entryRuleTypeNameExpCS"
    // InternalQVTimperative.g:8453:1: entryRuleTypeNameExpCS returns [EObject current=null] : iv_ruleTypeNameExpCS= ruleTypeNameExpCS EOF ;
    public final EObject entryRuleTypeNameExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeNameExpCS = null;


        try {
            // InternalQVTimperative.g:8454:2: (iv_ruleTypeNameExpCS= ruleTypeNameExpCS EOF )
            // InternalQVTimperative.g:8455:2: iv_ruleTypeNameExpCS= ruleTypeNameExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeNameExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeNameExpCS=ruleTypeNameExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeNameExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeNameExpCS"


    // $ANTLR start "ruleTypeNameExpCS"
    // InternalQVTimperative.g:8462:1: ruleTypeNameExpCS returns [EObject current=null] : ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )? ) ;
    public final EObject ruleTypeNameExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedPathName_0_0 = null;

        EObject lv_ownedCurlyBracketedClause_1_0 = null;

        EObject lv_ownedPatternGuard_3_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:8465:28: ( ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )? ) )
            // InternalQVTimperative.g:8466:1: ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )? )
            {
            // InternalQVTimperative.g:8466:1: ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )? )
            // InternalQVTimperative.g:8466:2: ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )?
            {
            // InternalQVTimperative.g:8466:2: ( (lv_ownedPathName_0_0= rulePathNameCS ) )
            // InternalQVTimperative.g:8467:1: (lv_ownedPathName_0_0= rulePathNameCS )
            {
            // InternalQVTimperative.g:8467:1: (lv_ownedPathName_0_0= rulePathNameCS )
            // InternalQVTimperative.g:8468:3: lv_ownedPathName_0_0= rulePathNameCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTypeNameExpCSAccess().getOwnedPathNamePathNameCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_89);
            lv_ownedPathName_0_0=rulePathNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypeNameExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedPathName",
                      		lv_ownedPathName_0_0,
                      		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:8484:2: ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )?
            int alt180=2;
            alt180 = dfa180.predict(input);
            switch (alt180) {
                case 1 :
                    // InternalQVTimperative.g:8484:3: ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )?
                    {
                    // InternalQVTimperative.g:8484:3: ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) )
                    // InternalQVTimperative.g:8485:1: (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS )
                    {
                    // InternalQVTimperative.g:8485:1: (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS )
                    // InternalQVTimperative.g:8486:3: lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTypeNameExpCSAccess().getOwnedCurlyBracketedClauseCurlyBracketedClauseCSParserRuleCall_1_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_89);
                    lv_ownedCurlyBracketedClause_1_0=ruleCurlyBracketedClauseCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypeNameExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedCurlyBracketedClause",
                              		lv_ownedCurlyBracketedClause_1_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CurlyBracketedClauseCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:8502:2: (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )?
                    int alt179=2;
                    alt179 = dfa179.predict(input);
                    switch (alt179) {
                        case 1 :
                            // InternalQVTimperative.g:8502:4: otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}'
                            {
                            otherlv_2=(Token)match(input,41,FollowSets000.FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_2, grammarAccess.getTypeNameExpCSAccess().getLeftCurlyBracketKeyword_1_1_0());

                            }
                            // InternalQVTimperative.g:8506:1: ( (lv_ownedPatternGuard_3_0= ruleExpCS ) )
                            // InternalQVTimperative.g:8507:1: (lv_ownedPatternGuard_3_0= ruleExpCS )
                            {
                            // InternalQVTimperative.g:8507:1: (lv_ownedPatternGuard_3_0= ruleExpCS )
                            // InternalQVTimperative.g:8508:3: lv_ownedPatternGuard_3_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getTypeNameExpCSAccess().getOwnedPatternGuardExpCSParserRuleCall_1_1_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_52);
                            lv_ownedPatternGuard_3_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTypeNameExpCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedPatternGuard",
                                      		lv_ownedPatternGuard_3_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }

                            otherlv_4=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getTypeNameExpCSAccess().getRightCurlyBracketKeyword_1_1_2());

                            }

                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeNameExpCS"


    // $ANTLR start "entryRuleTypeExpWithoutMultiplicityCS"
    // InternalQVTimperative.g:8536:1: entryRuleTypeExpWithoutMultiplicityCS returns [EObject current=null] : iv_ruleTypeExpWithoutMultiplicityCS= ruleTypeExpWithoutMultiplicityCS EOF ;
    public final EObject entryRuleTypeExpWithoutMultiplicityCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeExpWithoutMultiplicityCS = null;


        try {
            // InternalQVTimperative.g:8537:2: (iv_ruleTypeExpWithoutMultiplicityCS= ruleTypeExpWithoutMultiplicityCS EOF )
            // InternalQVTimperative.g:8538:2: iv_ruleTypeExpWithoutMultiplicityCS= ruleTypeExpWithoutMultiplicityCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeExpWithoutMultiplicityCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeExpWithoutMultiplicityCS=ruleTypeExpWithoutMultiplicityCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeExpWithoutMultiplicityCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeExpWithoutMultiplicityCS"


    // $ANTLR start "ruleTypeExpWithoutMultiplicityCS"
    // InternalQVTimperative.g:8545:1: ruleTypeExpWithoutMultiplicityCS returns [EObject current=null] : (this_TypeNameExpCS_0= ruleTypeNameExpCS | this_TypeLiteralCS_1= ruleTypeLiteralCS | this_CollectionPatternCS_2= ruleCollectionPatternCS ) ;
    public final EObject ruleTypeExpWithoutMultiplicityCS() throws RecognitionException {
        EObject current = null;

        EObject this_TypeNameExpCS_0 = null;

        EObject this_TypeLiteralCS_1 = null;

        EObject this_CollectionPatternCS_2 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:8548:28: ( (this_TypeNameExpCS_0= ruleTypeNameExpCS | this_TypeLiteralCS_1= ruleTypeLiteralCS | this_CollectionPatternCS_2= ruleCollectionPatternCS ) )
            // InternalQVTimperative.g:8549:1: (this_TypeNameExpCS_0= ruleTypeNameExpCS | this_TypeLiteralCS_1= ruleTypeLiteralCS | this_CollectionPatternCS_2= ruleCollectionPatternCS )
            {
            // InternalQVTimperative.g:8549:1: (this_TypeNameExpCS_0= ruleTypeNameExpCS | this_TypeLiteralCS_1= ruleTypeLiteralCS | this_CollectionPatternCS_2= ruleCollectionPatternCS )
            int alt181=3;
            alt181 = dfa181.predict(input);
            switch (alt181) {
                case 1 :
                    // InternalQVTimperative.g:8550:2: this_TypeNameExpCS_0= ruleTypeNameExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeExpWithoutMultiplicityCSAccess().getTypeNameExpCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypeNameExpCS_0=ruleTypeNameExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeNameExpCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:8563:2: this_TypeLiteralCS_1= ruleTypeLiteralCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeExpWithoutMultiplicityCSAccess().getTypeLiteralCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypeLiteralCS_1=ruleTypeLiteralCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeLiteralCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:8576:2: this_CollectionPatternCS_2= ruleCollectionPatternCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeExpWithoutMultiplicityCSAccess().getCollectionPatternCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CollectionPatternCS_2=ruleCollectionPatternCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_CollectionPatternCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeExpWithoutMultiplicityCS"


    // $ANTLR start "entryRuleTypeExpCS"
    // InternalQVTimperative.g:8595:1: entryRuleTypeExpCS returns [EObject current=null] : iv_ruleTypeExpCS= ruleTypeExpCS EOF ;
    public final EObject entryRuleTypeExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeExpCS = null;


        try {
            // InternalQVTimperative.g:8596:2: (iv_ruleTypeExpCS= ruleTypeExpCS EOF )
            // InternalQVTimperative.g:8597:2: iv_ruleTypeExpCS= ruleTypeExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeExpCS=ruleTypeExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeExpCS"


    // $ANTLR start "ruleTypeExpCS"
    // InternalQVTimperative.g:8604:1: ruleTypeExpCS returns [EObject current=null] : (this_TypeExpWithoutMultiplicityCS_0= ruleTypeExpWithoutMultiplicityCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? ) ;
    public final EObject ruleTypeExpCS() throws RecognitionException {
        EObject current = null;

        EObject this_TypeExpWithoutMultiplicityCS_0 = null;

        EObject lv_ownedMultiplicity_1_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:8607:28: ( (this_TypeExpWithoutMultiplicityCS_0= ruleTypeExpWithoutMultiplicityCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? ) )
            // InternalQVTimperative.g:8608:1: (this_TypeExpWithoutMultiplicityCS_0= ruleTypeExpWithoutMultiplicityCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? )
            {
            // InternalQVTimperative.g:8608:1: (this_TypeExpWithoutMultiplicityCS_0= ruleTypeExpWithoutMultiplicityCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )? )
            // InternalQVTimperative.g:8609:2: this_TypeExpWithoutMultiplicityCS_0= ruleTypeExpWithoutMultiplicityCS ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )?
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getTypeExpCSAccess().getTypeExpWithoutMultiplicityCSParserRuleCall_0());

            }
            pushFollow(FollowSets000.FOLLOW_106);
            this_TypeExpWithoutMultiplicityCS_0=ruleTypeExpWithoutMultiplicityCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_TypeExpWithoutMultiplicityCS_0;
                      afterParserOrEnumRuleCall();

            }
            // InternalQVTimperative.g:8620:1: ( (lv_ownedMultiplicity_1_0= ruleMultiplicityCS ) )?
            int alt182=2;
            int LA182_0 = input.LA(1);

            if ( (LA182_0==141) ) {
                alt182=1;
            }
            switch (alt182) {
                case 1 :
                    // InternalQVTimperative.g:8621:1: (lv_ownedMultiplicity_1_0= ruleMultiplicityCS )
                    {
                    // InternalQVTimperative.g:8621:1: (lv_ownedMultiplicity_1_0= ruleMultiplicityCS )
                    // InternalQVTimperative.g:8622:3: lv_ownedMultiplicity_1_0= ruleMultiplicityCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTypeExpCSAccess().getOwnedMultiplicityMultiplicityCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedMultiplicity_1_0=ruleMultiplicityCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypeExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedMultiplicity",
                              		lv_ownedMultiplicity_1_0,
                              		"org.eclipse.ocl.xtext.base.Base.MultiplicityCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeExpCS"


    // $ANTLR start "entryRuleExpCS"
    // InternalQVTimperative.g:8646:1: entryRuleExpCS returns [EObject current=null] : iv_ruleExpCS= ruleExpCS EOF ;
    public final EObject entryRuleExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpCS = null;


        try {
            // InternalQVTimperative.g:8647:2: (iv_ruleExpCS= ruleExpCS EOF )
            // InternalQVTimperative.g:8648:2: iv_ruleExpCS= ruleExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExpCS=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpCS"


    // $ANTLR start "ruleExpCS"
    // InternalQVTimperative.g:8655:1: ruleExpCS returns [EObject current=null] : ( (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? ) | this_PrefixedLetExpCS_4= rulePrefixedLetExpCS ) ;
    public final EObject ruleExpCS() throws RecognitionException {
        EObject current = null;

        EObject this_PrefixedPrimaryExpCS_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_ownedRight_3_0 = null;

        EObject this_PrefixedLetExpCS_4 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:8658:28: ( ( (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? ) | this_PrefixedLetExpCS_4= rulePrefixedLetExpCS ) )
            // InternalQVTimperative.g:8659:1: ( (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? ) | this_PrefixedLetExpCS_4= rulePrefixedLetExpCS )
            {
            // InternalQVTimperative.g:8659:1: ( (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? ) | this_PrefixedLetExpCS_4= rulePrefixedLetExpCS )
            int alt184=2;
            alt184 = dfa184.predict(input);
            switch (alt184) {
                case 1 :
                    // InternalQVTimperative.g:8659:2: (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? )
                    {
                    // InternalQVTimperative.g:8659:2: (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? )
                    // InternalQVTimperative.g:8660:2: this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )?
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getExpCSAccess().getPrefixedPrimaryExpCSParserRuleCall_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_124);
                    this_PrefixedPrimaryExpCS_0=rulePrefixedPrimaryExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PrefixedPrimaryExpCS_0;
                              afterParserOrEnumRuleCall();

                    }
                    // InternalQVTimperative.g:8671:1: ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )?
                    int alt183=2;
                    int LA183_0 = input.LA(1);

                    if ( (LA183_0==37||LA183_0==50||LA183_0==58||LA183_0==100||(LA183_0>=102 && LA183_0<=115)) ) {
                        alt183=1;
                    }
                    switch (alt183) {
                        case 1 :
                            // InternalQVTimperative.g:8671:2: () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) )
                            {
                            // InternalQVTimperative.g:8671:2: ()
                            // InternalQVTimperative.g:8672:2:
                            {
                            if ( state.backtracking==0 ) {

                              	  /* */

                            }
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getExpCSAccess().getInfixExpCSOwnedLeftAction_0_1_0(),
                                          current);

                            }

                            }

                            // InternalQVTimperative.g:8680:2: ( (lv_name_2_0= ruleBinaryOperatorName ) )
                            // InternalQVTimperative.g:8681:1: (lv_name_2_0= ruleBinaryOperatorName )
                            {
                            // InternalQVTimperative.g:8681:1: (lv_name_2_0= ruleBinaryOperatorName )
                            // InternalQVTimperative.g:8682:3: lv_name_2_0= ruleBinaryOperatorName
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getExpCSAccess().getNameBinaryOperatorNameParserRuleCall_0_1_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_8);
                            lv_name_2_0=ruleBinaryOperatorName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getExpCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"name",
                                      		lv_name_2_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.BinaryOperatorName");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }

                            // InternalQVTimperative.g:8698:2: ( (lv_ownedRight_3_0= ruleExpCS ) )
                            // InternalQVTimperative.g:8699:1: (lv_ownedRight_3_0= ruleExpCS )
                            {
                            // InternalQVTimperative.g:8699:1: (lv_ownedRight_3_0= ruleExpCS )
                            // InternalQVTimperative.g:8700:3: lv_ownedRight_3_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getExpCSAccess().getOwnedRightExpCSParserRuleCall_0_1_2_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedRight_3_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getExpCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedRight",
                                      		lv_ownedRight_3_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:8718:2: this_PrefixedLetExpCS_4= rulePrefixedLetExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getExpCSAccess().getPrefixedLetExpCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrefixedLetExpCS_4=rulePrefixedLetExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PrefixedLetExpCS_4;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpCS"


    // $ANTLR start "entryRulePrefixedLetExpCS"
    // InternalQVTimperative.g:8737:1: entryRulePrefixedLetExpCS returns [EObject current=null] : iv_rulePrefixedLetExpCS= rulePrefixedLetExpCS EOF ;
    public final EObject entryRulePrefixedLetExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrefixedLetExpCS = null;


        try {
            // InternalQVTimperative.g:8738:2: (iv_rulePrefixedLetExpCS= rulePrefixedLetExpCS EOF )
            // InternalQVTimperative.g:8739:2: iv_rulePrefixedLetExpCS= rulePrefixedLetExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrefixedLetExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrefixedLetExpCS=rulePrefixedLetExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrefixedLetExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrefixedLetExpCS"


    // $ANTLR start "rulePrefixedLetExpCS"
    // InternalQVTimperative.g:8746:1: rulePrefixedLetExpCS returns [EObject current=null] : ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) ) ) | this_LetExpCS_3= ruleLetExpCS ) ;
    public final EObject rulePrefixedLetExpCS() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_ownedRight_2_0 = null;

        EObject this_LetExpCS_3 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:8749:28: ( ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) ) ) | this_LetExpCS_3= ruleLetExpCS ) )
            // InternalQVTimperative.g:8750:1: ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) ) ) | this_LetExpCS_3= ruleLetExpCS )
            {
            // InternalQVTimperative.g:8750:1: ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) ) ) | this_LetExpCS_3= ruleLetExpCS )
            int alt185=2;
            int LA185_0 = input.LA(1);

            if ( ((LA185_0>=100 && LA185_0<=101)) ) {
                alt185=1;
            }
            else if ( (LA185_0==149) ) {
                alt185=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 185, 0, input);

                throw nvae;
            }
            switch (alt185) {
                case 1 :
                    // InternalQVTimperative.g:8750:2: ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) ) )
                    {
                    // InternalQVTimperative.g:8750:2: ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) ) )
                    // InternalQVTimperative.g:8750:3: () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) )
                    {
                    // InternalQVTimperative.g:8750:3: ()
                    // InternalQVTimperative.g:8751:2:
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPrefixedLetExpCSAccess().getPrefixExpCSAction_0_0(),
                                  current);

                    }

                    }

                    // InternalQVTimperative.g:8759:2: ( (lv_name_1_0= ruleUnaryOperatorName ) )
                    // InternalQVTimperative.g:8760:1: (lv_name_1_0= ruleUnaryOperatorName )
                    {
                    // InternalQVTimperative.g:8760:1: (lv_name_1_0= ruleUnaryOperatorName )
                    // InternalQVTimperative.g:8761:3: lv_name_1_0= ruleUnaryOperatorName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getPrefixedLetExpCSAccess().getNameUnaryOperatorNameParserRuleCall_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_8);
                    lv_name_1_0=ruleUnaryOperatorName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPrefixedLetExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"name",
                              		lv_name_1_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.UnaryOperatorName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:8777:2: ( (lv_ownedRight_2_0= rulePrefixedLetExpCS ) )
                    // InternalQVTimperative.g:8778:1: (lv_ownedRight_2_0= rulePrefixedLetExpCS )
                    {
                    // InternalQVTimperative.g:8778:1: (lv_ownedRight_2_0= rulePrefixedLetExpCS )
                    // InternalQVTimperative.g:8779:3: lv_ownedRight_2_0= rulePrefixedLetExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getPrefixedLetExpCSAccess().getOwnedRightPrefixedLetExpCSParserRuleCall_0_2_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedRight_2_0=rulePrefixedLetExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPrefixedLetExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedRight",
                              		lv_ownedRight_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PrefixedLetExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:8797:2: this_LetExpCS_3= ruleLetExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrefixedLetExpCSAccess().getLetExpCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_LetExpCS_3=ruleLetExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_LetExpCS_3;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrefixedLetExpCS"


    // $ANTLR start "entryRulePrefixedPrimaryExpCS"
    // InternalQVTimperative.g:8816:1: entryRulePrefixedPrimaryExpCS returns [EObject current=null] : iv_rulePrefixedPrimaryExpCS= rulePrefixedPrimaryExpCS EOF ;
    public final EObject entryRulePrefixedPrimaryExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrefixedPrimaryExpCS = null;


        try {
            // InternalQVTimperative.g:8817:2: (iv_rulePrefixedPrimaryExpCS= rulePrefixedPrimaryExpCS EOF )
            // InternalQVTimperative.g:8818:2: iv_rulePrefixedPrimaryExpCS= rulePrefixedPrimaryExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrefixedPrimaryExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrefixedPrimaryExpCS=rulePrefixedPrimaryExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrefixedPrimaryExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrefixedPrimaryExpCS"


    // $ANTLR start "rulePrefixedPrimaryExpCS"
    // InternalQVTimperative.g:8825:1: rulePrefixedPrimaryExpCS returns [EObject current=null] : ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) ) ) | this_PrimaryExpCS_3= rulePrimaryExpCS ) ;
    public final EObject rulePrefixedPrimaryExpCS() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_ownedRight_2_0 = null;

        EObject this_PrimaryExpCS_3 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:8828:28: ( ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) ) ) | this_PrimaryExpCS_3= rulePrimaryExpCS ) )
            // InternalQVTimperative.g:8829:1: ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) ) ) | this_PrimaryExpCS_3= rulePrimaryExpCS )
            {
            // InternalQVTimperative.g:8829:1: ( ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) ) ) | this_PrimaryExpCS_3= rulePrimaryExpCS )
            int alt186=2;
            int LA186_0 = input.LA(1);

            if ( ((LA186_0>=100 && LA186_0<=101)) ) {
                alt186=1;
            }
            else if ( (LA186_0==RULE_SINGLE_QUOTED_STRING||(LA186_0>=RULE_INT && LA186_0<=RULE_ESCAPED_ID)||LA186_0==17||LA186_0==19||(LA186_0>=22 && LA186_0<=23)||(LA186_0>=25 && LA186_0<=26)||(LA186_0>=28 && LA186_0<=31)||LA186_0==34||(LA186_0>=37 && LA186_0<=39)||(LA186_0>=43 && LA186_0<=49)||(LA186_0>=51 && LA186_0<=53)||(LA186_0>=55 && LA186_0<=57)||(LA186_0>=59 && LA186_0<=64)||LA186_0==66||LA186_0==68||LA186_0==70||LA186_0==73||LA186_0==75||LA186_0==77||(LA186_0>=79 && LA186_0<=83)||(LA186_0>=85 && LA186_0<=90)||LA186_0==92||LA186_0==94||(LA186_0>=96 && LA186_0<=99)||(LA186_0>=116 && LA186_0<=130)||LA186_0==133||(LA186_0>=135 && LA186_0<=138)||LA186_0==144||LA186_0==150) ) {
                alt186=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 186, 0, input);

                throw nvae;
            }
            switch (alt186) {
                case 1 :
                    // InternalQVTimperative.g:8829:2: ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) ) )
                    {
                    // InternalQVTimperative.g:8829:2: ( () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) ) )
                    // InternalQVTimperative.g:8829:3: () ( (lv_name_1_0= ruleUnaryOperatorName ) ) ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) )
                    {
                    // InternalQVTimperative.g:8829:3: ()
                    // InternalQVTimperative.g:8830:2:
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPrefixedPrimaryExpCSAccess().getPrefixExpCSAction_0_0(),
                                  current);

                    }

                    }

                    // InternalQVTimperative.g:8838:2: ( (lv_name_1_0= ruleUnaryOperatorName ) )
                    // InternalQVTimperative.g:8839:1: (lv_name_1_0= ruleUnaryOperatorName )
                    {
                    // InternalQVTimperative.g:8839:1: (lv_name_1_0= ruleUnaryOperatorName )
                    // InternalQVTimperative.g:8840:3: lv_name_1_0= ruleUnaryOperatorName
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getPrefixedPrimaryExpCSAccess().getNameUnaryOperatorNameParserRuleCall_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_125);
                    lv_name_1_0=ruleUnaryOperatorName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPrefixedPrimaryExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"name",
                              		lv_name_1_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.UnaryOperatorName");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:8856:2: ( (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS ) )
                    // InternalQVTimperative.g:8857:1: (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS )
                    {
                    // InternalQVTimperative.g:8857:1: (lv_ownedRight_2_0= rulePrefixedPrimaryExpCS )
                    // InternalQVTimperative.g:8858:3: lv_ownedRight_2_0= rulePrefixedPrimaryExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getPrefixedPrimaryExpCSAccess().getOwnedRightPrefixedPrimaryExpCSParserRuleCall_0_2_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedRight_2_0=rulePrefixedPrimaryExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPrefixedPrimaryExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedRight",
                              		lv_ownedRight_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PrefixedPrimaryExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:8876:2: this_PrimaryExpCS_3= rulePrimaryExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrefixedPrimaryExpCSAccess().getPrimaryExpCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrimaryExpCS_3=rulePrimaryExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PrimaryExpCS_3;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrefixedPrimaryExpCS"


    // $ANTLR start "entryRulePrimaryExpCS"
    // InternalQVTimperative.g:8895:1: entryRulePrimaryExpCS returns [EObject current=null] : iv_rulePrimaryExpCS= rulePrimaryExpCS EOF ;
    public final EObject entryRulePrimaryExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryExpCS = null;


        try {
            // InternalQVTimperative.g:8896:2: (iv_rulePrimaryExpCS= rulePrimaryExpCS EOF )
            // InternalQVTimperative.g:8897:2: iv_rulePrimaryExpCS= rulePrimaryExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrimaryExpCS=rulePrimaryExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimaryExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimaryExpCS"


    // $ANTLR start "rulePrimaryExpCS"
    // InternalQVTimperative.g:8904:1: rulePrimaryExpCS returns [EObject current=null] : (this_NestedExpCS_0= ruleNestedExpCS | this_IfExpCS_1= ruleIfExpCS | this_SelfExpCS_2= ruleSelfExpCS | this_PrimitiveLiteralExpCS_3= rulePrimitiveLiteralExpCS | this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS | this_MapLiteralExpCS_5= ruleMapLiteralExpCS | this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS | this_LambdaLiteralExpCS_7= ruleLambdaLiteralExpCS | this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS | this_NameExpCS_9= ruleNameExpCS ) ;
    public final EObject rulePrimaryExpCS() throws RecognitionException {
        EObject current = null;

        EObject this_NestedExpCS_0 = null;

        EObject this_IfExpCS_1 = null;

        EObject this_SelfExpCS_2 = null;

        EObject this_PrimitiveLiteralExpCS_3 = null;

        EObject this_TupleLiteralExpCS_4 = null;

        EObject this_MapLiteralExpCS_5 = null;

        EObject this_CollectionLiteralExpCS_6 = null;

        EObject this_LambdaLiteralExpCS_7 = null;

        EObject this_TypeLiteralExpCS_8 = null;

        EObject this_NameExpCS_9 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:8907:28: ( (this_NestedExpCS_0= ruleNestedExpCS | this_IfExpCS_1= ruleIfExpCS | this_SelfExpCS_2= ruleSelfExpCS | this_PrimitiveLiteralExpCS_3= rulePrimitiveLiteralExpCS | this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS | this_MapLiteralExpCS_5= ruleMapLiteralExpCS | this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS | this_LambdaLiteralExpCS_7= ruleLambdaLiteralExpCS | this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS | this_NameExpCS_9= ruleNameExpCS ) )
            // InternalQVTimperative.g:8908:1: (this_NestedExpCS_0= ruleNestedExpCS | this_IfExpCS_1= ruleIfExpCS | this_SelfExpCS_2= ruleSelfExpCS | this_PrimitiveLiteralExpCS_3= rulePrimitiveLiteralExpCS | this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS | this_MapLiteralExpCS_5= ruleMapLiteralExpCS | this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS | this_LambdaLiteralExpCS_7= ruleLambdaLiteralExpCS | this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS | this_NameExpCS_9= ruleNameExpCS )
            {
            // InternalQVTimperative.g:8908:1: (this_NestedExpCS_0= ruleNestedExpCS | this_IfExpCS_1= ruleIfExpCS | this_SelfExpCS_2= ruleSelfExpCS | this_PrimitiveLiteralExpCS_3= rulePrimitiveLiteralExpCS | this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS | this_MapLiteralExpCS_5= ruleMapLiteralExpCS | this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS | this_LambdaLiteralExpCS_7= ruleLambdaLiteralExpCS | this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS | this_NameExpCS_9= ruleNameExpCS )
            int alt187=10;
            alt187 = dfa187.predict(input);
            switch (alt187) {
                case 1 :
                    // InternalQVTimperative.g:8909:2: this_NestedExpCS_0= ruleNestedExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getNestedExpCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NestedExpCS_0=ruleNestedExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NestedExpCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:8922:2: this_IfExpCS_1= ruleIfExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getIfExpCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IfExpCS_1=ruleIfExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IfExpCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:8935:2: this_SelfExpCS_2= ruleSelfExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getSelfExpCSParserRuleCall_2());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SelfExpCS_2=ruleSelfExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_SelfExpCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 4 :
                    // InternalQVTimperative.g:8948:2: this_PrimitiveLiteralExpCS_3= rulePrimitiveLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getPrimitiveLiteralExpCSParserRuleCall_3());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrimitiveLiteralExpCS_3=rulePrimitiveLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PrimitiveLiteralExpCS_3;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 5 :
                    // InternalQVTimperative.g:8961:2: this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getTupleLiteralExpCSParserRuleCall_4());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TupleLiteralExpCS_4=ruleTupleLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TupleLiteralExpCS_4;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 6 :
                    // InternalQVTimperative.g:8974:2: this_MapLiteralExpCS_5= ruleMapLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getMapLiteralExpCSParserRuleCall_5());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_MapLiteralExpCS_5=ruleMapLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MapLiteralExpCS_5;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 7 :
                    // InternalQVTimperative.g:8987:2: this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getCollectionLiteralExpCSParserRuleCall_6());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CollectionLiteralExpCS_6=ruleCollectionLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_CollectionLiteralExpCS_6;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 8 :
                    // InternalQVTimperative.g:9000:2: this_LambdaLiteralExpCS_7= ruleLambdaLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getLambdaLiteralExpCSParserRuleCall_7());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_LambdaLiteralExpCS_7=ruleLambdaLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_LambdaLiteralExpCS_7;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 9 :
                    // InternalQVTimperative.g:9013:2: this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getTypeLiteralExpCSParserRuleCall_8());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypeLiteralExpCS_8=ruleTypeLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeLiteralExpCS_8;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 10 :
                    // InternalQVTimperative.g:9026:2: this_NameExpCS_9= ruleNameExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getPrimaryExpCSAccess().getNameExpCSParserRuleCall_9());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NameExpCS_9=ruleNameExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NameExpCS_9;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimaryExpCS"


    // $ANTLR start "entryRuleNameExpCS"
    // InternalQVTimperative.g:9045:1: entryRuleNameExpCS returns [EObject current=null] : iv_ruleNameExpCS= ruleNameExpCS EOF ;
    public final EObject entryRuleNameExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNameExpCS = null;


        try {
            // InternalQVTimperative.g:9046:2: (iv_ruleNameExpCS= ruleNameExpCS EOF )
            // InternalQVTimperative.g:9047:2: iv_ruleNameExpCS= ruleNameExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNameExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNameExpCS=ruleNameExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNameExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNameExpCS"


    // $ANTLR start "ruleNameExpCS"
    // InternalQVTimperative.g:9054:1: ruleNameExpCS returns [EObject current=null] : ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS ) )* ( (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS ) )? ( (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS ) )? ( ( (lv_isPre_4_0= '@' ) ) otherlv_5= 'pre' )? ) ;
    public final EObject ruleNameExpCS() throws RecognitionException {
        EObject current = null;

        Token lv_isPre_4_0=null;
        Token otherlv_5=null;
        EObject lv_ownedPathName_0_0 = null;

        EObject lv_ownedSquareBracketedClauses_1_0 = null;

        EObject lv_ownedRoundBracketedClause_2_0 = null;

        EObject lv_ownedCurlyBracketedClause_3_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:9057:28: ( ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS ) )* ( (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS ) )? ( (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS ) )? ( ( (lv_isPre_4_0= '@' ) ) otherlv_5= 'pre' )? ) )
            // InternalQVTimperative.g:9058:1: ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS ) )* ( (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS ) )? ( (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS ) )? ( ( (lv_isPre_4_0= '@' ) ) otherlv_5= 'pre' )? )
            {
            // InternalQVTimperative.g:9058:1: ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS ) )* ( (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS ) )? ( (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS ) )? ( ( (lv_isPre_4_0= '@' ) ) otherlv_5= 'pre' )? )
            // InternalQVTimperative.g:9058:2: ( (lv_ownedPathName_0_0= rulePathNameCS ) ) ( (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS ) )* ( (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS ) )? ( (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS ) )? ( ( (lv_isPre_4_0= '@' ) ) otherlv_5= 'pre' )?
            {
            // InternalQVTimperative.g:9058:2: ( (lv_ownedPathName_0_0= rulePathNameCS ) )
            // InternalQVTimperative.g:9059:1: (lv_ownedPathName_0_0= rulePathNameCS )
            {
            // InternalQVTimperative.g:9059:1: (lv_ownedPathName_0_0= rulePathNameCS )
            // InternalQVTimperative.g:9060:3: lv_ownedPathName_0_0= rulePathNameCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getNameExpCSAccess().getOwnedPathNamePathNameCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_126);
            lv_ownedPathName_0_0=rulePathNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNameExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedPathName",
                      		lv_ownedPathName_0_0,
                      		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:9076:2: ( (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS ) )*
            loop188:
            do {
                int alt188=2;
                int LA188_0 = input.LA(1);

                if ( (LA188_0==141) ) {
                    alt188=1;
                }


                switch (alt188) {
            	case 1 :
            	    // InternalQVTimperative.g:9077:1: (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS )
            	    {
            	    // InternalQVTimperative.g:9077:1: (lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS )
            	    // InternalQVTimperative.g:9078:3: lv_ownedSquareBracketedClauses_1_0= ruleSquareBracketedClauseCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getNameExpCSAccess().getOwnedSquareBracketedClausesSquareBracketedClauseCSParserRuleCall_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_126);
            	    lv_ownedSquareBracketedClauses_1_0=ruleSquareBracketedClauseCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getNameExpCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedSquareBracketedClauses",
            	              		lv_ownedSquareBracketedClauses_1_0,
            	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.SquareBracketedClauseCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop188;
                }
            } while (true);

            // InternalQVTimperative.g:9094:3: ( (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS ) )?
            int alt189=2;
            int LA189_0 = input.LA(1);

            if ( (LA189_0==53) ) {
                alt189=1;
            }
            switch (alt189) {
                case 1 :
                    // InternalQVTimperative.g:9095:1: (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS )
                    {
                    // InternalQVTimperative.g:9095:1: (lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS )
                    // InternalQVTimperative.g:9096:3: lv_ownedRoundBracketedClause_2_0= ruleRoundBracketedClauseCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNameExpCSAccess().getOwnedRoundBracketedClauseRoundBracketedClauseCSParserRuleCall_2_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_127);
                    lv_ownedRoundBracketedClause_2_0=ruleRoundBracketedClauseCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNameExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedRoundBracketedClause",
                              		lv_ownedRoundBracketedClause_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.RoundBracketedClauseCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:9112:3: ( (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS ) )?
            int alt190=2;
            alt190 = dfa190.predict(input);
            switch (alt190) {
                case 1 :
                    // InternalQVTimperative.g:9113:1: (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS )
                    {
                    // InternalQVTimperative.g:9113:1: (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS )
                    // InternalQVTimperative.g:9114:3: lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNameExpCSAccess().getOwnedCurlyBracketedClauseCurlyBracketedClauseCSParserRuleCall_3_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_128);
                    lv_ownedCurlyBracketedClause_3_0=ruleCurlyBracketedClauseCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNameExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedCurlyBracketedClause",
                              		lv_ownedCurlyBracketedClause_3_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.CurlyBracketedClauseCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:9130:3: ( ( (lv_isPre_4_0= '@' ) ) otherlv_5= 'pre' )?
            int alt191=2;
            int LA191_0 = input.LA(1);

            if ( (LA191_0==139) ) {
                alt191=1;
            }
            switch (alt191) {
                case 1 :
                    // InternalQVTimperative.g:9130:4: ( (lv_isPre_4_0= '@' ) ) otherlv_5= 'pre'
                    {
                    // InternalQVTimperative.g:9130:4: ( (lv_isPre_4_0= '@' ) )
                    // InternalQVTimperative.g:9131:1: (lv_isPre_4_0= '@' )
                    {
                    // InternalQVTimperative.g:9131:1: (lv_isPre_4_0= '@' )
                    // InternalQVTimperative.g:9132:3: lv_isPre_4_0= '@'
                    {
                    lv_isPre_4_0=(Token)match(input,139,FollowSets000.FOLLOW_129); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isPre_4_0, grammarAccess.getNameExpCSAccess().getIsPreCommercialAtKeyword_4_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getNameExpCSRule());
                      	        }
                             		setWithLastConsumed(current, "isPre", true, "@");

                    }

                    }


                    }

                    otherlv_5=(Token)match(input,140,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getNameExpCSAccess().getPreKeyword_4_1());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNameExpCS"


    // $ANTLR start "entryRuleCurlyBracketedClauseCS"
    // InternalQVTimperative.g:9157:1: entryRuleCurlyBracketedClauseCS returns [EObject current=null] : iv_ruleCurlyBracketedClauseCS= ruleCurlyBracketedClauseCS EOF ;
    public final EObject entryRuleCurlyBracketedClauseCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCurlyBracketedClauseCS = null;


        try {
            // InternalQVTimperative.g:9158:2: (iv_ruleCurlyBracketedClauseCS= ruleCurlyBracketedClauseCS EOF )
            // InternalQVTimperative.g:9159:2: iv_ruleCurlyBracketedClauseCS= ruleCurlyBracketedClauseCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCurlyBracketedClauseCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCurlyBracketedClauseCS=ruleCurlyBracketedClauseCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCurlyBracketedClauseCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCurlyBracketedClauseCS"


    // $ANTLR start "ruleCurlyBracketedClauseCS"
    // InternalQVTimperative.g:9166:1: ruleCurlyBracketedClauseCS returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleShadowPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleCurlyBracketedClauseCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_ownedParts_2_0 = null;

        EObject lv_ownedParts_4_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:9169:28: ( ( () otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleShadowPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )* )? otherlv_5= '}' ) )
            // InternalQVTimperative.g:9170:1: ( () otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleShadowPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )* )? otherlv_5= '}' )
            {
            // InternalQVTimperative.g:9170:1: ( () otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleShadowPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )* )? otherlv_5= '}' )
            // InternalQVTimperative.g:9170:2: () otherlv_1= '{' ( ( (lv_ownedParts_2_0= ruleShadowPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )* )? otherlv_5= '}'
            {
            // InternalQVTimperative.g:9170:2: ()
            // InternalQVTimperative.g:9171:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getCurlyBracketedClauseCSAccess().getCurlyBracketedClauseCSAction_0(),
                          current);

            }

            }

            otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_130); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getCurlyBracketedClauseCSAccess().getLeftCurlyBracketKeyword_1());

            }
            // InternalQVTimperative.g:9183:1: ( ( (lv_ownedParts_2_0= ruleShadowPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )* )?
            int alt193=2;
            int LA193_0 = input.LA(1);

            if ( (LA193_0==RULE_SINGLE_QUOTED_STRING||(LA193_0>=RULE_SIMPLE_ID && LA193_0<=RULE_ESCAPED_ID)||LA193_0==17||LA193_0==19||(LA193_0>=22 && LA193_0<=23)||(LA193_0>=25 && LA193_0<=26)||(LA193_0>=28 && LA193_0<=31)||LA193_0==34||(LA193_0>=38 && LA193_0<=39)||(LA193_0>=43 && LA193_0<=49)||(LA193_0>=51 && LA193_0<=52)||(LA193_0>=55 && LA193_0<=57)||(LA193_0>=59 && LA193_0<=64)||LA193_0==66||LA193_0==68||LA193_0==70||LA193_0==73||LA193_0==75||LA193_0==77||(LA193_0>=79 && LA193_0<=83)||(LA193_0>=85 && LA193_0<=90)||LA193_0==92||LA193_0==94||(LA193_0>=96 && LA193_0<=99)) ) {
                alt193=1;
            }
            switch (alt193) {
                case 1 :
                    // InternalQVTimperative.g:9183:2: ( (lv_ownedParts_2_0= ruleShadowPartCS ) ) (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )*
                    {
                    // InternalQVTimperative.g:9183:2: ( (lv_ownedParts_2_0= ruleShadowPartCS ) )
                    // InternalQVTimperative.g:9184:1: (lv_ownedParts_2_0= ruleShadowPartCS )
                    {
                    // InternalQVTimperative.g:9184:1: (lv_ownedParts_2_0= ruleShadowPartCS )
                    // InternalQVTimperative.g:9185:3: lv_ownedParts_2_0= ruleShadowPartCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getCurlyBracketedClauseCSAccess().getOwnedPartsShadowPartCSParserRuleCall_2_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_114);
                    lv_ownedParts_2_0=ruleShadowPartCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCurlyBracketedClauseCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedParts",
                              		lv_ownedParts_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ShadowPartCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:9201:2: (otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) ) )*
                    loop192:
                    do {
                        int alt192=2;
                        int LA192_0 = input.LA(1);

                        if ( (LA192_0==18) ) {
                            alt192=1;
                        }


                        switch (alt192) {
                    	case 1 :
                    	    // InternalQVTimperative.g:9201:4: otherlv_3= ',' ( (lv_ownedParts_4_0= ruleShadowPartCS ) )
                    	    {
                    	    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_25); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getCurlyBracketedClauseCSAccess().getCommaKeyword_2_1_0());

                    	    }
                    	    // InternalQVTimperative.g:9205:1: ( (lv_ownedParts_4_0= ruleShadowPartCS ) )
                    	    // InternalQVTimperative.g:9206:1: (lv_ownedParts_4_0= ruleShadowPartCS )
                    	    {
                    	    // InternalQVTimperative.g:9206:1: (lv_ownedParts_4_0= ruleShadowPartCS )
                    	    // InternalQVTimperative.g:9207:3: lv_ownedParts_4_0= ruleShadowPartCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getCurlyBracketedClauseCSAccess().getOwnedPartsShadowPartCSParserRuleCall_2_1_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_114);
                    	    lv_ownedParts_4_0=ruleShadowPartCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getCurlyBracketedClauseCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedParts",
                    	              		lv_ownedParts_4_0,
                    	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ShadowPartCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop192;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getCurlyBracketedClauseCSAccess().getRightCurlyBracketKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCurlyBracketedClauseCS"


    // $ANTLR start "entryRuleRoundBracketedClauseCS"
    // InternalQVTimperative.g:9235:1: entryRuleRoundBracketedClauseCS returns [EObject current=null] : iv_ruleRoundBracketedClauseCS= ruleRoundBracketedClauseCS EOF ;
    public final EObject entryRuleRoundBracketedClauseCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRoundBracketedClauseCS = null;


        try {
            // InternalQVTimperative.g:9236:2: (iv_ruleRoundBracketedClauseCS= ruleRoundBracketedClauseCS EOF )
            // InternalQVTimperative.g:9237:2: iv_ruleRoundBracketedClauseCS= ruleRoundBracketedClauseCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRoundBracketedClauseCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRoundBracketedClauseCS=ruleRoundBracketedClauseCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRoundBracketedClauseCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRoundBracketedClauseCS"


    // $ANTLR start "ruleRoundBracketedClauseCS"
    // InternalQVTimperative.g:9244:1: ruleRoundBracketedClauseCS returns [EObject current=null] : ( () otherlv_1= '(' ( ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) ) ( (lv_ownedArguments_3_0= ruleNavigatingCommaArgCS ) )* ( ( (lv_ownedArguments_4_0= ruleNavigatingSemiArgCS ) ) ( (lv_ownedArguments_5_0= ruleNavigatingCommaArgCS ) )* )? ( ( (lv_ownedArguments_6_0= ruleNavigatingBarArgCS ) ) ( (lv_ownedArguments_7_0= ruleNavigatingCommaArgCS ) )* )* )? otherlv_8= ')' ) ;
    public final EObject ruleRoundBracketedClauseCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_8=null;
        EObject lv_ownedArguments_2_0 = null;

        EObject lv_ownedArguments_3_0 = null;

        EObject lv_ownedArguments_4_0 = null;

        EObject lv_ownedArguments_5_0 = null;

        EObject lv_ownedArguments_6_0 = null;

        EObject lv_ownedArguments_7_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:9247:28: ( ( () otherlv_1= '(' ( ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) ) ( (lv_ownedArguments_3_0= ruleNavigatingCommaArgCS ) )* ( ( (lv_ownedArguments_4_0= ruleNavigatingSemiArgCS ) ) ( (lv_ownedArguments_5_0= ruleNavigatingCommaArgCS ) )* )? ( ( (lv_ownedArguments_6_0= ruleNavigatingBarArgCS ) ) ( (lv_ownedArguments_7_0= ruleNavigatingCommaArgCS ) )* )* )? otherlv_8= ')' ) )
            // InternalQVTimperative.g:9248:1: ( () otherlv_1= '(' ( ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) ) ( (lv_ownedArguments_3_0= ruleNavigatingCommaArgCS ) )* ( ( (lv_ownedArguments_4_0= ruleNavigatingSemiArgCS ) ) ( (lv_ownedArguments_5_0= ruleNavigatingCommaArgCS ) )* )? ( ( (lv_ownedArguments_6_0= ruleNavigatingBarArgCS ) ) ( (lv_ownedArguments_7_0= ruleNavigatingCommaArgCS ) )* )* )? otherlv_8= ')' )
            {
            // InternalQVTimperative.g:9248:1: ( () otherlv_1= '(' ( ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) ) ( (lv_ownedArguments_3_0= ruleNavigatingCommaArgCS ) )* ( ( (lv_ownedArguments_4_0= ruleNavigatingSemiArgCS ) ) ( (lv_ownedArguments_5_0= ruleNavigatingCommaArgCS ) )* )? ( ( (lv_ownedArguments_6_0= ruleNavigatingBarArgCS ) ) ( (lv_ownedArguments_7_0= ruleNavigatingCommaArgCS ) )* )* )? otherlv_8= ')' )
            // InternalQVTimperative.g:9248:2: () otherlv_1= '(' ( ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) ) ( (lv_ownedArguments_3_0= ruleNavigatingCommaArgCS ) )* ( ( (lv_ownedArguments_4_0= ruleNavigatingSemiArgCS ) ) ( (lv_ownedArguments_5_0= ruleNavigatingCommaArgCS ) )* )? ( ( (lv_ownedArguments_6_0= ruleNavigatingBarArgCS ) ) ( (lv_ownedArguments_7_0= ruleNavigatingCommaArgCS ) )* )* )? otherlv_8= ')'
            {
            // InternalQVTimperative.g:9248:2: ()
            // InternalQVTimperative.g:9249:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getRoundBracketedClauseCSAccess().getRoundBracketedClauseCSAction_0(),
                          current);

            }

            }

            otherlv_1=(Token)match(input,53,FollowSets000.FOLLOW_131); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getRoundBracketedClauseCSAccess().getLeftParenthesisKeyword_1());

            }
            // InternalQVTimperative.g:9261:1: ( ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) ) ( (lv_ownedArguments_3_0= ruleNavigatingCommaArgCS ) )* ( ( (lv_ownedArguments_4_0= ruleNavigatingSemiArgCS ) ) ( (lv_ownedArguments_5_0= ruleNavigatingCommaArgCS ) )* )? ( ( (lv_ownedArguments_6_0= ruleNavigatingBarArgCS ) ) ( (lv_ownedArguments_7_0= ruleNavigatingCommaArgCS ) )* )* )?
            int alt199=2;
            int LA199_0 = input.LA(1);

            if ( (LA199_0==RULE_SINGLE_QUOTED_STRING||(LA199_0>=RULE_INT && LA199_0<=RULE_ESCAPED_ID)||LA199_0==17||LA199_0==19||(LA199_0>=22 && LA199_0<=26)||(LA199_0>=28 && LA199_0<=31)||LA199_0==34||(LA199_0>=37 && LA199_0<=39)||(LA199_0>=43 && LA199_0<=49)||(LA199_0>=51 && LA199_0<=53)||(LA199_0>=55 && LA199_0<=57)||(LA199_0>=59 && LA199_0<=64)||LA199_0==66||LA199_0==68||LA199_0==70||LA199_0==73||LA199_0==75||LA199_0==77||(LA199_0>=79 && LA199_0<=83)||(LA199_0>=85 && LA199_0<=90)||LA199_0==92||LA199_0==94||(LA199_0>=96 && LA199_0<=101)||(LA199_0>=116 && LA199_0<=130)||LA199_0==133||(LA199_0>=135 && LA199_0<=138)||LA199_0==144||(LA199_0>=149 && LA199_0<=150)) ) {
                alt199=1;
            }
            switch (alt199) {
                case 1 :
                    // InternalQVTimperative.g:9261:2: ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) ) ( (lv_ownedArguments_3_0= ruleNavigatingCommaArgCS ) )* ( ( (lv_ownedArguments_4_0= ruleNavigatingSemiArgCS ) ) ( (lv_ownedArguments_5_0= ruleNavigatingCommaArgCS ) )* )? ( ( (lv_ownedArguments_6_0= ruleNavigatingBarArgCS ) ) ( (lv_ownedArguments_7_0= ruleNavigatingCommaArgCS ) )* )*
                    {
                    // InternalQVTimperative.g:9261:2: ( (lv_ownedArguments_2_0= ruleNavigatingArgCS ) )
                    // InternalQVTimperative.g:9262:1: (lv_ownedArguments_2_0= ruleNavigatingArgCS )
                    {
                    // InternalQVTimperative.g:9262:1: (lv_ownedArguments_2_0= ruleNavigatingArgCS )
                    // InternalQVTimperative.g:9263:3: lv_ownedArguments_2_0= ruleNavigatingArgCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingArgCSParserRuleCall_2_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_132);
                    lv_ownedArguments_2_0=ruleNavigatingArgCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getRoundBracketedClauseCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedArguments",
                              		lv_ownedArguments_2_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingArgCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:9279:2: ( (lv_ownedArguments_3_0= ruleNavigatingCommaArgCS ) )*
                    loop194:
                    do {
                        int alt194=2;
                        int LA194_0 = input.LA(1);

                        if ( (LA194_0==18) ) {
                            alt194=1;
                        }


                        switch (alt194) {
                    	case 1 :
                    	    // InternalQVTimperative.g:9280:1: (lv_ownedArguments_3_0= ruleNavigatingCommaArgCS )
                    	    {
                    	    // InternalQVTimperative.g:9280:1: (lv_ownedArguments_3_0= ruleNavigatingCommaArgCS )
                    	    // InternalQVTimperative.g:9281:3: lv_ownedArguments_3_0= ruleNavigatingCommaArgCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingCommaArgCSParserRuleCall_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_132);
                    	    lv_ownedArguments_3_0=ruleNavigatingCommaArgCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getRoundBracketedClauseCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedArguments",
                    	              		lv_ownedArguments_3_0,
                    	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingCommaArgCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop194;
                        }
                    } while (true);

                    // InternalQVTimperative.g:9297:3: ( ( (lv_ownedArguments_4_0= ruleNavigatingSemiArgCS ) ) ( (lv_ownedArguments_5_0= ruleNavigatingCommaArgCS ) )* )?
                    int alt196=2;
                    int LA196_0 = input.LA(1);

                    if ( (LA196_0==21) ) {
                        alt196=1;
                    }
                    switch (alt196) {
                        case 1 :
                            // InternalQVTimperative.g:9297:4: ( (lv_ownedArguments_4_0= ruleNavigatingSemiArgCS ) ) ( (lv_ownedArguments_5_0= ruleNavigatingCommaArgCS ) )*
                            {
                            // InternalQVTimperative.g:9297:4: ( (lv_ownedArguments_4_0= ruleNavigatingSemiArgCS ) )
                            // InternalQVTimperative.g:9298:1: (lv_ownedArguments_4_0= ruleNavigatingSemiArgCS )
                            {
                            // InternalQVTimperative.g:9298:1: (lv_ownedArguments_4_0= ruleNavigatingSemiArgCS )
                            // InternalQVTimperative.g:9299:3: lv_ownedArguments_4_0= ruleNavigatingSemiArgCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingSemiArgCSParserRuleCall_2_2_0_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_133);
                            lv_ownedArguments_4_0=ruleNavigatingSemiArgCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getRoundBracketedClauseCSRule());
                              	        }
                                     		add(
                                     			current,
                                     			"ownedArguments",
                                      		lv_ownedArguments_4_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingSemiArgCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }

                            // InternalQVTimperative.g:9315:2: ( (lv_ownedArguments_5_0= ruleNavigatingCommaArgCS ) )*
                            loop195:
                            do {
                                int alt195=2;
                                int LA195_0 = input.LA(1);

                                if ( (LA195_0==18) ) {
                                    alt195=1;
                                }


                                switch (alt195) {
                            	case 1 :
                            	    // InternalQVTimperative.g:9316:1: (lv_ownedArguments_5_0= ruleNavigatingCommaArgCS )
                            	    {
                            	    // InternalQVTimperative.g:9316:1: (lv_ownedArguments_5_0= ruleNavigatingCommaArgCS )
                            	    // InternalQVTimperative.g:9317:3: lv_ownedArguments_5_0= ruleNavigatingCommaArgCS
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      	        newCompositeNode(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingCommaArgCSParserRuleCall_2_2_1_0());

                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_133);
                            	    lv_ownedArguments_5_0=ruleNavigatingCommaArgCS();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getRoundBracketedClauseCSRule());
                            	      	        }
                            	             		add(
                            	             			current,
                            	             			"ownedArguments",
                            	              		lv_ownedArguments_5_0,
                            	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingCommaArgCS");
                            	      	        afterParserOrEnumRuleCall();

                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop195;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // InternalQVTimperative.g:9333:5: ( ( (lv_ownedArguments_6_0= ruleNavigatingBarArgCS ) ) ( (lv_ownedArguments_7_0= ruleNavigatingCommaArgCS ) )* )*
                    loop198:
                    do {
                        int alt198=2;
                        int LA198_0 = input.LA(1);

                        if ( (LA198_0==143) ) {
                            alt198=1;
                        }


                        switch (alt198) {
                    	case 1 :
                    	    // InternalQVTimperative.g:9333:6: ( (lv_ownedArguments_6_0= ruleNavigatingBarArgCS ) ) ( (lv_ownedArguments_7_0= ruleNavigatingCommaArgCS ) )*
                    	    {
                    	    // InternalQVTimperative.g:9333:6: ( (lv_ownedArguments_6_0= ruleNavigatingBarArgCS ) )
                    	    // InternalQVTimperative.g:9334:1: (lv_ownedArguments_6_0= ruleNavigatingBarArgCS )
                    	    {
                    	    // InternalQVTimperative.g:9334:1: (lv_ownedArguments_6_0= ruleNavigatingBarArgCS )
                    	    // InternalQVTimperative.g:9335:3: lv_ownedArguments_6_0= ruleNavigatingBarArgCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingBarArgCSParserRuleCall_2_3_0_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_133);
                    	    lv_ownedArguments_6_0=ruleNavigatingBarArgCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getRoundBracketedClauseCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedArguments",
                    	              		lv_ownedArguments_6_0,
                    	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingBarArgCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }

                    	    // InternalQVTimperative.g:9351:2: ( (lv_ownedArguments_7_0= ruleNavigatingCommaArgCS ) )*
                    	    loop197:
                    	    do {
                    	        int alt197=2;
                    	        int LA197_0 = input.LA(1);

                    	        if ( (LA197_0==18) ) {
                    	            alt197=1;
                    	        }


                    	        switch (alt197) {
                    	    	case 1 :
                    	    	    // InternalQVTimperative.g:9352:1: (lv_ownedArguments_7_0= ruleNavigatingCommaArgCS )
                    	    	    {
                    	    	    // InternalQVTimperative.g:9352:1: (lv_ownedArguments_7_0= ruleNavigatingCommaArgCS )
                    	    	    // InternalQVTimperative.g:9353:3: lv_ownedArguments_7_0= ruleNavigatingCommaArgCS
                    	    	    {
                    	    	    if ( state.backtracking==0 ) {

                    	    	      	        newCompositeNode(grammarAccess.getRoundBracketedClauseCSAccess().getOwnedArgumentsNavigatingCommaArgCSParserRuleCall_2_3_1_0());

                    	    	    }
                    	    	    pushFollow(FollowSets000.FOLLOW_133);
                    	    	    lv_ownedArguments_7_0=ruleNavigatingCommaArgCS();

                    	    	    state._fsp--;
                    	    	    if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      	        if (current==null) {
                    	    	      	            current = createModelElementForParent(grammarAccess.getRoundBracketedClauseCSRule());
                    	    	      	        }
                    	    	             		add(
                    	    	             			current,
                    	    	             			"ownedArguments",
                    	    	              		lv_ownedArguments_7_0,
                    	    	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingCommaArgCS");
                    	    	      	        afterParserOrEnumRuleCall();

                    	    	    }

                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop197;
                    	        }
                    	    } while (true);


                    	    }
                    	    break;

                    	default :
                    	    break loop198;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_8=(Token)match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getRoundBracketedClauseCSAccess().getRightParenthesisKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRoundBracketedClauseCS"


    // $ANTLR start "entryRuleSquareBracketedClauseCS"
    // InternalQVTimperative.g:9381:1: entryRuleSquareBracketedClauseCS returns [EObject current=null] : iv_ruleSquareBracketedClauseCS= ruleSquareBracketedClauseCS EOF ;
    public final EObject entryRuleSquareBracketedClauseCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSquareBracketedClauseCS = null;


        try {
            // InternalQVTimperative.g:9382:2: (iv_ruleSquareBracketedClauseCS= ruleSquareBracketedClauseCS EOF )
            // InternalQVTimperative.g:9383:2: iv_ruleSquareBracketedClauseCS= ruleSquareBracketedClauseCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSquareBracketedClauseCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSquareBracketedClauseCS=ruleSquareBracketedClauseCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSquareBracketedClauseCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSquareBracketedClauseCS"


    // $ANTLR start "ruleSquareBracketedClauseCS"
    // InternalQVTimperative.g:9390:1: ruleSquareBracketedClauseCS returns [EObject current=null] : (otherlv_0= '[' ( (lv_ownedTerms_1_0= ruleExpCS ) ) (otherlv_2= ',' ( (lv_ownedTerms_3_0= ruleExpCS ) ) )* otherlv_4= ']' ) ;
    public final EObject ruleSquareBracketedClauseCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedTerms_1_0 = null;

        EObject lv_ownedTerms_3_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:9393:28: ( (otherlv_0= '[' ( (lv_ownedTerms_1_0= ruleExpCS ) ) (otherlv_2= ',' ( (lv_ownedTerms_3_0= ruleExpCS ) ) )* otherlv_4= ']' ) )
            // InternalQVTimperative.g:9394:1: (otherlv_0= '[' ( (lv_ownedTerms_1_0= ruleExpCS ) ) (otherlv_2= ',' ( (lv_ownedTerms_3_0= ruleExpCS ) ) )* otherlv_4= ']' )
            {
            // InternalQVTimperative.g:9394:1: (otherlv_0= '[' ( (lv_ownedTerms_1_0= ruleExpCS ) ) (otherlv_2= ',' ( (lv_ownedTerms_3_0= ruleExpCS ) ) )* otherlv_4= ']' )
            // InternalQVTimperative.g:9394:3: otherlv_0= '[' ( (lv_ownedTerms_1_0= ruleExpCS ) ) (otherlv_2= ',' ( (lv_ownedTerms_3_0= ruleExpCS ) ) )* otherlv_4= ']'
            {
            otherlv_0=(Token)match(input,141,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getSquareBracketedClauseCSAccess().getLeftSquareBracketKeyword_0());

            }
            // InternalQVTimperative.g:9398:1: ( (lv_ownedTerms_1_0= ruleExpCS ) )
            // InternalQVTimperative.g:9399:1: (lv_ownedTerms_1_0= ruleExpCS )
            {
            // InternalQVTimperative.g:9399:1: (lv_ownedTerms_1_0= ruleExpCS )
            // InternalQVTimperative.g:9400:3: lv_ownedTerms_1_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getSquareBracketedClauseCSAccess().getOwnedTermsExpCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_134);
            lv_ownedTerms_1_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSquareBracketedClauseCSRule());
              	        }
                     		add(
                     			current,
                     			"ownedTerms",
                      		lv_ownedTerms_1_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:9416:2: (otherlv_2= ',' ( (lv_ownedTerms_3_0= ruleExpCS ) ) )*
            loop200:
            do {
                int alt200=2;
                int LA200_0 = input.LA(1);

                if ( (LA200_0==18) ) {
                    alt200=1;
                }


                switch (alt200) {
            	case 1 :
            	    // InternalQVTimperative.g:9416:4: otherlv_2= ',' ( (lv_ownedTerms_3_0= ruleExpCS ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getSquareBracketedClauseCSAccess().getCommaKeyword_2_0());

            	    }
            	    // InternalQVTimperative.g:9420:1: ( (lv_ownedTerms_3_0= ruleExpCS ) )
            	    // InternalQVTimperative.g:9421:1: (lv_ownedTerms_3_0= ruleExpCS )
            	    {
            	    // InternalQVTimperative.g:9421:1: (lv_ownedTerms_3_0= ruleExpCS )
            	    // InternalQVTimperative.g:9422:3: lv_ownedTerms_3_0= ruleExpCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getSquareBracketedClauseCSAccess().getOwnedTermsExpCSParserRuleCall_2_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_134);
            	    lv_ownedTerms_3_0=ruleExpCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSquareBracketedClauseCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedTerms",
            	              		lv_ownedTerms_3_0,
            	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop200;
                }
            } while (true);

            otherlv_4=(Token)match(input,142,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getSquareBracketedClauseCSAccess().getRightSquareBracketKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSquareBracketedClauseCS"


    // $ANTLR start "entryRuleNavigatingArgCS"
    // InternalQVTimperative.g:9450:1: entryRuleNavigatingArgCS returns [EObject current=null] : iv_ruleNavigatingArgCS= ruleNavigatingArgCS EOF ;
    public final EObject entryRuleNavigatingArgCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNavigatingArgCS = null;


        try {
            // InternalQVTimperative.g:9451:2: (iv_ruleNavigatingArgCS= ruleNavigatingArgCS EOF )
            // InternalQVTimperative.g:9452:2: iv_ruleNavigatingArgCS= ruleNavigatingArgCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNavigatingArgCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNavigatingArgCS=ruleNavigatingArgCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNavigatingArgCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNavigatingArgCS"


    // $ANTLR start "ruleNavigatingArgCS"
    // InternalQVTimperative.g:9459:1: ruleNavigatingArgCS returns [EObject current=null] : ( ( ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) ) ( (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? ) | (otherlv_5= 'in' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) ) )? ) | (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) ) ) ;
    public final EObject ruleNavigatingArgCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_ownedNameExpression_0_0 = null;

        EObject lv_ownedType_2_0 = null;

        EObject lv_ownedInitExpression_4_0 = null;

        EObject lv_ownedInitExpression_6_0 = null;

        EObject lv_ownedType_8_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:9462:28: ( ( ( ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) ) ( (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? ) | (otherlv_5= 'in' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) ) )? ) | (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) ) ) )
            // InternalQVTimperative.g:9463:1: ( ( ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) ) ( (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? ) | (otherlv_5= 'in' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) ) )? ) | (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) ) )
            {
            // InternalQVTimperative.g:9463:1: ( ( ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) ) ( (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? ) | (otherlv_5= 'in' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) ) )? ) | (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) ) )
            int alt203=2;
            int LA203_0 = input.LA(1);

            if ( (LA203_0==RULE_SINGLE_QUOTED_STRING||(LA203_0>=RULE_INT && LA203_0<=RULE_ESCAPED_ID)||LA203_0==17||LA203_0==19||(LA203_0>=22 && LA203_0<=23)||(LA203_0>=25 && LA203_0<=26)||(LA203_0>=28 && LA203_0<=31)||LA203_0==34||(LA203_0>=37 && LA203_0<=39)||(LA203_0>=43 && LA203_0<=49)||(LA203_0>=51 && LA203_0<=53)||(LA203_0>=55 && LA203_0<=57)||(LA203_0>=59 && LA203_0<=64)||LA203_0==66||LA203_0==68||LA203_0==70||LA203_0==73||LA203_0==75||LA203_0==77||(LA203_0>=79 && LA203_0<=83)||(LA203_0>=85 && LA203_0<=90)||LA203_0==92||LA203_0==94||(LA203_0>=96 && LA203_0<=101)||(LA203_0>=116 && LA203_0<=130)||LA203_0==133||(LA203_0>=135 && LA203_0<=138)||LA203_0==144||(LA203_0>=149 && LA203_0<=150)) ) {
                alt203=1;
            }
            else if ( (LA203_0==24) ) {
                alt203=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 203, 0, input);

                throw nvae;
            }
            switch (alt203) {
                case 1 :
                    // InternalQVTimperative.g:9463:2: ( ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) ) ( (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? ) | (otherlv_5= 'in' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) ) )? )
                    {
                    // InternalQVTimperative.g:9463:2: ( ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) ) ( (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? ) | (otherlv_5= 'in' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) ) )? )
                    // InternalQVTimperative.g:9463:3: ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) ) ( (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? ) | (otherlv_5= 'in' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) ) )?
                    {
                    // InternalQVTimperative.g:9463:3: ( (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS ) )
                    // InternalQVTimperative.g:9464:1: (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS )
                    {
                    // InternalQVTimperative.g:9464:1: (lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS )
                    // InternalQVTimperative.g:9465:3: lv_ownedNameExpression_0_0= ruleNavigatingArgExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedNameExpressionNavigatingArgExpCSParserRuleCall_0_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_135);
                    lv_ownedNameExpression_0_0=ruleNavigatingArgExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedNameExpression",
                              		lv_ownedNameExpression_0_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingArgExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:9481:2: ( (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? ) | (otherlv_5= 'in' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) ) )?
                    int alt202=3;
                    int LA202_0 = input.LA(1);

                    if ( (LA202_0==24) ) {
                        alt202=1;
                    }
                    else if ( (LA202_0==40) ) {
                        alt202=2;
                    }
                    switch (alt202) {
                        case 1 :
                            // InternalQVTimperative.g:9481:3: (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? )
                            {
                            // InternalQVTimperative.g:9481:3: (otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )? )
                            // InternalQVTimperative.g:9481:5: otherlv_1= ':' ( (lv_ownedType_2_0= ruleTypeExpCS ) ) (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )?
                            {
                            otherlv_1=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_1, grammarAccess.getNavigatingArgCSAccess().getColonKeyword_0_1_0_0());

                            }
                            // InternalQVTimperative.g:9485:1: ( (lv_ownedType_2_0= ruleTypeExpCS ) )
                            // InternalQVTimperative.g:9486:1: (lv_ownedType_2_0= ruleTypeExpCS )
                            {
                            // InternalQVTimperative.g:9486:1: (lv_ownedType_2_0= ruleTypeExpCS )
                            // InternalQVTimperative.g:9487:3: lv_ownedType_2_0= ruleTypeExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_0_1_0_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_136);
                            lv_ownedType_2_0=ruleTypeExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedType",
                                      		lv_ownedType_2_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }

                            // InternalQVTimperative.g:9503:2: (otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) ) )?
                            int alt201=2;
                            int LA201_0 = input.LA(1);

                            if ( (LA201_0==50) ) {
                                alt201=1;
                            }
                            switch (alt201) {
                                case 1 :
                                    // InternalQVTimperative.g:9503:4: otherlv_3= '=' ( (lv_ownedInitExpression_4_0= ruleExpCS ) )
                                    {
                                    otherlv_3=(Token)match(input,50,FollowSets000.FOLLOW_8); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_3, grammarAccess.getNavigatingArgCSAccess().getEqualsSignKeyword_0_1_0_2_0());

                                    }
                                    // InternalQVTimperative.g:9507:1: ( (lv_ownedInitExpression_4_0= ruleExpCS ) )
                                    // InternalQVTimperative.g:9508:1: (lv_ownedInitExpression_4_0= ruleExpCS )
                                    {
                                    // InternalQVTimperative.g:9508:1: (lv_ownedInitExpression_4_0= ruleExpCS )
                                    // InternalQVTimperative.g:9509:3: lv_ownedInitExpression_4_0= ruleExpCS
                                    {
                                    if ( state.backtracking==0 ) {

                                      	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_1_0_2_1_0());

                                    }
                                    pushFollow(FollowSets000.FOLLOW_2);
                                    lv_ownedInitExpression_4_0=ruleExpCS();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                                      	        }
                                             		set(
                                             			current,
                                             			"ownedInitExpression",
                                              		lv_ownedInitExpression_4_0,
                                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                                      	        afterParserOrEnumRuleCall();

                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalQVTimperative.g:9526:6: (otherlv_5= 'in' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) )
                            {
                            // InternalQVTimperative.g:9526:6: (otherlv_5= 'in' ( (lv_ownedInitExpression_6_0= ruleExpCS ) ) )
                            // InternalQVTimperative.g:9526:8: otherlv_5= 'in' ( (lv_ownedInitExpression_6_0= ruleExpCS ) )
                            {
                            otherlv_5=(Token)match(input,40,FollowSets000.FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getNavigatingArgCSAccess().getInKeyword_0_1_1_0());

                            }
                            // InternalQVTimperative.g:9530:1: ( (lv_ownedInitExpression_6_0= ruleExpCS ) )
                            // InternalQVTimperative.g:9531:1: (lv_ownedInitExpression_6_0= ruleExpCS )
                            {
                            // InternalQVTimperative.g:9531:1: (lv_ownedInitExpression_6_0= ruleExpCS )
                            // InternalQVTimperative.g:9532:3: lv_ownedInitExpression_6_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_0_1_1_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedInitExpression_6_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedInitExpression",
                                      		lv_ownedInitExpression_6_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:9549:6: (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) )
                    {
                    // InternalQVTimperative.g:9549:6: (otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) ) )
                    // InternalQVTimperative.g:9549:8: otherlv_7= ':' ( (lv_ownedType_8_0= ruleTypeExpCS ) )
                    {
                    otherlv_7=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getNavigatingArgCSAccess().getColonKeyword_1_0());

                    }
                    // InternalQVTimperative.g:9553:1: ( (lv_ownedType_8_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:9554:1: (lv_ownedType_8_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:9554:1: (lv_ownedType_8_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:9555:3: lv_ownedType_8_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedType_8_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNavigatingArgCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_8_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNavigatingArgCS"


    // $ANTLR start "entryRuleNavigatingBarArgCS"
    // InternalQVTimperative.g:9579:1: entryRuleNavigatingBarArgCS returns [EObject current=null] : iv_ruleNavigatingBarArgCS= ruleNavigatingBarArgCS EOF ;
    public final EObject entryRuleNavigatingBarArgCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNavigatingBarArgCS = null;


        try {
            // InternalQVTimperative.g:9580:2: (iv_ruleNavigatingBarArgCS= ruleNavigatingBarArgCS EOF )
            // InternalQVTimperative.g:9581:2: iv_ruleNavigatingBarArgCS= ruleNavigatingBarArgCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNavigatingBarArgCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNavigatingBarArgCS=ruleNavigatingBarArgCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNavigatingBarArgCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNavigatingBarArgCS"


    // $ANTLR start "ruleNavigatingBarArgCS"
    // InternalQVTimperative.g:9588:1: ruleNavigatingBarArgCS returns [EObject current=null] : ( ( (lv_prefix_0_0= '|' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? ) ;
    public final EObject ruleNavigatingBarArgCS() throws RecognitionException {
        EObject current = null;

        Token lv_prefix_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedNameExpression_1_0 = null;

        EObject lv_ownedType_3_0 = null;

        EObject lv_ownedInitExpression_5_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:9591:28: ( ( ( (lv_prefix_0_0= '|' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? ) )
            // InternalQVTimperative.g:9592:1: ( ( (lv_prefix_0_0= '|' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? )
            {
            // InternalQVTimperative.g:9592:1: ( ( (lv_prefix_0_0= '|' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? )
            // InternalQVTimperative.g:9592:2: ( (lv_prefix_0_0= '|' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )?
            {
            // InternalQVTimperative.g:9592:2: ( (lv_prefix_0_0= '|' ) )
            // InternalQVTimperative.g:9593:1: (lv_prefix_0_0= '|' )
            {
            // InternalQVTimperative.g:9593:1: (lv_prefix_0_0= '|' )
            // InternalQVTimperative.g:9594:3: lv_prefix_0_0= '|'
            {
            lv_prefix_0_0=(Token)match(input,143,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_prefix_0_0, grammarAccess.getNavigatingBarArgCSAccess().getPrefixVerticalLineKeyword_0_0());

            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getNavigatingBarArgCSRule());
              	        }
                     		setWithLastConsumed(current, "prefix", lv_prefix_0_0, "|");

            }

            }


            }

            // InternalQVTimperative.g:9607:2: ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) )
            // InternalQVTimperative.g:9608:1: (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS )
            {
            // InternalQVTimperative.g:9608:1: (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS )
            // InternalQVTimperative.g:9609:3: lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getNavigatingBarArgCSAccess().getOwnedNameExpressionNavigatingArgExpCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_40);
            lv_ownedNameExpression_1_0=ruleNavigatingArgExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNavigatingBarArgCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedNameExpression",
                      		lv_ownedNameExpression_1_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingArgExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:9625:2: (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )?
            int alt205=2;
            int LA205_0 = input.LA(1);

            if ( (LA205_0==24) ) {
                alt205=1;
            }
            switch (alt205) {
                case 1 :
                    // InternalQVTimperative.g:9625:4: otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
                    {
                    otherlv_2=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getNavigatingBarArgCSAccess().getColonKeyword_2_0());

                    }
                    // InternalQVTimperative.g:9629:1: ( (lv_ownedType_3_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:9630:1: (lv_ownedType_3_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:9630:1: (lv_ownedType_3_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:9631:3: lv_ownedType_3_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNavigatingBarArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_136);
                    lv_ownedType_3_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNavigatingBarArgCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_3_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:9647:2: (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
                    int alt204=2;
                    int LA204_0 = input.LA(1);

                    if ( (LA204_0==50) ) {
                        alt204=1;
                    }
                    switch (alt204) {
                        case 1 :
                            // InternalQVTimperative.g:9647:4: otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                            {
                            otherlv_4=(Token)match(input,50,FollowSets000.FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getNavigatingBarArgCSAccess().getEqualsSignKeyword_2_2_0());

                            }
                            // InternalQVTimperative.g:9651:1: ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                            // InternalQVTimperative.g:9652:1: (lv_ownedInitExpression_5_0= ruleExpCS )
                            {
                            // InternalQVTimperative.g:9652:1: (lv_ownedInitExpression_5_0= ruleExpCS )
                            // InternalQVTimperative.g:9653:3: lv_ownedInitExpression_5_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getNavigatingBarArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_2_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedInitExpression_5_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getNavigatingBarArgCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedInitExpression",
                                      		lv_ownedInitExpression_5_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNavigatingBarArgCS"


    // $ANTLR start "entryRuleNavigatingCommaArgCS"
    // InternalQVTimperative.g:9677:1: entryRuleNavigatingCommaArgCS returns [EObject current=null] : iv_ruleNavigatingCommaArgCS= ruleNavigatingCommaArgCS EOF ;
    public final EObject entryRuleNavigatingCommaArgCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNavigatingCommaArgCS = null;


        try {
            // InternalQVTimperative.g:9678:2: (iv_ruleNavigatingCommaArgCS= ruleNavigatingCommaArgCS EOF )
            // InternalQVTimperative.g:9679:2: iv_ruleNavigatingCommaArgCS= ruleNavigatingCommaArgCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNavigatingCommaArgCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNavigatingCommaArgCS=ruleNavigatingCommaArgCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNavigatingCommaArgCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNavigatingCommaArgCS"


    // $ANTLR start "ruleNavigatingCommaArgCS"
    // InternalQVTimperative.g:9686:1: ruleNavigatingCommaArgCS returns [EObject current=null] : ( ( (lv_prefix_0_0= ',' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) ( (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= 'in' ( (lv_ownedInitExpression_7_0= ruleExpCS ) ) ) )? ) ;
    public final EObject ruleNavigatingCommaArgCS() throws RecognitionException {
        EObject current = null;

        Token lv_prefix_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_ownedNameExpression_1_0 = null;

        EObject lv_ownedType_3_0 = null;

        EObject lv_ownedInitExpression_5_0 = null;

        EObject lv_ownedInitExpression_7_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:9689:28: ( ( ( (lv_prefix_0_0= ',' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) ( (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= 'in' ( (lv_ownedInitExpression_7_0= ruleExpCS ) ) ) )? ) )
            // InternalQVTimperative.g:9690:1: ( ( (lv_prefix_0_0= ',' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) ( (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= 'in' ( (lv_ownedInitExpression_7_0= ruleExpCS ) ) ) )? )
            {
            // InternalQVTimperative.g:9690:1: ( ( (lv_prefix_0_0= ',' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) ( (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= 'in' ( (lv_ownedInitExpression_7_0= ruleExpCS ) ) ) )? )
            // InternalQVTimperative.g:9690:2: ( (lv_prefix_0_0= ',' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) ( (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= 'in' ( (lv_ownedInitExpression_7_0= ruleExpCS ) ) ) )?
            {
            // InternalQVTimperative.g:9690:2: ( (lv_prefix_0_0= ',' ) )
            // InternalQVTimperative.g:9691:1: (lv_prefix_0_0= ',' )
            {
            // InternalQVTimperative.g:9691:1: (lv_prefix_0_0= ',' )
            // InternalQVTimperative.g:9692:3: lv_prefix_0_0= ','
            {
            lv_prefix_0_0=(Token)match(input,18,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_prefix_0_0, grammarAccess.getNavigatingCommaArgCSAccess().getPrefixCommaKeyword_0_0());

            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getNavigatingCommaArgCSRule());
              	        }
                     		setWithLastConsumed(current, "prefix", lv_prefix_0_0, ",");

            }

            }


            }

            // InternalQVTimperative.g:9705:2: ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) )
            // InternalQVTimperative.g:9706:1: (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS )
            {
            // InternalQVTimperative.g:9706:1: (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS )
            // InternalQVTimperative.g:9707:3: lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedNameExpressionNavigatingArgExpCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_135);
            lv_ownedNameExpression_1_0=ruleNavigatingArgExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedNameExpression",
                      		lv_ownedNameExpression_1_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingArgExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:9723:2: ( (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? ) | (otherlv_6= 'in' ( (lv_ownedInitExpression_7_0= ruleExpCS ) ) ) )?
            int alt207=3;
            int LA207_0 = input.LA(1);

            if ( (LA207_0==24) ) {
                alt207=1;
            }
            else if ( (LA207_0==40) ) {
                alt207=2;
            }
            switch (alt207) {
                case 1 :
                    // InternalQVTimperative.g:9723:3: (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )
                    {
                    // InternalQVTimperative.g:9723:3: (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )
                    // InternalQVTimperative.g:9723:5: otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
                    {
                    otherlv_2=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getNavigatingCommaArgCSAccess().getColonKeyword_2_0_0());

                    }
                    // InternalQVTimperative.g:9727:1: ( (lv_ownedType_3_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:9728:1: (lv_ownedType_3_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:9728:1: (lv_ownedType_3_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:9729:3: lv_ownedType_3_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_0_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_136);
                    lv_ownedType_3_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_3_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:9745:2: (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
                    int alt206=2;
                    int LA206_0 = input.LA(1);

                    if ( (LA206_0==50) ) {
                        alt206=1;
                    }
                    switch (alt206) {
                        case 1 :
                            // InternalQVTimperative.g:9745:4: otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                            {
                            otherlv_4=(Token)match(input,50,FollowSets000.FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getNavigatingCommaArgCSAccess().getEqualsSignKeyword_2_0_2_0());

                            }
                            // InternalQVTimperative.g:9749:1: ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                            // InternalQVTimperative.g:9750:1: (lv_ownedInitExpression_5_0= ruleExpCS )
                            {
                            // InternalQVTimperative.g:9750:1: (lv_ownedInitExpression_5_0= ruleExpCS )
                            // InternalQVTimperative.g:9751:3: lv_ownedInitExpression_5_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_0_2_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedInitExpression_5_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedInitExpression",
                                      		lv_ownedInitExpression_5_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:9768:6: (otherlv_6= 'in' ( (lv_ownedInitExpression_7_0= ruleExpCS ) ) )
                    {
                    // InternalQVTimperative.g:9768:6: (otherlv_6= 'in' ( (lv_ownedInitExpression_7_0= ruleExpCS ) ) )
                    // InternalQVTimperative.g:9768:8: otherlv_6= 'in' ( (lv_ownedInitExpression_7_0= ruleExpCS ) )
                    {
                    otherlv_6=(Token)match(input,40,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getNavigatingCommaArgCSAccess().getInKeyword_2_1_0());

                    }
                    // InternalQVTimperative.g:9772:1: ( (lv_ownedInitExpression_7_0= ruleExpCS ) )
                    // InternalQVTimperative.g:9773:1: (lv_ownedInitExpression_7_0= ruleExpCS )
                    {
                    // InternalQVTimperative.g:9773:1: (lv_ownedInitExpression_7_0= ruleExpCS )
                    // InternalQVTimperative.g:9774:3: lv_ownedInitExpression_7_0= ruleExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedInitExpression_7_0=ruleExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNavigatingCommaArgCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedInitExpression",
                              		lv_ownedInitExpression_7_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNavigatingCommaArgCS"


    // $ANTLR start "entryRuleNavigatingSemiArgCS"
    // InternalQVTimperative.g:9798:1: entryRuleNavigatingSemiArgCS returns [EObject current=null] : iv_ruleNavigatingSemiArgCS= ruleNavigatingSemiArgCS EOF ;
    public final EObject entryRuleNavigatingSemiArgCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNavigatingSemiArgCS = null;


        try {
            // InternalQVTimperative.g:9799:2: (iv_ruleNavigatingSemiArgCS= ruleNavigatingSemiArgCS EOF )
            // InternalQVTimperative.g:9800:2: iv_ruleNavigatingSemiArgCS= ruleNavigatingSemiArgCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNavigatingSemiArgCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNavigatingSemiArgCS=ruleNavigatingSemiArgCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNavigatingSemiArgCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNavigatingSemiArgCS"


    // $ANTLR start "ruleNavigatingSemiArgCS"
    // InternalQVTimperative.g:9807:1: ruleNavigatingSemiArgCS returns [EObject current=null] : ( ( (lv_prefix_0_0= ';' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? ) ;
    public final EObject ruleNavigatingSemiArgCS() throws RecognitionException {
        EObject current = null;

        Token lv_prefix_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedNameExpression_1_0 = null;

        EObject lv_ownedType_3_0 = null;

        EObject lv_ownedInitExpression_5_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:9810:28: ( ( ( (lv_prefix_0_0= ';' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? ) )
            // InternalQVTimperative.g:9811:1: ( ( (lv_prefix_0_0= ';' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? )
            {
            // InternalQVTimperative.g:9811:1: ( ( (lv_prefix_0_0= ';' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )? )
            // InternalQVTimperative.g:9811:2: ( (lv_prefix_0_0= ';' ) ) ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) ) (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )?
            {
            // InternalQVTimperative.g:9811:2: ( (lv_prefix_0_0= ';' ) )
            // InternalQVTimperative.g:9812:1: (lv_prefix_0_0= ';' )
            {
            // InternalQVTimperative.g:9812:1: (lv_prefix_0_0= ';' )
            // InternalQVTimperative.g:9813:3: lv_prefix_0_0= ';'
            {
            lv_prefix_0_0=(Token)match(input,21,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_prefix_0_0, grammarAccess.getNavigatingSemiArgCSAccess().getPrefixSemicolonKeyword_0_0());

            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getNavigatingSemiArgCSRule());
              	        }
                     		setWithLastConsumed(current, "prefix", lv_prefix_0_0, ";");

            }

            }


            }

            // InternalQVTimperative.g:9826:2: ( (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS ) )
            // InternalQVTimperative.g:9827:1: (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS )
            {
            // InternalQVTimperative.g:9827:1: (lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS )
            // InternalQVTimperative.g:9828:3: lv_ownedNameExpression_1_0= ruleNavigatingArgExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedNameExpressionNavigatingArgExpCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_40);
            lv_ownedNameExpression_1_0=ruleNavigatingArgExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNavigatingSemiArgCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedNameExpression",
                      		lv_ownedNameExpression_1_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.NavigatingArgExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:9844:2: (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )? )?
            int alt209=2;
            int LA209_0 = input.LA(1);

            if ( (LA209_0==24) ) {
                alt209=1;
            }
            switch (alt209) {
                case 1 :
                    // InternalQVTimperative.g:9844:4: otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
                    {
                    otherlv_2=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getNavigatingSemiArgCSAccess().getColonKeyword_2_0());

                    }
                    // InternalQVTimperative.g:9848:1: ( (lv_ownedType_3_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:9849:1: (lv_ownedType_3_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:9849:1: (lv_ownedType_3_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:9850:3: lv_ownedType_3_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_136);
                    lv_ownedType_3_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNavigatingSemiArgCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_3_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:9866:2: (otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )?
                    int alt208=2;
                    int LA208_0 = input.LA(1);

                    if ( (LA208_0==50) ) {
                        alt208=1;
                    }
                    switch (alt208) {
                        case 1 :
                            // InternalQVTimperative.g:9866:4: otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                            {
                            otherlv_4=(Token)match(input,50,FollowSets000.FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getNavigatingSemiArgCSAccess().getEqualsSignKeyword_2_2_0());

                            }
                            // InternalQVTimperative.g:9870:1: ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
                            // InternalQVTimperative.g:9871:1: (lv_ownedInitExpression_5_0= ruleExpCS )
                            {
                            // InternalQVTimperative.g:9871:1: (lv_ownedInitExpression_5_0= ruleExpCS )
                            // InternalQVTimperative.g:9872:3: lv_ownedInitExpression_5_0= ruleExpCS
                            {
                            if ( state.backtracking==0 ) {

                              	        newCompositeNode(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedInitExpressionExpCSParserRuleCall_2_2_1_0());

                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_ownedInitExpression_5_0=ruleExpCS();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getNavigatingSemiArgCSRule());
                              	        }
                                     		set(
                                     			current,
                                     			"ownedInitExpression",
                                      		lv_ownedInitExpression_5_0,
                                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                              	        afterParserOrEnumRuleCall();

                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNavigatingSemiArgCS"


    // $ANTLR start "entryRuleNavigatingArgExpCS"
    // InternalQVTimperative.g:9896:1: entryRuleNavigatingArgExpCS returns [EObject current=null] : iv_ruleNavigatingArgExpCS= ruleNavigatingArgExpCS EOF ;
    public final EObject entryRuleNavigatingArgExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNavigatingArgExpCS = null;


        try {
            // InternalQVTimperative.g:9897:2: (iv_ruleNavigatingArgExpCS= ruleNavigatingArgExpCS EOF )
            // InternalQVTimperative.g:9898:2: iv_ruleNavigatingArgExpCS= ruleNavigatingArgExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNavigatingArgExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNavigatingArgExpCS=ruleNavigatingArgExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNavigatingArgExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNavigatingArgExpCS"


    // $ANTLR start "ruleNavigatingArgExpCS"
    // InternalQVTimperative.g:9905:1: ruleNavigatingArgExpCS returns [EObject current=null] : this_ExpCS_0= ruleExpCS ;
    public final EObject ruleNavigatingArgExpCS() throws RecognitionException {
        EObject current = null;

        EObject this_ExpCS_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:9908:28: (this_ExpCS_0= ruleExpCS )
            // InternalQVTimperative.g:9910:2: this_ExpCS_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getNavigatingArgExpCSAccess().getExpCSParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_ExpCS_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ExpCS_0;
                      afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNavigatingArgExpCS"


    // $ANTLR start "entryRuleIfExpCS"
    // InternalQVTimperative.g:9929:1: entryRuleIfExpCS returns [EObject current=null] : iv_ruleIfExpCS= ruleIfExpCS EOF ;
    public final EObject entryRuleIfExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfExpCS = null;


        try {
            // InternalQVTimperative.g:9930:2: (iv_ruleIfExpCS= ruleIfExpCS EOF )
            // InternalQVTimperative.g:9931:2: iv_ruleIfExpCS= ruleIfExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIfExpCS=ruleIfExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIfExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIfExpCS"


    // $ANTLR start "ruleIfExpCS"
    // InternalQVTimperative.g:9938:1: ruleIfExpCS returns [EObject current=null] : (otherlv_0= 'if' ( ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) ( (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS ) )* otherlv_5= 'else' ( (lv_ownedElseExpression_6_0= ruleExpCS ) ) otherlv_7= 'endif' ) ;
    public final EObject ruleIfExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_ownedCondition_1_1 = null;

        EObject lv_ownedCondition_1_2 = null;

        EObject lv_ownedThenExpression_3_0 = null;

        EObject lv_ownedIfThenExpressions_4_0 = null;

        EObject lv_ownedElseExpression_6_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:9941:28: ( (otherlv_0= 'if' ( ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) ( (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS ) )* otherlv_5= 'else' ( (lv_ownedElseExpression_6_0= ruleExpCS ) ) otherlv_7= 'endif' ) )
            // InternalQVTimperative.g:9942:1: (otherlv_0= 'if' ( ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) ( (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS ) )* otherlv_5= 'else' ( (lv_ownedElseExpression_6_0= ruleExpCS ) ) otherlv_7= 'endif' )
            {
            // InternalQVTimperative.g:9942:1: (otherlv_0= 'if' ( ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) ( (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS ) )* otherlv_5= 'else' ( (lv_ownedElseExpression_6_0= ruleExpCS ) ) otherlv_7= 'endif' )
            // InternalQVTimperative.g:9942:3: otherlv_0= 'if' ( ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) ( (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS ) )* otherlv_5= 'else' ( (lv_ownedElseExpression_6_0= ruleExpCS ) ) otherlv_7= 'endif'
            {
            otherlv_0=(Token)match(input,144,FollowSets000.FOLLOW_115); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getIfExpCSAccess().getIfKeyword_0());

            }
            // InternalQVTimperative.g:9946:1: ( ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) ) )
            // InternalQVTimperative.g:9947:1: ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) )
            {
            // InternalQVTimperative.g:9947:1: ( (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS ) )
            // InternalQVTimperative.g:9948:1: (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS )
            {
            // InternalQVTimperative.g:9948:1: (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS )
            int alt210=2;
            alt210 = dfa210.predict(input);
            switch (alt210) {
                case 1 :
                    // InternalQVTimperative.g:9949:3: lv_ownedCondition_1_1= ruleExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getIfExpCSAccess().getOwnedConditionExpCSParserRuleCall_1_0_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_137);
                    lv_ownedCondition_1_1=ruleExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedCondition",
                              		lv_ownedCondition_1_1,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:9964:8: lv_ownedCondition_1_2= rulePatternExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getIfExpCSAccess().getOwnedConditionPatternExpCSParserRuleCall_1_0_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_137);
                    lv_ownedCondition_1_2=rulePatternExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfExpCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedCondition",
                              		lv_ownedCondition_1_2,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.PatternExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }


            }

            otherlv_2=(Token)match(input,145,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getIfExpCSAccess().getThenKeyword_2());

            }
            // InternalQVTimperative.g:9986:1: ( (lv_ownedThenExpression_3_0= ruleExpCS ) )
            // InternalQVTimperative.g:9987:1: (lv_ownedThenExpression_3_0= ruleExpCS )
            {
            // InternalQVTimperative.g:9987:1: (lv_ownedThenExpression_3_0= ruleExpCS )
            // InternalQVTimperative.g:9988:3: lv_ownedThenExpression_3_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getIfExpCSAccess().getOwnedThenExpressionExpCSParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_138);
            lv_ownedThenExpression_3_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIfExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedThenExpression",
                      		lv_ownedThenExpression_3_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:10004:2: ( (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS ) )*
            loop211:
            do {
                int alt211=2;
                int LA211_0 = input.LA(1);

                if ( (LA211_0==148) ) {
                    alt211=1;
                }


                switch (alt211) {
            	case 1 :
            	    // InternalQVTimperative.g:10005:1: (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS )
            	    {
            	    // InternalQVTimperative.g:10005:1: (lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS )
            	    // InternalQVTimperative.g:10006:3: lv_ownedIfThenExpressions_4_0= ruleElseIfThenExpCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getIfExpCSAccess().getOwnedIfThenExpressionsElseIfThenExpCSParserRuleCall_4_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_138);
            	    lv_ownedIfThenExpressions_4_0=ruleElseIfThenExpCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getIfExpCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedIfThenExpressions",
            	              		lv_ownedIfThenExpressions_4_0,
            	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ElseIfThenExpCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop211;
                }
            } while (true);

            otherlv_5=(Token)match(input,146,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getIfExpCSAccess().getElseKeyword_5());

            }
            // InternalQVTimperative.g:10026:1: ( (lv_ownedElseExpression_6_0= ruleExpCS ) )
            // InternalQVTimperative.g:10027:1: (lv_ownedElseExpression_6_0= ruleExpCS )
            {
            // InternalQVTimperative.g:10027:1: (lv_ownedElseExpression_6_0= ruleExpCS )
            // InternalQVTimperative.g:10028:3: lv_ownedElseExpression_6_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getIfExpCSAccess().getOwnedElseExpressionExpCSParserRuleCall_6_0());

            }
            pushFollow(FollowSets000.FOLLOW_139);
            lv_ownedElseExpression_6_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIfExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedElseExpression",
                      		lv_ownedElseExpression_6_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_7=(Token)match(input,147,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getIfExpCSAccess().getEndifKeyword_7());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIfExpCS"


    // $ANTLR start "entryRuleElseIfThenExpCS"
    // InternalQVTimperative.g:10056:1: entryRuleElseIfThenExpCS returns [EObject current=null] : iv_ruleElseIfThenExpCS= ruleElseIfThenExpCS EOF ;
    public final EObject entryRuleElseIfThenExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElseIfThenExpCS = null;


        try {
            // InternalQVTimperative.g:10057:2: (iv_ruleElseIfThenExpCS= ruleElseIfThenExpCS EOF )
            // InternalQVTimperative.g:10058:2: iv_ruleElseIfThenExpCS= ruleElseIfThenExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElseIfThenExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleElseIfThenExpCS=ruleElseIfThenExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElseIfThenExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElseIfThenExpCS"


    // $ANTLR start "ruleElseIfThenExpCS"
    // InternalQVTimperative.g:10065:1: ruleElseIfThenExpCS returns [EObject current=null] : (otherlv_0= 'elseif' ( (lv_ownedCondition_1_0= ruleExpCS ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) ) ;
    public final EObject ruleElseIfThenExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_ownedCondition_1_0 = null;

        EObject lv_ownedThenExpression_3_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:10068:28: ( (otherlv_0= 'elseif' ( (lv_ownedCondition_1_0= ruleExpCS ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) ) )
            // InternalQVTimperative.g:10069:1: (otherlv_0= 'elseif' ( (lv_ownedCondition_1_0= ruleExpCS ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) )
            {
            // InternalQVTimperative.g:10069:1: (otherlv_0= 'elseif' ( (lv_ownedCondition_1_0= ruleExpCS ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) ) )
            // InternalQVTimperative.g:10069:3: otherlv_0= 'elseif' ( (lv_ownedCondition_1_0= ruleExpCS ) ) otherlv_2= 'then' ( (lv_ownedThenExpression_3_0= ruleExpCS ) )
            {
            otherlv_0=(Token)match(input,148,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getElseIfThenExpCSAccess().getElseifKeyword_0());

            }
            // InternalQVTimperative.g:10073:1: ( (lv_ownedCondition_1_0= ruleExpCS ) )
            // InternalQVTimperative.g:10074:1: (lv_ownedCondition_1_0= ruleExpCS )
            {
            // InternalQVTimperative.g:10074:1: (lv_ownedCondition_1_0= ruleExpCS )
            // InternalQVTimperative.g:10075:3: lv_ownedCondition_1_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getElseIfThenExpCSAccess().getOwnedConditionExpCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_137);
            lv_ownedCondition_1_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getElseIfThenExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedCondition",
                      		lv_ownedCondition_1_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_2=(Token)match(input,145,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getElseIfThenExpCSAccess().getThenKeyword_2());

            }
            // InternalQVTimperative.g:10095:1: ( (lv_ownedThenExpression_3_0= ruleExpCS ) )
            // InternalQVTimperative.g:10096:1: (lv_ownedThenExpression_3_0= ruleExpCS )
            {
            // InternalQVTimperative.g:10096:1: (lv_ownedThenExpression_3_0= ruleExpCS )
            // InternalQVTimperative.g:10097:3: lv_ownedThenExpression_3_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getElseIfThenExpCSAccess().getOwnedThenExpressionExpCSParserRuleCall_3_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedThenExpression_3_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getElseIfThenExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedThenExpression",
                      		lv_ownedThenExpression_3_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElseIfThenExpCS"


    // $ANTLR start "entryRuleLetExpCS"
    // InternalQVTimperative.g:10121:1: entryRuleLetExpCS returns [EObject current=null] : iv_ruleLetExpCS= ruleLetExpCS EOF ;
    public final EObject entryRuleLetExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLetExpCS = null;


        try {
            // InternalQVTimperative.g:10122:2: (iv_ruleLetExpCS= ruleLetExpCS EOF )
            // InternalQVTimperative.g:10123:2: iv_ruleLetExpCS= ruleLetExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLetExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLetExpCS=ruleLetExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLetExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLetExpCS"


    // $ANTLR start "ruleLetExpCS"
    // InternalQVTimperative.g:10130:1: ruleLetExpCS returns [EObject current=null] : (otherlv_0= 'let' ( (lv_ownedVariables_1_0= ruleLetVariableCS ) ) (otherlv_2= ',' ( (lv_ownedVariables_3_0= ruleLetVariableCS ) ) )* otherlv_4= 'in' ( (lv_ownedInExpression_5_0= ruleExpCS ) ) ) ;
    public final EObject ruleLetExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedVariables_1_0 = null;

        EObject lv_ownedVariables_3_0 = null;

        EObject lv_ownedInExpression_5_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:10133:28: ( (otherlv_0= 'let' ( (lv_ownedVariables_1_0= ruleLetVariableCS ) ) (otherlv_2= ',' ( (lv_ownedVariables_3_0= ruleLetVariableCS ) ) )* otherlv_4= 'in' ( (lv_ownedInExpression_5_0= ruleExpCS ) ) ) )
            // InternalQVTimperative.g:10134:1: (otherlv_0= 'let' ( (lv_ownedVariables_1_0= ruleLetVariableCS ) ) (otherlv_2= ',' ( (lv_ownedVariables_3_0= ruleLetVariableCS ) ) )* otherlv_4= 'in' ( (lv_ownedInExpression_5_0= ruleExpCS ) ) )
            {
            // InternalQVTimperative.g:10134:1: (otherlv_0= 'let' ( (lv_ownedVariables_1_0= ruleLetVariableCS ) ) (otherlv_2= ',' ( (lv_ownedVariables_3_0= ruleLetVariableCS ) ) )* otherlv_4= 'in' ( (lv_ownedInExpression_5_0= ruleExpCS ) ) )
            // InternalQVTimperative.g:10134:3: otherlv_0= 'let' ( (lv_ownedVariables_1_0= ruleLetVariableCS ) ) (otherlv_2= ',' ( (lv_ownedVariables_3_0= ruleLetVariableCS ) ) )* otherlv_4= 'in' ( (lv_ownedInExpression_5_0= ruleExpCS ) )
            {
            otherlv_0=(Token)match(input,149,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getLetExpCSAccess().getLetKeyword_0());

            }
            // InternalQVTimperative.g:10138:1: ( (lv_ownedVariables_1_0= ruleLetVariableCS ) )
            // InternalQVTimperative.g:10139:1: (lv_ownedVariables_1_0= ruleLetVariableCS )
            {
            // InternalQVTimperative.g:10139:1: (lv_ownedVariables_1_0= ruleLetVariableCS )
            // InternalQVTimperative.g:10140:3: lv_ownedVariables_1_0= ruleLetVariableCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getLetExpCSAccess().getOwnedVariablesLetVariableCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_140);
            lv_ownedVariables_1_0=ruleLetVariableCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLetExpCSRule());
              	        }
                     		add(
                     			current,
                     			"ownedVariables",
                      		lv_ownedVariables_1_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.LetVariableCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:10156:2: (otherlv_2= ',' ( (lv_ownedVariables_3_0= ruleLetVariableCS ) ) )*
            loop212:
            do {
                int alt212=2;
                int LA212_0 = input.LA(1);

                if ( (LA212_0==18) ) {
                    alt212=1;
                }


                switch (alt212) {
            	case 1 :
            	    // InternalQVTimperative.g:10156:4: otherlv_2= ',' ( (lv_ownedVariables_3_0= ruleLetVariableCS ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getLetExpCSAccess().getCommaKeyword_2_0());

            	    }
            	    // InternalQVTimperative.g:10160:1: ( (lv_ownedVariables_3_0= ruleLetVariableCS ) )
            	    // InternalQVTimperative.g:10161:1: (lv_ownedVariables_3_0= ruleLetVariableCS )
            	    {
            	    // InternalQVTimperative.g:10161:1: (lv_ownedVariables_3_0= ruleLetVariableCS )
            	    // InternalQVTimperative.g:10162:3: lv_ownedVariables_3_0= ruleLetVariableCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getLetExpCSAccess().getOwnedVariablesLetVariableCSParserRuleCall_2_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_140);
            	    lv_ownedVariables_3_0=ruleLetVariableCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLetExpCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedVariables",
            	              		lv_ownedVariables_3_0,
            	              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.LetVariableCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop212;
                }
            } while (true);

            otherlv_4=(Token)match(input,40,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getLetExpCSAccess().getInKeyword_3());

            }
            // InternalQVTimperative.g:10182:1: ( (lv_ownedInExpression_5_0= ruleExpCS ) )
            // InternalQVTimperative.g:10183:1: (lv_ownedInExpression_5_0= ruleExpCS )
            {
            // InternalQVTimperative.g:10183:1: (lv_ownedInExpression_5_0= ruleExpCS )
            // InternalQVTimperative.g:10184:3: lv_ownedInExpression_5_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getLetExpCSAccess().getOwnedInExpressionExpCSParserRuleCall_4_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedInExpression_5_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLetExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedInExpression",
                      		lv_ownedInExpression_5_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLetExpCS"


    // $ANTLR start "entryRuleLetVariableCS"
    // InternalQVTimperative.g:10208:1: entryRuleLetVariableCS returns [EObject current=null] : iv_ruleLetVariableCS= ruleLetVariableCS EOF ;
    public final EObject entryRuleLetVariableCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLetVariableCS = null;


        try {
            // InternalQVTimperative.g:10209:2: (iv_ruleLetVariableCS= ruleLetVariableCS EOF )
            // InternalQVTimperative.g:10210:2: iv_ruleLetVariableCS= ruleLetVariableCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLetVariableCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLetVariableCS=ruleLetVariableCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLetVariableCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLetVariableCS"


    // $ANTLR start "ruleLetVariableCS"
    // InternalQVTimperative.g:10217:1: ruleLetVariableCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleUnrestrictedName ) ) ( (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS ) )? (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) )? otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) ) ;
    public final EObject ruleLetVariableCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedRoundBracketedClause_1_0 = null;

        EObject lv_ownedType_3_0 = null;

        EObject lv_ownedInitExpression_5_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:10220:28: ( ( ( (lv_name_0_0= ruleUnrestrictedName ) ) ( (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS ) )? (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) )? otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) ) )
            // InternalQVTimperative.g:10221:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) ( (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS ) )? (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) )? otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )
            {
            // InternalQVTimperative.g:10221:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) ( (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS ) )? (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) )? otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) ) )
            // InternalQVTimperative.g:10221:2: ( (lv_name_0_0= ruleUnrestrictedName ) ) ( (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS ) )? (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) )? otherlv_4= '=' ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
            {
            // InternalQVTimperative.g:10221:2: ( (lv_name_0_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:10222:1: (lv_name_0_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:10222:1: (lv_name_0_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:10223:3: lv_name_0_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getLetVariableCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_141);
            lv_name_0_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLetVariableCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_0_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:10239:2: ( (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS ) )?
            int alt213=2;
            int LA213_0 = input.LA(1);

            if ( (LA213_0==53) ) {
                alt213=1;
            }
            switch (alt213) {
                case 1 :
                    // InternalQVTimperative.g:10240:1: (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS )
                    {
                    // InternalQVTimperative.g:10240:1: (lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS )
                    // InternalQVTimperative.g:10241:3: lv_ownedRoundBracketedClause_1_0= ruleRoundBracketedClauseCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getLetVariableCSAccess().getOwnedRoundBracketedClauseRoundBracketedClauseCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_122);
                    lv_ownedRoundBracketedClause_1_0=ruleRoundBracketedClauseCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLetVariableCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedRoundBracketedClause",
                              		lv_ownedRoundBracketedClause_1_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.RoundBracketedClauseCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }

            // InternalQVTimperative.g:10257:3: (otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) ) )?
            int alt214=2;
            int LA214_0 = input.LA(1);

            if ( (LA214_0==24) ) {
                alt214=1;
            }
            switch (alt214) {
                case 1 :
                    // InternalQVTimperative.g:10257:5: otherlv_2= ':' ( (lv_ownedType_3_0= ruleTypeExpCS ) )
                    {
                    otherlv_2=(Token)match(input,24,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getLetVariableCSAccess().getColonKeyword_2_0());

                    }
                    // InternalQVTimperative.g:10261:1: ( (lv_ownedType_3_0= ruleTypeExpCS ) )
                    // InternalQVTimperative.g:10262:1: (lv_ownedType_3_0= ruleTypeExpCS )
                    {
                    // InternalQVTimperative.g:10262:1: (lv_ownedType_3_0= ruleTypeExpCS )
                    // InternalQVTimperative.g:10263:3: lv_ownedType_3_0= ruleTypeExpCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getLetVariableCSAccess().getOwnedTypeTypeExpCSParserRuleCall_2_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_119);
                    lv_ownedType_3_0=ruleTypeExpCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLetVariableCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedType",
                              		lv_ownedType_3_0,
                              		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.TypeExpCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,50,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getLetVariableCSAccess().getEqualsSignKeyword_3());

            }
            // InternalQVTimperative.g:10283:1: ( (lv_ownedInitExpression_5_0= ruleExpCS ) )
            // InternalQVTimperative.g:10284:1: (lv_ownedInitExpression_5_0= ruleExpCS )
            {
            // InternalQVTimperative.g:10284:1: (lv_ownedInitExpression_5_0= ruleExpCS )
            // InternalQVTimperative.g:10285:3: lv_ownedInitExpression_5_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getLetVariableCSAccess().getOwnedInitExpressionExpCSParserRuleCall_4_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedInitExpression_5_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLetVariableCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedInitExpression",
                      		lv_ownedInitExpression_5_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLetVariableCS"


    // $ANTLR start "entryRuleNestedExpCS"
    // InternalQVTimperative.g:10309:1: entryRuleNestedExpCS returns [EObject current=null] : iv_ruleNestedExpCS= ruleNestedExpCS EOF ;
    public final EObject entryRuleNestedExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNestedExpCS = null;


        try {
            // InternalQVTimperative.g:10310:2: (iv_ruleNestedExpCS= ruleNestedExpCS EOF )
            // InternalQVTimperative.g:10311:2: iv_ruleNestedExpCS= ruleNestedExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNestedExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNestedExpCS=ruleNestedExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNestedExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNestedExpCS"


    // $ANTLR start "ruleNestedExpCS"
    // InternalQVTimperative.g:10318:1: ruleNestedExpCS returns [EObject current=null] : (otherlv_0= '(' ( (lv_ownedExpression_1_0= ruleExpCS ) ) otherlv_2= ')' ) ;
    public final EObject ruleNestedExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_ownedExpression_1_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:10321:28: ( (otherlv_0= '(' ( (lv_ownedExpression_1_0= ruleExpCS ) ) otherlv_2= ')' ) )
            // InternalQVTimperative.g:10322:1: (otherlv_0= '(' ( (lv_ownedExpression_1_0= ruleExpCS ) ) otherlv_2= ')' )
            {
            // InternalQVTimperative.g:10322:1: (otherlv_0= '(' ( (lv_ownedExpression_1_0= ruleExpCS ) ) otherlv_2= ')' )
            // InternalQVTimperative.g:10322:3: otherlv_0= '(' ( (lv_ownedExpression_1_0= ruleExpCS ) ) otherlv_2= ')'
            {
            otherlv_0=(Token)match(input,53,FollowSets000.FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getNestedExpCSAccess().getLeftParenthesisKeyword_0());

            }
            // InternalQVTimperative.g:10326:1: ( (lv_ownedExpression_1_0= ruleExpCS ) )
            // InternalQVTimperative.g:10327:1: (lv_ownedExpression_1_0= ruleExpCS )
            {
            // InternalQVTimperative.g:10327:1: (lv_ownedExpression_1_0= ruleExpCS )
            // InternalQVTimperative.g:10328:3: lv_ownedExpression_1_0= ruleExpCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getNestedExpCSAccess().getOwnedExpressionExpCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_111);
            lv_ownedExpression_1_0=ruleExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNestedExpCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedExpression",
                      		lv_ownedExpression_1_0,
                      		"org.eclipse.ocl.xtext.essentialocl.EssentialOCL.ExpCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            otherlv_2=(Token)match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getNestedExpCSAccess().getRightParenthesisKeyword_2());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNestedExpCS"


    // $ANTLR start "entryRuleSelfExpCS"
    // InternalQVTimperative.g:10356:1: entryRuleSelfExpCS returns [EObject current=null] : iv_ruleSelfExpCS= ruleSelfExpCS EOF ;
    public final EObject entryRuleSelfExpCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSelfExpCS = null;


        try {
            // InternalQVTimperative.g:10357:2: (iv_ruleSelfExpCS= ruleSelfExpCS EOF )
            // InternalQVTimperative.g:10358:2: iv_ruleSelfExpCS= ruleSelfExpCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSelfExpCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSelfExpCS=ruleSelfExpCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSelfExpCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSelfExpCS"


    // $ANTLR start "ruleSelfExpCS"
    // InternalQVTimperative.g:10365:1: ruleSelfExpCS returns [EObject current=null] : ( () otherlv_1= 'self' ) ;
    public final EObject ruleSelfExpCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule();

        try {
            // InternalQVTimperative.g:10368:28: ( ( () otherlv_1= 'self' ) )
            // InternalQVTimperative.g:10369:1: ( () otherlv_1= 'self' )
            {
            // InternalQVTimperative.g:10369:1: ( () otherlv_1= 'self' )
            // InternalQVTimperative.g:10369:2: () otherlv_1= 'self'
            {
            // InternalQVTimperative.g:10369:2: ()
            // InternalQVTimperative.g:10370:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getSelfExpCSAccess().getSelfExpCSAction_0(),
                          current);

            }

            }

            otherlv_1=(Token)match(input,150,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getSelfExpCSAccess().getSelfKeyword_1());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSelfExpCS"


    // $ANTLR start "entryRuleMultiplicityBoundsCS"
    // InternalQVTimperative.g:10390:1: entryRuleMultiplicityBoundsCS returns [EObject current=null] : iv_ruleMultiplicityBoundsCS= ruleMultiplicityBoundsCS EOF ;
    public final EObject entryRuleMultiplicityBoundsCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicityBoundsCS = null;


        try {
            // InternalQVTimperative.g:10391:2: (iv_ruleMultiplicityBoundsCS= ruleMultiplicityBoundsCS EOF )
            // InternalQVTimperative.g:10392:2: iv_ruleMultiplicityBoundsCS= ruleMultiplicityBoundsCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicityBoundsCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMultiplicityBoundsCS=ruleMultiplicityBoundsCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicityBoundsCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicityBoundsCS"


    // $ANTLR start "ruleMultiplicityBoundsCS"
    // InternalQVTimperative.g:10399:1: ruleMultiplicityBoundsCS returns [EObject current=null] : ( ( (lv_lowerBound_0_0= ruleLOWER ) ) (otherlv_1= '..' ( (lv_upperBound_2_0= ruleUPPER ) ) )? ) ;
    public final EObject ruleMultiplicityBoundsCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_lowerBound_0_0 = null;

        AntlrDatatypeRuleToken lv_upperBound_2_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:10402:28: ( ( ( (lv_lowerBound_0_0= ruleLOWER ) ) (otherlv_1= '..' ( (lv_upperBound_2_0= ruleUPPER ) ) )? ) )
            // InternalQVTimperative.g:10403:1: ( ( (lv_lowerBound_0_0= ruleLOWER ) ) (otherlv_1= '..' ( (lv_upperBound_2_0= ruleUPPER ) ) )? )
            {
            // InternalQVTimperative.g:10403:1: ( ( (lv_lowerBound_0_0= ruleLOWER ) ) (otherlv_1= '..' ( (lv_upperBound_2_0= ruleUPPER ) ) )? )
            // InternalQVTimperative.g:10403:2: ( (lv_lowerBound_0_0= ruleLOWER ) ) (otherlv_1= '..' ( (lv_upperBound_2_0= ruleUPPER ) ) )?
            {
            // InternalQVTimperative.g:10403:2: ( (lv_lowerBound_0_0= ruleLOWER ) )
            // InternalQVTimperative.g:10404:1: (lv_lowerBound_0_0= ruleLOWER )
            {
            // InternalQVTimperative.g:10404:1: (lv_lowerBound_0_0= ruleLOWER )
            // InternalQVTimperative.g:10405:3: lv_lowerBound_0_0= ruleLOWER
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getMultiplicityBoundsCSAccess().getLowerBoundLOWERParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_116);
            lv_lowerBound_0_0=ruleLOWER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMultiplicityBoundsCSRule());
              	        }
                     		set(
                     			current,
                     			"lowerBound",
                      		lv_lowerBound_0_0,
                      		"org.eclipse.ocl.xtext.base.Base.LOWER");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:10421:2: (otherlv_1= '..' ( (lv_upperBound_2_0= ruleUPPER ) ) )?
            int alt215=2;
            int LA215_0 = input.LA(1);

            if ( (LA215_0==131) ) {
                alt215=1;
            }
            switch (alt215) {
                case 1 :
                    // InternalQVTimperative.g:10421:4: otherlv_1= '..' ( (lv_upperBound_2_0= ruleUPPER ) )
                    {
                    otherlv_1=(Token)match(input,131,FollowSets000.FOLLOW_142); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getMultiplicityBoundsCSAccess().getFullStopFullStopKeyword_1_0());

                    }
                    // InternalQVTimperative.g:10425:1: ( (lv_upperBound_2_0= ruleUPPER ) )
                    // InternalQVTimperative.g:10426:1: (lv_upperBound_2_0= ruleUPPER )
                    {
                    // InternalQVTimperative.g:10426:1: (lv_upperBound_2_0= ruleUPPER )
                    // InternalQVTimperative.g:10427:3: lv_upperBound_2_0= ruleUPPER
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getMultiplicityBoundsCSAccess().getUpperBoundUPPERParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_upperBound_2_0=ruleUPPER();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMultiplicityBoundsCSRule());
                      	        }
                             		set(
                             			current,
                             			"upperBound",
                              		lv_upperBound_2_0,
                              		"org.eclipse.ocl.xtext.base.Base.UPPER");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicityBoundsCS"


    // $ANTLR start "entryRuleMultiplicityCS"
    // InternalQVTimperative.g:10451:1: entryRuleMultiplicityCS returns [EObject current=null] : iv_ruleMultiplicityCS= ruleMultiplicityCS EOF ;
    public final EObject entryRuleMultiplicityCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicityCS = null;


        try {
            // InternalQVTimperative.g:10452:2: (iv_ruleMultiplicityCS= ruleMultiplicityCS EOF )
            // InternalQVTimperative.g:10453:2: iv_ruleMultiplicityCS= ruleMultiplicityCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicityCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMultiplicityCS=ruleMultiplicityCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicityCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicityCS"


    // $ANTLR start "ruleMultiplicityCS"
    // InternalQVTimperative.g:10460:1: ruleMultiplicityCS returns [EObject current=null] : (otherlv_0= '[' (this_MultiplicityBoundsCS_1= ruleMultiplicityBoundsCS | this_MultiplicityStringCS_2= ruleMultiplicityStringCS ) (otherlv_3= '|?' | ( (lv_isNullFree_4_0= '|1' ) ) )? otherlv_5= ']' ) ;
    public final EObject ruleMultiplicityCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token lv_isNullFree_4_0=null;
        Token otherlv_5=null;
        EObject this_MultiplicityBoundsCS_1 = null;

        EObject this_MultiplicityStringCS_2 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:10463:28: ( (otherlv_0= '[' (this_MultiplicityBoundsCS_1= ruleMultiplicityBoundsCS | this_MultiplicityStringCS_2= ruleMultiplicityStringCS ) (otherlv_3= '|?' | ( (lv_isNullFree_4_0= '|1' ) ) )? otherlv_5= ']' ) )
            // InternalQVTimperative.g:10464:1: (otherlv_0= '[' (this_MultiplicityBoundsCS_1= ruleMultiplicityBoundsCS | this_MultiplicityStringCS_2= ruleMultiplicityStringCS ) (otherlv_3= '|?' | ( (lv_isNullFree_4_0= '|1' ) ) )? otherlv_5= ']' )
            {
            // InternalQVTimperative.g:10464:1: (otherlv_0= '[' (this_MultiplicityBoundsCS_1= ruleMultiplicityBoundsCS | this_MultiplicityStringCS_2= ruleMultiplicityStringCS ) (otherlv_3= '|?' | ( (lv_isNullFree_4_0= '|1' ) ) )? otherlv_5= ']' )
            // InternalQVTimperative.g:10464:3: otherlv_0= '[' (this_MultiplicityBoundsCS_1= ruleMultiplicityBoundsCS | this_MultiplicityStringCS_2= ruleMultiplicityStringCS ) (otherlv_3= '|?' | ( (lv_isNullFree_4_0= '|1' ) ) )? otherlv_5= ']'
            {
            otherlv_0=(Token)match(input,141,FollowSets000.FOLLOW_143); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getMultiplicityCSAccess().getLeftSquareBracketKeyword_0());

            }
            // InternalQVTimperative.g:10468:1: (this_MultiplicityBoundsCS_1= ruleMultiplicityBoundsCS | this_MultiplicityStringCS_2= ruleMultiplicityStringCS )
            int alt216=2;
            int LA216_0 = input.LA(1);

            if ( (LA216_0==RULE_INT) ) {
                alt216=1;
            }
            else if ( (LA216_0==37||LA216_0==103||LA216_0==153) ) {
                alt216=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 216, 0, input);

                throw nvae;
            }
            switch (alt216) {
                case 1 :
                    // InternalQVTimperative.g:10469:2: this_MultiplicityBoundsCS_1= ruleMultiplicityBoundsCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getMultiplicityCSAccess().getMultiplicityBoundsCSParserRuleCall_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_144);
                    this_MultiplicityBoundsCS_1=ruleMultiplicityBoundsCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MultiplicityBoundsCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:10482:2: this_MultiplicityStringCS_2= ruleMultiplicityStringCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getMultiplicityCSAccess().getMultiplicityStringCSParserRuleCall_1_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_144);
                    this_MultiplicityStringCS_2=ruleMultiplicityStringCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MultiplicityStringCS_2;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }

            // InternalQVTimperative.g:10493:2: (otherlv_3= '|?' | ( (lv_isNullFree_4_0= '|1' ) ) )?
            int alt217=3;
            int LA217_0 = input.LA(1);

            if ( (LA217_0==151) ) {
                alt217=1;
            }
            else if ( (LA217_0==152) ) {
                alt217=2;
            }
            switch (alt217) {
                case 1 :
                    // InternalQVTimperative.g:10493:4: otherlv_3= '|?'
                    {
                    otherlv_3=(Token)match(input,151,FollowSets000.FOLLOW_145); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getMultiplicityCSAccess().getVerticalLineQuestionMarkKeyword_2_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:10498:6: ( (lv_isNullFree_4_0= '|1' ) )
                    {
                    // InternalQVTimperative.g:10498:6: ( (lv_isNullFree_4_0= '|1' ) )
                    // InternalQVTimperative.g:10499:1: (lv_isNullFree_4_0= '|1' )
                    {
                    // InternalQVTimperative.g:10499:1: (lv_isNullFree_4_0= '|1' )
                    // InternalQVTimperative.g:10500:3: lv_isNullFree_4_0= '|1'
                    {
                    lv_isNullFree_4_0=(Token)match(input,152,FollowSets000.FOLLOW_145); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isNullFree_4_0, grammarAccess.getMultiplicityCSAccess().getIsNullFree1Keyword_2_1_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMultiplicityCSRule());
                      	        }
                             		setWithLastConsumed(current, "isNullFree", true, "|1");

                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,142,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getMultiplicityCSAccess().getRightSquareBracketKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicityCS"


    // $ANTLR start "entryRuleMultiplicityStringCS"
    // InternalQVTimperative.g:10525:1: entryRuleMultiplicityStringCS returns [EObject current=null] : iv_ruleMultiplicityStringCS= ruleMultiplicityStringCS EOF ;
    public final EObject entryRuleMultiplicityStringCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicityStringCS = null;


        try {
            // InternalQVTimperative.g:10526:2: (iv_ruleMultiplicityStringCS= ruleMultiplicityStringCS EOF )
            // InternalQVTimperative.g:10527:2: iv_ruleMultiplicityStringCS= ruleMultiplicityStringCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicityStringCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMultiplicityStringCS=ruleMultiplicityStringCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicityStringCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicityStringCS"


    // $ANTLR start "ruleMultiplicityStringCS"
    // InternalQVTimperative.g:10534:1: ruleMultiplicityStringCS returns [EObject current=null] : ( ( (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' ) ) ) ;
    public final EObject ruleMultiplicityStringCS() throws RecognitionException {
        EObject current = null;

        Token lv_stringBounds_0_1=null;
        Token lv_stringBounds_0_2=null;
        Token lv_stringBounds_0_3=null;

         enterRule();

        try {
            // InternalQVTimperative.g:10537:28: ( ( ( (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' ) ) ) )
            // InternalQVTimperative.g:10538:1: ( ( (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' ) ) )
            {
            // InternalQVTimperative.g:10538:1: ( ( (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' ) ) )
            // InternalQVTimperative.g:10539:1: ( (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' ) )
            {
            // InternalQVTimperative.g:10539:1: ( (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' ) )
            // InternalQVTimperative.g:10540:1: (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' )
            {
            // InternalQVTimperative.g:10540:1: (lv_stringBounds_0_1= '*' | lv_stringBounds_0_2= '+' | lv_stringBounds_0_3= '?' )
            int alt218=3;
            switch ( input.LA(1) ) {
            case 37:
                {
                alt218=1;
                }
                break;
            case 103:
                {
                alt218=2;
                }
                break;
            case 153:
                {
                alt218=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 218, 0, input);

                throw nvae;
            }

            switch (alt218) {
                case 1 :
                    // InternalQVTimperative.g:10541:3: lv_stringBounds_0_1= '*'
                    {
                    lv_stringBounds_0_1=(Token)match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_stringBounds_0_1, grammarAccess.getMultiplicityStringCSAccess().getStringBoundsAsteriskKeyword_0_0());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMultiplicityStringCSRule());
                      	        }
                             		setWithLastConsumed(current, "stringBounds", lv_stringBounds_0_1, null);

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:10553:8: lv_stringBounds_0_2= '+'
                    {
                    lv_stringBounds_0_2=(Token)match(input,103,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_stringBounds_0_2, grammarAccess.getMultiplicityStringCSAccess().getStringBoundsPlusSignKeyword_0_1());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMultiplicityStringCSRule());
                      	        }
                             		setWithLastConsumed(current, "stringBounds", lv_stringBounds_0_2, null);

                    }

                    }
                    break;
                case 3 :
                    // InternalQVTimperative.g:10565:8: lv_stringBounds_0_3= '?'
                    {
                    lv_stringBounds_0_3=(Token)match(input,153,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_stringBounds_0_3, grammarAccess.getMultiplicityStringCSAccess().getStringBoundsQuestionMarkKeyword_0_2());

                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMultiplicityStringCSRule());
                      	        }
                             		setWithLastConsumed(current, "stringBounds", lv_stringBounds_0_3, null);

                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicityStringCS"


    // $ANTLR start "entryRulePathNameCS"
    // InternalQVTimperative.g:10588:1: entryRulePathNameCS returns [EObject current=null] : iv_rulePathNameCS= rulePathNameCS EOF ;
    public final EObject entryRulePathNameCS() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePathNameCS = null;


        try {
            // InternalQVTimperative.g:10589:2: (iv_rulePathNameCS= rulePathNameCS EOF )
            // InternalQVTimperative.g:10590:2: iv_rulePathNameCS= rulePathNameCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPathNameCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePathNameCS=rulePathNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePathNameCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePathNameCS"


    // $ANTLR start "rulePathNameCS"
    // InternalQVTimperative.g:10597:1: rulePathNameCS returns [EObject current=null] : ( ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* ) ;
    public final EObject rulePathNameCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedPathElements_0_0 = null;

        EObject lv_ownedPathElements_2_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:10600:28: ( ( ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* ) )
            // InternalQVTimperative.g:10601:1: ( ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* )
            {
            // InternalQVTimperative.g:10601:1: ( ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )* )
            // InternalQVTimperative.g:10601:2: ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) ) (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )*
            {
            // InternalQVTimperative.g:10601:2: ( (lv_ownedPathElements_0_0= ruleFirstPathElementCS ) )
            // InternalQVTimperative.g:10602:1: (lv_ownedPathElements_0_0= ruleFirstPathElementCS )
            {
            // InternalQVTimperative.g:10602:1: (lv_ownedPathElements_0_0= ruleFirstPathElementCS )
            // InternalQVTimperative.g:10603:3: lv_ownedPathElements_0_0= ruleFirstPathElementCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getPathNameCSAccess().getOwnedPathElementsFirstPathElementCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_108);
            lv_ownedPathElements_0_0=ruleFirstPathElementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPathNameCSRule());
              	        }
                     		add(
                     			current,
                     			"ownedPathElements",
                      		lv_ownedPathElements_0_0,
                      		"org.eclipse.ocl.xtext.base.Base.FirstPathElementCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:10619:2: (otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) )*
            loop219:
            do {
                int alt219=2;
                int LA219_0 = input.LA(1);

                if ( (LA219_0==36) ) {
                    alt219=1;
                }


                switch (alt219) {
            	case 1 :
            	    // InternalQVTimperative.g:10619:4: otherlv_1= '::' ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) )
            	    {
            	    otherlv_1=(Token)match(input,36,FollowSets000.FOLLOW_12); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getPathNameCSAccess().getColonColonKeyword_1_0());

            	    }
            	    // InternalQVTimperative.g:10623:1: ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) )
            	    // InternalQVTimperative.g:10624:1: (lv_ownedPathElements_2_0= ruleNextPathElementCS )
            	    {
            	    // InternalQVTimperative.g:10624:1: (lv_ownedPathElements_2_0= ruleNextPathElementCS )
            	    // InternalQVTimperative.g:10625:3: lv_ownedPathElements_2_0= ruleNextPathElementCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getPathNameCSAccess().getOwnedPathElementsNextPathElementCSParserRuleCall_1_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_108);
            	    lv_ownedPathElements_2_0=ruleNextPathElementCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPathNameCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedPathElements",
            	              		lv_ownedPathElements_2_0,
            	              		"org.eclipse.ocl.xtext.base.Base.NextPathElementCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop219;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePathNameCS"


    // $ANTLR start "entryRuleFirstPathElementCS"
    // InternalQVTimperative.g:10649:1: entryRuleFirstPathElementCS returns [EObject current=null] : iv_ruleFirstPathElementCS= ruleFirstPathElementCS EOF ;
    public final EObject entryRuleFirstPathElementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFirstPathElementCS = null;


        try {
            // InternalQVTimperative.g:10650:2: (iv_ruleFirstPathElementCS= ruleFirstPathElementCS EOF )
            // InternalQVTimperative.g:10651:2: iv_ruleFirstPathElementCS= ruleFirstPathElementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFirstPathElementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFirstPathElementCS=ruleFirstPathElementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFirstPathElementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFirstPathElementCS"


    // $ANTLR start "ruleFirstPathElementCS"
    // InternalQVTimperative.g:10658:1: ruleFirstPathElementCS returns [EObject current=null] : ( ( ruleUnrestrictedName ) ) ;
    public final EObject ruleFirstPathElementCS() throws RecognitionException {
        EObject current = null;

         enterRule();

        try {
            // InternalQVTimperative.g:10661:28: ( ( ( ruleUnrestrictedName ) ) )
            // InternalQVTimperative.g:10662:1: ( ( ruleUnrestrictedName ) )
            {
            // InternalQVTimperative.g:10662:1: ( ( ruleUnrestrictedName ) )
            // InternalQVTimperative.g:10663:1: ( ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:10663:1: ( ruleUnrestrictedName )
            // InternalQVTimperative.g:10664:3: ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              		  /* */

            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getFirstPathElementCSRule());
              	        }

            }
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getFirstPathElementCSAccess().getReferredElementNamedElementCrossReference_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFirstPathElementCS"


    // $ANTLR start "entryRuleNextPathElementCS"
    // InternalQVTimperative.g:10688:1: entryRuleNextPathElementCS returns [EObject current=null] : iv_ruleNextPathElementCS= ruleNextPathElementCS EOF ;
    public final EObject entryRuleNextPathElementCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNextPathElementCS = null;


        try {
            // InternalQVTimperative.g:10689:2: (iv_ruleNextPathElementCS= ruleNextPathElementCS EOF )
            // InternalQVTimperative.g:10690:2: iv_ruleNextPathElementCS= ruleNextPathElementCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNextPathElementCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNextPathElementCS=ruleNextPathElementCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNextPathElementCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNextPathElementCS"


    // $ANTLR start "ruleNextPathElementCS"
    // InternalQVTimperative.g:10697:1: ruleNextPathElementCS returns [EObject current=null] : ( ( ruleUnreservedName ) ) ;
    public final EObject ruleNextPathElementCS() throws RecognitionException {
        EObject current = null;

         enterRule();

        try {
            // InternalQVTimperative.g:10700:28: ( ( ( ruleUnreservedName ) ) )
            // InternalQVTimperative.g:10701:1: ( ( ruleUnreservedName ) )
            {
            // InternalQVTimperative.g:10701:1: ( ( ruleUnreservedName ) )
            // InternalQVTimperative.g:10702:1: ( ruleUnreservedName )
            {
            // InternalQVTimperative.g:10702:1: ( ruleUnreservedName )
            // InternalQVTimperative.g:10703:3: ruleUnreservedName
            {
            if ( state.backtracking==0 ) {

              		  /* */

            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getNextPathElementCSRule());
              	        }

            }
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getNextPathElementCSAccess().getReferredElementNamedElementCrossReference_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnreservedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNextPathElementCS"


    // $ANTLR start "entryRuleTemplateBindingCS"
    // InternalQVTimperative.g:10727:1: entryRuleTemplateBindingCS returns [EObject current=null] : iv_ruleTemplateBindingCS= ruleTemplateBindingCS EOF ;
    public final EObject entryRuleTemplateBindingCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTemplateBindingCS = null;


        try {
            // InternalQVTimperative.g:10728:2: (iv_ruleTemplateBindingCS= ruleTemplateBindingCS EOF )
            // InternalQVTimperative.g:10729:2: iv_ruleTemplateBindingCS= ruleTemplateBindingCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateBindingCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTemplateBindingCS=ruleTemplateBindingCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateBindingCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTemplateBindingCS"


    // $ANTLR start "ruleTemplateBindingCS"
    // InternalQVTimperative.g:10736:1: ruleTemplateBindingCS returns [EObject current=null] : ( ( (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS ) ) (otherlv_1= ',' ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) ) )* ( (lv_ownedMultiplicity_3_0= ruleMultiplicityCS ) )? ) ;
    public final EObject ruleTemplateBindingCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_ownedSubstitutions_0_0 = null;

        EObject lv_ownedSubstitutions_2_0 = null;

        EObject lv_ownedMultiplicity_3_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:10739:28: ( ( ( (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS ) ) (otherlv_1= ',' ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) ) )* ( (lv_ownedMultiplicity_3_0= ruleMultiplicityCS ) )? ) )
            // InternalQVTimperative.g:10740:1: ( ( (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS ) ) (otherlv_1= ',' ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) ) )* ( (lv_ownedMultiplicity_3_0= ruleMultiplicityCS ) )? )
            {
            // InternalQVTimperative.g:10740:1: ( ( (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS ) ) (otherlv_1= ',' ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) ) )* ( (lv_ownedMultiplicity_3_0= ruleMultiplicityCS ) )? )
            // InternalQVTimperative.g:10740:2: ( (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS ) ) (otherlv_1= ',' ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) ) )* ( (lv_ownedMultiplicity_3_0= ruleMultiplicityCS ) )?
            {
            // InternalQVTimperative.g:10740:2: ( (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS ) )
            // InternalQVTimperative.g:10741:1: (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS )
            {
            // InternalQVTimperative.g:10741:1: (lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS )
            // InternalQVTimperative.g:10742:3: lv_ownedSubstitutions_0_0= ruleTemplateParameterSubstitutionCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTemplateBindingCSAccess().getOwnedSubstitutionsTemplateParameterSubstitutionCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_146);
            lv_ownedSubstitutions_0_0=ruleTemplateParameterSubstitutionCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTemplateBindingCSRule());
              	        }
                     		add(
                     			current,
                     			"ownedSubstitutions",
                      		lv_ownedSubstitutions_0_0,
                      		"org.eclipse.ocl.xtext.base.Base.TemplateParameterSubstitutionCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:10758:2: (otherlv_1= ',' ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) ) )*
            loop220:
            do {
                int alt220=2;
                int LA220_0 = input.LA(1);

                if ( (LA220_0==18) ) {
                    alt220=1;
                }


                switch (alt220) {
            	case 1 :
            	    // InternalQVTimperative.g:10758:4: otherlv_1= ',' ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) )
            	    {
            	    otherlv_1=(Token)match(input,18,FollowSets000.FOLLOW_147); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getTemplateBindingCSAccess().getCommaKeyword_1_0());

            	    }
            	    // InternalQVTimperative.g:10762:1: ( (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS ) )
            	    // InternalQVTimperative.g:10763:1: (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS )
            	    {
            	    // InternalQVTimperative.g:10763:1: (lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS )
            	    // InternalQVTimperative.g:10764:3: lv_ownedSubstitutions_2_0= ruleTemplateParameterSubstitutionCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getTemplateBindingCSAccess().getOwnedSubstitutionsTemplateParameterSubstitutionCSParserRuleCall_1_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_146);
            	    lv_ownedSubstitutions_2_0=ruleTemplateParameterSubstitutionCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTemplateBindingCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedSubstitutions",
            	              		lv_ownedSubstitutions_2_0,
            	              		"org.eclipse.ocl.xtext.base.Base.TemplateParameterSubstitutionCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop220;
                }
            } while (true);

            // InternalQVTimperative.g:10780:4: ( (lv_ownedMultiplicity_3_0= ruleMultiplicityCS ) )?
            int alt221=2;
            int LA221_0 = input.LA(1);

            if ( (LA221_0==141) ) {
                alt221=1;
            }
            switch (alt221) {
                case 1 :
                    // InternalQVTimperative.g:10781:1: (lv_ownedMultiplicity_3_0= ruleMultiplicityCS )
                    {
                    // InternalQVTimperative.g:10781:1: (lv_ownedMultiplicity_3_0= ruleMultiplicityCS )
                    // InternalQVTimperative.g:10782:3: lv_ownedMultiplicity_3_0= ruleMultiplicityCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTemplateBindingCSAccess().getOwnedMultiplicityMultiplicityCSParserRuleCall_2_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedMultiplicity_3_0=ruleMultiplicityCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTemplateBindingCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedMultiplicity",
                              		lv_ownedMultiplicity_3_0,
                              		"org.eclipse.ocl.xtext.base.Base.MultiplicityCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTemplateBindingCS"


    // $ANTLR start "entryRuleTemplateParameterSubstitutionCS"
    // InternalQVTimperative.g:10806:1: entryRuleTemplateParameterSubstitutionCS returns [EObject current=null] : iv_ruleTemplateParameterSubstitutionCS= ruleTemplateParameterSubstitutionCS EOF ;
    public final EObject entryRuleTemplateParameterSubstitutionCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTemplateParameterSubstitutionCS = null;


        try {
            // InternalQVTimperative.g:10807:2: (iv_ruleTemplateParameterSubstitutionCS= ruleTemplateParameterSubstitutionCS EOF )
            // InternalQVTimperative.g:10808:2: iv_ruleTemplateParameterSubstitutionCS= ruleTemplateParameterSubstitutionCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateParameterSubstitutionCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTemplateParameterSubstitutionCS=ruleTemplateParameterSubstitutionCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateParameterSubstitutionCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTemplateParameterSubstitutionCS"


    // $ANTLR start "ruleTemplateParameterSubstitutionCS"
    // InternalQVTimperative.g:10815:1: ruleTemplateParameterSubstitutionCS returns [EObject current=null] : ( (lv_ownedActualParameter_0_0= ruleTypeRefCS ) ) ;
    public final EObject ruleTemplateParameterSubstitutionCS() throws RecognitionException {
        EObject current = null;

        EObject lv_ownedActualParameter_0_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:10818:28: ( ( (lv_ownedActualParameter_0_0= ruleTypeRefCS ) ) )
            // InternalQVTimperative.g:10819:1: ( (lv_ownedActualParameter_0_0= ruleTypeRefCS ) )
            {
            // InternalQVTimperative.g:10819:1: ( (lv_ownedActualParameter_0_0= ruleTypeRefCS ) )
            // InternalQVTimperative.g:10820:1: (lv_ownedActualParameter_0_0= ruleTypeRefCS )
            {
            // InternalQVTimperative.g:10820:1: (lv_ownedActualParameter_0_0= ruleTypeRefCS )
            // InternalQVTimperative.g:10821:3: lv_ownedActualParameter_0_0= ruleTypeRefCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTemplateParameterSubstitutionCSAccess().getOwnedActualParameterTypeRefCSParserRuleCall_0());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_ownedActualParameter_0_0=ruleTypeRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTemplateParameterSubstitutionCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedActualParameter",
                      		lv_ownedActualParameter_0_0,
                      		"org.eclipse.ocl.xtext.base.Base.TypeRefCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTemplateParameterSubstitutionCS"


    // $ANTLR start "entryRuleTemplateSignatureCS"
    // InternalQVTimperative.g:10845:1: entryRuleTemplateSignatureCS returns [EObject current=null] : iv_ruleTemplateSignatureCS= ruleTemplateSignatureCS EOF ;
    public final EObject entryRuleTemplateSignatureCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTemplateSignatureCS = null;


        try {
            // InternalQVTimperative.g:10846:2: (iv_ruleTemplateSignatureCS= ruleTemplateSignatureCS EOF )
            // InternalQVTimperative.g:10847:2: iv_ruleTemplateSignatureCS= ruleTemplateSignatureCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateSignatureCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTemplateSignatureCS=ruleTemplateSignatureCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateSignatureCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTemplateSignatureCS"


    // $ANTLR start "ruleTemplateSignatureCS"
    // InternalQVTimperative.g:10854:1: ruleTemplateSignatureCS returns [EObject current=null] : (otherlv_0= '(' ( (lv_ownedParameters_1_0= ruleTypeParameterCS ) ) (otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) ) )* otherlv_4= ')' ) ;
    public final EObject ruleTemplateSignatureCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedParameters_1_0 = null;

        EObject lv_ownedParameters_3_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:10857:28: ( (otherlv_0= '(' ( (lv_ownedParameters_1_0= ruleTypeParameterCS ) ) (otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) ) )* otherlv_4= ')' ) )
            // InternalQVTimperative.g:10858:1: (otherlv_0= '(' ( (lv_ownedParameters_1_0= ruleTypeParameterCS ) ) (otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) ) )* otherlv_4= ')' )
            {
            // InternalQVTimperative.g:10858:1: (otherlv_0= '(' ( (lv_ownedParameters_1_0= ruleTypeParameterCS ) ) (otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) ) )* otherlv_4= ')' )
            // InternalQVTimperative.g:10858:3: otherlv_0= '(' ( (lv_ownedParameters_1_0= ruleTypeParameterCS ) ) (otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) ) )* otherlv_4= ')'
            {
            otherlv_0=(Token)match(input,53,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTemplateSignatureCSAccess().getLeftParenthesisKeyword_0());

            }
            // InternalQVTimperative.g:10862:1: ( (lv_ownedParameters_1_0= ruleTypeParameterCS ) )
            // InternalQVTimperative.g:10863:1: (lv_ownedParameters_1_0= ruleTypeParameterCS )
            {
            // InternalQVTimperative.g:10863:1: (lv_ownedParameters_1_0= ruleTypeParameterCS )
            // InternalQVTimperative.g:10864:3: lv_ownedParameters_1_0= ruleTypeParameterCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTemplateSignatureCSAccess().getOwnedParametersTypeParameterCSParserRuleCall_1_0());

            }
            pushFollow(FollowSets000.FOLLOW_50);
            lv_ownedParameters_1_0=ruleTypeParameterCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTemplateSignatureCSRule());
              	        }
                     		add(
                     			current,
                     			"ownedParameters",
                      		lv_ownedParameters_1_0,
                      		"org.eclipse.ocl.xtext.base.Base.TypeParameterCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:10880:2: (otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) ) )*
            loop222:
            do {
                int alt222=2;
                int LA222_0 = input.LA(1);

                if ( (LA222_0==18) ) {
                    alt222=1;
                }


                switch (alt222) {
            	case 1 :
            	    // InternalQVTimperative.g:10880:4: otherlv_2= ',' ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getTemplateSignatureCSAccess().getCommaKeyword_2_0());

            	    }
            	    // InternalQVTimperative.g:10884:1: ( (lv_ownedParameters_3_0= ruleTypeParameterCS ) )
            	    // InternalQVTimperative.g:10885:1: (lv_ownedParameters_3_0= ruleTypeParameterCS )
            	    {
            	    // InternalQVTimperative.g:10885:1: (lv_ownedParameters_3_0= ruleTypeParameterCS )
            	    // InternalQVTimperative.g:10886:3: lv_ownedParameters_3_0= ruleTypeParameterCS
            	    {
            	    if ( state.backtracking==0 ) {

            	      	        newCompositeNode(grammarAccess.getTemplateSignatureCSAccess().getOwnedParametersTypeParameterCSParserRuleCall_2_1_0());

            	    }
            	    pushFollow(FollowSets000.FOLLOW_50);
            	    lv_ownedParameters_3_0=ruleTypeParameterCS();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTemplateSignatureCSRule());
            	      	        }
            	             		add(
            	             			current,
            	             			"ownedParameters",
            	              		lv_ownedParameters_3_0,
            	              		"org.eclipse.ocl.xtext.base.Base.TypeParameterCS");
            	      	        afterParserOrEnumRuleCall();

            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop222;
                }
            } while (true);

            otherlv_4=(Token)match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getTemplateSignatureCSAccess().getRightParenthesisKeyword_3());

            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTemplateSignatureCS"


    // $ANTLR start "entryRuleTypeParameterCS"
    // InternalQVTimperative.g:10914:1: entryRuleTypeParameterCS returns [EObject current=null] : iv_ruleTypeParameterCS= ruleTypeParameterCS EOF ;
    public final EObject entryRuleTypeParameterCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeParameterCS = null;


        try {
            // InternalQVTimperative.g:10915:2: (iv_ruleTypeParameterCS= ruleTypeParameterCS EOF )
            // InternalQVTimperative.g:10916:2: iv_ruleTypeParameterCS= ruleTypeParameterCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeParameterCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeParameterCS=ruleTypeParameterCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeParameterCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeParameterCS"


    // $ANTLR start "ruleTypeParameterCS"
    // InternalQVTimperative.g:10923:1: ruleTypeParameterCS returns [EObject current=null] : ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= 'extends' ( (lv_ownedExtends_2_0= ruleTypedRefCS ) ) (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )* )? ) ;
    public final EObject ruleTypeParameterCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_ownedExtends_2_0 = null;

        EObject lv_ownedExtends_4_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:10926:28: ( ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= 'extends' ( (lv_ownedExtends_2_0= ruleTypedRefCS ) ) (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )* )? ) )
            // InternalQVTimperative.g:10927:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= 'extends' ( (lv_ownedExtends_2_0= ruleTypedRefCS ) ) (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )* )? )
            {
            // InternalQVTimperative.g:10927:1: ( ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= 'extends' ( (lv_ownedExtends_2_0= ruleTypedRefCS ) ) (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )* )? )
            // InternalQVTimperative.g:10927:2: ( (lv_name_0_0= ruleUnrestrictedName ) ) (otherlv_1= 'extends' ( (lv_ownedExtends_2_0= ruleTypedRefCS ) ) (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )* )?
            {
            // InternalQVTimperative.g:10927:2: ( (lv_name_0_0= ruleUnrestrictedName ) )
            // InternalQVTimperative.g:10928:1: (lv_name_0_0= ruleUnrestrictedName )
            {
            // InternalQVTimperative.g:10928:1: (lv_name_0_0= ruleUnrestrictedName )
            // InternalQVTimperative.g:10929:3: lv_name_0_0= ruleUnrestrictedName
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTypeParameterCSAccess().getNameUnrestrictedNameParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_148);
            lv_name_0_0=ruleUnrestrictedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypeParameterCSRule());
              	        }
                     		set(
                     			current,
                     			"name",
                      		lv_name_0_0,
                      		"org.eclipse.qvtd.xtext.qvtimperative.QVTimperative.UnrestrictedName");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:10945:2: (otherlv_1= 'extends' ( (lv_ownedExtends_2_0= ruleTypedRefCS ) ) (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )* )?
            int alt224=2;
            int LA224_0 = input.LA(1);

            if ( (LA224_0==98) ) {
                alt224=1;
            }
            switch (alt224) {
                case 1 :
                    // InternalQVTimperative.g:10945:4: otherlv_1= 'extends' ( (lv_ownedExtends_2_0= ruleTypedRefCS ) ) (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )*
                    {
                    otherlv_1=(Token)match(input,98,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getTypeParameterCSAccess().getExtendsKeyword_1_0());

                    }
                    // InternalQVTimperative.g:10949:1: ( (lv_ownedExtends_2_0= ruleTypedRefCS ) )
                    // InternalQVTimperative.g:10950:1: (lv_ownedExtends_2_0= ruleTypedRefCS )
                    {
                    // InternalQVTimperative.g:10950:1: (lv_ownedExtends_2_0= ruleTypedRefCS )
                    // InternalQVTimperative.g:10951:3: lv_ownedExtends_2_0= ruleTypedRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTypeParameterCSAccess().getOwnedExtendsTypedRefCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_149);
                    lv_ownedExtends_2_0=ruleTypedRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypeParameterCSRule());
                      	        }
                             		add(
                             			current,
                             			"ownedExtends",
                              		lv_ownedExtends_2_0,
                              		"org.eclipse.ocl.xtext.base.Base.TypedRefCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    // InternalQVTimperative.g:10967:2: (otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) ) )*
                    loop223:
                    do {
                        int alt223=2;
                        int LA223_0 = input.LA(1);

                        if ( (LA223_0==154) ) {
                            alt223=1;
                        }


                        switch (alt223) {
                    	case 1 :
                    	    // InternalQVTimperative.g:10967:4: otherlv_3= '&&' ( (lv_ownedExtends_4_0= ruleTypedRefCS ) )
                    	    {
                    	    otherlv_3=(Token)match(input,154,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getTypeParameterCSAccess().getAmpersandAmpersandKeyword_1_2_0());

                    	    }
                    	    // InternalQVTimperative.g:10971:1: ( (lv_ownedExtends_4_0= ruleTypedRefCS ) )
                    	    // InternalQVTimperative.g:10972:1: (lv_ownedExtends_4_0= ruleTypedRefCS )
                    	    {
                    	    // InternalQVTimperative.g:10972:1: (lv_ownedExtends_4_0= ruleTypedRefCS )
                    	    // InternalQVTimperative.g:10973:3: lv_ownedExtends_4_0= ruleTypedRefCS
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      	        newCompositeNode(grammarAccess.getTypeParameterCSAccess().getOwnedExtendsTypedRefCSParserRuleCall_1_2_1_0());

                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_149);
                    	    lv_ownedExtends_4_0=ruleTypedRefCS();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getTypeParameterCSRule());
                    	      	        }
                    	             		add(
                    	             			current,
                    	             			"ownedExtends",
                    	              		lv_ownedExtends_4_0,
                    	              		"org.eclipse.ocl.xtext.base.Base.TypedRefCS");
                    	      	        afterParserOrEnumRuleCall();

                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop223;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeParameterCS"


    // $ANTLR start "entryRuleTypeRefCS"
    // InternalQVTimperative.g:10997:1: entryRuleTypeRefCS returns [EObject current=null] : iv_ruleTypeRefCS= ruleTypeRefCS EOF ;
    public final EObject entryRuleTypeRefCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeRefCS = null;


        try {
            // InternalQVTimperative.g:10998:2: (iv_ruleTypeRefCS= ruleTypeRefCS EOF )
            // InternalQVTimperative.g:10999:2: iv_ruleTypeRefCS= ruleTypeRefCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRefCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeRefCS=ruleTypeRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeRefCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeRefCS"


    // $ANTLR start "ruleTypeRefCS"
    // InternalQVTimperative.g:11006:1: ruleTypeRefCS returns [EObject current=null] : (this_TypedRefCS_0= ruleTypedRefCS | this_WildcardTypeRefCS_1= ruleWildcardTypeRefCS ) ;
    public final EObject ruleTypeRefCS() throws RecognitionException {
        EObject current = null;

        EObject this_TypedRefCS_0 = null;

        EObject this_WildcardTypeRefCS_1 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:11009:28: ( (this_TypedRefCS_0= ruleTypedRefCS | this_WildcardTypeRefCS_1= ruleWildcardTypeRefCS ) )
            // InternalQVTimperative.g:11010:1: (this_TypedRefCS_0= ruleTypedRefCS | this_WildcardTypeRefCS_1= ruleWildcardTypeRefCS )
            {
            // InternalQVTimperative.g:11010:1: (this_TypedRefCS_0= ruleTypedRefCS | this_WildcardTypeRefCS_1= ruleWildcardTypeRefCS )
            int alt225=2;
            int LA225_0 = input.LA(1);

            if ( ((LA225_0>=RULE_SIMPLE_ID && LA225_0<=RULE_ESCAPED_ID)||LA225_0==17||LA225_0==19||(LA225_0>=22 && LA225_0<=23)||(LA225_0>=25 && LA225_0<=26)||(LA225_0>=28 && LA225_0<=31)||LA225_0==34||(LA225_0>=38 && LA225_0<=39)||(LA225_0>=43 && LA225_0<=49)||(LA225_0>=51 && LA225_0<=52)||(LA225_0>=55 && LA225_0<=57)||(LA225_0>=59 && LA225_0<=64)||LA225_0==66||LA225_0==68||LA225_0==70||LA225_0==73||LA225_0==75||LA225_0==77||(LA225_0>=79 && LA225_0<=83)||(LA225_0>=85 && LA225_0<=90)||LA225_0==92||LA225_0==94||(LA225_0>=96 && LA225_0<=99)) ) {
                alt225=1;
            }
            else if ( (LA225_0==153) ) {
                alt225=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 225, 0, input);

                throw nvae;
            }
            switch (alt225) {
                case 1 :
                    // InternalQVTimperative.g:11011:2: this_TypedRefCS_0= ruleTypedRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeRefCSAccess().getTypedRefCSParserRuleCall_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypedRefCS_0=ruleTypedRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypedRefCS_0;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:11024:2: this_WildcardTypeRefCS_1= ruleWildcardTypeRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	  /* */

                    }
                    if ( state.backtracking==0 ) {

                              newCompositeNode(grammarAccess.getTypeRefCSAccess().getWildcardTypeRefCSParserRuleCall_1());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_WildcardTypeRefCS_1=ruleWildcardTypeRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_WildcardTypeRefCS_1;
                              afterParserOrEnumRuleCall();

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeRefCS"


    // $ANTLR start "entryRuleTypedRefCS"
    // InternalQVTimperative.g:11043:1: entryRuleTypedRefCS returns [EObject current=null] : iv_ruleTypedRefCS= ruleTypedRefCS EOF ;
    public final EObject entryRuleTypedRefCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypedRefCS = null;


        try {
            // InternalQVTimperative.g:11044:2: (iv_ruleTypedRefCS= ruleTypedRefCS EOF )
            // InternalQVTimperative.g:11045:2: iv_ruleTypedRefCS= ruleTypedRefCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypedRefCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypedRefCS=ruleTypedRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypedRefCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypedRefCS"


    // $ANTLR start "ruleTypedRefCS"
    // InternalQVTimperative.g:11052:1: ruleTypedRefCS returns [EObject current=null] : this_TypedTypeRefCS_0= ruleTypedTypeRefCS ;
    public final EObject ruleTypedRefCS() throws RecognitionException {
        EObject current = null;

        EObject this_TypedTypeRefCS_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:11055:28: (this_TypedTypeRefCS_0= ruleTypedTypeRefCS )
            // InternalQVTimperative.g:11057:2: this_TypedTypeRefCS_0= ruleTypedTypeRefCS
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getTypedRefCSAccess().getTypedTypeRefCSParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_TypedTypeRefCS_0=ruleTypedTypeRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_TypedTypeRefCS_0;
                      afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypedRefCS"


    // $ANTLR start "entryRuleTypedTypeRefCS"
    // InternalQVTimperative.g:11076:1: entryRuleTypedTypeRefCS returns [EObject current=null] : iv_ruleTypedTypeRefCS= ruleTypedTypeRefCS EOF ;
    public final EObject entryRuleTypedTypeRefCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypedTypeRefCS = null;


        try {
            // InternalQVTimperative.g:11077:2: (iv_ruleTypedTypeRefCS= ruleTypedTypeRefCS EOF )
            // InternalQVTimperative.g:11078:2: iv_ruleTypedTypeRefCS= ruleTypedTypeRefCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypedTypeRefCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypedTypeRefCS=ruleTypedTypeRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypedTypeRefCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypedTypeRefCS"


    // $ANTLR start "ruleTypedTypeRefCS"
    // InternalQVTimperative.g:11085:1: ruleTypedTypeRefCS returns [EObject current=null] : ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) (otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')' )? ) ;
    public final EObject ruleTypedTypeRefCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_ownedPathName_0_0 = null;

        EObject lv_ownedBinding_2_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:11088:28: ( ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) (otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')' )? ) )
            // InternalQVTimperative.g:11089:1: ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) (otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')' )? )
            {
            // InternalQVTimperative.g:11089:1: ( ( (lv_ownedPathName_0_0= rulePathNameCS ) ) (otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')' )? )
            // InternalQVTimperative.g:11089:2: ( (lv_ownedPathName_0_0= rulePathNameCS ) ) (otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')' )?
            {
            // InternalQVTimperative.g:11089:2: ( (lv_ownedPathName_0_0= rulePathNameCS ) )
            // InternalQVTimperative.g:11090:1: (lv_ownedPathName_0_0= rulePathNameCS )
            {
            // InternalQVTimperative.g:11090:1: (lv_ownedPathName_0_0= rulePathNameCS )
            // InternalQVTimperative.g:11091:3: lv_ownedPathName_0_0= rulePathNameCS
            {
            if ( state.backtracking==0 ) {

              	        newCompositeNode(grammarAccess.getTypedTypeRefCSAccess().getOwnedPathNamePathNameCSParserRuleCall_0_0());

            }
            pushFollow(FollowSets000.FOLLOW_109);
            lv_ownedPathName_0_0=rulePathNameCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypedTypeRefCSRule());
              	        }
                     		set(
                     			current,
                     			"ownedPathName",
                      		lv_ownedPathName_0_0,
                      		"org.eclipse.ocl.xtext.base.Base.PathNameCS");
              	        afterParserOrEnumRuleCall();

            }

            }


            }

            // InternalQVTimperative.g:11107:2: (otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')' )?
            int alt226=2;
            int LA226_0 = input.LA(1);

            if ( (LA226_0==53) ) {
                alt226=1;
            }
            switch (alt226) {
                case 1 :
                    // InternalQVTimperative.g:11107:4: otherlv_1= '(' ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) ) otherlv_3= ')'
                    {
                    otherlv_1=(Token)match(input,53,FollowSets000.FOLLOW_147); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getTypedTypeRefCSAccess().getLeftParenthesisKeyword_1_0());

                    }
                    // InternalQVTimperative.g:11111:1: ( (lv_ownedBinding_2_0= ruleTemplateBindingCS ) )
                    // InternalQVTimperative.g:11112:1: (lv_ownedBinding_2_0= ruleTemplateBindingCS )
                    {
                    // InternalQVTimperative.g:11112:1: (lv_ownedBinding_2_0= ruleTemplateBindingCS )
                    // InternalQVTimperative.g:11113:3: lv_ownedBinding_2_0= ruleTemplateBindingCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getTypedTypeRefCSAccess().getOwnedBindingTemplateBindingCSParserRuleCall_1_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_111);
                    lv_ownedBinding_2_0=ruleTemplateBindingCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypedTypeRefCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedBinding",
                              		lv_ownedBinding_2_0,
                              		"org.eclipse.ocl.xtext.base.Base.TemplateBindingCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }

                    otherlv_3=(Token)match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getTypedTypeRefCSAccess().getRightParenthesisKeyword_1_2());

                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypedTypeRefCS"


    // $ANTLR start "entryRuleWildcardTypeRefCS"
    // InternalQVTimperative.g:11141:1: entryRuleWildcardTypeRefCS returns [EObject current=null] : iv_ruleWildcardTypeRefCS= ruleWildcardTypeRefCS EOF ;
    public final EObject entryRuleWildcardTypeRefCS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcardTypeRefCS = null;


        try {
            // InternalQVTimperative.g:11142:2: (iv_ruleWildcardTypeRefCS= ruleWildcardTypeRefCS EOF )
            // InternalQVTimperative.g:11143:2: iv_ruleWildcardTypeRefCS= ruleWildcardTypeRefCS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardTypeRefCSRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleWildcardTypeRefCS=ruleWildcardTypeRefCS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardTypeRefCS;
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWildcardTypeRefCS"


    // $ANTLR start "ruleWildcardTypeRefCS"
    // InternalQVTimperative.g:11150:1: ruleWildcardTypeRefCS returns [EObject current=null] : ( () otherlv_1= '?' (otherlv_2= 'extends' ( (lv_ownedExtends_3_0= ruleTypedRefCS ) ) )? ) ;
    public final EObject ruleWildcardTypeRefCS() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_ownedExtends_3_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:11153:28: ( ( () otherlv_1= '?' (otherlv_2= 'extends' ( (lv_ownedExtends_3_0= ruleTypedRefCS ) ) )? ) )
            // InternalQVTimperative.g:11154:1: ( () otherlv_1= '?' (otherlv_2= 'extends' ( (lv_ownedExtends_3_0= ruleTypedRefCS ) ) )? )
            {
            // InternalQVTimperative.g:11154:1: ( () otherlv_1= '?' (otherlv_2= 'extends' ( (lv_ownedExtends_3_0= ruleTypedRefCS ) ) )? )
            // InternalQVTimperative.g:11154:2: () otherlv_1= '?' (otherlv_2= 'extends' ( (lv_ownedExtends_3_0= ruleTypedRefCS ) ) )?
            {
            // InternalQVTimperative.g:11154:2: ()
            // InternalQVTimperative.g:11155:2:
            {
            if ( state.backtracking==0 ) {

              	  /* */

            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getWildcardTypeRefCSAccess().getWildcardTypeRefCSAction_0(),
                          current);

            }

            }

            otherlv_1=(Token)match(input,153,FollowSets000.FOLLOW_148); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getWildcardTypeRefCSAccess().getQuestionMarkKeyword_1());

            }
            // InternalQVTimperative.g:11167:1: (otherlv_2= 'extends' ( (lv_ownedExtends_3_0= ruleTypedRefCS ) ) )?
            int alt227=2;
            int LA227_0 = input.LA(1);

            if ( (LA227_0==98) ) {
                alt227=1;
            }
            switch (alt227) {
                case 1 :
                    // InternalQVTimperative.g:11167:3: otherlv_2= 'extends' ( (lv_ownedExtends_3_0= ruleTypedRefCS ) )
                    {
                    otherlv_2=(Token)match(input,98,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getWildcardTypeRefCSAccess().getExtendsKeyword_2_0());

                    }
                    // InternalQVTimperative.g:11171:1: ( (lv_ownedExtends_3_0= ruleTypedRefCS ) )
                    // InternalQVTimperative.g:11172:1: (lv_ownedExtends_3_0= ruleTypedRefCS )
                    {
                    // InternalQVTimperative.g:11172:1: (lv_ownedExtends_3_0= ruleTypedRefCS )
                    // InternalQVTimperative.g:11173:3: lv_ownedExtends_3_0= ruleTypedRefCS
                    {
                    if ( state.backtracking==0 ) {

                      	        newCompositeNode(grammarAccess.getWildcardTypeRefCSAccess().getOwnedExtendsTypedRefCSParserRuleCall_2_1_0());

                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_ownedExtends_3_0=ruleTypedRefCS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getWildcardTypeRefCSRule());
                      	        }
                             		set(
                             			current,
                             			"ownedExtends",
                              		lv_ownedExtends_3_0,
                              		"org.eclipse.ocl.xtext.base.Base.TypedRefCS");
                      	        afterParserOrEnumRuleCall();

                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWildcardTypeRefCS"


    // $ANTLR start "entryRuleID"
    // InternalQVTimperative.g:11197:1: entryRuleID returns [String current=null] : iv_ruleID= ruleID EOF ;
    public final String entryRuleID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleID = null;


        try {
            // InternalQVTimperative.g:11198:2: (iv_ruleID= ruleID EOF )
            // InternalQVTimperative.g:11199:2: iv_ruleID= ruleID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIDRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleID=ruleID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleID.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleID"


    // $ANTLR start "ruleID"
    // InternalQVTimperative.g:11206:1: ruleID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_SIMPLE_ID_0= RULE_SIMPLE_ID | this_ESCAPED_ID_1= RULE_ESCAPED_ID ) ;
    public final AntlrDatatypeRuleToken ruleID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_SIMPLE_ID_0=null;
        Token this_ESCAPED_ID_1=null;

         enterRule();

        try {
            // InternalQVTimperative.g:11209:28: ( (this_SIMPLE_ID_0= RULE_SIMPLE_ID | this_ESCAPED_ID_1= RULE_ESCAPED_ID ) )
            // InternalQVTimperative.g:11210:1: (this_SIMPLE_ID_0= RULE_SIMPLE_ID | this_ESCAPED_ID_1= RULE_ESCAPED_ID )
            {
            // InternalQVTimperative.g:11210:1: (this_SIMPLE_ID_0= RULE_SIMPLE_ID | this_ESCAPED_ID_1= RULE_ESCAPED_ID )
            int alt228=2;
            int LA228_0 = input.LA(1);

            if ( (LA228_0==RULE_SIMPLE_ID) ) {
                alt228=1;
            }
            else if ( (LA228_0==RULE_ESCAPED_ID) ) {
                alt228=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 228, 0, input);

                throw nvae;
            }
            switch (alt228) {
                case 1 :
                    // InternalQVTimperative.g:11210:6: this_SIMPLE_ID_0= RULE_SIMPLE_ID
                    {
                    this_SIMPLE_ID_0=(Token)match(input,RULE_SIMPLE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_SIMPLE_ID_0);

                    }
                    if ( state.backtracking==0 ) {

                          newLeafNode(this_SIMPLE_ID_0, grammarAccess.getIDAccess().getSIMPLE_IDTerminalRuleCall_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:11218:10: this_ESCAPED_ID_1= RULE_ESCAPED_ID
                    {
                    this_ESCAPED_ID_1=(Token)match(input,RULE_ESCAPED_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ESCAPED_ID_1);

                    }
                    if ( state.backtracking==0 ) {

                          newLeafNode(this_ESCAPED_ID_1, grammarAccess.getIDAccess().getESCAPED_IDTerminalRuleCall_1());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleID"


    // $ANTLR start "entryRuleIdentifier"
    // InternalQVTimperative.g:11233:1: entryRuleIdentifier returns [String current=null] : iv_ruleIdentifier= ruleIdentifier EOF ;
    public final String entryRuleIdentifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIdentifier = null;


        try {
            // InternalQVTimperative.g:11234:2: (iv_ruleIdentifier= ruleIdentifier EOF )
            // InternalQVTimperative.g:11235:2: iv_ruleIdentifier= ruleIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentifierRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIdentifier=ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentifier.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdentifier"


    // $ANTLR start "ruleIdentifier"
    // InternalQVTimperative.g:11242:1: ruleIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_ID_0= ruleID ;
    public final AntlrDatatypeRuleToken ruleIdentifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_ID_0 = null;


         enterRule();

        try {
            // InternalQVTimperative.g:11245:28: (this_ID_0= ruleID )
            // InternalQVTimperative.g:11247:5: this_ID_0= ruleID
            {
            if ( state.backtracking==0 ) {

                      newCompositeNode(grammarAccess.getIdentifierAccess().getIDParserRuleCall());

            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_ID_0=ruleID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);

            }
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdentifier"


    // $ANTLR start "entryRuleLOWER"
    // InternalQVTimperative.g:11265:1: entryRuleLOWER returns [String current=null] : iv_ruleLOWER= ruleLOWER EOF ;
    public final String entryRuleLOWER() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleLOWER = null;


        try {
            // InternalQVTimperative.g:11266:2: (iv_ruleLOWER= ruleLOWER EOF )
            // InternalQVTimperative.g:11267:2: iv_ruleLOWER= ruleLOWER EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLOWERRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLOWER=ruleLOWER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLOWER.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLOWER"


    // $ANTLR start "ruleLOWER"
    // InternalQVTimperative.g:11274:1: ruleLOWER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_INT_0= RULE_INT ;
    public final AntlrDatatypeRuleToken ruleLOWER() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0=null;

         enterRule();

        try {
            // InternalQVTimperative.g:11277:28: (this_INT_0= RULE_INT )
            // InternalQVTimperative.g:11278:5: this_INT_0= RULE_INT
            {
            this_INT_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_INT_0);

            }
            if ( state.backtracking==0 ) {

                  newLeafNode(this_INT_0, grammarAccess.getLOWERAccess().getINTTerminalRuleCall());

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLOWER"


    // $ANTLR start "entryRuleNUMBER_LITERAL"
    // InternalQVTimperative.g:11293:1: entryRuleNUMBER_LITERAL returns [String current=null] : iv_ruleNUMBER_LITERAL= ruleNUMBER_LITERAL EOF ;
    public final String entryRuleNUMBER_LITERAL() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNUMBER_LITERAL = null;


        try {
            // InternalQVTimperative.g:11294:2: (iv_ruleNUMBER_LITERAL= ruleNUMBER_LITERAL EOF )
            // InternalQVTimperative.g:11295:2: iv_ruleNUMBER_LITERAL= ruleNUMBER_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNUMBER_LITERALRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNUMBER_LITERAL=ruleNUMBER_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNUMBER_LITERAL.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNUMBER_LITERAL"


    // $ANTLR start "ruleNUMBER_LITERAL"
    // InternalQVTimperative.g:11302:1: ruleNUMBER_LITERAL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_INT_0= RULE_INT ;
    public final AntlrDatatypeRuleToken ruleNUMBER_LITERAL() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0=null;

         enterRule();

        try {
            // InternalQVTimperative.g:11305:28: (this_INT_0= RULE_INT )
            // InternalQVTimperative.g:11306:5: this_INT_0= RULE_INT
            {
            this_INT_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_INT_0);

            }
            if ( state.backtracking==0 ) {

                  newLeafNode(this_INT_0, grammarAccess.getNUMBER_LITERALAccess().getINTTerminalRuleCall());

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNUMBER_LITERAL"


    // $ANTLR start "entryRuleStringLiteral"
    // InternalQVTimperative.g:11321:1: entryRuleStringLiteral returns [String current=null] : iv_ruleStringLiteral= ruleStringLiteral EOF ;
    public final String entryRuleStringLiteral() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleStringLiteral = null;


        try {
            // InternalQVTimperative.g:11322:2: (iv_ruleStringLiteral= ruleStringLiteral EOF )
            // InternalQVTimperative.g:11323:2: iv_ruleStringLiteral= ruleStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringLiteralRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStringLiteral=ruleStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringLiteral.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringLiteral"


    // $ANTLR start "ruleStringLiteral"
    // InternalQVTimperative.g:11330:1: ruleStringLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_SINGLE_QUOTED_STRING_0= RULE_SINGLE_QUOTED_STRING ;
    public final AntlrDatatypeRuleToken ruleStringLiteral() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_SINGLE_QUOTED_STRING_0=null;

         enterRule();

        try {
            // InternalQVTimperative.g:11333:28: (this_SINGLE_QUOTED_STRING_0= RULE_SINGLE_QUOTED_STRING )
            // InternalQVTimperative.g:11334:5: this_SINGLE_QUOTED_STRING_0= RULE_SINGLE_QUOTED_STRING
            {
            this_SINGLE_QUOTED_STRING_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_SINGLE_QUOTED_STRING_0);

            }
            if ( state.backtracking==0 ) {

                  newLeafNode(this_SINGLE_QUOTED_STRING_0, grammarAccess.getStringLiteralAccess().getSINGLE_QUOTED_STRINGTerminalRuleCall());

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringLiteral"


    // $ANTLR start "entryRuleUPPER"
    // InternalQVTimperative.g:11349:1: entryRuleUPPER returns [String current=null] : iv_ruleUPPER= ruleUPPER EOF ;
    public final String entryRuleUPPER() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUPPER = null;


        try {
            // InternalQVTimperative.g:11350:2: (iv_ruleUPPER= ruleUPPER EOF )
            // InternalQVTimperative.g:11351:2: iv_ruleUPPER= ruleUPPER EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUPPERRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleUPPER=ruleUPPER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUPPER.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUPPER"


    // $ANTLR start "ruleUPPER"
    // InternalQVTimperative.g:11358:1: ruleUPPER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_INT_0= RULE_INT | kw= '*' ) ;
    public final AntlrDatatypeRuleToken ruleUPPER() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0=null;
        Token kw=null;

         enterRule();

        try {
            // InternalQVTimperative.g:11361:28: ( (this_INT_0= RULE_INT | kw= '*' ) )
            // InternalQVTimperative.g:11362:1: (this_INT_0= RULE_INT | kw= '*' )
            {
            // InternalQVTimperative.g:11362:1: (this_INT_0= RULE_INT | kw= '*' )
            int alt229=2;
            int LA229_0 = input.LA(1);

            if ( (LA229_0==RULE_INT) ) {
                alt229=1;
            }
            else if ( (LA229_0==37) ) {
                alt229=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 229, 0, input);

                throw nvae;
            }
            switch (alt229) {
                case 1 :
                    // InternalQVTimperative.g:11362:6: this_INT_0= RULE_INT
                    {
                    this_INT_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_INT_0);

                    }
                    if ( state.backtracking==0 ) {

                          newLeafNode(this_INT_0, grammarAccess.getUPPERAccess().getINTTerminalRuleCall_0());

                    }

                    }
                    break;
                case 2 :
                    // InternalQVTimperative.g:11371:2: kw= '*'
                    {
                    kw=(Token)match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getUPPERAccess().getAsteriskKeyword_1());

                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUPPER"


    // $ANTLR start "entryRuleURI"
    // InternalQVTimperative.g:11384:1: entryRuleURI returns [String current=null] : iv_ruleURI= ruleURI EOF ;
    public final String entryRuleURI() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleURI = null;


        try {
            // InternalQVTimperative.g:11385:2: (iv_ruleURI= ruleURI EOF )
            // InternalQVTimperative.g:11386:2: iv_ruleURI= ruleURI EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getURIRule());
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleURI=ruleURI();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleURI.getText();
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleURI"


    // $ANTLR start "ruleURI"
    // InternalQVTimperative.g:11393:1: ruleURI returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_SINGLE_QUOTED_STRING_0= RULE_SINGLE_QUOTED_STRING ;
    public final AntlrDatatypeRuleToken ruleURI() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_SINGLE_QUOTED_STRING_0=null;

         enterRule();

        try {
            // InternalQVTimperative.g:11396:28: (this_SINGLE_QUOTED_STRING_0= RULE_SINGLE_QUOTED_STRING )
            // InternalQVTimperative.g:11397:5: this_SINGLE_QUOTED_STRING_0= RULE_SINGLE_QUOTED_STRING
            {
            this_SINGLE_QUOTED_STRING_0=(Token)match(input,RULE_SINGLE_QUOTED_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_SINGLE_QUOTED_STRING_0);

            }
            if ( state.backtracking==0 ) {

                  newLeafNode(this_SINGLE_QUOTED_STRING_0, grammarAccess.getURIAccess().getSINGLE_QUOTED_STRINGTerminalRuleCall());

            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleURI"

    // $ANTLR start synpred18_InternalQVTimperative
    public final void synpred18_InternalQVTimperative_fragment() throws RecognitionException {
        Token lv_isChecked_1_0=null;

        // InternalQVTimperative.g:871:3: ( ( (lv_isChecked_1_0= 'check' ) ) )
        // InternalQVTimperative.g:871:3: ( (lv_isChecked_1_0= 'check' ) )
        {
        // InternalQVTimperative.g:871:3: ( (lv_isChecked_1_0= 'check' ) )
        // InternalQVTimperative.g:872:1: (lv_isChecked_1_0= 'check' )
        {
        // InternalQVTimperative.g:872:1: (lv_isChecked_1_0= 'check' )
        // InternalQVTimperative.g:873:3: lv_isChecked_1_0= 'check'
        {
        lv_isChecked_1_0=(Token)match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred18_InternalQVTimperative

    // $ANTLR start synpred19_InternalQVTimperative
    public final void synpred19_InternalQVTimperative_fragment() throws RecognitionException {
        Token lv_isEnforced_2_0=null;

        // InternalQVTimperative.g:887:6: ( ( (lv_isEnforced_2_0= 'enforce' ) ) )
        // InternalQVTimperative.g:887:6: ( (lv_isEnforced_2_0= 'enforce' ) )
        {
        // InternalQVTimperative.g:887:6: ( (lv_isEnforced_2_0= 'enforce' ) )
        // InternalQVTimperative.g:888:1: (lv_isEnforced_2_0= 'enforce' )
        {
        // InternalQVTimperative.g:888:1: (lv_isEnforced_2_0= 'enforce' )
        // InternalQVTimperative.g:889:3: lv_isEnforced_2_0= 'enforce'
        {
        lv_isEnforced_2_0=(Token)match(input,30,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred19_InternalQVTimperative

    // $ANTLR start synpred26_InternalQVTimperative
    public final void synpred26_InternalQVTimperative_fragment() throws RecognitionException {
        EObject this_DeclareStatementCS_1 = null;


        // InternalQVTimperative.g:1192:2: (this_DeclareStatementCS_1= ruleDeclareStatementCS )
        // InternalQVTimperative.g:1192:2: this_DeclareStatementCS_1= ruleDeclareStatementCS
        {
        if ( state.backtracking==0 ) {

          	  /* */

        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_DeclareStatementCS_1=ruleDeclareStatementCS();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred26_InternalQVTimperative

    // $ANTLR start synpred27_InternalQVTimperative
    public final void synpred27_InternalQVTimperative_fragment() throws RecognitionException {
        EObject this_DeclareStatementCS_2 = null;


        // InternalQVTimperative.g:1205:2: (this_DeclareStatementCS_2= ruleDeclareStatementCS )
        // InternalQVTimperative.g:1205:2: this_DeclareStatementCS_2= ruleDeclareStatementCS
        {
        if ( state.backtracking==0 ) {

          	  /* */

        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_DeclareStatementCS_2=ruleDeclareStatementCS();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred27_InternalQVTimperative

    // $ANTLR start synpred70_InternalQVTimperative
    public final void synpred70_InternalQVTimperative_fragment() throws RecognitionException {
        Token lv_isCheck_0_0=null;

        // InternalQVTimperative.g:2864:1: ( (lv_isCheck_0_0= 'check' ) )
        // InternalQVTimperative.g:2864:1: (lv_isCheck_0_0= 'check' )
        {
        // InternalQVTimperative.g:2864:1: (lv_isCheck_0_0= 'check' )
        // InternalQVTimperative.g:2865:3: lv_isCheck_0_0= 'check'
        {
        lv_isCheck_0_0=(Token)match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred70_InternalQVTimperative

    // $ANTLR start synpred100_InternalQVTimperative
    public final void synpred100_InternalQVTimperative_fragment() throws RecognitionException {
        AntlrDatatypeRuleToken this_QVTbaseUnrestrictedName_1 = null;


        // InternalQVTimperative.g:3347:5: (this_QVTbaseUnrestrictedName_1= ruleQVTbaseUnrestrictedName )
        // InternalQVTimperative.g:3347:5: this_QVTbaseUnrestrictedName_1= ruleQVTbaseUnrestrictedName
        {
        if ( state.backtracking==0 ) {

                  newCompositeNode(grammarAccess.getUnrestrictedNameAccess().getQVTbaseUnrestrictedNameParserRuleCall_1());

        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_QVTbaseUnrestrictedName_1=ruleQVTbaseUnrestrictedName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred100_InternalQVTimperative

    // $ANTLR start synpred321_InternalQVTimperative
    public final void synpred321_InternalQVTimperative_fragment() throws RecognitionException {
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedPatternGuard_3_0 = null;


        // InternalQVTimperative.g:8502:4: (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )
        // InternalQVTimperative.g:8502:4: otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}'
        {
        otherlv_2=(Token)match(input,41,FollowSets000.FOLLOW_8); if (state.failed) return ;
        // InternalQVTimperative.g:8506:1: ( (lv_ownedPatternGuard_3_0= ruleExpCS ) )
        // InternalQVTimperative.g:8507:1: (lv_ownedPatternGuard_3_0= ruleExpCS )
        {
        // InternalQVTimperative.g:8507:1: (lv_ownedPatternGuard_3_0= ruleExpCS )
        // InternalQVTimperative.g:8508:3: lv_ownedPatternGuard_3_0= ruleExpCS
        {
        if ( state.backtracking==0 ) {

          	        newCompositeNode(grammarAccess.getTypeNameExpCSAccess().getOwnedPatternGuardExpCSParserRuleCall_1_1_1_0());

        }
        pushFollow(FollowSets000.FOLLOW_52);
        lv_ownedPatternGuard_3_0=ruleExpCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_4=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred321_InternalQVTimperative

    // $ANTLR start synpred322_InternalQVTimperative
    public final void synpred322_InternalQVTimperative_fragment() throws RecognitionException {
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_ownedCurlyBracketedClause_1_0 = null;

        EObject lv_ownedPatternGuard_3_0 = null;


        // InternalQVTimperative.g:8484:3: ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )
        // InternalQVTimperative.g:8484:3: ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )?
        {
        // InternalQVTimperative.g:8484:3: ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) )
        // InternalQVTimperative.g:8485:1: (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS )
        {
        // InternalQVTimperative.g:8485:1: (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS )
        // InternalQVTimperative.g:8486:3: lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS
        {
        if ( state.backtracking==0 ) {

          	        newCompositeNode(grammarAccess.getTypeNameExpCSAccess().getOwnedCurlyBracketedClauseCurlyBracketedClauseCSParserRuleCall_1_0_0());

        }
        pushFollow(FollowSets000.FOLLOW_89);
        lv_ownedCurlyBracketedClause_1_0=ruleCurlyBracketedClauseCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalQVTimperative.g:8502:2: (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )?
        int alt306=2;
        int LA306_0 = input.LA(1);

        if ( (LA306_0==41) ) {
            alt306=1;
        }
        switch (alt306) {
            case 1 :
                // InternalQVTimperative.g:8502:4: otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}'
                {
                otherlv_2=(Token)match(input,41,FollowSets000.FOLLOW_8); if (state.failed) return ;
                // InternalQVTimperative.g:8506:1: ( (lv_ownedPatternGuard_3_0= ruleExpCS ) )
                // InternalQVTimperative.g:8507:1: (lv_ownedPatternGuard_3_0= ruleExpCS )
                {
                // InternalQVTimperative.g:8507:1: (lv_ownedPatternGuard_3_0= ruleExpCS )
                // InternalQVTimperative.g:8508:3: lv_ownedPatternGuard_3_0= ruleExpCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getTypeNameExpCSAccess().getOwnedPatternGuardExpCSParserRuleCall_1_1_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_52);
                lv_ownedPatternGuard_3_0=ruleExpCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                otherlv_4=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }
    }
    // $ANTLR end synpred322_InternalQVTimperative

    // $ANTLR start synpred324_InternalQVTimperative
    public final void synpred324_InternalQVTimperative_fragment() throws RecognitionException {
        EObject this_TypeLiteralCS_1 = null;


        // InternalQVTimperative.g:8563:2: (this_TypeLiteralCS_1= ruleTypeLiteralCS )
        // InternalQVTimperative.g:8563:2: this_TypeLiteralCS_1= ruleTypeLiteralCS
        {
        if ( state.backtracking==0 ) {

          	  /* */

        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_TypeLiteralCS_1=ruleTypeLiteralCS();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred324_InternalQVTimperative

    // $ANTLR start synpred327_InternalQVTimperative
    public final void synpred327_InternalQVTimperative_fragment() throws RecognitionException {
        EObject this_PrefixedPrimaryExpCS_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_ownedRight_3_0 = null;


        // InternalQVTimperative.g:8659:2: ( (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? ) )
        // InternalQVTimperative.g:8659:2: (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? )
        {
        // InternalQVTimperative.g:8659:2: (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? )
        // InternalQVTimperative.g:8660:2: this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )?
        {
        if ( state.backtracking==0 ) {

          	  /* */

        }
        pushFollow(FollowSets000.FOLLOW_124);
        this_PrefixedPrimaryExpCS_0=rulePrefixedPrimaryExpCS();

        state._fsp--;
        if (state.failed) return ;
        // InternalQVTimperative.g:8671:1: ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )?
        int alt307=2;
        int LA307_0 = input.LA(1);

        if ( (LA307_0==37||LA307_0==50||LA307_0==58||LA307_0==100||(LA307_0>=102 && LA307_0<=115)) ) {
            alt307=1;
        }
        switch (alt307) {
            case 1 :
                // InternalQVTimperative.g:8671:2: () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) )
                {
                // InternalQVTimperative.g:8671:2: ()
                // InternalQVTimperative.g:8672:2:
                {
                if ( state.backtracking==0 ) {

                  	  /* */

                }

                }

                // InternalQVTimperative.g:8680:2: ( (lv_name_2_0= ruleBinaryOperatorName ) )
                // InternalQVTimperative.g:8681:1: (lv_name_2_0= ruleBinaryOperatorName )
                {
                // InternalQVTimperative.g:8681:1: (lv_name_2_0= ruleBinaryOperatorName )
                // InternalQVTimperative.g:8682:3: lv_name_2_0= ruleBinaryOperatorName
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getExpCSAccess().getNameBinaryOperatorNameParserRuleCall_0_1_1_0());

                }
                pushFollow(FollowSets000.FOLLOW_8);
                lv_name_2_0=ruleBinaryOperatorName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalQVTimperative.g:8698:2: ( (lv_ownedRight_3_0= ruleExpCS ) )
                // InternalQVTimperative.g:8699:1: (lv_ownedRight_3_0= ruleExpCS )
                {
                // InternalQVTimperative.g:8699:1: (lv_ownedRight_3_0= ruleExpCS )
                // InternalQVTimperative.g:8700:3: lv_ownedRight_3_0= ruleExpCS
                {
                if ( state.backtracking==0 ) {

                  	        newCompositeNode(grammarAccess.getExpCSAccess().getOwnedRightExpCSParserRuleCall_0_1_2_0());

                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_ownedRight_3_0=ruleExpCS();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred327_InternalQVTimperative

    // $ANTLR start synpred334_InternalQVTimperative
    public final void synpred334_InternalQVTimperative_fragment() throws RecognitionException {
        EObject this_TupleLiteralExpCS_4 = null;


        // InternalQVTimperative.g:8961:2: (this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS )
        // InternalQVTimperative.g:8961:2: this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS
        {
        if ( state.backtracking==0 ) {

          	  /* */

        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_TupleLiteralExpCS_4=ruleTupleLiteralExpCS();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred334_InternalQVTimperative

    // $ANTLR start synpred335_InternalQVTimperative
    public final void synpred335_InternalQVTimperative_fragment() throws RecognitionException {
        EObject this_MapLiteralExpCS_5 = null;


        // InternalQVTimperative.g:8974:2: (this_MapLiteralExpCS_5= ruleMapLiteralExpCS )
        // InternalQVTimperative.g:8974:2: this_MapLiteralExpCS_5= ruleMapLiteralExpCS
        {
        if ( state.backtracking==0 ) {

          	  /* */

        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_MapLiteralExpCS_5=ruleMapLiteralExpCS();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred335_InternalQVTimperative

    // $ANTLR start synpred336_InternalQVTimperative
    public final void synpred336_InternalQVTimperative_fragment() throws RecognitionException {
        EObject this_CollectionLiteralExpCS_6 = null;


        // InternalQVTimperative.g:8987:2: (this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS )
        // InternalQVTimperative.g:8987:2: this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS
        {
        if ( state.backtracking==0 ) {

          	  /* */

        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_CollectionLiteralExpCS_6=ruleCollectionLiteralExpCS();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred336_InternalQVTimperative

    // $ANTLR start synpred338_InternalQVTimperative
    public final void synpred338_InternalQVTimperative_fragment() throws RecognitionException {
        EObject this_TypeLiteralExpCS_8 = null;


        // InternalQVTimperative.g:9013:2: (this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS )
        // InternalQVTimperative.g:9013:2: this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS
        {
        if ( state.backtracking==0 ) {

          	  /* */

        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_TypeLiteralExpCS_8=ruleTypeLiteralExpCS();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred338_InternalQVTimperative

    // Delegated rules

    public final boolean synpred321_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred321_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred338_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred338_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred334_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred334_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred336_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred336_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred322_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred322_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred100_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred100_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred324_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred324_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred335_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred335_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred27_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred327_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred327_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred70_InternalQVTimperative() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred70_InternalQVTimperative_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA8 dfa8 = new DFA8(this);
    protected DFA9 dfa9 = new DFA9(this);
    protected DFA27 dfa27 = new DFA27(this);
    protected DFA28 dfa28 = new DFA28(this);
    protected DFA36 dfa36 = new DFA36(this);
    protected DFA42 dfa42 = new DFA42(this);
    protected DFA52 dfa52 = new DFA52(this);
    protected DFA57 dfa57 = new DFA57(this);
    protected DFA58 dfa58 = new DFA58(this);
    protected DFA164 dfa164 = new DFA164(this);
    protected DFA167 dfa167 = new DFA167(this);
    protected DFA180 dfa180 = new DFA180(this);
    protected DFA179 dfa179 = new DFA179(this);
    protected DFA181 dfa181 = new DFA181(this);
    protected DFA184 dfa184 = new DFA184(this);
    protected DFA187 dfa187 = new DFA187(this);
    protected DFA190 dfa190 = new DFA190(this);
    protected DFA210 dfa210 = new DFA210(this);
    static final String dfa_1s = "\u0105\uffff";
    static final String dfa_2s = "\1\21\1\7\2\uffff\70\22\2\7\177\22\1\7\107\22";
    static final String dfa_3s = "\1\71\1\143\2\uffff\70\71\1\u0082\1\143\177\71\1\u0082\107\71";
    static final String dfa_4s = "\2\uffff\1\1\1\2\u0101\uffff";
    static final String dfa_5s = "\u0105\uffff}>";
    static final String[] dfa_6s = {
            "\1\1\35\uffff\2\2\7\uffff\2\3",
            "\1\4\1\5\10\uffff\1\63\1\uffff\1\42\2\uffff\1\44\1\43\1\uffff\1\67\1\45\1\uffff\1\47\1\73\1\51\1\54\2\uffff\1\70\3\uffff\1\57\1\60\3\uffff\1\46\1\55\1\56\1\52\1\50\1\61\1\64\1\uffff\1\36\1\65\2\uffff\1\53\1\62\1\66\1\uffff\1\72\1\71\1\34\1\14\1\7\1\15\1\uffff\1\21\1\uffff\1\26\1\uffff\1\31\2\uffff\1\37\1\uffff\1\40\1\uffff\1\41\1\uffff\1\22\1\16\1\27\1\13\1\33\1\uffff\1\17\1\24\1\25\1\35\1\10\1\30\1\uffff\1\12\1\uffff\1\32\1\uffff\1\6\1\11\1\20\1\23",
            "",
            "",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\76\1\77\10\uffff\1\155\1\uffff\1\134\2\uffff\1\136\1\135\1\uffff\1\161\1\137\1\uffff\1\141\1\165\1\143\1\146\2\uffff\1\162\3\uffff\1\151\1\152\3\uffff\1\140\1\147\1\150\1\144\1\142\1\153\1\156\1\uffff\1\130\1\157\2\uffff\1\145\1\154\1\160\1\uffff\1\164\1\163\1\126\1\106\1\101\1\107\1\uffff\1\113\1\uffff\1\120\1\uffff\1\123\2\uffff\1\131\1\uffff\1\132\1\uffff\1\133\1\uffff\1\114\1\110\1\121\1\105\1\125\1\uffff\1\111\1\116\1\117\1\127\1\102\1\122\1\uffff\1\104\1\uffff\1\124\1\uffff\1\100\1\103\1\112\1\115\20\uffff\1\u0083\1\u0084\1\173\1\174\1\175\1\176\1\177\1\u0080\1\u0081\1\u0082\1\166\1\167\1\170\1\171\1\172",
            "\1\u0085\1\u0086\10\uffff\1\u00b4\1\uffff\1\u00a3\2\uffff\1\u00a5\1\u00a4\1\uffff\1\u00b8\1\u00a6\1\uffff\1\u00a8\1\u00bc\1\u00aa\1\u00ad\2\uffff\1\u00b9\3\uffff\1\u00b0\1\u00b1\3\uffff\1\u00a7\1\u00ae\1\u00af\1\u00ab\1\u00a9\1\u00b2\1\u00b5\1\uffff\1\u009f\1\u00b6\2\uffff\1\u00ac\1\u00b3\1\u00b7\1\uffff\1\u00bb\1\u00ba\1\u009d\1\u008d\1\u0088\1\u008e\1\uffff\1\u0092\1\uffff\1\u0097\1\uffff\1\u009a\2\uffff\1\u00a0\1\uffff\1\u00a1\1\uffff\1\u00a2\1\uffff\1\u0093\1\u008f\1\u0098\1\u008c\1\u009c\1\uffff\1\u0090\1\u0095\1\u0096\1\u009e\1\u0089\1\u0099\1\uffff\1\u008b\1\uffff\1\u009b\1\uffff\1\u0087\1\u008a\1\u0091\1\u0094",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\74\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\u00be\1\u00bf\10\uffff\1\u00ed\1\uffff\1\u00dc\2\uffff\1\u00de\1\u00dd\1\uffff\1\u00f1\1\u00df\1\uffff\1\u00e1\1\u00f5\1\u00e3\1\u00e6\2\uffff\1\u00f2\3\uffff\1\u00e9\1\u00ea\3\uffff\1\u00e0\1\u00e7\1\u00e8\1\u00e4\1\u00e2\1\u00eb\1\u00ee\1\uffff\1\u00d8\1\u00ef\2\uffff\1\u00e5\1\u00ec\1\u00f0\1\uffff\1\u00f4\1\u00f3\1\u00d6\1\u00c6\1\u00c1\1\u00c7\1\uffff\1\u00cb\1\uffff\1\u00d0\1\uffff\1\u00d3\2\uffff\1\u00d9\1\uffff\1\u00da\1\uffff\1\u00db\1\uffff\1\u00cc\1\u00c8\1\u00d1\1\u00c5\1\u00d5\1\uffff\1\u00c9\1\u00ce\1\u00cf\1\u00d7\1\u00c2\1\u00d2\1\uffff\1\u00c4\1\uffff\1\u00d4\1\uffff\1\u00c0\1\u00c3\1\u00ca\1\u00cd\20\uffff\1\u0103\1\u0104\1\u00fb\1\u00fc\1\u00fd\1\u00fe\1\u00ff\1\u0100\1\u0101\1\u0102\1\u00f6\1\u00f7\1\u00f8\1\u00f9\1\u00fa",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3",
            "\1\75\21\uffff\1\u00bd\12\uffff\2\2\7\uffff\2\3"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA8 extends DFA {

        public DFA8(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 8;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "560:1: (this_NewStatementCS_0= ruleNewStatementCS | this_SetStatementCS_1= ruleSetStatementCS )";
        }
    }
    static final String dfa_7s = "\u0106\uffff";
    static final String dfa_8s = "\1\21\1\7\3\uffff\70\22\2\7\177\22\1\7\107\22";
    static final String dfa_9s = "\1\56\1\143\3\uffff\70\56\1\u0082\1\143\177\56\1\u0082\107\56";
    static final String dfa_10s = "\2\uffff\1\1\1\2\1\3\u0101\uffff";
    static final String dfa_11s = "\u0106\uffff}>";
    static final String[] dfa_12s = {
            "\1\1\1\uffff\1\2\27\uffff\3\3\1\4",
            "\1\5\1\6\10\uffff\1\64\1\uffff\1\43\2\uffff\1\45\1\44\1\uffff\1\70\1\46\1\uffff\1\50\1\74\1\52\1\55\2\uffff\1\71\3\uffff\1\60\1\61\3\uffff\1\47\1\56\1\57\1\53\1\51\1\62\1\65\1\uffff\1\37\1\66\2\uffff\1\54\1\63\1\67\1\uffff\1\73\1\72\1\35\1\15\1\10\1\16\1\uffff\1\22\1\uffff\1\27\1\uffff\1\32\2\uffff\1\40\1\uffff\1\41\1\uffff\1\42\1\uffff\1\23\1\17\1\30\1\14\1\34\1\uffff\1\20\1\25\1\26\1\36\1\11\1\31\1\uffff\1\13\1\uffff\1\33\1\uffff\1\7\1\12\1\21\1\24",
            "",
            "",
            "",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\77\1\100\10\uffff\1\156\1\uffff\1\135\2\uffff\1\137\1\136\1\uffff\1\162\1\140\1\uffff\1\142\1\166\1\144\1\147\2\uffff\1\163\3\uffff\1\152\1\153\3\uffff\1\141\1\150\1\151\1\145\1\143\1\154\1\157\1\uffff\1\131\1\160\2\uffff\1\146\1\155\1\161\1\uffff\1\165\1\164\1\127\1\107\1\102\1\110\1\uffff\1\114\1\uffff\1\121\1\uffff\1\124\2\uffff\1\132\1\uffff\1\133\1\uffff\1\134\1\uffff\1\115\1\111\1\122\1\106\1\126\1\uffff\1\112\1\117\1\120\1\130\1\103\1\123\1\uffff\1\105\1\uffff\1\125\1\uffff\1\101\1\104\1\113\1\116\20\uffff\1\u0084\1\u0085\1\174\1\175\1\176\1\177\1\u0080\1\u0081\1\u0082\1\u0083\1\167\1\170\1\171\1\172\1\173",
            "\1\u0086\1\u0087\10\uffff\1\u00b5\1\uffff\1\u00a4\2\uffff\1\u00a6\1\u00a5\1\uffff\1\u00b9\1\u00a7\1\uffff\1\u00a9\1\u00bd\1\u00ab\1\u00ae\2\uffff\1\u00ba\3\uffff\1\u00b1\1\u00b2\3\uffff\1\u00a8\1\u00af\1\u00b0\1\u00ac\1\u00aa\1\u00b3\1\u00b6\1\uffff\1\u00a0\1\u00b7\2\uffff\1\u00ad\1\u00b4\1\u00b8\1\uffff\1\u00bc\1\u00bb\1\u009e\1\u008e\1\u0089\1\u008f\1\uffff\1\u0093\1\uffff\1\u0098\1\uffff\1\u009b\2\uffff\1\u00a1\1\uffff\1\u00a2\1\uffff\1\u00a3\1\uffff\1\u0094\1\u0090\1\u0099\1\u008d\1\u009d\1\uffff\1\u0091\1\u0096\1\u0097\1\u009f\1\u008a\1\u009a\1\uffff\1\u008c\1\uffff\1\u009c\1\uffff\1\u0088\1\u008b\1\u0092\1\u0095",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\75\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\u00bf\1\u00c0\10\uffff\1\u00ee\1\uffff\1\u00dd\2\uffff\1\u00df\1\u00de\1\uffff\1\u00f2\1\u00e0\1\uffff\1\u00e2\1\u00f6\1\u00e4\1\u00e7\2\uffff\1\u00f3\3\uffff\1\u00ea\1\u00eb\3\uffff\1\u00e1\1\u00e8\1\u00e9\1\u00e5\1\u00e3\1\u00ec\1\u00ef\1\uffff\1\u00d9\1\u00f0\2\uffff\1\u00e6\1\u00ed\1\u00f1\1\uffff\1\u00f5\1\u00f4\1\u00d7\1\u00c7\1\u00c2\1\u00c8\1\uffff\1\u00cc\1\uffff\1\u00d1\1\uffff\1\u00d4\2\uffff\1\u00da\1\uffff\1\u00db\1\uffff\1\u00dc\1\uffff\1\u00cd\1\u00c9\1\u00d2\1\u00c6\1\u00d6\1\uffff\1\u00ca\1\u00cf\1\u00d0\1\u00d8\1\u00c3\1\u00d3\1\uffff\1\u00c5\1\uffff\1\u00d5\1\uffff\1\u00c1\1\u00c4\1\u00cb\1\u00ce\20\uffff\1\u0104\1\u0105\1\u00fc\1\u00fd\1\u00fe\1\u00ff\1\u0100\1\u0101\1\u0102\1\u0103\1\u00f7\1\u00f8\1\u00f9\1\u00fa\1\u00fb",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4",
            "\1\76\1\2\20\uffff\1\u00be\11\uffff\1\4"
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA9 extends DFA {

        public DFA9(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 9;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "653:1: (this_AddStatementCS_0= ruleAddStatementCS | this_MappingCallCS_1= ruleMappingCallCS | this_MappingLoopCS_2= ruleMappingLoopCS )";
        }
    }
    static final String dfa_13s = "\2\uffff\1\2\1\1\u0101\uffff";
    static final String[] dfa_14s = {
            "\1\1\1\uffff\1\2\5\uffff\2\3\1\uffff\2\3\14\uffff\7\2\7\uffff\2\2",
            "\1\4\1\5\10\uffff\1\63\1\uffff\1\42\2\uffff\1\44\1\43\1\uffff\1\67\1\45\1\uffff\1\47\1\73\1\51\1\54\2\uffff\1\70\3\uffff\1\57\1\60\3\uffff\1\46\1\55\1\56\1\52\1\50\1\61\1\64\1\uffff\1\36\1\65\2\uffff\1\53\1\62\1\66\1\uffff\1\72\1\71\1\34\1\14\1\7\1\15\1\uffff\1\21\1\uffff\1\26\1\uffff\1\31\2\uffff\1\37\1\uffff\1\40\1\uffff\1\41\1\uffff\1\22\1\16\1\27\1\13\1\33\1\uffff\1\17\1\24\1\25\1\35\1\10\1\30\1\uffff\1\12\1\uffff\1\32\1\uffff\1\6\1\11\1\20\1\23",
            "",
            "",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\76\1\77\10\uffff\1\155\1\uffff\1\134\2\uffff\1\136\1\135\1\uffff\1\161\1\137\1\uffff\1\141\1\165\1\143\1\146\2\uffff\1\162\3\uffff\1\151\1\152\3\uffff\1\140\1\147\1\150\1\144\1\142\1\153\1\156\1\uffff\1\130\1\157\2\uffff\1\145\1\154\1\160\1\uffff\1\164\1\163\1\126\1\106\1\101\1\107\1\uffff\1\113\1\uffff\1\120\1\uffff\1\123\2\uffff\1\131\1\uffff\1\132\1\uffff\1\133\1\uffff\1\114\1\110\1\121\1\105\1\125\1\uffff\1\111\1\116\1\117\1\127\1\102\1\122\1\uffff\1\104\1\uffff\1\124\1\uffff\1\100\1\103\1\112\1\115\20\uffff\1\u0083\1\u0084\1\173\1\174\1\175\1\176\1\177\1\u0080\1\u0081\1\u0082\1\166\1\167\1\170\1\171\1\172",
            "\1\u0085\1\u0086\10\uffff\1\u00b4\1\uffff\1\u00a3\2\uffff\1\u00a5\1\u00a4\1\uffff\1\u00b8\1\u00a6\1\uffff\1\u00a8\1\u00bc\1\u00aa\1\u00ad\2\uffff\1\u00b9\3\uffff\1\u00b0\1\u00b1\3\uffff\1\u00a7\1\u00ae\1\u00af\1\u00ab\1\u00a9\1\u00b2\1\u00b5\1\uffff\1\u009f\1\u00b6\2\uffff\1\u00ac\1\u00b3\1\u00b7\1\uffff\1\u00bb\1\u00ba\1\u009d\1\u008d\1\u0088\1\u008e\1\uffff\1\u0092\1\uffff\1\u0097\1\uffff\1\u009a\2\uffff\1\u00a0\1\uffff\1\u00a1\1\uffff\1\u00a2\1\uffff\1\u0093\1\u008f\1\u0098\1\u008c\1\u009c\1\uffff\1\u0090\1\u0095\1\u0096\1\u009e\1\u0089\1\u0099\1\uffff\1\u008b\1\uffff\1\u009b\1\uffff\1\u0087\1\u008a\1\u0091\1\u0094",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\74\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\u00be\1\u00bf\10\uffff\1\u00ed\1\uffff\1\u00dc\2\uffff\1\u00de\1\u00dd\1\uffff\1\u00f1\1\u00df\1\uffff\1\u00e1\1\u00f5\1\u00e3\1\u00e6\2\uffff\1\u00f2\3\uffff\1\u00e9\1\u00ea\3\uffff\1\u00e0\1\u00e7\1\u00e8\1\u00e4\1\u00e2\1\u00eb\1\u00ee\1\uffff\1\u00d8\1\u00ef\2\uffff\1\u00e5\1\u00ec\1\u00f0\1\uffff\1\u00f4\1\u00f3\1\u00d6\1\u00c6\1\u00c1\1\u00c7\1\uffff\1\u00cb\1\uffff\1\u00d0\1\uffff\1\u00d3\2\uffff\1\u00d9\1\uffff\1\u00da\1\uffff\1\u00db\1\uffff\1\u00cc\1\u00c8\1\u00d1\1\u00c5\1\u00d5\1\uffff\1\u00c9\1\u00ce\1\u00cf\1\u00d7\1\u00c2\1\u00d2\1\uffff\1\u00c4\1\uffff\1\u00d4\1\uffff\1\u00c0\1\u00c3\1\u00ca\1\u00cd\20\uffff\1\u0103\1\u0104\1\u00fb\1\u00fc\1\u00fd\1\u00fe\1\u00ff\1\u0100\1\u0101\1\u0102\1\u00f6\1\u00f7\1\u00f8\1\u00f9\1\u00fa",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2",
            "\1\75\1\2\10\uffff\2\3\6\uffff\1\u00bd\11\uffff\3\2\7\uffff\2\2"
    };
    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[][] dfa_14 = unpackEncodedStringArray(dfa_14s);

    class DFA27 extends DFA {

        public DFA27(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 27;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_13;
            this.special = dfa_5;
            this.transition = dfa_14;
        }
        public String getDescription() {
            return "()* loopback of 1508:3: ( (lv_ownedStatements_8_0= ruleGuardStatementCS ) )*";
        }
    }
    static final String[] dfa_15s = {
            "\1\1\1\uffff\1\2\26\uffff\5\2\2\3\7\uffff\2\3",
            "\1\4\1\5\10\uffff\1\63\1\uffff\1\42\2\uffff\1\44\1\43\1\uffff\1\67\1\45\1\uffff\1\47\1\73\1\51\1\54\2\uffff\1\70\3\uffff\1\57\1\60\3\uffff\1\46\1\55\1\56\1\52\1\50\1\61\1\64\1\uffff\1\36\1\65\2\uffff\1\53\1\62\1\66\1\uffff\1\72\1\71\1\34\1\14\1\7\1\15\1\uffff\1\21\1\uffff\1\26\1\uffff\1\31\2\uffff\1\37\1\uffff\1\40\1\uffff\1\41\1\uffff\1\22\1\16\1\27\1\13\1\33\1\uffff\1\17\1\24\1\25\1\35\1\10\1\30\1\uffff\1\12\1\uffff\1\32\1\uffff\1\6\1\11\1\20\1\23",
            "",
            "",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\76\1\77\10\uffff\1\155\1\uffff\1\134\2\uffff\1\136\1\135\1\uffff\1\161\1\137\1\uffff\1\141\1\165\1\143\1\146\2\uffff\1\162\3\uffff\1\151\1\152\3\uffff\1\140\1\147\1\150\1\144\1\142\1\153\1\156\1\uffff\1\130\1\157\2\uffff\1\145\1\154\1\160\1\uffff\1\164\1\163\1\126\1\106\1\101\1\107\1\uffff\1\113\1\uffff\1\120\1\uffff\1\123\2\uffff\1\131\1\uffff\1\132\1\uffff\1\133\1\uffff\1\114\1\110\1\121\1\105\1\125\1\uffff\1\111\1\116\1\117\1\127\1\102\1\122\1\uffff\1\104\1\uffff\1\124\1\uffff\1\100\1\103\1\112\1\115\20\uffff\1\u0083\1\u0084\1\173\1\174\1\175\1\176\1\177\1\u0080\1\u0081\1\u0082\1\166\1\167\1\170\1\171\1\172",
            "\1\u0085\1\u0086\10\uffff\1\u00b4\1\uffff\1\u00a3\2\uffff\1\u00a5\1\u00a4\1\uffff\1\u00b8\1\u00a6\1\uffff\1\u00a8\1\u00bc\1\u00aa\1\u00ad\2\uffff\1\u00b9\3\uffff\1\u00b0\1\u00b1\3\uffff\1\u00a7\1\u00ae\1\u00af\1\u00ab\1\u00a9\1\u00b2\1\u00b5\1\uffff\1\u009f\1\u00b6\2\uffff\1\u00ac\1\u00b3\1\u00b7\1\uffff\1\u00bb\1\u00ba\1\u009d\1\u008d\1\u0088\1\u008e\1\uffff\1\u0092\1\uffff\1\u0097\1\uffff\1\u009a\2\uffff\1\u00a0\1\uffff\1\u00a1\1\uffff\1\u00a2\1\uffff\1\u0093\1\u008f\1\u0098\1\u008c\1\u009c\1\uffff\1\u0090\1\u0095\1\u0096\1\u009e\1\u0089\1\u0099\1\uffff\1\u008b\1\uffff\1\u009b\1\uffff\1\u0087\1\u008a\1\u0091\1\u0094",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\74\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\u00be\1\u00bf\10\uffff\1\u00ed\1\uffff\1\u00dc\2\uffff\1\u00de\1\u00dd\1\uffff\1\u00f1\1\u00df\1\uffff\1\u00e1\1\u00f5\1\u00e3\1\u00e6\2\uffff\1\u00f2\3\uffff\1\u00e9\1\u00ea\3\uffff\1\u00e0\1\u00e7\1\u00e8\1\u00e4\1\u00e2\1\u00eb\1\u00ee\1\uffff\1\u00d8\1\u00ef\2\uffff\1\u00e5\1\u00ec\1\u00f0\1\uffff\1\u00f4\1\u00f3\1\u00d6\1\u00c6\1\u00c1\1\u00c7\1\uffff\1\u00cb\1\uffff\1\u00d0\1\uffff\1\u00d3\2\uffff\1\u00d9\1\uffff\1\u00da\1\uffff\1\u00db\1\uffff\1\u00cc\1\u00c8\1\u00d1\1\u00c5\1\u00d5\1\uffff\1\u00c9\1\u00ce\1\u00cf\1\u00d7\1\u00c2\1\u00d2\1\uffff\1\u00c4\1\uffff\1\u00d4\1\uffff\1\u00c0\1\u00c3\1\u00ca\1\u00cd\20\uffff\1\u0103\1\u0104\1\u00fb\1\u00fc\1\u00fd\1\u00fe\1\u00ff\1\u0100\1\u0101\1\u0102\1\u00f6\1\u00f7\1\u00f8\1\u00f9\1\u00fa",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3",
            "\1\75\1\2\20\uffff\1\u00bd\11\uffff\1\2\2\3\7\uffff\2\3"
    };
    static final short[][] dfa_15 = unpackEncodedStringArray(dfa_15s);

    class DFA28 extends DFA {

        public DFA28(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 28;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_13;
            this.special = dfa_5;
            this.transition = dfa_15;
        }
        public String getDescription() {
            return "()* loopback of 1526:3: ( (lv_ownedStatements_9_0= ruleCommitStatementCS ) )*";
        }
    }
    static final String dfa_16s = "\171\uffff";
    static final String dfa_17s = "\1\7\43\26\1\7\24\26\4\uffff\1\7\1\4\40\40\1\7\25\40\1\4\2\7\1\4";
    static final String dfa_18s = "\1\143\43\73\1\143\24\73\4\uffff\1\143\1\u0096\40\73\1\143\25\73\1\u0096\1\u008d\1\143\1\u0096";
    static final String dfa_19s = "\71\uffff\1\3\1\4\1\2\1\1\74\uffff";
    static final String dfa_20s = "\171\uffff}>";
    static final String[] dfa_21s = {
            "\1\1\1\2\10\uffff\1\60\1\uffff\1\37\2\uffff\1\41\1\40\1\uffff\1\64\1\42\1\uffff\1\44\1\70\1\46\1\51\2\uffff\1\65\3\uffff\1\54\1\55\3\uffff\1\43\1\52\1\53\1\47\1\45\1\56\1\61\1\uffff\1\33\1\62\2\uffff\1\50\1\57\1\63\1\uffff\1\67\1\66\1\31\1\11\1\4\1\12\1\uffff\1\16\1\uffff\1\23\1\uffff\1\26\2\uffff\1\34\1\uffff\1\35\1\uffff\1\36\1\uffff\1\17\1\13\1\24\1\10\1\30\1\uffff\1\14\1\21\1\22\1\32\1\5\1\25\1\uffff\1\7\1\uffff\1\27\1\uffff\1\3\1\6\1\15\1\20",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\77\1\100\10\uffff\1\155\1\uffff\1\135\2\uffff\1\137\1\136\1\uffff\1\161\1\140\1\uffff\1\142\1\164\1\144\1\147\1\73\1\uffff\1\162\3\uffff\1\75\1\152\3\uffff\1\141\1\150\1\151\1\145\1\143\1\153\1\156\1\uffff\1\131\1\157\2\uffff\1\146\1\154\1\160\1\uffff\1\76\1\163\1\127\1\107\1\102\1\110\1\uffff\1\114\1\uffff\1\121\1\uffff\1\124\2\uffff\1\132\1\uffff\1\133\1\uffff\1\134\1\uffff\1\115\1\111\1\122\1\106\1\126\1\uffff\1\112\1\117\1\120\1\130\1\103\1\123\1\uffff\1\105\1\uffff\1\125\1\uffff\1\101\1\104\1\113\1\116",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\74\11\uffff\1\73\5\uffff\1\71\24\uffff\1\72",
            "",
            "",
            "",
            "",
            "\2\71\10\uffff\1\71\1\uffff\1\71\2\uffff\2\71\1\uffff\2\71\1\uffff\4\71\1\73\1\uffff\1\71\3\uffff\2\71\3\uffff\7\71\1\uffff\2\71\2\uffff\3\71\1\uffff\1\165\5\71\1\uffff\1\71\1\uffff\1\71\1\uffff\1\71\2\uffff\1\71\1\uffff\1\71\1\uffff\1\71\1\uffff\5\71\1\uffff\6\71\1\uffff\1\71\1\uffff\1\71\1\uffff\4\71",
            "\1\72\1\uffff\3\72\10\uffff\1\72\1\uffff\1\72\2\uffff\2\72\1\uffff\2\72\1\uffff\4\72\1\73\1\uffff\1\72\2\uffff\1\72\1\166\1\72\3\uffff\7\72\1\uffff\3\72\1\uffff\3\72\1\uffff\6\72\1\uffff\1\72\1\uffff\1\72\1\uffff\1\72\2\uffff\1\72\1\uffff\1\72\1\uffff\1\72\1\uffff\5\72\1\uffff\6\72\1\uffff\1\72\1\uffff\1\72\1\uffff\6\72\16\uffff\17\72\2\uffff\1\72\1\uffff\4\72\5\uffff\1\72\4\uffff\2\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\2\74\10\uffff\1\74\1\uffff\1\74\2\uffff\2\74\1\uffff\2\74\1\uffff\4\74\1\73\1\uffff\1\74\3\uffff\1\167\1\74\3\uffff\7\74\1\uffff\2\74\2\uffff\3\74\1\uffff\1\170\5\74\1\uffff\1\74\1\uffff\1\74\1\uffff\1\74\2\uffff\1\74\1\uffff\1\74\1\uffff\1\74\1\uffff\5\74\1\uffff\6\74\1\uffff\1\74\1\uffff\1\74\1\uffff\4\74",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\73\5\uffff\1\71\24\uffff\1\72",
            "\1\72\1\uffff\3\72\10\uffff\1\72\1\uffff\1\72\1\uffff\1\71\2\72\1\uffff\2\72\1\uffff\4\72\2\uffff\1\72\2\uffff\3\72\3\uffff\7\72\1\uffff\3\72\1\uffff\3\72\1\uffff\6\72\1\uffff\1\72\1\uffff\1\72\1\uffff\1\72\2\uffff\1\72\1\uffff\1\72\1\uffff\1\72\1\uffff\5\72\1\uffff\6\72\1\uffff\1\72\1\uffff\1\72\1\uffff\6\72\16\uffff\17\72\2\uffff\1\72\1\uffff\4\72\5\uffff\1\72\4\uffff\2\72",
            "\2\71\10\uffff\1\71\1\uffff\1\71\1\uffff\1\72\2\71\1\uffff\2\71\1\uffff\4\71\2\uffff\1\71\1\uffff\2\72\2\71\1\uffff\1\72\1\uffff\7\71\1\72\2\71\1\72\1\uffff\3\71\1\72\6\71\1\uffff\1\71\1\uffff\1\71\1\uffff\1\71\2\uffff\1\71\1\uffff\1\71\1\uffff\1\71\1\uffff\5\71\1\uffff\6\71\1\uffff\1\71\1\uffff\1\71\1\uffff\4\71\1\72\1\uffff\16\72\27\uffff\1\72\1\uffff\1\72",
            "\2\71\10\uffff\1\71\1\uffff\1\71\1\uffff\1\74\2\71\1\uffff\2\71\1\uffff\4\71\2\uffff\1\71\3\uffff\2\71\3\uffff\7\71\1\uffff\2\71\2\uffff\3\71\1\uffff\6\71\1\uffff\1\71\1\uffff\1\71\1\uffff\1\71\2\uffff\1\71\1\uffff\1\71\1\uffff\1\71\1\uffff\5\71\1\uffff\6\71\1\uffff\1\71\1\uffff\1\71\1\uffff\4\71",
            "\1\72\1\uffff\3\72\10\uffff\1\72\1\uffff\1\72\1\uffff\1\74\2\72\1\uffff\2\72\1\uffff\4\72\2\uffff\1\72\2\uffff\3\72\3\uffff\7\72\1\uffff\3\72\1\uffff\3\72\1\uffff\6\72\1\uffff\1\72\1\uffff\1\72\1\uffff\1\72\2\uffff\1\72\1\uffff\1\72\1\uffff\1\72\1\uffff\5\72\1\uffff\6\72\1\uffff\1\72\1\uffff\1\72\1\uffff\6\72\16\uffff\17\72\2\uffff\1\72\1\uffff\4\72\5\uffff\1\72\4\uffff\2\72"
    };

    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final char[] dfa_18 = DFA.unpackEncodedStringToUnsignedChars(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final short[][] dfa_21 = unpackEncodedStringArray(dfa_21s);

    class DFA36 extends DFA {

        public DFA36(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 36;
            this.eot = dfa_16;
            this.eof = dfa_16;
            this.min = dfa_17;
            this.max = dfa_18;
            this.accept = dfa_19;
            this.special = dfa_20;
            this.transition = dfa_21;
        }
        public String getDescription() {
            return "1893:1: (this_AppendParameterBindingCS_0= ruleAppendParameterBindingCS | this_GuardParameterBindingCS_1= ruleGuardParameterBindingCS | this_LoopParameterBindingCS_2= ruleLoopParameterBindingCS | this_SimpleParameterBindingCS_3= ruleSimpleParameterBindingCS )";
        }
    }
    static final String dfa_22s = "\73\uffff";
    static final String dfa_23s = "\1\7\70\25\2\uffff";
    static final String dfa_24s = "\1\143\70\62\2\uffff";
    static final String dfa_25s = "\71\uffff\1\1\1\2";
    static final String dfa_26s = "\73\uffff}>";
    static final String[] dfa_27s = {
            "\1\1\1\2\10\uffff\1\60\1\uffff\1\37\2\uffff\1\41\1\40\1\uffff\1\64\1\42\1\uffff\1\44\1\70\1\46\1\51\2\uffff\1\65\3\uffff\1\54\1\55\3\uffff\1\43\1\52\1\53\1\47\1\45\1\56\1\61\1\uffff\1\33\1\62\2\uffff\1\50\1\57\1\63\1\uffff\1\67\1\66\1\31\1\11\1\4\1\12\1\uffff\1\16\1\uffff\1\23\1\uffff\1\26\2\uffff\1\34\1\uffff\1\35\1\uffff\1\36\1\uffff\1\17\1\13\1\24\1\10\1\30\1\uffff\1\14\1\21\1\22\1\32\1\5\1\25\1\uffff\1\7\1\uffff\1\27\1\uffff\1\3\1\6\1\15\1\20",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "\1\72\2\uffff\1\72\13\uffff\1\71\4\uffff\1\72\10\uffff\1\72",
            "",
            ""
    };

    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final char[] dfa_24 = DFA.unpackEncodedStringToUnsignedChars(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final short[][] dfa_27 = unpackEncodedStringArray(dfa_27s);

    class DFA42 extends DFA {

        public DFA42(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 42;
            this.eot = dfa_22;
            this.eof = dfa_22;
            this.min = dfa_23;
            this.max = dfa_24;
            this.accept = dfa_25;
            this.special = dfa_26;
            this.transition = dfa_27;
        }
        public String getDescription() {
            return "2261:1: ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )?";
        }
    }
    static final String dfa_28s = "\112\uffff";
    static final String dfa_29s = "\1\71\111\uffff";
    static final String dfa_30s = "\1\7\70\25\1\uffff\17\44\1\uffff";
    static final String dfa_31s = "\1\u0082\70\65\1\uffff\17\51\1\uffff";
    static final String dfa_32s = "\71\uffff\1\2\17\uffff\1\1";
    static final String dfa_33s = "\112\uffff}>";
    static final String[] dfa_34s = {
            "\1\1\1\2\10\uffff\1\60\1\uffff\1\37\2\uffff\1\41\1\40\1\uffff\1\64\1\42\1\uffff\1\44\1\70\1\46\1\51\2\uffff\1\65\3\uffff\1\54\1\55\3\uffff\1\43\1\52\1\53\1\47\1\45\1\56\1\61\1\uffff\1\33\1\62\2\uffff\1\50\1\57\1\63\1\uffff\1\67\1\66\1\31\1\11\1\4\1\12\1\uffff\1\16\1\uffff\1\23\1\uffff\1\26\2\uffff\1\34\1\uffff\1\35\1\uffff\1\36\1\uffff\1\17\1\13\1\24\1\10\1\30\1\uffff\1\14\1\21\1\22\1\32\1\5\1\25\1\uffff\1\7\1\uffff\1\27\1\uffff\1\3\1\6\1\15\1\20\20\uffff\1\107\1\110\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\72\1\73\1\74\1\75\1\76",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "\1\71\2\uffff\1\71\13\uffff\1\111\4\uffff\1\71\10\uffff\1\71\2\uffff\1\71",
            "",
            "\1\111\4\uffff\1\71",
            "\1\111\4\uffff\1\71",
            "\1\111\4\uffff\1\71",
            "\1\111\4\uffff\1\71",
            "\1\111\4\uffff\1\71",
            "\1\111\4\uffff\1\71",
            "\1\111\4\uffff\1\71",
            "\1\111\4\uffff\1\71",
            "\1\111\4\uffff\1\71",
            "\1\111\4\uffff\1\71",
            "\1\111\4\uffff\1\71",
            "\1\111\4\uffff\1\71",
            "\1\111\4\uffff\1\71",
            "\1\111\4\uffff\1\71",
            "\1\111\4\uffff\1\71",
            ""
    };

    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final char[] dfa_30 = DFA.unpackEncodedStringToUnsignedChars(dfa_30s);
    static final char[] dfa_31 = DFA.unpackEncodedStringToUnsignedChars(dfa_31s);
    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final short[][] dfa_34 = unpackEncodedStringArray(dfa_34s);

    class DFA52 extends DFA {

        public DFA52(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 52;
            this.eot = dfa_28;
            this.eof = dfa_29;
            this.min = dfa_30;
            this.max = dfa_31;
            this.accept = dfa_32;
            this.special = dfa_33;
            this.transition = dfa_34;
        }
        public String getDescription() {
            return "()* loopback of 2654:1: ( ( (lv_ownedPathElements_2_0= ruleNextPathElementCS ) ) otherlv_3= '::' )*";
        }
    }
    static final String dfa_35s = "\72\uffff";
    static final String dfa_36s = "\1\7\1\0\70\uffff";
    static final String dfa_37s = "\1\143\1\0\70\uffff";
    static final String dfa_38s = "\2\uffff\1\2\66\uffff\1\1";
    static final String dfa_39s = "\1\uffff\1\0\70\uffff}>";
    static final String[] dfa_40s = {
            "\2\2\10\uffff\1\2\1\uffff\1\2\2\uffff\2\2\1\uffff\2\2\1\uffff\1\1\3\2\2\uffff\1\2\3\uffff\2\2\3\uffff\7\2\1\uffff\2\2\2\uffff\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\4\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final char[] dfa_37 = DFA.unpackEncodedStringToUnsignedChars(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[][] dfa_40 = unpackEncodedStringArray(dfa_40s);

    class DFA57 extends DFA {

        public DFA57(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 57;
            this.eot = dfa_35;
            this.eof = dfa_35;
            this.min = dfa_36;
            this.max = dfa_37;
            this.accept = dfa_38;
            this.special = dfa_39;
            this.transition = dfa_40;
        }
        public String getDescription() {
            return "2863:2: ( (lv_isCheck_0_0= 'check' ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA57_1 = input.LA(1);


                        int index57_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalQVTimperative()) ) {s = 57;}

                        else if ( (true) ) {s = 2;}


                        input.seek(index57_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 57, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_41s = "\1\7\70\44\2\uffff";
    static final String dfa_42s = "\1\u0082\70\51\2\uffff";
    static final String dfa_43s = "\71\uffff\1\2\1\1";
    static final String[] dfa_44s = {
            "\1\1\1\2\10\uffff\1\60\1\uffff\1\37\2\uffff\1\41\1\40\1\uffff\1\64\1\42\1\uffff\1\44\1\70\1\46\1\51\2\uffff\1\65\3\uffff\1\54\1\55\3\uffff\1\43\1\52\1\53\1\47\1\45\1\56\1\61\1\uffff\1\33\1\62\2\uffff\1\50\1\57\1\63\1\uffff\1\67\1\66\1\31\1\11\1\4\1\12\1\uffff\1\16\1\uffff\1\23\1\uffff\1\26\2\uffff\1\34\1\uffff\1\35\1\uffff\1\36\1\uffff\1\17\1\13\1\24\1\10\1\30\1\uffff\1\14\1\21\1\22\1\32\1\5\1\25\1\uffff\1\7\1\uffff\1\27\1\uffff\1\3\1\6\1\15\1\20\20\uffff\17\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "\1\72\4\uffff\1\71",
            "",
            ""
    };
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[][] dfa_44 = unpackEncodedStringArray(dfa_44s);

    class DFA58 extends DFA {

        public DFA58(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 58;
            this.eot = dfa_22;
            this.eof = dfa_22;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_26;
            this.transition = dfa_44;
        }
        public String getDescription() {
            return "3038:1: ( (lv_ownedPathName_1_0= ruleScopeNameCS ) )?";
        }
    }
    static final String dfa_45s = "\2\uffff\70\1\1\uffff";
    static final String dfa_46s = "\1\4\1\uffff\70\22\1\uffff";
    static final String dfa_47s = "\1\u0096\1\uffff\70\u008d\1\uffff";
    static final String dfa_48s = "\1\uffff\1\1\70\uffff\1\2";
    static final String[] dfa_49s = {
            "\1\1\1\uffff\1\1\1\2\1\3\10\uffff\1\61\1\uffff\1\40\2\uffff\1\42\1\41\1\72\1\65\1\43\1\uffff\1\45\1\71\1\47\1\52\2\uffff\1\66\2\uffff\1\1\1\55\1\56\3\uffff\1\44\1\53\1\54\1\50\1\46\1\57\1\62\1\uffff\1\34\1\63\1\1\1\uffff\1\51\1\60\1\64\1\uffff\1\70\1\67\1\32\1\12\1\5\1\13\1\uffff\1\17\1\uffff\1\24\1\uffff\1\27\2\uffff\1\35\1\uffff\1\36\1\uffff\1\37\1\uffff\1\20\1\14\1\25\1\11\1\31\1\uffff\1\15\1\22\1\23\1\33\1\6\1\26\1\uffff\1\10\1\uffff\1\30\1\uffff\1\4\1\7\1\16\1\21\2\1\16\uffff\17\1\2\uffff\1\1\1\uffff\4\1\5\uffff\1\1\4\uffff\2\1",
            "",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\17\uffff\1\1\7\uffff\1\1\1\uffff\1\1",
            ""
    };
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final char[] dfa_46 = DFA.unpackEncodedStringToUnsignedChars(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final short[][] dfa_49 = unpackEncodedStringArray(dfa_49s);

    class DFA164 extends DFA {

        public DFA164(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 164;
            this.eot = dfa_22;
            this.eof = dfa_45;
            this.min = dfa_46;
            this.max = dfa_47;
            this.accept = dfa_48;
            this.special = dfa_26;
            this.transition = dfa_49;
        }
        public String getDescription() {
            return "7271:1: ( ( ( (lv_ownedExpression_0_0= ruleExpCS ) ) (otherlv_1= '..' ( (lv_ownedLastExpression_2_0= ruleExpCS ) ) )? ) | ( (lv_ownedExpression_3_0= rulePatternExpCS ) ) )";
        }
    }
    static final String[] dfa_50s = {
            "\1\1\1\uffff\1\1\1\2\1\3\10\uffff\1\61\1\uffff\1\40\2\uffff\1\42\1\41\1\72\1\65\1\43\1\uffff\1\45\1\71\1\47\1\52\2\uffff\1\66\2\uffff\1\1\1\55\1\56\3\uffff\1\44\1\53\1\54\1\50\1\46\1\57\1\62\1\uffff\1\34\1\63\1\1\1\uffff\1\51\1\60\1\64\1\uffff\1\70\1\67\1\32\1\12\1\5\1\13\1\uffff\1\17\1\uffff\1\24\1\uffff\1\27\2\uffff\1\35\1\uffff\1\36\1\uffff\1\37\1\uffff\1\20\1\14\1\25\1\11\1\31\1\uffff\1\15\1\22\1\23\1\33\1\6\1\26\1\uffff\1\10\1\uffff\1\30\1\uffff\1\4\1\7\1\16\1\21\2\1\16\uffff\17\1\2\uffff\1\1\1\uffff\4\1\5\uffff\1\1\4\uffff\2\1",
            "",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            "\1\1\5\uffff\1\72\13\uffff\2\1\3\uffff\2\1\7\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1",
            ""
    };
    static final short[][] dfa_50 = unpackEncodedStringArray(dfa_50s);

    class DFA167 extends DFA {

        public DFA167(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 167;
            this.eot = dfa_22;
            this.eof = dfa_45;
            this.min = dfa_46;
            this.max = dfa_47;
            this.accept = dfa_48;
            this.special = dfa_26;
            this.transition = dfa_50;
        }
        public String getDescription() {
            return "7484:1: (lv_ownedInitExpression_2_1= ruleExpCS | lv_ownedInitExpression_2_2= rulePatternExpCS )";
        }
    }
    static final String dfa_51s = "\21\uffff";
    static final String dfa_52s = "\1\2\20\uffff";
    static final String dfa_53s = "\1\22\1\0\17\uffff";
    static final String dfa_54s = "\1\u0091\1\0\17\uffff";
    static final String dfa_55s = "\2\uffff\1\2\15\uffff\1\1";
    static final String dfa_56s = "\1\uffff\1\0\17\uffff}>";
    static final String[] dfa_57s = {
            "\1\2\2\uffff\1\2\5\uffff\1\2\6\uffff\1\2\5\uffff\1\2\1\1\1\2\7\uffff\1\2\3\uffff\2\2\114\uffff\1\2\10\uffff\1\2\1\uffff\1\2\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[][] dfa_57 = unpackEncodedStringArray(dfa_57s);

    class DFA180 extends DFA {

        public DFA180(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 180;
            this.eot = dfa_51;
            this.eof = dfa_52;
            this.min = dfa_53;
            this.max = dfa_54;
            this.accept = dfa_55;
            this.special = dfa_56;
            this.transition = dfa_57;
        }
        public String getDescription() {
            return "8484:2: ( ( (lv_ownedCurlyBracketedClause_1_0= ruleCurlyBracketedClauseCS ) ) (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )? )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA180_1 = input.LA(1);


                        int index180_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred322_InternalQVTimperative()) ) {s = 16;}

                        else if ( (true) ) {s = 2;}


                        input.seek(index180_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 180, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA179 extends DFA {

        public DFA179(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 179;
            this.eot = dfa_51;
            this.eof = dfa_52;
            this.min = dfa_53;
            this.max = dfa_54;
            this.accept = dfa_55;
            this.special = dfa_56;
            this.transition = dfa_57;
        }
        public String getDescription() {
            return "8502:2: (otherlv_2= '{' ( (lv_ownedPatternGuard_3_0= ruleExpCS ) ) otherlv_4= '}' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA179_1 = input.LA(1);


                        int index179_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred321_InternalQVTimperative()) ) {s = 16;}

                        else if ( (true) ) {s = 2;}


                        input.seek(index179_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 179, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_58s = "\111\uffff";
    static final String dfa_59s = "\1\7\100\uffff\5\0\3\uffff";
    static final String dfa_60s = "\1\u0082\100\uffff\5\0\3\uffff";
    static final String dfa_61s = "\1\uffff\1\1\67\uffff\1\2\16\uffff\1\3";
    static final String dfa_62s = "\101\uffff\1\0\1\1\1\2\1\3\1\4\3\uffff}>";
    static final String[] dfa_63s = {
            "\2\1\10\uffff\1\1\1\uffff\1\1\2\uffff\2\1\1\uffff\2\1\1\uffff\4\1\2\uffff\1\1\3\uffff\2\1\3\uffff\7\1\1\uffff\2\1\2\uffff\3\1\1\uffff\6\1\1\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\5\1\1\uffff\6\1\1\uffff\1\1\1\uffff\1\1\1\uffff\4\1\20\uffff\12\71\1\101\1\102\1\103\1\104\1\105",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final char[] dfa_59 = DFA.unpackEncodedStringToUnsignedChars(dfa_59s);
    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);
    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final short[][] dfa_63 = unpackEncodedStringArray(dfa_63s);

    class DFA181 extends DFA {

        public DFA181(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 181;
            this.eot = dfa_58;
            this.eof = dfa_58;
            this.min = dfa_59;
            this.max = dfa_60;
            this.accept = dfa_61;
            this.special = dfa_62;
            this.transition = dfa_63;
        }
        public String getDescription() {
            return "8549:1: (this_TypeNameExpCS_0= ruleTypeNameExpCS | this_TypeLiteralCS_1= ruleTypeLiteralCS | this_CollectionPatternCS_2= ruleCollectionPatternCS )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA181_65 = input.LA(1);


                        int index181_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred324_InternalQVTimperative()) ) {s = 57;}

                        else if ( (true) ) {s = 72;}


                        input.seek(index181_65);
                        if ( s>=0 ) return s;
                        break;
                    case 1 :
                        int LA181_66 = input.LA(1);


                        int index181_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred324_InternalQVTimperative()) ) {s = 57;}

                        else if ( (true) ) {s = 72;}


                        input.seek(index181_66);
                        if ( s>=0 ) return s;
                        break;
                    case 2 :
                        int LA181_67 = input.LA(1);


                        int index181_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred324_InternalQVTimperative()) ) {s = 57;}

                        else if ( (true) ) {s = 72;}


                        input.seek(index181_67);
                        if ( s>=0 ) return s;
                        break;
                    case 3 :
                        int LA181_68 = input.LA(1);


                        int index181_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred324_InternalQVTimperative()) ) {s = 57;}

                        else if ( (true) ) {s = 72;}


                        input.seek(index181_68);
                        if ( s>=0 ) return s;
                        break;
                    case 4 :
                        int LA181_69 = input.LA(1);


                        int index181_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred324_InternalQVTimperative()) ) {s = 57;}

                        else if ( (true) ) {s = 72;}


                        input.seek(index181_69);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 181, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_64s = "\126\uffff";
    static final String dfa_65s = "\1\4\2\0\123\uffff";
    static final String dfa_66s = "\1\u0096\2\0\123\uffff";
    static final String dfa_67s = "\3\uffff\1\1\121\uffff\1\2";
    static final String dfa_68s = "\1\uffff\1\0\1\1\123\uffff}>";
    static final String[] dfa_69s = {
            "\1\3\1\uffff\3\3\10\uffff\1\3\1\uffff\1\3\2\uffff\2\3\1\uffff\2\3\1\uffff\4\3\2\uffff\1\3\2\uffff\3\3\3\uffff\7\3\1\uffff\3\3\1\uffff\3\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\2\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\4\3\1\1\1\2\16\uffff\17\3\2\uffff\1\3\1\uffff\4\3\5\uffff\1\3\4\uffff\1\125\1\3",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final char[] dfa_65 = DFA.unpackEncodedStringToUnsignedChars(dfa_65s);
    static final char[] dfa_66 = DFA.unpackEncodedStringToUnsignedChars(dfa_66s);
    static final short[] dfa_67 = DFA.unpackEncodedString(dfa_67s);
    static final short[] dfa_68 = DFA.unpackEncodedString(dfa_68s);
    static final short[][] dfa_69 = unpackEncodedStringArray(dfa_69s);

    class DFA184 extends DFA {

        public DFA184(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 184;
            this.eot = dfa_64;
            this.eof = dfa_64;
            this.min = dfa_65;
            this.max = dfa_66;
            this.accept = dfa_67;
            this.special = dfa_68;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "8659:1: ( (this_PrefixedPrimaryExpCS_0= rulePrefixedPrimaryExpCS ( () ( (lv_name_2_0= ruleBinaryOperatorName ) ) ( (lv_ownedRight_3_0= ruleExpCS ) ) )? ) | this_PrefixedLetExpCS_4= rulePrefixedLetExpCS )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA184_1 = input.LA(1);


                        int index184_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred327_InternalQVTimperative()) ) {s = 3;}

                        else if ( (true) ) {s = 85;}


                        input.seek(index184_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 :
                        int LA184_2 = input.LA(1);


                        int index184_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred327_InternalQVTimperative()) ) {s = 3;}

                        else if ( (true) ) {s = 85;}


                        input.seek(index184_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 184, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_70s = "\1\4\12\uffff\7\0\104\uffff";
    static final String dfa_71s = "\1\u0096\12\uffff\7\0\104\uffff";
    static final String dfa_72s = "\1\uffff\1\1\1\2\1\3\1\4\15\uffff\1\10\1\11\7\uffff\1\12\67\uffff\1\5\1\6\1\7";
    static final String dfa_73s = "\13\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\104\uffff}>";
    static final String[] dfa_74s = {
            "\1\4\1\uffff\1\4\2\33\10\uffff\1\33\1\uffff\1\33\2\uffff\2\33\1\uffff\2\33\1\uffff\4\33\2\uffff\1\33\2\uffff\1\4\2\33\3\uffff\7\33\1\uffff\2\33\1\1\1\uffff\3\33\1\uffff\6\33\1\uffff\1\33\1\uffff\1\33\1\uffff\1\33\2\uffff\1\33\1\uffff\1\33\1\uffff\1\33\1\uffff\5\33\1\uffff\6\33\1\uffff\1\33\1\uffff\1\33\1\uffff\4\33\20\uffff\1\14\1\13\10\23\1\15\1\16\1\17\1\20\1\21\2\uffff\1\22\1\uffff\4\4\5\uffff\1\2\5\uffff\1\3",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_70 = DFA.unpackEncodedStringToUnsignedChars(dfa_70s);
    static final char[] dfa_71 = DFA.unpackEncodedStringToUnsignedChars(dfa_71s);
    static final short[] dfa_72 = DFA.unpackEncodedString(dfa_72s);
    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final short[][] dfa_74 = unpackEncodedStringArray(dfa_74s);

    class DFA187 extends DFA {

        public DFA187(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 187;
            this.eot = dfa_64;
            this.eof = dfa_64;
            this.min = dfa_70;
            this.max = dfa_71;
            this.accept = dfa_72;
            this.special = dfa_73;
            this.transition = dfa_74;
        }
        public String getDescription() {
            return "8908:1: (this_NestedExpCS_0= ruleNestedExpCS | this_IfExpCS_1= ruleIfExpCS | this_SelfExpCS_2= ruleSelfExpCS | this_PrimitiveLiteralExpCS_3= rulePrimitiveLiteralExpCS | this_TupleLiteralExpCS_4= ruleTupleLiteralExpCS | this_MapLiteralExpCS_5= ruleMapLiteralExpCS | this_CollectionLiteralExpCS_6= ruleCollectionLiteralExpCS | this_LambdaLiteralExpCS_7= ruleLambdaLiteralExpCS | this_TypeLiteralExpCS_8= ruleTypeLiteralExpCS | this_NameExpCS_9= ruleNameExpCS )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 :
                        int LA187_11 = input.LA(1);


                        int index187_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred334_InternalQVTimperative()) ) {s = 83;}

                        else if ( (synpred338_InternalQVTimperative()) ) {s = 19;}


                        input.seek(index187_11);
                        if ( s>=0 ) return s;
                        break;
                    case 1 :
                        int LA187_12 = input.LA(1);


                        int index187_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred335_InternalQVTimperative()) ) {s = 84;}

                        else if ( (synpred338_InternalQVTimperative()) ) {s = 19;}


                        input.seek(index187_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 :
                        int LA187_13 = input.LA(1);


                        int index187_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalQVTimperative()) ) {s = 85;}

                        else if ( (synpred338_InternalQVTimperative()) ) {s = 19;}


                        input.seek(index187_13);
                        if ( s>=0 ) return s;
                        break;
                    case 3 :
                        int LA187_14 = input.LA(1);


                        int index187_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalQVTimperative()) ) {s = 85;}

                        else if ( (synpred338_InternalQVTimperative()) ) {s = 19;}


                        input.seek(index187_14);
                        if ( s>=0 ) return s;
                        break;
                    case 4 :
                        int LA187_15 = input.LA(1);


                        int index187_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalQVTimperative()) ) {s = 85;}

                        else if ( (synpred338_InternalQVTimperative()) ) {s = 19;}


                        input.seek(index187_15);
                        if ( s>=0 ) return s;
                        break;
                    case 5 :
                        int LA187_16 = input.LA(1);


                        int index187_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalQVTimperative()) ) {s = 85;}

                        else if ( (synpred338_InternalQVTimperative()) ) {s = 19;}


                        input.seek(index187_16);
                        if ( s>=0 ) return s;
                        break;
                    case 6 :
                        int LA187_17 = input.LA(1);


                        int index187_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalQVTimperative()) ) {s = 85;}

                        else if ( (synpred338_InternalQVTimperative()) ) {s = 19;}


                        input.seek(index187_17);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 187, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_75s = "\12\uffff";
    static final String dfa_76s = "\1\2\11\uffff";
    static final String dfa_77s = "\1\22\1\4\1\uffff\6\7\1\uffff";
    static final String dfa_78s = "\1\u0094\1\143\1\uffff\6\143\1\uffff";
    static final String dfa_79s = "\2\uffff\1\2\6\uffff\1\1";
    static final String dfa_80s = "\12\uffff}>";
    static final String[] dfa_81s = {
            "\1\2\2\uffff\1\2\2\uffff\1\2\14\uffff\1\2\2\uffff\1\2\1\1\1\2\7\uffff\1\2\3\uffff\1\2\3\uffff\1\2\51\uffff\1\2\1\uffff\16\2\17\uffff\1\2\2\uffff\1\2\4\uffff\1\2\2\uffff\2\2\1\uffff\4\2",
            "\1\11\2\uffff\2\11\10\uffff\1\3\1\uffff\1\4\2\uffff\2\11\1\uffff\2\11\1\uffff\4\11\2\uffff\1\11\3\uffff\2\11\2\uffff\1\11\1\5\1\6\1\7\1\10\3\11\1\uffff\2\11\2\uffff\3\11\1\uffff\6\11\1\uffff\1\11\1\uffff\1\11\1\uffff\1\11\2\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\5\11\1\uffff\6\11\1\uffff\1\11\1\uffff\1\11\1\uffff\4\11",
            "",
            "\2\2\10\uffff\1\2\1\uffff\1\2\2\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\1\2\3\uffff\2\2\3\uffff\7\2\1\11\2\2\2\uffff\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\4\2",
            "\2\2\10\uffff\1\2\1\uffff\1\2\2\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\1\2\3\uffff\2\2\3\uffff\7\2\1\11\2\2\2\uffff\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\4\2",
            "\2\2\10\uffff\1\2\1\uffff\1\2\2\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\1\2\3\uffff\2\2\3\uffff\7\2\1\11\2\2\2\uffff\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\4\2",
            "\2\2\10\uffff\1\2\1\uffff\1\2\2\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\1\2\3\uffff\2\2\3\uffff\7\2\1\11\2\2\2\uffff\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\4\2",
            "\2\2\10\uffff\1\2\1\uffff\1\2\2\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\1\2\3\uffff\2\2\3\uffff\7\2\1\11\2\2\2\uffff\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\4\2",
            "\2\2\10\uffff\1\2\1\uffff\1\2\2\uffff\2\2\1\uffff\2\2\1\uffff\4\2\2\uffff\1\2\3\uffff\2\2\3\uffff\7\2\1\11\2\2\2\uffff\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\4\2",
            ""
    };

    static final short[] dfa_75 = DFA.unpackEncodedString(dfa_75s);
    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_76s);
    static final char[] dfa_77 = DFA.unpackEncodedStringToUnsignedChars(dfa_77s);
    static final char[] dfa_78 = DFA.unpackEncodedStringToUnsignedChars(dfa_78s);
    static final short[] dfa_79 = DFA.unpackEncodedString(dfa_79s);
    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final short[][] dfa_81 = unpackEncodedStringArray(dfa_81s);

    class DFA190 extends DFA {

        public DFA190(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 190;
            this.eot = dfa_75;
            this.eof = dfa_76;
            this.min = dfa_77;
            this.max = dfa_78;
            this.accept = dfa_79;
            this.special = dfa_80;
            this.transition = dfa_81;
        }
        public String getDescription() {
            return "9112:3: ( (lv_ownedCurlyBracketedClause_3_0= ruleCurlyBracketedClauseCS ) )?";
        }
    }
    static final String dfa_82s = "\1\4\1\uffff\70\30\1\uffff";
    static final String dfa_83s = "\1\u0096\1\uffff\70\u0091\1\uffff";
    static final String[] dfa_84s = {
            "\1\1\1\uffff\1\1\1\2\1\3\10\uffff\1\61\1\uffff\1\40\2\uffff\1\42\1\41\1\72\1\65\1\43\1\uffff\1\45\1\71\1\47\1\52\2\uffff\1\66\2\uffff\1\1\1\55\1\56\3\uffff\1\44\1\53\1\54\1\50\1\46\1\57\1\62\1\uffff\1\34\1\63\1\1\1\uffff\1\51\1\60\1\64\1\uffff\1\70\1\67\1\32\1\12\1\5\1\13\1\uffff\1\17\1\uffff\1\24\1\uffff\1\27\2\uffff\1\35\1\uffff\1\36\1\uffff\1\37\1\uffff\1\20\1\14\1\25\1\11\1\31\1\uffff\1\15\1\22\1\23\1\33\1\6\1\26\1\uffff\1\10\1\uffff\1\30\1\uffff\1\4\1\7\1\16\1\21\2\1\16\uffff\17\1\2\uffff\1\1\1\uffff\4\1\5\uffff\1\1\4\uffff\2\1",
            "",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            "\1\72\13\uffff\2\1\3\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\1\51\uffff\1\1\1\uffff\16\1\27\uffff\1\1\1\uffff\1\1\3\uffff\1\1",
            ""
    };
    static final char[] dfa_82 = DFA.unpackEncodedStringToUnsignedChars(dfa_82s);
    static final char[] dfa_83 = DFA.unpackEncodedStringToUnsignedChars(dfa_83s);
    static final short[][] dfa_84 = unpackEncodedStringArray(dfa_84s);

    class DFA210 extends DFA {

        public DFA210(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 210;
            this.eot = dfa_22;
            this.eof = dfa_22;
            this.min = dfa_82;
            this.max = dfa_83;
            this.accept = dfa_48;
            this.special = dfa_26;
            this.transition = dfa_84;
        }
        public String getDescription() {
            return "9948:1: (lv_ownedCondition_1_1= ruleExpCS | lv_ownedCondition_1_2= rulePatternExpCS )";
        }
    }



    private static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x101A008802000002L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x101A008002000002L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0xFB9BF8C4F6CA0180L,0x0000000F57EFAA55L});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x00000000000C0000L});
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000100000L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0xFBBBF8E4F6CA01D0L,0xFFF0003F57EFAA55L,0x00000000006107A7L});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000200000L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000400000L});
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000001000000L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0xFB9BF8C4F6CA0180L,0xFFF0000F57EFAA55L,0x0000000000000007L});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000004000000L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000009200000L});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000008200000L});
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000030040000L});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000020000000L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000009000000L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000008000000L});
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0xFB9BF8C4F6CA0182L,0x0000000F57EFAA55L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000080000002L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000040002L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000100000000L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000400200000L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0xFB9BF8C4F6CA0190L,0x0000000F57EFAA55L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000001000200000L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000002000000000L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000004000000000L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000008000000000L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000030000000000L});
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0301FD02368A0000L});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0301FC00360A0000L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0301FC00000A0000L});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x00007C00000A0000L});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0xFB9BFCC4F6CA0180L,0x0000000F57EFAA55L});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000400000040000L});
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000010000000000L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x00007800000A0000L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000001000002L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0001800000040000L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0001000000000000L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0004020001200000L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0004020000200000L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000020000200000L});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x1002040000000000L,0x0000000300260000L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0010000000000000L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0020000000000000L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0xFBDBF8C4F6CA0180L,0x0000000F57EFAA55L});
        public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0040000000040000L});
        public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0080020000200000L});
        public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000040000000000L});
        public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000001000000000L});
        public static final BitSet FOLLOW_55 = new BitSet(new long[]{0xFB9BF8C4F6CA0182L,0xFFF0000F57EFAA55L,0x0000000000000007L});
        public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0300000000040000L});
        public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0200000000000000L});
        public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0400000000000000L});
        public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000008100000L});
        public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_61 = new BitSet(new long[]{0xFB9BFCC4F6EA0180L,0x0000000F57EFAA55L});
        public static final BitSet FOLLOW_62 = new BitSet(new long[]{0xC000000000000000L});
        public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x8000000000000000L});
        public static final BitSet FOLLOW_64 = new BitSet(new long[]{0xA000000000000000L});
        public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0008000000000000L,0x0000000000007FFFL});
        public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0008040000040000L,0x0000000000007FFFL});
        public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0008040000000000L,0x0000000000007FFFL});
        public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000040000000000L,0x0000000000018000L});
        public static final BitSet FOLLOW_69 = new BitSet(new long[]{0xFB9BF8C4F7CA0180L,0x0000000F57EFAA55L});
        public static final BitSet FOLLOW_70 = new BitSet(new long[]{0xFBBBF8E4F6EA01F0L,0xFFF0003F57EFAA55L,0x00000000006107A7L});
        public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040000L});
        public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0020020001200000L});
        public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000020001200000L});
        public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000040000000000L,0x0000000000180000L});
        public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000040000000180L,0x0000000000400000L});
        public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000000040L,0x0000001000000000L});
        public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x4000000000000000L,0x0000000000800000L});
        public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
        public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x2000000000000000L,0x0000000000800000L});
        public static final BitSet FOLLOW_80 = new BitSet(new long[]{0xFBBBF8C4F6CA0180L,0x0000000F57EFAA55L});
        public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000020001200000L,0x0000000001000000L});
        public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000020000200000L,0x0000000001000000L});
        public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000020000240000L});
        public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000633L});
        public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000040000040000L,0x0000000000000633L});
        public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000040000000000L,0x0000000000000633L});
        public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000040000000000L,0x0000000002000000L});
        public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000020001000002L});
        public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000020000000002L});
        public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000630L});
        public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000040000040000L,0x0000000000000630L});
        public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000040000000000L,0x0000000000000630L});
        public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x4000000000000000L,0x0000000004000000L});
        public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
        public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x2000000000000000L,0x0000000004000000L});
        public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0004020001200000L,0x0000000008000000L});
        public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0008000000000000L,0x00000000F0007FF3L});
        public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0008040000040000L,0x00000000F0007FF3L});
        public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0008040000000000L,0x00000000F0007FF3L});
        public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
        public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0020020001200000L,0x0000000400000000L});
        public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000020001200000L,0x0000000400000000L});
        public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000020001240000L});
        public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000040000000000L,0x0000000800000000L});
        public static final BitSet FOLLOW_105 = new BitSet(new long[]{0xE000040000000000L,0x0000000004800000L});
        public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000002000L});
        public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000000000040L});
        public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000001000000002L});
        public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0020000000000002L});
        public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0040000000000000L,0x0000000000000000L,0x0000000000002000L});
        public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0040000000000000L});
        public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000040000L});
        public static final BitSet FOLLOW_113 = new BitSet(new long[]{0xFBBBFCE4F7CA01D0L,0xFFF0003F57EFAA55L,0x00000000006107A7L});
        public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000040000040000L});
        public static final BitSet FOLLOW_115 = new BitSet(new long[]{0xFBBBF8E4F7CA01D0L,0xFFF0003F57EFAA55L,0x00000000006107A7L});
        public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000008L});
        public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000000040000L,0x0000000000000000L,0x0000000000000010L});
        public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000000000000180L});
        public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0004000000000000L});
        public static final BitSet FOLLOW_120 = new BitSet(new long[]{0xFBBBFCE4F6CA01D0L,0xFFF0003F57EFAA55L,0x00000000006107A7L});
        public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
        public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0004000001000000L});
        public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0404002000000002L,0x000FFFD000000000L});
        public static final BitSet FOLLOW_125 = new BitSet(new long[]{0xFBBBF8E4F6CA01D0L,0xFFF0003F57EFAA55L,0x00000000004107A7L});
        public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0020020000000002L,0x0000000000000000L,0x0000000000002800L});
        public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000020000000002L,0x0000000000000000L,0x0000000000000800L});
        public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000800L});
        public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
        public static final BitSet FOLLOW_130 = new BitSet(new long[]{0xFB9BFCC4F6CA0190L,0x0000000F57EFAA55L});
        public static final BitSet FOLLOW_131 = new BitSet(new long[]{0xFBFBF8E4F7CA01D0L,0xFFF0003F57EFAA55L,0x00000000006107A7L});
        public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0040000000240000L,0x0000000000000000L,0x0000000000008000L});
        public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0040000000040000L,0x0000000000000000L,0x0000000000008000L});
        public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0000000000040000L,0x0000000000000000L,0x0000000000004000L});
        public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x0000010001000002L});
        public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x0004000000000002L});
        public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
        public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000140000L});
        public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000080000L});
        public static final BitSet FOLLOW_140 = new BitSet(new long[]{0x0000010000040000L});
        public static final BitSet FOLLOW_141 = new BitSet(new long[]{0x0024000001000000L});
        public static final BitSet FOLLOW_142 = new BitSet(new long[]{0x0000002000000040L});
        public static final BitSet FOLLOW_143 = new BitSet(new long[]{0x0000002000000040L,0x0000008000000000L,0x0000000002000000L});
        public static final BitSet FOLLOW_144 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000001804000L});
        public static final BitSet FOLLOW_145 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
        public static final BitSet FOLLOW_146 = new BitSet(new long[]{0x0000000000040002L,0x0000000000000000L,0x0000000000002000L});
        public static final BitSet FOLLOW_147 = new BitSet(new long[]{0xFB9BF8C4F6CA0180L,0x0000000F57EFAA55L,0x0000000002000000L});
        public static final BitSet FOLLOW_148 = new BitSet(new long[]{0x0000000000000002L,0x0000000400000000L});
        public static final BitSet FOLLOW_149 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000004000000L});
    }


}