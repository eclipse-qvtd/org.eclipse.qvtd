/*******************************************************************************
 * Copyright (c) 2011 E.D.Willink and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     E.D.Willink - initial API and implementation
 *******************************************************************************/
grammar org.eclipse.qvtd.xtext.qvtimperative.QVTimperative with org.eclipse.qvtd.xtext.qvtcorebase.QVTcoreBase

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.eclipse.org/ocl/2015/BaseCS" as base
import "http://www.eclipse.org/ocl/2015/EssentialOCLCS" as essentialocl
import "http://www.eclipse.org/ocl/2015/Pivot" as pivot
import "http://www.eclipse.org/qvt/2015/QVTbase" as qvtbase
import "http://www.eclipse.org/qvt/2015/QVTcoreBase" as qvtcorebase
import "http://www.eclipse.org/qvt/2015/QVTimperative" as qvtimperative
import "http://www.eclipse.org/qvt/2015/QVTcoreBaseCS"
import "http://www.eclipse.org/qvt/2015/QVTimperativeCS"

TopLevelCS:
	(ownedImports+=ImportCS | /*ownedInclude+=IncludeCS |*/ ownedLibraries+=LibraryCS)*
	(transformations+=TransformationCS | mappings+=MappingCS | queries+=QueryCS)*
;
	
DirectionCS: {DirectionCS} name=UnrestrictedName
	('imports' imports+=[pivot::Package|UnrestrictedName] (',' imports+=[pivot::Package|UnrestrictedName])*)?
	('uses' uses+=[qvtcorebase::CoreDomain|UnrestrictedName] (',' uses+=[qvtcorebase::CoreDomain|UnrestrictedName])*)?
;

MappingCS: {MappingCS} 'map' name=UnrestrictedName ('in' in=[qvtbase::Transformation|UnrestrictedName])?
	'{' domains+=(SourceDomainCS | TargetDomainCS)* ('where' middle=MiddleDomainCS)? mappingSequence=MappingSequenceCS? '}';
	
MappingCallCS: {MappingCallCS} 'call' referredMapping=[qvtimperative::Mapping|UnrestrictedName]
	'{' bindings+=MappingCallBindingCS* '}';

MappingCallBindingCS: referredVariable=[pivot::Variable|UnrestrictedName] ':=' value=ExpCS ';';
	
MappingLoopCS: 'for' ownedIterator=MappingIteratorCS 'in' inExpression=ExpCS '{' mappingSequence=MappingSequenceCS '}';
	
MappingIteratorCS returns essentialocl::VariableCS: name=UnrestrictedName (':' ownedType=TypeExpCS)?;

MappingSequenceCS: mappingStatements+=MappingStatementCS+;
	
MappingStatementCS: MappingCallCS | MappingLoopCS;
	
SourceDomainCS returns DomainCS: check?='check' direction=[qvtbase::TypedModel|UnrestrictedName]
	guardPattern=SourceGuardPatternCS bottomPattern=SourceBottomPatternCS
;
		
SourceBottomPatternCS returns BottomPatternCS:
	{BottomPatternCS} '{''}'
;
	
SourceGuardPatternCS returns GuardPatternCS:
	{GuardPatternCS} '(' (unrealizedVariables+=UnrealizedVariableCS (',' unrealizedVariables+=UnrealizedVariableCS)*)? ')'
;
	
MiddleDomainCS returns DomainCS: {DomainCS} guardPattern=MiddleGuardPatternCS bottomPattern=MiddleBottomPatternCS;
		
MiddleBottomPatternCS returns BottomPatternCS:
	{BottomPatternCS} '{' constraints+=PredicateOrAssignmentCS* '}'
;
	
MiddleGuardPatternCS returns GuardPatternCS:
	{GuardPatternCS} '(' ownedPredicates+=PredicateCS* ')'
;
	
TargetDomainCS returns DomainCS: enforce?='enforce' direction=[qvtbase::TypedModel|UnrestrictedName]
	guardPattern=TargetGuardPatternCS bottomPattern=TargetBottomPatternCS
;
		
TargetBottomPatternCS returns BottomPatternCS:
	{BottomPatternCS} '{' ((unrealizedVariables+=UnrealizedVariableCS | realizedVariables+=RealizedVariableCS)
		(',' (unrealizedVariables+=UnrealizedVariableCS | realizedVariables+=RealizedVariableCS))*)?
	'}'
;
	
TargetGuardPatternCS returns GuardPatternCS:
	{GuardPatternCS} '(' (unrealizedVariables+=UnrealizedVariableCS (',' unrealizedVariables+=UnrealizedVariableCS)*)? ')'
;
