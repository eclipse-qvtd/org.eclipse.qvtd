/*******************************************************************************
 * Copyright (c) 2011 E.D.Willink and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     E.D.Willink - initial API and implementation
 *******************************************************************************/
grammar org.eclipse.qvtd.xtext.qvtcorebase.QVTcoreBase with org.eclipse.ocl.xtext.essentialocl.EssentialOCL

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "platform:/resource/org.eclipse.ocl.pivot/model/Pivot.ecore" as pivot
import "platform:/resource/org.eclipse.ocl.xtext.base/model/BaseCS.ecore" as base
import "platform:/resource/org.eclipse.ocl.xtext.essentialocl/model/EssentialOCLCS.ecore" as essentialocl
import "platform:/resource/org.eclipse.qvtd.pivot.qvtbase/model/QVTbase.ecore" as qvtbase
import "platform:/resource/org.eclipse.qvtd.pivot.qvtcorebase/model/QVTcoreBase.ecore" as qvtcorebase
import "platform:/resource/org.eclipse.qvtd.xtext.qvtcorebase/model/QVTcoreBaseCS.ecore"
		
BottomPatternCS:		// Bug 466385 explains the redundancy below
	(
		'{' (ownedUnrealizedVariables+=UnrealizedVariableCS | ownedRealizedVariables+=RealizedVariableCS)
		(',' (ownedUnrealizedVariables+=UnrealizedVariableCS | ownedRealizedVariables+=RealizedVariableCS))*
		'|' ownedConstraints+=PredicateOrAssignmentCS* '}'
	) | (
		'{' (ownedUnrealizedVariables+=UnrealizedVariableCS | ownedRealizedVariables+=RealizedVariableCS)
		(',' (ownedUnrealizedVariables+=UnrealizedVariableCS | ownedRealizedVariables+=RealizedVariableCS))* '}'
	) | (
		'{' ownedConstraints+=PredicateOrAssignmentCS+ '}'
	) | (
		{BottomPatternCS} '{' '}'
	)
;
	
DirectionCS: {DirectionCS} name=UnrestrictedName?
	('imports' imports+=[pivot::Package|UnrestrictedName] (',' imports+=[pivot::Package|UnrestrictedName])*)?
	('uses' uses+=[qvtcorebase::CoreDomain|UnrestrictedName] (',' uses+=[qvtcorebase::CoreDomain|UnrestrictedName])*)?
;
	
//EnforcementOperationCS: ('creation'|'deletion') ExpCS ';';
	
GuardPatternCS:		// Bug 466385 explains the redundancy below
	(
		'(' ownedUnrealizedVariables+=GuardVariableCS (',' ownedUnrealizedVariables+=GuardVariableCS)* '|' ownedPredicates+=PredicateCS* ')'
	) | (
		'(' ownedUnrealizedVariables+=GuardVariableCS (',' ownedUnrealizedVariables+=GuardVariableCS)* ')'
	) | (
		'(' ownedPredicates+=PredicateCS+ ')'
	) | (
		{GuardPatternCS} '(' ')'
	)
;
	
//Variable := VariableName �:� TypeDeclaration
GuardVariableCS returns UnrealizedVariableCS: name=UnrestrictedName ':' ownedType=TypeExpCS;

ImportCS returns base::ImportCS:
	'import' (name=Identifier ':')? ownedPathName=URIPathNameCS (isAll?='::' '*')? ';';
	
NamedDomainCS returns DomainCS: isCheck?='check'? isEnforce?='enforce'? direction=[qvtbase::TypedModel|UnrestrictedName]
	ownedGuardPattern=GuardPatternCS ownedBottomPattern=BottomPatternCS;
	
ParamDeclarationCS: name=UnrestrictedName ':' ownedType=TypeExpCS;

PredicateCS: ownedCondition=ExpCS ';';
		
//Constraint ::= Predicate | Assignment
//Predicate ::= BooleanOCLExpr
//Assignement ::= [�default�] SlotOwnerOCLExpr�.�PropertyName �:=� ValueOCLExpr
PredicateOrAssignmentCS: isDefault?='default'? ownedTarget=ExpCS (':=' ownedInitExpression=ExpCS)? ';';
		
QueryCS: 'query' ownedPathName=ScopeNameCS name=UnrestrictedName
		'(' (ownedParameters+=ParamDeclarationCS (',' ownedParameters+=ParamDeclarationCS)*)? ')'
		':' ownedType=TypeExpCS (';' | '{' ownedExpression=ExpCS '}');
//<query> ::= 'query' <PathNameCS> 
//            '(' [<paramDeclaration> (',' <paramDeclaration>)*] ')'
//      	  ':' <TypeCS>
//            (';' | '{' <OCLExpressionCS> '}')

ScopeNameCS returns base::PathNameCS:
	ownedPathElements+=FirstPathElementCS '::' (ownedPathElements+=NextPathElementCS '::')*;

TransformationCS:
	'transformation' ownedPathName=ScopeNameCS? name=UnreservedName '{' (ownedDirections+=DirectionCS ';')* '}';
	
//Variable := VariableName �:� TypeDeclaration
UnrealizedVariableCS: name=UnrestrictedName (':' ownedType=TypeExpCS)? (':=' ownedInitExpression=ExpCS)?;
		
//RealizedVariable := �realized� VariableName �:� TypeDeclaration
RealizedVariableCS: 'realize' name=UnrestrictedName ':' ownedType=TypeExpCS;
	
UnnamedDomainCS returns DomainCS: {DomainCS} ownedGuardPattern=GuardPatternCS ownedBottomPattern=BottomPatternCS;
		
UnrestrictedName returns ecore::EString:
	EssentialOCLUnrestrictedName
|	'check'
//|	'creation'
//|	'default'
//|	'deletion'
|	'enforce'
|	'import'
|	'imports'
//|	'include'
|	'library'
|	'map'
|	'query'
|	'realize'
|	'refines'
|	'transformation'
|	'uses'
//|	'where'
;
