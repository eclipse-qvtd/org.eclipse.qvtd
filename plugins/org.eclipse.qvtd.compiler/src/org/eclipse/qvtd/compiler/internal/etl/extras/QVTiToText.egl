[% for (i in QVTi!Model.all.first().ownedImports) { %]
import [%=i.name%]: '[%=i.importedNamespace.URI%]';
[% } %]
[%for (t in QVTi!Transformation.all()) {%]

transformation [%=t.name %] {
[%  for (mp in t.modelParameter) { %]
    [%=mp.name%] imports [%=mp.usedPackage.collect(up | up.name.firstToUpperCase()).concat(",")%]; 
[%  }%]
}
	[%for (r in t.rule) { 
        r.declaration(t);
    }
}%]

[%
operation QVTi!Mapping declaration(t : QVTi!Transformation) {%]

map [%if (self.name.isDefined()){%][%=self.name%][%if (t.isDefined()){%] in [%=t.name%][%}}%] {
[% for (d in self.domain) {
    var domainName = "";
    if (d.isCheckable) { domainName = "check ";}
    if(d.isEnforceable) { domainName = domainName + "enforce ";}
    domainName = domainName + d.name;%]
    [%=domainName%] ([%d.guardPattern.declaration();%]) {
    [%d.bottomPattern.declaration();%]
    }
    [%
}%]
    where ([%self.guardPattern.declaration();%]) {
    [%self.bottomPattern.declaration();%]
    }
    [%if(self.mappingStatement.isDefined()) {%]
	[%=printMS(self.mappingStatement)%]
    [%}%]
}
[%
}%]

[% operation QVTi!GuardPattern declaration() {%]
[%  if (not self.variable.isEmpty()) {
        for (v in self.variable.select(v | v.isTypeOf(QVTi!Variable))){%]
    [%=v.toString()%][%if(hasMore){%],
[%out.print("        ");}%]
      [%}%]
      |[%
    }  
    for (p in self.predicate){%]
        
        [%=p.toString()%];[%
    }%]
[%} %] 

[% operation QVTi!BottomPattern declaration() {
    var vars : Set();
    vars.addAll(self.variable);
    vars.addAll(self.realizedVariable);
    for (v in vars.sortBy(v | v.type())) {%]
[%printIdent(8);%][%=v.toString()%][%if(hasMore){%],
[%}%]
      [%}%]  |[% 
    for (p in self.predicate){%]
    
        [%=p.toString()%];[%
    }
    for (a in self.assignment){%]
    
        [%=a.toString()%];[%
    }%]
[%} %]

[%
operation printMS(call : QVTi!MappingCall) {%]
call [%=call.referredMapping.name%] {
    [% for (b in call.binding) {%]
            [%=b.boundVariable.name%]:= [%=b.value.toString()%]; 
    [%}%]
        }
[%}

operation printMS(seq : QVTi!MappingSequence) {
    for (ms in seq.mappingStatements) {
        printMS(ms);
    }
}

operation printMS(loop : QVTi!MappingLoop) {%]

    for [%=loop.ownedIterators.first().name%] in [%=loop.ownedSource.toString()%] {
        [%if(loop.ownedBody.isDefined()) {%]
        [%=printMS(loop.ownedBody)%]
        [%}%]
    }
   [%
}%]

[% operation printIdent(size : Integer) {
out.print("".pad(size, " ", true));
}%]
