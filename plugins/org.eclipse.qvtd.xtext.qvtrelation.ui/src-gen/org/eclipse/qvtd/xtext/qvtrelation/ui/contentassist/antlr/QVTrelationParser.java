/*******************************************************************************
 * Copyright (c) 2014 E.D.Willink and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     E.D.Willink - initial API and implementation
 *******************************************************************************/
/*
* generated by Xtext
*/
package org.eclipse.qvtd.xtext.qvtrelation.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.eclipse.qvtd.xtext.qvtrelation.services.QVTrelationGrammarAccess;

public class QVTrelationParser extends AbstractContentAssistParser {
	
	@Inject
	private QVTrelationGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.eclipse.qvtd.xtext.qvtrelation.ui.contentassist.antlr.internal.InternalQVTrelationParser createParser() {
		org.eclipse.qvtd.xtext.qvtrelation.ui.contentassist.antlr.internal.InternalQVTrelationParser result = new org.eclipse.qvtd.xtext.qvtrelation.ui.contentassist.antlr.internal.InternalQVTrelationParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getTopLevelCSAccess().getAlternatives_0(), "rule__TopLevelCS__Alternatives_0");
					put(grammarAccess.getCollectionTemplateCSAccess().getMemberIdentifiersAlternatives_4_0_0(), "rule__CollectionTemplateCS__MemberIdentifiersAlternatives_4_0_0");
					put(grammarAccess.getCollectionTemplateCSAccess().getMemberIdentifiersAlternatives_4_1_1_0(), "rule__CollectionTemplateCS__MemberIdentifiersAlternatives_4_1_1_0");
					put(grammarAccess.getCollectionTemplateCSAccess().getAlternatives_4_3(), "rule__CollectionTemplateCS__Alternatives_4_3");
					put(grammarAccess.getDomainCSAccess().getAlternatives_0(), "rule__DomainCS__Alternatives_0");
					put(grammarAccess.getElementTemplateCSAccess().getAlternatives(), "rule__ElementTemplateCS__Alternatives");
					put(grammarAccess.getKeyDeclCSAccess().getAlternatives_3(), "rule__KeyDeclCS__Alternatives_3");
					put(grammarAccess.getKeyDeclCSAccess().getAlternatives_4_1(), "rule__KeyDeclCS__Alternatives_4_1");
					put(grammarAccess.getModelDeclCSAccess().getAlternatives_2(), "rule__ModelDeclCS__Alternatives_2");
					put(grammarAccess.getPropertyTemplateCSAccess().getAlternatives_0(), "rule__PropertyTemplateCS__Alternatives_0");
					put(grammarAccess.getQueryCSAccess().getAlternatives_7(), "rule__QueryCS__Alternatives_7");
					put(grammarAccess.getRelationCSAccess().getAlternatives_6(), "rule__RelationCS__Alternatives_6");
					put(grammarAccess.getTemplateCSAccess().getAlternatives_0(), "rule__TemplateCS__Alternatives_0");
					put(grammarAccess.getTransformationCSAccess().getAlternatives_9(), "rule__TransformationCS__Alternatives_9");
					put(grammarAccess.getExpCSOrTemplateCSAccess().getAlternatives(), "rule__ExpCSOrTemplateCS__Alternatives");
					put(grammarAccess.getTypedRefCSAccess().getAlternatives(), "rule__TypedRefCS__Alternatives");
					put(grammarAccess.getUnrestrictedNameAccess().getAlternatives(), "rule__UnrestrictedName__Alternatives");
					put(grammarAccess.getIDAccess().getAlternatives(), "rule__ID__Alternatives");
					put(grammarAccess.getUPPERAccess().getAlternatives(), "rule__UPPER__Alternatives");
					put(grammarAccess.getEssentialOCLReservedKeywordAccess().getAlternatives(), "rule__EssentialOCLReservedKeyword__Alternatives");
					put(grammarAccess.getEssentialOCLUnaryOperatorCSAccess().getNameAlternatives_0(), "rule__EssentialOCLUnaryOperatorCS__NameAlternatives_0");
					put(grammarAccess.getEssentialOCLInfixOperatorCSAccess().getNameAlternatives_0(), "rule__EssentialOCLInfixOperatorCS__NameAlternatives_0");
					put(grammarAccess.getEssentialOCLNavigationOperatorCSAccess().getNameAlternatives_0(), "rule__EssentialOCLNavigationOperatorCS__NameAlternatives_0");
					put(grammarAccess.getBinaryOperatorCSAccess().getAlternatives(), "rule__BinaryOperatorCS__Alternatives");
					put(grammarAccess.getEssentialOCLUnreservedNameAccess().getAlternatives(), "rule__EssentialOCLUnreservedName__Alternatives");
					put(grammarAccess.getURIFirstPathElementCSAccess().getAlternatives(), "rule__URIFirstPathElementCS__Alternatives");
					put(grammarAccess.getPrimitiveTypeIdentifierAccess().getAlternatives(), "rule__PrimitiveTypeIdentifier__Alternatives");
					put(grammarAccess.getCollectionTypeIdentifierAccess().getAlternatives(), "rule__CollectionTypeIdentifier__Alternatives");
					put(grammarAccess.getMultiplicityCSAccess().getAlternatives_1(), "rule__MultiplicityCS__Alternatives_1");
					put(grammarAccess.getMultiplicityStringCSAccess().getStringBoundsAlternatives_0(), "rule__MultiplicityStringCS__StringBoundsAlternatives_0");
					put(grammarAccess.getPrimitiveLiteralExpCSAccess().getAlternatives(), "rule__PrimitiveLiteralExpCS__Alternatives");
					put(grammarAccess.getBooleanLiteralExpCSAccess().getAlternatives(), "rule__BooleanLiteralExpCS__Alternatives");
					put(grammarAccess.getTypeLiteralCSAccess().getAlternatives(), "rule__TypeLiteralCS__Alternatives");
					put(grammarAccess.getTypeExpCSAccess().getAlternatives_0(), "rule__TypeExpCS__Alternatives_0");
					put(grammarAccess.getExpCSAccess().getAlternatives(), "rule__ExpCS__Alternatives");
					put(grammarAccess.getExpCSAccess().getAlternatives_0_1_2(), "rule__ExpCS__Alternatives_0_1_2");
					put(grammarAccess.getPrefixedExpCSAccess().getAlternatives(), "rule__PrefixedExpCS__Alternatives");
					put(grammarAccess.getPrimaryExpCSAccess().getAlternatives(), "rule__PrimaryExpCS__Alternatives");
					put(grammarAccess.getPrimaryExpCSAccess().getAlternatives_7_2(), "rule__PrimaryExpCS__Alternatives_7_2");
					put(grammarAccess.getPrimaryExpCSAccess().getAlternatives_7_2_1_2(), "rule__PrimaryExpCS__Alternatives_7_2_1_2");
					put(grammarAccess.getTopLevelCSAccess().getGroup(), "rule__TopLevelCS__Group__0");
					put(grammarAccess.getCollectionTemplateCSAccess().getGroup(), "rule__CollectionTemplateCS__Group__0");
					put(grammarAccess.getCollectionTemplateCSAccess().getGroup_4(), "rule__CollectionTemplateCS__Group_4__0");
					put(grammarAccess.getCollectionTemplateCSAccess().getGroup_4_1(), "rule__CollectionTemplateCS__Group_4_1__0");
					put(grammarAccess.getDefaultValueCSAccess().getGroup(), "rule__DefaultValueCS__Group__0");
					put(grammarAccess.getDomainCSAccess().getGroup(), "rule__DomainCS__Group__0");
					put(grammarAccess.getDomainCSAccess().getGroup_4(), "rule__DomainCS__Group_4__0");
					put(grammarAccess.getDomainCSAccess().getGroup_5(), "rule__DomainCS__Group_5__0");
					put(grammarAccess.getElementTemplateCSAccess().getGroup_1(), "rule__ElementTemplateCS__Group_1__0");
					put(grammarAccess.getKeyDeclCSAccess().getGroup(), "rule__KeyDeclCS__Group__0");
					put(grammarAccess.getKeyDeclCSAccess().getGroup_3_1(), "rule__KeyDeclCS__Group_3_1__0");
					put(grammarAccess.getKeyDeclCSAccess().getGroup_4(), "rule__KeyDeclCS__Group_4__0");
					put(grammarAccess.getKeyDeclCSAccess().getGroup_4_1_1(), "rule__KeyDeclCS__Group_4_1_1__0");
					put(grammarAccess.getLibraryCSAccess().getGroup(), "rule__LibraryCS__Group__0");
					put(grammarAccess.getModelDeclCSAccess().getGroup(), "rule__ModelDeclCS__Group__0");
					put(grammarAccess.getModelDeclCSAccess().getGroup_2_1(), "rule__ModelDeclCS__Group_2_1__0");
					put(grammarAccess.getModelDeclCSAccess().getGroup_2_1_2(), "rule__ModelDeclCS__Group_2_1_2__0");
					put(grammarAccess.getObjectTemplateCSAccess().getGroup(), "rule__ObjectTemplateCS__Group__0");
					put(grammarAccess.getObjectTemplateCSAccess().getGroup_4(), "rule__ObjectTemplateCS__Group_4__0");
					put(grammarAccess.getObjectTemplateCSAccess().getGroup_4_1(), "rule__ObjectTemplateCS__Group_4_1__0");
					put(grammarAccess.getParamDeclarationCSAccess().getGroup(), "rule__ParamDeclarationCS__Group__0");
					put(grammarAccess.getPredicateCSAccess().getGroup(), "rule__PredicateCS__Group__0");
					put(grammarAccess.getPrimitiveTypeDomainCSAccess().getGroup(), "rule__PrimitiveTypeDomainCS__Group__0");
					put(grammarAccess.getPropertyTemplateCSAccess().getGroup(), "rule__PropertyTemplateCS__Group__0");
					put(grammarAccess.getPropertyTemplateCSAccess().getGroup_0_1(), "rule__PropertyTemplateCS__Group_0_1__0");
					put(grammarAccess.getQueryCSAccess().getGroup(), "rule__QueryCS__Group__0");
					put(grammarAccess.getQueryCSAccess().getGroup_3(), "rule__QueryCS__Group_3__0");
					put(grammarAccess.getQueryCSAccess().getGroup_3_1(), "rule__QueryCS__Group_3_1__0");
					put(grammarAccess.getQueryCSAccess().getGroup_7_1(), "rule__QueryCS__Group_7_1__0");
					put(grammarAccess.getRelationCSAccess().getGroup(), "rule__RelationCS__Group__0");
					put(grammarAccess.getRelationCSAccess().getGroup_3(), "rule__RelationCS__Group_3__0");
					put(grammarAccess.getTemplateCSAccess().getGroup(), "rule__TemplateCS__Group__0");
					put(grammarAccess.getTemplateCSAccess().getGroup_1(), "rule__TemplateCS__Group_1__0");
					put(grammarAccess.getTransformationCSAccess().getGroup(), "rule__TransformationCS__Group__0");
					put(grammarAccess.getTransformationCSAccess().getGroup_4(), "rule__TransformationCS__Group_4__0");
					put(grammarAccess.getTransformationCSAccess().getGroup_6(), "rule__TransformationCS__Group_6__0");
					put(grammarAccess.getTransformationCSAccess().getGroup_6_2(), "rule__TransformationCS__Group_6_2__0");
					put(grammarAccess.getUnitCSAccess().getGroup(), "rule__UnitCS__Group__0");
					put(grammarAccess.getUnitCSAccess().getGroup_1(), "rule__UnitCS__Group_1__0");
					put(grammarAccess.getUnitCSAccess().getGroup_3(), "rule__UnitCS__Group_3__0");
					put(grammarAccess.getVarDeclarationCSAccess().getGroup(), "rule__VarDeclarationCS__Group__0");
					put(grammarAccess.getVarDeclarationCSAccess().getGroup_1(), "rule__VarDeclarationCS__Group_1__0");
					put(grammarAccess.getWhenCSAccess().getGroup(), "rule__WhenCS__Group__0");
					put(grammarAccess.getWhereCSAccess().getGroup(), "rule__WhereCS__Group__0");
					put(grammarAccess.getPathNameCSAccess().getGroup(), "rule__PathNameCS__Group__0");
					put(grammarAccess.getPathNameCSAccess().getGroup_1(), "rule__PathNameCS__Group_1__0");
					put(grammarAccess.getURIPathNameCSAccess().getGroup(), "rule__URIPathNameCS__Group__0");
					put(grammarAccess.getURIPathNameCSAccess().getGroup_1(), "rule__URIPathNameCS__Group_1__0");
					put(grammarAccess.getURIFirstPathElementCSAccess().getGroup_1(), "rule__URIFirstPathElementCS__Group_1__0");
					put(grammarAccess.getCollectionTypeCSAccess().getGroup(), "rule__CollectionTypeCS__Group__0");
					put(grammarAccess.getCollectionTypeCSAccess().getGroup_1(), "rule__CollectionTypeCS__Group_1__0");
					put(grammarAccess.getMultiplicityBoundsCSAccess().getGroup(), "rule__MultiplicityBoundsCS__Group__0");
					put(grammarAccess.getMultiplicityBoundsCSAccess().getGroup_1(), "rule__MultiplicityBoundsCS__Group_1__0");
					put(grammarAccess.getMultiplicityCSAccess().getGroup(), "rule__MultiplicityCS__Group__0");
					put(grammarAccess.getTupleTypeCSAccess().getGroup(), "rule__TupleTypeCS__Group__0");
					put(grammarAccess.getTupleTypeCSAccess().getGroup_1(), "rule__TupleTypeCS__Group_1__0");
					put(grammarAccess.getTupleTypeCSAccess().getGroup_1_1(), "rule__TupleTypeCS__Group_1_1__0");
					put(grammarAccess.getTupleTypeCSAccess().getGroup_1_1_1(), "rule__TupleTypeCS__Group_1_1_1__0");
					put(grammarAccess.getTuplePartCSAccess().getGroup(), "rule__TuplePartCS__Group__0");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getGroup(), "rule__CollectionLiteralExpCS__Group__0");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getGroup_2(), "rule__CollectionLiteralExpCS__Group_2__0");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getGroup_2_1(), "rule__CollectionLiteralExpCS__Group_2_1__0");
					put(grammarAccess.getCollectionLiteralPartCSAccess().getGroup(), "rule__CollectionLiteralPartCS__Group__0");
					put(grammarAccess.getCollectionLiteralPartCSAccess().getGroup_1(), "rule__CollectionLiteralPartCS__Group_1__0");
					put(grammarAccess.getConstructorPartCSAccess().getGroup(), "rule__ConstructorPartCS__Group__0");
					put(grammarAccess.getTupleLiteralExpCSAccess().getGroup(), "rule__TupleLiteralExpCS__Group__0");
					put(grammarAccess.getTupleLiteralExpCSAccess().getGroup_3(), "rule__TupleLiteralExpCS__Group_3__0");
					put(grammarAccess.getTupleLiteralPartCSAccess().getGroup(), "rule__TupleLiteralPartCS__Group__0");
					put(grammarAccess.getTupleLiteralPartCSAccess().getGroup_1(), "rule__TupleLiteralPartCS__Group_1__0");
					put(grammarAccess.getUnlimitedNaturalLiteralExpCSAccess().getGroup(), "rule__UnlimitedNaturalLiteralExpCS__Group__0");
					put(grammarAccess.getInvalidLiteralExpCSAccess().getGroup(), "rule__InvalidLiteralExpCS__Group__0");
					put(grammarAccess.getNullLiteralExpCSAccess().getGroup(), "rule__NullLiteralExpCS__Group__0");
					put(grammarAccess.getTypeLiteralWithMultiplicityCSAccess().getGroup(), "rule__TypeLiteralWithMultiplicityCS__Group__0");
					put(grammarAccess.getTypeExpCSAccess().getGroup(), "rule__TypeExpCS__Group__0");
					put(grammarAccess.getExpCSAccess().getGroup_0(), "rule__ExpCS__Group_0__0");
					put(grammarAccess.getExpCSAccess().getGroup_0_1(), "rule__ExpCS__Group_0_1__0");
					put(grammarAccess.getExpCSAccess().getGroup_0_1_2_0(), "rule__ExpCS__Group_0_1_2_0__0");
					put(grammarAccess.getExpCSAccess().getGroup_0_1_2_0_1(), "rule__ExpCS__Group_0_1_2_0_1__0");
					put(grammarAccess.getExpCSAccess().getGroup_0_1_2_0_2(), "rule__ExpCS__Group_0_1_2_0_2__0");
					put(grammarAccess.getExpCSAccess().getGroup_1(), "rule__ExpCS__Group_1__0");
					put(grammarAccess.getPrefixedExpCSAccess().getGroup_0(), "rule__PrefixedExpCS__Group_0__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_7(), "rule__PrimaryExpCS__Group_7__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_7_2_0(), "rule__PrimaryExpCS__Group_7_2_0__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_7_2_0_3(), "rule__PrimaryExpCS__Group_7_2_0_3__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_7_2_0_5(), "rule__PrimaryExpCS__Group_7_2_0_5__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_7_2_0_5_2(), "rule__PrimaryExpCS__Group_7_2_0_5_2__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_7_2_0_6(), "rule__PrimaryExpCS__Group_7_2_0_6__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_7_2_1(), "rule__PrimaryExpCS__Group_7_2_1__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_7_2_1_2_0(), "rule__PrimaryExpCS__Group_7_2_1_2_0__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_7_2_1_2_0_1(), "rule__PrimaryExpCS__Group_7_2_1_2_0_1__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_7_2_2(), "rule__PrimaryExpCS__Group_7_2_2__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_7_2_2_0(), "rule__PrimaryExpCS__Group_7_2_2_0__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_7_2_2_1(), "rule__PrimaryExpCS__Group_7_2_2_1__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_7_2_2_1_2(), "rule__PrimaryExpCS__Group_7_2_2_1_2__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_7_2_2_1_2_2(), "rule__PrimaryExpCS__Group_7_2_2_1_2_2__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_7_2_2_1_2_3(), "rule__PrimaryExpCS__Group_7_2_2_1_2_3__0");
					put(grammarAccess.getNavigatingArgCSAccess().getGroup(), "rule__NavigatingArgCS__Group__0");
					put(grammarAccess.getNavigatingArgCSAccess().getGroup_1(), "rule__NavigatingArgCS__Group_1__0");
					put(grammarAccess.getNavigatingArgCSAccess().getGroup_1_2(), "rule__NavigatingArgCS__Group_1_2__0");
					put(grammarAccess.getNavigatingBarArgCSAccess().getGroup(), "rule__NavigatingBarArgCS__Group__0");
					put(grammarAccess.getNavigatingBarArgCSAccess().getGroup_2(), "rule__NavigatingBarArgCS__Group_2__0");
					put(grammarAccess.getNavigatingBarArgCSAccess().getGroup_2_2(), "rule__NavigatingBarArgCS__Group_2_2__0");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getGroup(), "rule__NavigatingCommaArgCS__Group__0");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getGroup_2(), "rule__NavigatingCommaArgCS__Group_2__0");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getGroup_2_2(), "rule__NavigatingCommaArgCS__Group_2_2__0");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getGroup(), "rule__NavigatingSemiArgCS__Group__0");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getGroup_2(), "rule__NavigatingSemiArgCS__Group_2__0");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getGroup_2_2(), "rule__NavigatingSemiArgCS__Group_2_2__0");
					put(grammarAccess.getIfExpCSAccess().getGroup(), "rule__IfExpCS__Group__0");
					put(grammarAccess.getLetExpCSAccess().getGroup(), "rule__LetExpCS__Group__0");
					put(grammarAccess.getLetExpCSAccess().getGroup_2(), "rule__LetExpCS__Group_2__0");
					put(grammarAccess.getLetVariableCSAccess().getGroup(), "rule__LetVariableCS__Group__0");
					put(grammarAccess.getLetVariableCSAccess().getGroup_1(), "rule__LetVariableCS__Group_1__0");
					put(grammarAccess.getNestedExpCSAccess().getGroup(), "rule__NestedExpCS__Group__0");
					put(grammarAccess.getSelfExpCSAccess().getGroup(), "rule__SelfExpCS__Group__0");
					put(grammarAccess.getTopLevelCSAccess().getOwnedImportAssignment_0_0(), "rule__TopLevelCS__OwnedImportAssignment_0_0");
					put(grammarAccess.getTopLevelCSAccess().getOwnedLibraryAssignment_0_1(), "rule__TopLevelCS__OwnedLibraryAssignment_0_1");
					put(grammarAccess.getTopLevelCSAccess().getTransformationsAssignment_1(), "rule__TopLevelCS__TransformationsAssignment_1");
					put(grammarAccess.getCollectionTemplateCSAccess().getNameAssignment_0(), "rule__CollectionTemplateCS__NameAssignment_0");
					put(grammarAccess.getCollectionTemplateCSAccess().getTypeAssignment_2(), "rule__CollectionTemplateCS__TypeAssignment_2");
					put(grammarAccess.getCollectionTemplateCSAccess().getMemberIdentifiersAssignment_4_0(), "rule__CollectionTemplateCS__MemberIdentifiersAssignment_4_0");
					put(grammarAccess.getCollectionTemplateCSAccess().getMemberIdentifiersAssignment_4_1_1(), "rule__CollectionTemplateCS__MemberIdentifiersAssignment_4_1_1");
					put(grammarAccess.getCollectionTemplateCSAccess().getRestIdentifierAssignment_4_3_0(), "rule__CollectionTemplateCS__RestIdentifierAssignment_4_3_0");
					put(grammarAccess.getDefaultValueCSAccess().getPropertyIdAssignment_0(), "rule__DefaultValueCS__PropertyIdAssignment_0");
					put(grammarAccess.getDefaultValueCSAccess().getInitialiserAssignment_2(), "rule__DefaultValueCS__InitialiserAssignment_2");
					put(grammarAccess.getDomainCSAccess().getCheckonlyAssignment_0_0(), "rule__DomainCS__CheckonlyAssignment_0_0");
					put(grammarAccess.getDomainCSAccess().getEnforceAssignment_0_1(), "rule__DomainCS__EnforceAssignment_0_1");
					put(grammarAccess.getDomainCSAccess().getModelIdAssignment_2(), "rule__DomainCS__ModelIdAssignment_2");
					put(grammarAccess.getDomainCSAccess().getPatternAssignment_3(), "rule__DomainCS__PatternAssignment_3");
					put(grammarAccess.getDomainCSAccess().getImplementedByAssignment_4_1(), "rule__DomainCS__ImplementedByAssignment_4_1");
					put(grammarAccess.getDomainCSAccess().getDefaultValuesAssignment_5_2(), "rule__DomainCS__DefaultValuesAssignment_5_2");
					put(grammarAccess.getDomainPatternCSAccess().getTemplateAssignment(), "rule__DomainPatternCS__TemplateAssignment");
					put(grammarAccess.getElementTemplateCSAccess().getNameAssignment_0(), "rule__ElementTemplateCS__NameAssignment_0");
					put(grammarAccess.getKeyDeclCSAccess().getPathNameAssignment_1(), "rule__KeyDeclCS__PathNameAssignment_1");
					put(grammarAccess.getKeyDeclCSAccess().getPropertyIdsAssignment_3_0(), "rule__KeyDeclCS__PropertyIdsAssignment_3_0");
					put(grammarAccess.getKeyDeclCSAccess().getOppositePropertyIdsAssignment_3_1_2(), "rule__KeyDeclCS__OppositePropertyIdsAssignment_3_1_2");
					put(grammarAccess.getKeyDeclCSAccess().getPropertyIdsAssignment_4_1_0(), "rule__KeyDeclCS__PropertyIdsAssignment_4_1_0");
					put(grammarAccess.getKeyDeclCSAccess().getOppositePropertyIdsAssignment_4_1_1_2(), "rule__KeyDeclCS__OppositePropertyIdsAssignment_4_1_1_2");
					put(grammarAccess.getLibraryCSAccess().getPackageAssignment_1(), "rule__LibraryCS__PackageAssignment_1");
					put(grammarAccess.getModelDeclCSAccess().getNameAssignment_0(), "rule__ModelDeclCS__NameAssignment_0");
					put(grammarAccess.getModelDeclCSAccess().getMetaModelIdsAssignment_2_0(), "rule__ModelDeclCS__MetaModelIdsAssignment_2_0");
					put(grammarAccess.getModelDeclCSAccess().getMetaModelIdsAssignment_2_1_1(), "rule__ModelDeclCS__MetaModelIdsAssignment_2_1_1");
					put(grammarAccess.getModelDeclCSAccess().getMetaModelIdsAssignment_2_1_2_1(), "rule__ModelDeclCS__MetaModelIdsAssignment_2_1_2_1");
					put(grammarAccess.getObjectTemplateCSAccess().getNameAssignment_0(), "rule__ObjectTemplateCS__NameAssignment_0");
					put(grammarAccess.getObjectTemplateCSAccess().getTypeAssignment_2(), "rule__ObjectTemplateCS__TypeAssignment_2");
					put(grammarAccess.getObjectTemplateCSAccess().getPropertyTemplatesAssignment_4_0(), "rule__ObjectTemplateCS__PropertyTemplatesAssignment_4_0");
					put(grammarAccess.getObjectTemplateCSAccess().getPropertyTemplatesAssignment_4_1_1(), "rule__ObjectTemplateCS__PropertyTemplatesAssignment_4_1_1");
					put(grammarAccess.getParamDeclarationCSAccess().getNameAssignment_0(), "rule__ParamDeclarationCS__NameAssignment_0");
					put(grammarAccess.getParamDeclarationCSAccess().getOwnedTypeAssignment_2(), "rule__ParamDeclarationCS__OwnedTypeAssignment_2");
					put(grammarAccess.getPredicateCSAccess().getExprAssignment_0(), "rule__PredicateCS__ExprAssignment_0");
					put(grammarAccess.getPrimitiveTypeDomainCSAccess().getNameAssignment_2(), "rule__PrimitiveTypeDomainCS__NameAssignment_2");
					put(grammarAccess.getPrimitiveTypeDomainCSAccess().getTypeAssignment_4(), "rule__PrimitiveTypeDomainCS__TypeAssignment_4");
					put(grammarAccess.getPropertyTemplateCSAccess().getPropertyIdAssignment_0_0(), "rule__PropertyTemplateCS__PropertyIdAssignment_0_0");
					put(grammarAccess.getPropertyTemplateCSAccess().getOppositePropertyIdAssignment_0_1_2(), "rule__PropertyTemplateCS__OppositePropertyIdAssignment_0_1_2");
					put(grammarAccess.getPropertyTemplateCSAccess().getExpressionAssignment_2(), "rule__PropertyTemplateCS__ExpressionAssignment_2");
					put(grammarAccess.getQueryCSAccess().getNameAssignment_1(), "rule__QueryCS__NameAssignment_1");
					put(grammarAccess.getQueryCSAccess().getInputParamDeclarationsAssignment_3_0(), "rule__QueryCS__InputParamDeclarationsAssignment_3_0");
					put(grammarAccess.getQueryCSAccess().getInputParamDeclarationsAssignment_3_1_1(), "rule__QueryCS__InputParamDeclarationsAssignment_3_1_1");
					put(grammarAccess.getQueryCSAccess().getOwnedTypeAssignment_6(), "rule__QueryCS__OwnedTypeAssignment_6");
					put(grammarAccess.getQueryCSAccess().getExpressionAssignment_7_1_1(), "rule__QueryCS__ExpressionAssignment_7_1_1");
					put(grammarAccess.getRelationCSAccess().getTopAssignment_0(), "rule__RelationCS__TopAssignment_0");
					put(grammarAccess.getRelationCSAccess().getNameAssignment_2(), "rule__RelationCS__NameAssignment_2");
					put(grammarAccess.getRelationCSAccess().getOverridesAssignment_3_1(), "rule__RelationCS__OverridesAssignment_3_1");
					put(grammarAccess.getRelationCSAccess().getVarDeclarationsAssignment_5(), "rule__RelationCS__VarDeclarationsAssignment_5");
					put(grammarAccess.getRelationCSAccess().getDomainsAssignment_6_0(), "rule__RelationCS__DomainsAssignment_6_0");
					put(grammarAccess.getRelationCSAccess().getDomainsAssignment_6_1(), "rule__RelationCS__DomainsAssignment_6_1");
					put(grammarAccess.getRelationCSAccess().getWhenAssignment_7(), "rule__RelationCS__WhenAssignment_7");
					put(grammarAccess.getRelationCSAccess().getWhereAssignment_8(), "rule__RelationCS__WhereAssignment_8");
					put(grammarAccess.getTemplateCSAccess().getGuardExpressionAssignment_1_1(), "rule__TemplateCS__GuardExpressionAssignment_1_1");
					put(grammarAccess.getTransformationCSAccess().getNameAssignment_1(), "rule__TransformationCS__NameAssignment_1");
					put(grammarAccess.getTransformationCSAccess().getModelDeclsAssignment_3(), "rule__TransformationCS__ModelDeclsAssignment_3");
					put(grammarAccess.getTransformationCSAccess().getModelDeclsAssignment_4_1(), "rule__TransformationCS__ModelDeclsAssignment_4_1");
					put(grammarAccess.getTransformationCSAccess().getExtendsAssignment_6_1(), "rule__TransformationCS__ExtendsAssignment_6_1");
					put(grammarAccess.getTransformationCSAccess().getExtendsAssignment_6_2_1(), "rule__TransformationCS__ExtendsAssignment_6_2_1");
					put(grammarAccess.getTransformationCSAccess().getKeyDeclsAssignment_8(), "rule__TransformationCS__KeyDeclsAssignment_8");
					put(grammarAccess.getTransformationCSAccess().getRelationAssignment_9_0(), "rule__TransformationCS__RelationAssignment_9_0");
					put(grammarAccess.getTransformationCSAccess().getQueriesAssignment_9_1(), "rule__TransformationCS__QueriesAssignment_9_1");
					put(grammarAccess.getUnitCSAccess().getNameAssignment_1_0(), "rule__UnitCS__NameAssignment_1_0");
					put(grammarAccess.getUnitCSAccess().getPathNameAssignment_2(), "rule__UnitCS__PathNameAssignment_2");
					put(grammarAccess.getUnitCSAccess().getAllAssignment_3_1(), "rule__UnitCS__AllAssignment_3_1");
					put(grammarAccess.getVarDeclarationCSAccess().getVarDeclarationIdsAssignment_0(), "rule__VarDeclarationCS__VarDeclarationIdsAssignment_0");
					put(grammarAccess.getVarDeclarationCSAccess().getVarDeclarationIdsAssignment_1_1(), "rule__VarDeclarationCS__VarDeclarationIdsAssignment_1_1");
					put(grammarAccess.getVarDeclarationCSAccess().getTypeAssignment_3(), "rule__VarDeclarationCS__TypeAssignment_3");
					put(grammarAccess.getVarDeclarationIdCSAccess().getNameAssignment(), "rule__VarDeclarationIdCS__NameAssignment");
					put(grammarAccess.getWhenCSAccess().getPredicatesAssignment_3(), "rule__WhenCS__PredicatesAssignment_3");
					put(grammarAccess.getWhereCSAccess().getPredicatesAssignment_3(), "rule__WhereCS__PredicatesAssignment_3");
					put(grammarAccess.getNameExpCSAccess().getPathNameAssignment(), "rule__NameExpCS__PathNameAssignment");
					put(grammarAccess.getTypedTypeRefCSAccess().getPathNameAssignment(), "rule__TypedTypeRefCS__PathNameAssignment");
					put(grammarAccess.getModelAccess().getOwnedExpressionAssignment(), "rule__Model__OwnedExpressionAssignment");
					put(grammarAccess.getEssentialOCLUnaryOperatorCSAccess().getNameAssignment(), "rule__EssentialOCLUnaryOperatorCS__NameAssignment");
					put(grammarAccess.getEssentialOCLInfixOperatorCSAccess().getNameAssignment(), "rule__EssentialOCLInfixOperatorCS__NameAssignment");
					put(grammarAccess.getEssentialOCLNavigationOperatorCSAccess().getNameAssignment(), "rule__EssentialOCLNavigationOperatorCS__NameAssignment");
					put(grammarAccess.getPathNameCSAccess().getPathAssignment_0(), "rule__PathNameCS__PathAssignment_0");
					put(grammarAccess.getPathNameCSAccess().getPathAssignment_1_1(), "rule__PathNameCS__PathAssignment_1_1");
					put(grammarAccess.getFirstPathElementCSAccess().getElementAssignment(), "rule__FirstPathElementCS__ElementAssignment");
					put(grammarAccess.getNextPathElementCSAccess().getElementAssignment(), "rule__NextPathElementCS__ElementAssignment");
					put(grammarAccess.getURIPathNameCSAccess().getPathAssignment_0(), "rule__URIPathNameCS__PathAssignment_0");
					put(grammarAccess.getURIPathNameCSAccess().getPathAssignment_1_1(), "rule__URIPathNameCS__PathAssignment_1_1");
					put(grammarAccess.getURIFirstPathElementCSAccess().getElementAssignment_0(), "rule__URIFirstPathElementCS__ElementAssignment_0");
					put(grammarAccess.getURIFirstPathElementCSAccess().getElementAssignment_1_1(), "rule__URIFirstPathElementCS__ElementAssignment_1_1");
					put(grammarAccess.getPrimitiveTypeCSAccess().getNameAssignment(), "rule__PrimitiveTypeCS__NameAssignment");
					put(grammarAccess.getCollectionTypeCSAccess().getNameAssignment_0(), "rule__CollectionTypeCS__NameAssignment_0");
					put(grammarAccess.getCollectionTypeCSAccess().getOwnedTypeAssignment_1_1(), "rule__CollectionTypeCS__OwnedTypeAssignment_1_1");
					put(grammarAccess.getMultiplicityBoundsCSAccess().getLowerBoundAssignment_0(), "rule__MultiplicityBoundsCS__LowerBoundAssignment_0");
					put(grammarAccess.getMultiplicityBoundsCSAccess().getUpperBoundAssignment_1_1(), "rule__MultiplicityBoundsCS__UpperBoundAssignment_1_1");
					put(grammarAccess.getMultiplicityStringCSAccess().getStringBoundsAssignment(), "rule__MultiplicityStringCS__StringBoundsAssignment");
					put(grammarAccess.getTupleTypeCSAccess().getNameAssignment_0(), "rule__TupleTypeCS__NameAssignment_0");
					put(grammarAccess.getTupleTypeCSAccess().getOwnedPartsAssignment_1_1_0(), "rule__TupleTypeCS__OwnedPartsAssignment_1_1_0");
					put(grammarAccess.getTupleTypeCSAccess().getOwnedPartsAssignment_1_1_1_1(), "rule__TupleTypeCS__OwnedPartsAssignment_1_1_1_1");
					put(grammarAccess.getTuplePartCSAccess().getNameAssignment_0(), "rule__TuplePartCS__NameAssignment_0");
					put(grammarAccess.getTuplePartCSAccess().getOwnedTypeAssignment_2(), "rule__TuplePartCS__OwnedTypeAssignment_2");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedTypeAssignment_0(), "rule__CollectionLiteralExpCS__OwnedTypeAssignment_0");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedPartsAssignment_2_0(), "rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_0");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedPartsAssignment_2_1_1(), "rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_1_1");
					put(grammarAccess.getCollectionLiteralPartCSAccess().getExpressionCSAssignment_0(), "rule__CollectionLiteralPartCS__ExpressionCSAssignment_0");
					put(grammarAccess.getCollectionLiteralPartCSAccess().getLastExpressionCSAssignment_1_1(), "rule__CollectionLiteralPartCS__LastExpressionCSAssignment_1_1");
					put(grammarAccess.getConstructorPartCSAccess().getPropertyAssignment_0(), "rule__ConstructorPartCS__PropertyAssignment_0");
					put(grammarAccess.getConstructorPartCSAccess().getInitExpressionAssignment_2(), "rule__ConstructorPartCS__InitExpressionAssignment_2");
					put(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsAssignment_2(), "rule__TupleLiteralExpCS__OwnedPartsAssignment_2");
					put(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsAssignment_3_1(), "rule__TupleLiteralExpCS__OwnedPartsAssignment_3_1");
					put(grammarAccess.getTupleLiteralPartCSAccess().getNameAssignment_0(), "rule__TupleLiteralPartCS__NameAssignment_0");
					put(grammarAccess.getTupleLiteralPartCSAccess().getOwnedTypeAssignment_1_1(), "rule__TupleLiteralPartCS__OwnedTypeAssignment_1_1");
					put(grammarAccess.getTupleLiteralPartCSAccess().getInitExpressionAssignment_3(), "rule__TupleLiteralPartCS__InitExpressionAssignment_3");
					put(grammarAccess.getNumberLiteralExpCSAccess().getNameAssignment(), "rule__NumberLiteralExpCS__NameAssignment");
					put(grammarAccess.getStringLiteralExpCSAccess().getNameAssignment(), "rule__StringLiteralExpCS__NameAssignment");
					put(grammarAccess.getBooleanLiteralExpCSAccess().getNameAssignment_0(), "rule__BooleanLiteralExpCS__NameAssignment_0");
					put(grammarAccess.getBooleanLiteralExpCSAccess().getNameAssignment_1(), "rule__BooleanLiteralExpCS__NameAssignment_1");
					put(grammarAccess.getTypeLiteralWithMultiplicityCSAccess().getMultiplicityAssignment_1(), "rule__TypeLiteralWithMultiplicityCS__MultiplicityAssignment_1");
					put(grammarAccess.getTypeLiteralExpCSAccess().getOwnedTypeAssignment(), "rule__TypeLiteralExpCS__OwnedTypeAssignment");
					put(grammarAccess.getTypeNameExpCSAccess().getPathNameAssignment(), "rule__TypeNameExpCS__PathNameAssignment");
					put(grammarAccess.getTypeExpCSAccess().getMultiplicityAssignment_1(), "rule__TypeExpCS__MultiplicityAssignment_1");
					put(grammarAccess.getExpCSAccess().getOwnedOperatorAssignment_0_1_1(), "rule__ExpCS__OwnedOperatorAssignment_0_1_1");
					put(grammarAccess.getExpCSAccess().getOwnedExpressionAssignment_0_1_2_0_0(), "rule__ExpCS__OwnedExpressionAssignment_0_1_2_0_0");
					put(grammarAccess.getExpCSAccess().getOwnedOperatorAssignment_0_1_2_0_1_0(), "rule__ExpCS__OwnedOperatorAssignment_0_1_2_0_1_0");
					put(grammarAccess.getExpCSAccess().getOwnedExpressionAssignment_0_1_2_0_1_1(), "rule__ExpCS__OwnedExpressionAssignment_0_1_2_0_1_1");
					put(grammarAccess.getExpCSAccess().getOwnedOperatorAssignment_0_1_2_0_2_0(), "rule__ExpCS__OwnedOperatorAssignment_0_1_2_0_2_0");
					put(grammarAccess.getExpCSAccess().getOwnedExpressionAssignment_0_1_2_0_2_1(), "rule__ExpCS__OwnedExpressionAssignment_0_1_2_0_2_1");
					put(grammarAccess.getExpCSAccess().getOwnedExpressionAssignment_0_1_2_1(), "rule__ExpCS__OwnedExpressionAssignment_0_1_2_1");
					put(grammarAccess.getExpCSAccess().getOwnedOperatorAssignment_1_1(), "rule__ExpCS__OwnedOperatorAssignment_1_1");
					put(grammarAccess.getExpCSAccess().getOwnedExpressionAssignment_1_2(), "rule__ExpCS__OwnedExpressionAssignment_1_2");
					put(grammarAccess.getPrefixedExpCSAccess().getOwnedOperatorAssignment_0_1(), "rule__PrefixedExpCS__OwnedOperatorAssignment_0_1");
					put(grammarAccess.getPrefixedExpCSAccess().getOwnedExpressionAssignment_0_2(), "rule__PrefixedExpCS__OwnedExpressionAssignment_0_2");
					put(grammarAccess.getPrimaryExpCSAccess().getPathNameAssignment_7_1(), "rule__PrimaryExpCS__PathNameAssignment_7_1");
					put(grammarAccess.getPrimaryExpCSAccess().getFirstIndexesAssignment_7_2_0_2(), "rule__PrimaryExpCS__FirstIndexesAssignment_7_2_0_2");
					put(grammarAccess.getPrimaryExpCSAccess().getFirstIndexesAssignment_7_2_0_3_1(), "rule__PrimaryExpCS__FirstIndexesAssignment_7_2_0_3_1");
					put(grammarAccess.getPrimaryExpCSAccess().getSecondIndexesAssignment_7_2_0_5_1(), "rule__PrimaryExpCS__SecondIndexesAssignment_7_2_0_5_1");
					put(grammarAccess.getPrimaryExpCSAccess().getSecondIndexesAssignment_7_2_0_5_2_1(), "rule__PrimaryExpCS__SecondIndexesAssignment_7_2_0_5_2_1");
					put(grammarAccess.getPrimaryExpCSAccess().getAtPreAssignment_7_2_0_6_0(), "rule__PrimaryExpCS__AtPreAssignment_7_2_0_6_0");
					put(grammarAccess.getPrimaryExpCSAccess().getOwnedPartsAssignment_7_2_1_2_0_0(), "rule__PrimaryExpCS__OwnedPartsAssignment_7_2_1_2_0_0");
					put(grammarAccess.getPrimaryExpCSAccess().getOwnedPartsAssignment_7_2_1_2_0_1_1(), "rule__PrimaryExpCS__OwnedPartsAssignment_7_2_1_2_0_1_1");
					put(grammarAccess.getPrimaryExpCSAccess().getValueAssignment_7_2_1_2_1(), "rule__PrimaryExpCS__ValueAssignment_7_2_1_2_1");
					put(grammarAccess.getPrimaryExpCSAccess().getAtPreAssignment_7_2_2_0_0(), "rule__PrimaryExpCS__AtPreAssignment_7_2_2_0_0");
					put(grammarAccess.getPrimaryExpCSAccess().getArgumentAssignment_7_2_2_1_2_0(), "rule__PrimaryExpCS__ArgumentAssignment_7_2_2_1_2_0");
					put(grammarAccess.getPrimaryExpCSAccess().getArgumentAssignment_7_2_2_1_2_1(), "rule__PrimaryExpCS__ArgumentAssignment_7_2_2_1_2_1");
					put(grammarAccess.getPrimaryExpCSAccess().getArgumentAssignment_7_2_2_1_2_2_0(), "rule__PrimaryExpCS__ArgumentAssignment_7_2_2_1_2_2_0");
					put(grammarAccess.getPrimaryExpCSAccess().getArgumentAssignment_7_2_2_1_2_2_1(), "rule__PrimaryExpCS__ArgumentAssignment_7_2_2_1_2_2_1");
					put(grammarAccess.getPrimaryExpCSAccess().getArgumentAssignment_7_2_2_1_2_3_0(), "rule__PrimaryExpCS__ArgumentAssignment_7_2_2_1_2_3_0");
					put(grammarAccess.getPrimaryExpCSAccess().getArgumentAssignment_7_2_2_1_2_3_1(), "rule__PrimaryExpCS__ArgumentAssignment_7_2_2_1_2_3_1");
					put(grammarAccess.getNavigatingArgCSAccess().getNameAssignment_0(), "rule__NavigatingArgCS__NameAssignment_0");
					put(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeAssignment_1_1(), "rule__NavigatingArgCS__OwnedTypeAssignment_1_1");
					put(grammarAccess.getNavigatingArgCSAccess().getInitAssignment_1_2_1(), "rule__NavigatingArgCS__InitAssignment_1_2_1");
					put(grammarAccess.getNavigatingBarArgCSAccess().getPrefixAssignment_0(), "rule__NavigatingBarArgCS__PrefixAssignment_0");
					put(grammarAccess.getNavigatingBarArgCSAccess().getNameAssignment_1(), "rule__NavigatingBarArgCS__NameAssignment_1");
					put(grammarAccess.getNavigatingBarArgCSAccess().getOwnedTypeAssignment_2_1(), "rule__NavigatingBarArgCS__OwnedTypeAssignment_2_1");
					put(grammarAccess.getNavigatingBarArgCSAccess().getInitAssignment_2_2_1(), "rule__NavigatingBarArgCS__InitAssignment_2_2_1");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getPrefixAssignment_0(), "rule__NavigatingCommaArgCS__PrefixAssignment_0");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getNameAssignment_1(), "rule__NavigatingCommaArgCS__NameAssignment_1");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedTypeAssignment_2_1(), "rule__NavigatingCommaArgCS__OwnedTypeAssignment_2_1");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getInitAssignment_2_2_1(), "rule__NavigatingCommaArgCS__InitAssignment_2_2_1");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getPrefixAssignment_0(), "rule__NavigatingSemiArgCS__PrefixAssignment_0");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getNameAssignment_1(), "rule__NavigatingSemiArgCS__NameAssignment_1");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedTypeAssignment_2_1(), "rule__NavigatingSemiArgCS__OwnedTypeAssignment_2_1");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getInitAssignment_2_2_1(), "rule__NavigatingSemiArgCS__InitAssignment_2_2_1");
					put(grammarAccess.getIfExpCSAccess().getConditionAssignment_1(), "rule__IfExpCS__ConditionAssignment_1");
					put(grammarAccess.getIfExpCSAccess().getThenExpressionAssignment_3(), "rule__IfExpCS__ThenExpressionAssignment_3");
					put(grammarAccess.getIfExpCSAccess().getElseExpressionAssignment_5(), "rule__IfExpCS__ElseExpressionAssignment_5");
					put(grammarAccess.getLetExpCSAccess().getVariableAssignment_1(), "rule__LetExpCS__VariableAssignment_1");
					put(grammarAccess.getLetExpCSAccess().getVariableAssignment_2_1(), "rule__LetExpCS__VariableAssignment_2_1");
					put(grammarAccess.getLetExpCSAccess().getInAssignment_4(), "rule__LetExpCS__InAssignment_4");
					put(grammarAccess.getLetVariableCSAccess().getNameAssignment_0(), "rule__LetVariableCS__NameAssignment_0");
					put(grammarAccess.getLetVariableCSAccess().getOwnedTypeAssignment_1_1(), "rule__LetVariableCS__OwnedTypeAssignment_1_1");
					put(grammarAccess.getLetVariableCSAccess().getInitExpressionAssignment_3(), "rule__LetVariableCS__InitExpressionAssignment_3");
					put(grammarAccess.getNestedExpCSAccess().getSourceAssignment_1(), "rule__NestedExpCS__SourceAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.eclipse.qvtd.xtext.qvtrelation.ui.contentassist.antlr.internal.InternalQVTrelationParser typedParser = (org.eclipse.qvtd.xtext.qvtrelation.ui.contentassist.antlr.internal.InternalQVTrelationParser) parser;
			typedParser.entryRuleTopLevelCS();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public QVTrelationGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(QVTrelationGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
