[% for (i in qvtm!Unit.all()) { %]
import [%=i.name%]: '[%=i.usedPackage.nsURI%]';
[% } %]

[% for (t in qvtm!Transformation.all()) { %]
transformation [%=t.name %] {
  [%for (mp in t.modelParameter) { %]
    [%=mp.name%] imports [%=mp.usedPackage.collect(up | up.name).concat(",")%]; 
  [%}%]
}

  [%for (r in t.rule) { 
        r.declaration(t);
    }%]
    [%
}%]

[% operation Mapping declaration(t) { %]
map [%if (self.name.isDefined()){%][%=self.name%][%if (t.isDefined()){%] in [%=t.name%][%}}%] {
[% for (d in self.domain) {
    var domainName = "";
    if (d.isCheckable) { domainName = "check ";}
    if(d.isEnforceable) { domainName = domainName + "enforce ";}
    domainName = domainName + d.name;%]
    [%=domainName%] ([%d.guardPattern.declaration();%]) {
    [%d.bottomPattern.declaration();%]
    }
    [%
}%]
    where ([%self.guardPattern.declaration();%]) {
    [%self.bottomPattern.declaration();%]
    }
  [%for (l in self.local) {
        l.declaration(null);%]

  [%}%]
}
[%}%]

[% operation GuardPattern declaration() {%]
[%  if (not self.variable.isEmpty()) {
        for (v in self.variable.select(v | v.isTypeOf(qvtm!Variable))){%]
    [%=v.name+":"+v.type.name%][%if(hasMore){%],
[%out.print("        ");}%]
      [%}%]
      |[%
    }  
    for (p in self.predicate){%]
        
        [%=p.toString()%];[%
    }%]
[%} %] 

[% operation BottomPattern declaration() {
    var vars : Set();
    vars.addAll(self.variable);
    vars.addAll(self.realizedVariable);
    for (v in vars.sortBy(v | v.type())) {%]
[%printIdent(8);%][%if(v.isTypeOf(qvtm!RealizedVariable)){%][%="realize "%][%}%][%=v.name+":"+v.type.name%][%if(hasMore){%],
[%}%]
      [%}%]  |[% 
    for (p in self.predicate){%]
    
        [%=p.toString()%];[%
    }
    for (a in self.assignment){%]
    
        [%=a.toString()%];[%
    }%]
[%} %]

[% operation printIdent(size : Integer) {
out.print("".pad(size, " ", true));
}%]
