/*
* generated by Xtext
*/
package org.eclipse.qvtd.xtext.qvtimperative.ui.labeling;

import org.eclipse.ocl.examples.domain.utilities.DomainUtil;
import org.eclipse.qvtd.pivot.qvtimperative.Mapping;
import org.eclipse.qvtd.pivot.qvtimperative.MappingCall;
import org.eclipse.qvtd.pivot.qvtimperative.MappingCallBinding;
import org.eclipse.qvtd.xtext.qvtcorebase.ui.labeling.QVTcoreBaseLabelProvider;
import org.eclipse.qvtd.xtext.qvtimperative.qvtimperativecs.TopLevelCS;

import com.google.inject.Inject;

/**
 * Provides labels for a EObjects.
 * 
 * see http://www.eclipse.org/Xtext/documentation/latest/xtext.html#labelProvider
 */
public class QVTimperativeLabelProvider extends QVTcoreBaseLabelProvider {

	@Inject
	public QVTimperativeLabelProvider(org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	protected String image(Mapping ele) {
		return QVTCOREBASE_UI_ICONS + "Mapping.gif";
	}

	protected String image(MappingCall ele) {
		return "MappingCall.gif";
	}

	protected String text(MappingCall ele) {
		return DomainUtil.getSafeName(ele.getReferredMapping());
	}

	protected String image(MappingCallBinding ele) {
		return "MappingCallBinding.gif";
	}

	protected String text(MappingCallBinding ele) {
		return DomainUtil.getSafeName(ele.getBoundVariable());
	}

	protected String image(TopLevelCS ele) {
		return "QVTiModelFile.gif";
	}
}
