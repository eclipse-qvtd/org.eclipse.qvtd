/*******************************************************************************
 * Copyright (c) 2016 Willink Transformations Ltd., University of York and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 *
 * Contributors:
 *     Adolfo Sanchez-Barbudo Herrera (University of York) - initial API and implementation
 * 
 *******************************************************************************/
module org.eclipse.qvtd.build.mwe2.GenerateDelphiParser

import org.eclipse.emf.mwe.utils.*
import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var grammarURI = "classpath:/org/eclipse/qvtd/cs2as/compiler/tests/models/delphi/Delphi.xtext"
var fileExtensions = "delphi"
var projectName = "org.eclipse.qvtd.cs2as.compiler.tests"
var rootPath = "../../tests/"
var generateXtendStub = false
var encoding = "UTF-8"

Workflow {
    component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				
				baseName = projectName
				rootPath = rootPath
				createEclipseMetaData = true
				runtime = {
					srcGen = "${rootPath}/${projectName}/src-gen-delphi"
				}
			}
			code = {
				encoding = encoding
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
				lineDelimiter = "\n"
				preferXtendStubs = generateXtendStub
			}
			
		}
		language = StandardLanguage {
			name = "org.eclipse.qvtd.cs2as.compiler.tests.models.delphi"
			fileExtensions = fileExtensions
			grammarUri = grammarURI
			referencedResource = "platform:/resource/${projectName}/src/org/eclipse/qvtd/cs2as/compiler/tests/models/delphi/Delphi.genmodel"
			serializer = {
				generateStub = false
			}
			validator = {
				// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
			}
			parserGenerator = {
				options = {
					backtrack = true
				}
			}
		}
	}
}

